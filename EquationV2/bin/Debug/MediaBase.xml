<?xml version="1.0"?>
<doc>
    <assembly>
        <name>MediaBase</name>
    </assembly>
    <members>
        <member name="T:StreamCoders.Onvif.AccessControl.ServiceCapabilities">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.AccessControl.ServiceCapabilities.Any">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.AccessControl.ServiceCapabilities.MaxLimit">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.AccessControl.ServiceCapabilities.AnyAttr">
            <remarks/>
        </member>
        <member name="T:StreamCoders.Onvif.AccessControl.AccessPointState">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.AccessControl.AccessPointState.Enabled">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.AccessControl.AccessPointState.Any">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.AccessControl.AccessPointState.AnyAttr">
            <remarks/>
        </member>
        <member name="T:StreamCoders.Onvif.AccessControl.AccessPointCapabilities">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.AccessControl.AccessPointCapabilities.Any">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.AccessControl.AccessPointCapabilities.DisableAccessPoint">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.AccessControl.AccessPointCapabilities.Duress">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.AccessControl.AccessPointCapabilities.DuressSpecified">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.AccessControl.AccessPointCapabilities.AnonymousAccess">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.AccessControl.AccessPointCapabilities.AnonymousAccessSpecified">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.AccessControl.AccessPointCapabilities.AccessTaken">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.AccessControl.AccessPointCapabilities.AccessTakenSpecified">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.AccessControl.AccessPointCapabilities.ExternalAuthorization">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.AccessControl.AccessPointCapabilities.ExternalAuthorizationSpecified">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.AccessControl.AccessPointCapabilities.AnyAttr">
            <remarks/>
        </member>
        <member name="T:StreamCoders.Onvif.AccessControl.DataEntity">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.AccessControl.DataEntity.token">
            <remarks/>
        </member>
        <member name="T:StreamCoders.Onvif.AccessControl.AreaInfoBase">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.AccessControl.AreaInfoBase.Name">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.AccessControl.AreaInfoBase.Description">
            <remarks/>
        </member>
        <member name="T:StreamCoders.Onvif.AccessControl.AreaInfo">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.AccessControl.AreaInfo.AnyAttr">
            <remarks/>
        </member>
        <member name="T:StreamCoders.Onvif.AccessControl.AccessPointInfoBase">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.AccessControl.AccessPointInfoBase.Name">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.AccessControl.AccessPointInfoBase.Description">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.AccessControl.AccessPointInfoBase.AreaFrom">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.AccessControl.AccessPointInfoBase.AreaTo">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.AccessControl.AccessPointInfoBase.EntityType">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.AccessControl.AccessPointInfoBase.Entity">
            <remarks/>
        </member>
        <member name="T:StreamCoders.Onvif.AccessControl.AccessPointInfo">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.AccessControl.AccessPointInfo.Capabilities">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.AccessControl.AccessPointInfo.Any">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.AccessControl.AccessPointInfo.AnyAttr">
            <remarks/>
        </member>
        <member name="T:StreamCoders.Onvif.AccessControl.Decision">
            <remarks/>
        </member>
        <member name="F:StreamCoders.Onvif.AccessControl.Decision.Granted">
            <remarks/>
        </member>
        <member name="F:StreamCoders.Onvif.AccessControl.Decision.Denied">
            <remarks/>
        </member>
        <member name="T:StreamCoders.Onvif.AccessRules.ServiceCapabilities">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.AccessRules.ServiceCapabilities.Any">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.AccessRules.ServiceCapabilities.MaxLimit">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.AccessRules.ServiceCapabilities.MaxAccessProfiles">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.AccessRules.ServiceCapabilities.MaxAccessPoliciesPerAccessProfile">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.AccessRules.ServiceCapabilities.MultipleSchedulesPerAccessPointSupported">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.AccessRules.ServiceCapabilities.AnyAttr">
            <remarks/>
        </member>
        <member name="T:StreamCoders.Onvif.AccessRules.AccessProfileExtension">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.AccessRules.AccessProfileExtension.Any">
            <remarks/>
        </member>
        <member name="T:StreamCoders.Onvif.AccessRules.AccessPolicyExtension">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.AccessRules.AccessPolicyExtension.Any">
            <remarks/>
        </member>
        <member name="T:StreamCoders.Onvif.AccessRules.AccessPolicy">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.AccessRules.AccessPolicy.ScheduleToken">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.AccessRules.AccessPolicy.Entity">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.AccessRules.AccessPolicy.EntityType">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.AccessRules.AccessPolicy.Extension">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.AccessRules.AccessPolicy.AnyAttr">
            <remarks/>
        </member>
        <member name="T:StreamCoders.Onvif.AccessRules.DataEntity">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.AccessRules.DataEntity.token">
            <remarks/>
        </member>
        <member name="T:StreamCoders.Onvif.AccessRules.AccessProfileInfo">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.AccessRules.AccessProfileInfo.Name">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.AccessRules.AccessProfileInfo.Description">
            <remarks/>
        </member>
        <member name="T:StreamCoders.Onvif.AccessRules.AccessProfile">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.AccessRules.AccessProfile.AccessPolicy">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.AccessRules.AccessProfile.Extension">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.AccessRules.AccessProfile.AnyAttr">
            <remarks/>
        </member>
        <member name="T:StreamCoders.Onvif.AdvancedSecurity.Capabilities">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.AdvancedSecurity.Capabilities.KeystoreCapabilities">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.AdvancedSecurity.Capabilities.TLSServerCapabilities">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.AdvancedSecurity.Capabilities.Dot1XCapabilities">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.AdvancedSecurity.Capabilities.Any">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.AdvancedSecurity.Capabilities.AnyAttr">
            <remarks/>
        </member>
        <member name="T:StreamCoders.Onvif.AdvancedSecurity.KeystoreCapabilities">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.AdvancedSecurity.KeystoreCapabilities.SignatureAlgorithms">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.AdvancedSecurity.KeystoreCapabilities.anyElement">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.AdvancedSecurity.KeystoreCapabilities.MaximumNumberOfKeys">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.AdvancedSecurity.KeystoreCapabilities.MaximumNumberOfCertificates">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.AdvancedSecurity.KeystoreCapabilities.MaximumNumberOfCertificationPaths">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.AdvancedSecurity.KeystoreCapabilities.RSAKeyPairGeneration">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.AdvancedSecurity.KeystoreCapabilities.RSAKeyPairGenerationSpecified">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.AdvancedSecurity.KeystoreCapabilities.RSAKeyLengths">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.AdvancedSecurity.KeystoreCapabilities.PKCS10ExternalCertificationWithRSA">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.AdvancedSecurity.KeystoreCapabilities.PKCS10ExternalCertificationWithRSASpecified">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.AdvancedSecurity.KeystoreCapabilities.SelfSignedCertificateCreationWithRSA">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.AdvancedSecurity.KeystoreCapabilities.SelfSignedCertificateCreationWithRSASpecified">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.AdvancedSecurity.KeystoreCapabilities.X509Versions">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.AdvancedSecurity.KeystoreCapabilities.MaximumNumberOfPassphrases">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.AdvancedSecurity.KeystoreCapabilities.PKCS8RSAKeyPairUpload">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.AdvancedSecurity.KeystoreCapabilities.PKCS8RSAKeyPairUploadSpecified">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.AdvancedSecurity.KeystoreCapabilities.PKCS12CertificateWithRSAPrivateKeyUpload">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.AdvancedSecurity.KeystoreCapabilities.PKCS12CertificateWithRSAPrivateKeyUploadSpecified">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.AdvancedSecurity.KeystoreCapabilities.PasswordBasedEncryptionAlgorithms">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.AdvancedSecurity.KeystoreCapabilities.PasswordBasedMACAlgorithms">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.AdvancedSecurity.KeystoreCapabilities.MaximumNumberOfCRLs">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.AdvancedSecurity.KeystoreCapabilities.MaximumNumberOfCertificationPathValidationPolicies">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.AdvancedSecurity.KeystoreCapabilities.EnforceTLSWebClientAuthExtKeyUsage">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.AdvancedSecurity.KeystoreCapabilities.EnforceTLSWebClientAuthExtKeyUsageSpecified">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.AdvancedSecurity.KeystoreCapabilities.AnyAttr">
            <remarks/>
        </member>
        <member name="T:StreamCoders.Onvif.AdvancedSecurity.AlgorithmIdentifier">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.AdvancedSecurity.AlgorithmIdentifier.algorithm">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.AdvancedSecurity.AlgorithmIdentifier.parameters">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.AdvancedSecurity.AlgorithmIdentifier.anyParameters">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.AdvancedSecurity.AlgorithmIdentifier.AnyAttr">
            <remarks/>
        </member>
        <member name="T:StreamCoders.Onvif.AdvancedSecurity.AlgorithmIdentifierAnyParameters">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.AdvancedSecurity.AlgorithmIdentifierAnyParameters.Any">
            <remarks/>
        </member>
        <member name="T:StreamCoders.Onvif.AdvancedSecurity.Dot1XStageExtension">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.AdvancedSecurity.Dot1XStageExtension.Any">
            <remarks/>
        </member>
        <member name="T:StreamCoders.Onvif.AdvancedSecurity.Dot1XStage">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.AdvancedSecurity.Dot1XStage.Identity">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.AdvancedSecurity.Dot1XStage.CertificationPathID">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.AdvancedSecurity.Dot1XStage.PassphraseID">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.AdvancedSecurity.Dot1XStage.Inner">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.AdvancedSecurity.Dot1XStage.Extension">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.AdvancedSecurity.Dot1XStage.Method">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.AdvancedSecurity.Dot1XStage.AnyAttr">
            <remarks/>
        </member>
        <member name="T:StreamCoders.Onvif.AdvancedSecurity.Dot1XConfiguration">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.AdvancedSecurity.Dot1XConfiguration.Dot1XID">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.AdvancedSecurity.Dot1XConfiguration.Alias">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.AdvancedSecurity.Dot1XConfiguration.Outer">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.AdvancedSecurity.Dot1XConfiguration.Any">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.AdvancedSecurity.Dot1XConfiguration.AnyAttr">
            <remarks/>
        </member>
        <member name="T:StreamCoders.Onvif.AdvancedSecurity.CertPathValidationPolicy">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.AdvancedSecurity.CertPathValidationPolicy.CertPathValidationPolicyID">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.AdvancedSecurity.CertPathValidationPolicy.Alias">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.AdvancedSecurity.CertPathValidationPolicy.Parameters">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.AdvancedSecurity.CertPathValidationPolicy.TrustAnchor">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.AdvancedSecurity.CertPathValidationPolicy.anyParameters">
            <remarks/>
        </member>
        <member name="T:StreamCoders.Onvif.AdvancedSecurity.CertPathValidationParameters">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.AdvancedSecurity.CertPathValidationParameters.RequireTLSWWWClientAuthExtendedKeyUsage">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.AdvancedSecurity.CertPathValidationParameters.UseDeltaCRLs">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.AdvancedSecurity.CertPathValidationParameters.anyParameters">
            <remarks/>
        </member>
        <member name="T:StreamCoders.Onvif.AdvancedSecurity.CertPathValidationParametersAnyParameters">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.AdvancedSecurity.CertPathValidationParametersAnyParameters.Any">
            <remarks/>
        </member>
        <member name="T:StreamCoders.Onvif.AdvancedSecurity.TrustAnchor">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.AdvancedSecurity.TrustAnchor.CertificateID">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.AdvancedSecurity.TrustAnchor.Any">
            <remarks/>
        </member>
        <member name="T:StreamCoders.Onvif.AdvancedSecurity.CertPathValidationPolicyAnyParameters">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.AdvancedSecurity.CertPathValidationPolicyAnyParameters.Any">
            <remarks/>
        </member>
        <member name="T:StreamCoders.Onvif.AdvancedSecurity.CRL">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.AdvancedSecurity.CRL.CRLID">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.AdvancedSecurity.CRL.Alias">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.AdvancedSecurity.CRL.CRLContent">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.AdvancedSecurity.CRL.Any">
            <remarks/>
        </member>
        <member name="T:StreamCoders.Onvif.AdvancedSecurity.PassphraseAttribute">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.AdvancedSecurity.PassphraseAttribute.PassphraseID">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.AdvancedSecurity.PassphraseAttribute.Alias">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.AdvancedSecurity.PassphraseAttribute.Any">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.AdvancedSecurity.PassphraseAttribute.AnyAttr">
            <remarks/>
        </member>
        <member name="T:StreamCoders.Onvif.AdvancedSecurity.CertificationPath">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.AdvancedSecurity.CertificationPath.CertificateID">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.AdvancedSecurity.CertificationPath.Alias">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.AdvancedSecurity.CertificationPath.anyElement">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.AdvancedSecurity.CertificationPath.AnyAttr">
            <remarks/>
        </member>
        <member name="T:StreamCoders.Onvif.AdvancedSecurity.CertificationPathAnyElement">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.AdvancedSecurity.CertificationPathAnyElement.Any">
            <remarks/>
        </member>
        <member name="T:StreamCoders.Onvif.AdvancedSecurity.CertificateIDs">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.AdvancedSecurity.CertificateIDs.CertificateID">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.AdvancedSecurity.CertificateIDs.AnyAttr">
            <remarks/>
        </member>
        <member name="T:StreamCoders.Onvif.AdvancedSecurity.X509Certificate">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.AdvancedSecurity.X509Certificate.CertificateID">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.AdvancedSecurity.X509Certificate.KeyID">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.AdvancedSecurity.X509Certificate.Alias">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.AdvancedSecurity.X509Certificate.CertificateContent">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.AdvancedSecurity.X509Certificate.Any">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.AdvancedSecurity.X509Certificate.AnyAttr">
            <remarks/>
        </member>
        <member name="T:StreamCoders.Onvif.AdvancedSecurity.BasicRequestAttribute">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.AdvancedSecurity.BasicRequestAttribute.OID">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.AdvancedSecurity.BasicRequestAttribute.value">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.AdvancedSecurity.BasicRequestAttribute.Any">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.AdvancedSecurity.BasicRequestAttribute.AnyAttr">
            <remarks/>
        </member>
        <member name="T:StreamCoders.Onvif.AdvancedSecurity.X509v3Extension">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.AdvancedSecurity.X509v3Extension.extnOID">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.AdvancedSecurity.X509v3Extension.critical">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.AdvancedSecurity.X509v3Extension.extnValue">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.AdvancedSecurity.X509v3Extension.Any">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.AdvancedSecurity.X509v3Extension.AnyAttr">
            <remarks/>
        </member>
        <member name="T:StreamCoders.Onvif.AdvancedSecurity.CSRAttribute">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.AdvancedSecurity.CSRAttribute.Item">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.AdvancedSecurity.CSRAttribute.AnyAttr">
            <remarks/>
        </member>
        <member name="T:StreamCoders.Onvif.AdvancedSecurity.CSRAttributeAnyAttribute">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.AdvancedSecurity.CSRAttributeAnyAttribute.Any">
            <remarks/>
        </member>
        <member name="T:StreamCoders.Onvif.AdvancedSecurity.DNAttributeTypeAndValue">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.AdvancedSecurity.DNAttributeTypeAndValue.Type">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.AdvancedSecurity.DNAttributeTypeAndValue.Value">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.AdvancedSecurity.DNAttributeTypeAndValue.Any">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.AdvancedSecurity.DNAttributeTypeAndValue.AnyAttr">
            <remarks/>
        </member>
        <member name="T:StreamCoders.Onvif.AdvancedSecurity.DistinguishedName">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.AdvancedSecurity.DistinguishedName.Country">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.AdvancedSecurity.DistinguishedName.Organization">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.AdvancedSecurity.DistinguishedName.OrganizationalUnit">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.AdvancedSecurity.DistinguishedName.DistinguishedNameQualifier">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.AdvancedSecurity.DistinguishedName.StateOrProvinceName">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.AdvancedSecurity.DistinguishedName.CommonName">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.AdvancedSecurity.DistinguishedName.SerialNumber">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.AdvancedSecurity.DistinguishedName.Locality">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.AdvancedSecurity.DistinguishedName.Title">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.AdvancedSecurity.DistinguishedName.Surname">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.AdvancedSecurity.DistinguishedName.GivenName">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.AdvancedSecurity.DistinguishedName.Initials">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.AdvancedSecurity.DistinguishedName.Pseudonym">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.AdvancedSecurity.DistinguishedName.GenerationQualifier">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.AdvancedSecurity.DistinguishedName.GenericAttribute">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.AdvancedSecurity.DistinguishedName.MultiValuedRDN">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.AdvancedSecurity.DistinguishedName.anyAttribute">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.AdvancedSecurity.DistinguishedName.AnyAttr">
            <remarks/>
        </member>
        <member name="T:StreamCoders.Onvif.AdvancedSecurity.DistinguishedNameAnyAttribute">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.AdvancedSecurity.DistinguishedNameAnyAttribute.Any">
            <remarks/>
        </member>
        <member name="T:StreamCoders.Onvif.AdvancedSecurity.KeyAttribute">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.AdvancedSecurity.KeyAttribute.KeyID">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.AdvancedSecurity.KeyAttribute.Alias">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.AdvancedSecurity.KeyAttribute.hasPrivateKey">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.AdvancedSecurity.KeyAttribute.hasPrivateKeySpecified">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.AdvancedSecurity.KeyAttribute.KeyStatus">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.AdvancedSecurity.KeyAttribute.Any">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.AdvancedSecurity.KeyAttribute.externallyGenerated">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.AdvancedSecurity.KeyAttribute.externallyGeneratedSpecified">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.AdvancedSecurity.KeyAttribute.securelyStored">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.AdvancedSecurity.KeyAttribute.securelyStoredSpecified">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.AdvancedSecurity.KeyAttribute.Extension">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.AdvancedSecurity.KeyAttribute.AnyAttr">
            <remarks/>
        </member>
        <member name="T:StreamCoders.Onvif.AdvancedSecurity.KeyAttributeExtension">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.AdvancedSecurity.KeyAttributeExtension.Any">
            <remarks/>
        </member>
        <member name="T:StreamCoders.Onvif.AdvancedSecurity.Dot1XCapabilities">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.AdvancedSecurity.Dot1XCapabilities.Any">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.AdvancedSecurity.Dot1XCapabilities.MaximumNumberOfDot1XConfigurations">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.AdvancedSecurity.Dot1XCapabilities.Dot1XMethods">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.AdvancedSecurity.Dot1XCapabilities.AnyAttr">
            <remarks/>
        </member>
        <member name="T:StreamCoders.Onvif.AdvancedSecurity.TLSServerCapabilities">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.AdvancedSecurity.TLSServerCapabilities.Any">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.AdvancedSecurity.TLSServerCapabilities.TLSServerSupported">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.AdvancedSecurity.TLSServerCapabilities.MaximumNumberOfTLSCertificationPaths">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.AdvancedSecurity.TLSServerCapabilities.TLSClientAuthSupported">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.AdvancedSecurity.TLSServerCapabilities.TLSClientAuthSupportedSpecified">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.AdvancedSecurity.TLSServerCapabilities.MaximumNumberOfTLSCertificationPathValidationPolicies">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.AdvancedSecurity.TLSServerCapabilities.AnyAttr">
            <remarks/>
        </member>
        <member name="T:StreamCoders.Onvif.AdvancedSecurity.KeystoreCapabilitiesAnyElement">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.AdvancedSecurity.KeystoreCapabilitiesAnyElement.Any">
            <remarks/>
        </member>
        <member name="T:StreamCoders.Onvif.AdvancedSecurity.UploadCRLAnyParameters">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.AdvancedSecurity.UploadCRLAnyParameters.Any">
            <remarks/>
        </member>
        <member name="T:StreamCoders.Onvif.AdvancedSecurity.CreateCertPathValidationPolicyAnyParameters">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.AdvancedSecurity.CreateCertPathValidationPolicyAnyParameters.Any">
            <remarks/>
        </member>
        <member name="T:StreamCoders.Onvif.AnalyticsDevice.Capabilities">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.AnalyticsDevice.Capabilities.Any">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.AnalyticsDevice.Capabilities.AnyAttr">
            <remarks/>
        </member>
        <member name="T:StreamCoders.Onvif.AnalyticsDevice.AnalyticsState">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.AnalyticsDevice.AnalyticsState.Error">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.AnalyticsDevice.AnalyticsState.State">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.AnalyticsDevice.AnalyticsState.Any">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.AnalyticsDevice.AnalyticsState.AnyAttr">
            <remarks/>
        </member>
        <member name="T:StreamCoders.Onvif.AnalyticsDevice.AnalyticsStateInformation">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.AnalyticsDevice.AnalyticsStateInformation.AnalyticsEngineControlToken">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.AnalyticsDevice.AnalyticsStateInformation.State">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.AnalyticsDevice.AnalyticsStateInformation.Any">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.AnalyticsDevice.AnalyticsStateInformation.AnyAttr">
            <remarks/>
        </member>
        <member name="T:StreamCoders.Onvif.AnalyticsDevice.Transport">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.AnalyticsDevice.Transport.Protocol">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.AnalyticsDevice.Transport.Tunnel">
            <remarks/>
        </member>
        <member name="T:StreamCoders.Onvif.AnalyticsDevice.TransportProtocol">
            <remarks/>
        </member>
        <member name="F:StreamCoders.Onvif.AnalyticsDevice.TransportProtocol.UDP">
            <remarks/>
        </member>
        <member name="F:StreamCoders.Onvif.AnalyticsDevice.TransportProtocol.TCP">
            <remarks/>
        </member>
        <member name="F:StreamCoders.Onvif.AnalyticsDevice.TransportProtocol.RTSP">
            <remarks/>
        </member>
        <member name="F:StreamCoders.Onvif.AnalyticsDevice.TransportProtocol.HTTP">
            <remarks/>
        </member>
        <member name="T:StreamCoders.Onvif.AnalyticsDevice.StreamSetup">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.AnalyticsDevice.StreamSetup.Stream">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.AnalyticsDevice.StreamSetup.Transport">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.AnalyticsDevice.StreamSetup.Any">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.AnalyticsDevice.StreamSetup.AnyAttr">
            <remarks/>
        </member>
        <member name="T:StreamCoders.Onvif.AnalyticsDevice.StreamType">
            <remarks/>
        </member>
        <member name="F:StreamCoders.Onvif.AnalyticsDevice.StreamType.RTPUnicast">
            <remarks/>
        </member>
        <member name="F:StreamCoders.Onvif.AnalyticsDevice.StreamType.RTPMulticast">
            <remarks/>
        </member>
        <member name="T:StreamCoders.Onvif.AnalyticsDevice.MetadataInputExtension">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.AnalyticsDevice.MetadataInputExtension.Any">
            <remarks/>
        </member>
        <member name="T:StreamCoders.Onvif.AnalyticsDevice.MetadataInput">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.AnalyticsDevice.MetadataInput.MetadataConfig">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.AnalyticsDevice.MetadataInput.Extension">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.AnalyticsDevice.MetadataInput.AnyAttr">
            <remarks/>
        </member>
        <member name="T:StreamCoders.Onvif.AnalyticsDevice.Config">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.AnalyticsDevice.Config.Parameters">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.AnalyticsDevice.Config.Name">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.AnalyticsDevice.Config.Type">
            <remarks/>
        </member>
        <member name="T:StreamCoders.Onvif.AnalyticsDevice.ItemList">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.AnalyticsDevice.ItemList.SimpleItem">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.AnalyticsDevice.ItemList.ElementItem">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.AnalyticsDevice.ItemList.Extension">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.AnalyticsDevice.ItemList.AnyAttr">
            <remarks/>
        </member>
        <member name="T:StreamCoders.Onvif.AnalyticsDevice.ItemListSimpleItem">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.AnalyticsDevice.ItemListSimpleItem.Name">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.AnalyticsDevice.ItemListSimpleItem.Value">
            <remarks/>
        </member>
        <member name="T:StreamCoders.Onvif.AnalyticsDevice.ItemListElementItem">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.AnalyticsDevice.ItemListElementItem.Any">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.AnalyticsDevice.ItemListElementItem.Name">
            <remarks/>
        </member>
        <member name="T:StreamCoders.Onvif.AnalyticsDevice.ItemListExtension">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.AnalyticsDevice.ItemListExtension.Any">
            <remarks/>
        </member>
        <member name="T:StreamCoders.Onvif.AnalyticsDevice.SourceIdentificationExtension">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.AnalyticsDevice.SourceIdentificationExtension.Any">
            <remarks/>
        </member>
        <member name="T:StreamCoders.Onvif.AnalyticsDevice.SourceIdentification">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.AnalyticsDevice.SourceIdentification.Name">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.AnalyticsDevice.SourceIdentification.Token">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.AnalyticsDevice.SourceIdentification.Extension">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.AnalyticsDevice.SourceIdentification.AnyAttr">
            <remarks/>
        </member>
        <member name="T:StreamCoders.Onvif.AnalyticsDevice.AnalyticsDeviceEngineConfigurationExtension">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.AnalyticsDevice.AnalyticsDeviceEngineConfigurationExtension.Any">
            <remarks/>
        </member>
        <member name="T:StreamCoders.Onvif.AnalyticsDevice.AnalyticsEngineInputInfoExtension">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.AnalyticsDevice.AnalyticsEngineInputInfoExtension.Any">
            <remarks/>
        </member>
        <member name="T:StreamCoders.Onvif.AnalyticsDevice.AnalyticsEngineInputInfo">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.AnalyticsDevice.AnalyticsEngineInputInfo.InputInfo">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.AnalyticsDevice.AnalyticsEngineInputInfo.Extension">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.AnalyticsDevice.AnalyticsEngineInputInfo.AnyAttr">
            <remarks/>
        </member>
        <member name="T:StreamCoders.Onvif.AnalyticsDevice.EngineConfiguration">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.AnalyticsDevice.EngineConfiguration.VideoAnalyticsConfiguration">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.AnalyticsDevice.EngineConfiguration.AnalyticsEngineInputInfo">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.AnalyticsDevice.EngineConfiguration.Any">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.AnalyticsDevice.EngineConfiguration.AnyAttr">
            <remarks/>
        </member>
        <member name="T:StreamCoders.Onvif.AnalyticsDevice.VideoAnalyticsConfiguration">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.AnalyticsDevice.VideoAnalyticsConfiguration.AnalyticsEngineConfiguration">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.AnalyticsDevice.VideoAnalyticsConfiguration.RuleEngineConfiguration">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.AnalyticsDevice.VideoAnalyticsConfiguration.Any">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.AnalyticsDevice.VideoAnalyticsConfiguration.AnyAttr">
            <remarks/>
        </member>
        <member name="T:StreamCoders.Onvif.AnalyticsDevice.AnalyticsEngineConfiguration">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.AnalyticsDevice.AnalyticsEngineConfiguration.AnalyticsModule">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.AnalyticsDevice.AnalyticsEngineConfiguration.Extension">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.AnalyticsDevice.AnalyticsEngineConfiguration.AnyAttr">
            <remarks/>
        </member>
        <member name="T:StreamCoders.Onvif.AnalyticsDevice.AnalyticsEngineConfigurationExtension">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.AnalyticsDevice.AnalyticsEngineConfigurationExtension.Any">
            <remarks/>
        </member>
        <member name="T:StreamCoders.Onvif.AnalyticsDevice.RuleEngineConfiguration">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.AnalyticsDevice.RuleEngineConfiguration.Rule">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.AnalyticsDevice.RuleEngineConfiguration.Extension">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.AnalyticsDevice.RuleEngineConfiguration.AnyAttr">
            <remarks/>
        </member>
        <member name="T:StreamCoders.Onvif.AnalyticsDevice.RuleEngineConfigurationExtension">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.AnalyticsDevice.RuleEngineConfigurationExtension.Any">
            <remarks/>
        </member>
        <member name="T:StreamCoders.Onvif.AnalyticsDevice.ConfigurationEntity">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.AnalyticsDevice.ConfigurationEntity.Name">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.AnalyticsDevice.ConfigurationEntity.UseCount">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.AnalyticsDevice.ConfigurationEntity.token">
            <remarks/>
        </member>
        <member name="T:StreamCoders.Onvif.AnalyticsDevice.AnalyticsEngineControl">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.AnalyticsDevice.AnalyticsEngineControl.EngineToken">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.AnalyticsDevice.AnalyticsEngineControl.EngineConfigToken">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.AnalyticsDevice.AnalyticsEngineControl.InputToken">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.AnalyticsDevice.AnalyticsEngineControl.ReceiverToken">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.AnalyticsDevice.AnalyticsEngineControl.Multicast">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.AnalyticsDevice.AnalyticsEngineControl.Subscription">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.AnalyticsDevice.AnalyticsEngineControl.Mode">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.AnalyticsDevice.AnalyticsEngineControl.Any">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.AnalyticsDevice.AnalyticsEngineControl.AnyAttr">
            <remarks/>
        </member>
        <member name="T:StreamCoders.Onvif.AnalyticsDevice.MulticastConfiguration">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.AnalyticsDevice.MulticastConfiguration.Address">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.AnalyticsDevice.MulticastConfiguration.Port">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.AnalyticsDevice.MulticastConfiguration.TTL">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.AnalyticsDevice.MulticastConfiguration.AutoStart">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.AnalyticsDevice.MulticastConfiguration.Any">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.AnalyticsDevice.MulticastConfiguration.AnyAttr">
            <remarks/>
        </member>
        <member name="T:StreamCoders.Onvif.AnalyticsDevice.IPAddress">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.AnalyticsDevice.IPAddress.Type">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.AnalyticsDevice.IPAddress.IPv4Address">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.AnalyticsDevice.IPAddress.IPv6Address">
            <remarks/>
        </member>
        <member name="T:StreamCoders.Onvif.AnalyticsDevice.IPType">
            <remarks/>
        </member>
        <member name="F:StreamCoders.Onvif.AnalyticsDevice.IPType.IPv4">
            <remarks/>
        </member>
        <member name="F:StreamCoders.Onvif.AnalyticsDevice.IPType.IPv6">
            <remarks/>
        </member>
        <member name="T:StreamCoders.Onvif.AnalyticsDevice.ModeOfOperation">
            <remarks/>
        </member>
        <member name="F:StreamCoders.Onvif.AnalyticsDevice.ModeOfOperation.Idle">
            <remarks/>
        </member>
        <member name="F:StreamCoders.Onvif.AnalyticsDevice.ModeOfOperation.Active">
            <remarks/>
        </member>
        <member name="F:StreamCoders.Onvif.AnalyticsDevice.ModeOfOperation.Unknown">
            <remarks/>
        </member>
        <member name="T:StreamCoders.Onvif.AnalyticsDevice.AnalyticsEngineInput">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.AnalyticsDevice.AnalyticsEngineInput.SourceIdentification">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.AnalyticsDevice.AnalyticsEngineInput.VideoInput">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.AnalyticsDevice.AnalyticsEngineInput.MetadataInput">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.AnalyticsDevice.AnalyticsEngineInput.Any">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.AnalyticsDevice.AnalyticsEngineInput.AnyAttr">
            <remarks/>
        </member>
        <member name="T:StreamCoders.Onvif.AnalyticsDevice.VideoEncoderConfiguration">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.AnalyticsDevice.VideoEncoderConfiguration.Encoding">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.AnalyticsDevice.VideoEncoderConfiguration.Resolution">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.AnalyticsDevice.VideoEncoderConfiguration.Quality">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.AnalyticsDevice.VideoEncoderConfiguration.RateControl">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.AnalyticsDevice.VideoEncoderConfiguration.MPEG4">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.AnalyticsDevice.VideoEncoderConfiguration.H264">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.AnalyticsDevice.VideoEncoderConfiguration.Multicast">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.AnalyticsDevice.VideoEncoderConfiguration.SessionTimeout">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.AnalyticsDevice.VideoEncoderConfiguration.Any">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.AnalyticsDevice.VideoEncoderConfiguration.AnyAttr">
            <remarks/>
        </member>
        <member name="T:StreamCoders.Onvif.AnalyticsDevice.VideoEncoding">
            <remarks/>
        </member>
        <member name="F:StreamCoders.Onvif.AnalyticsDevice.VideoEncoding.JPEG">
            <remarks/>
        </member>
        <member name="F:StreamCoders.Onvif.AnalyticsDevice.VideoEncoding.MPEG4">
            <remarks/>
        </member>
        <member name="F:StreamCoders.Onvif.AnalyticsDevice.VideoEncoding.H264">
            <remarks/>
        </member>
        <member name="T:StreamCoders.Onvif.AnalyticsDevice.VideoResolution">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.AnalyticsDevice.VideoResolution.Width">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.AnalyticsDevice.VideoResolution.Height">
            <remarks/>
        </member>
        <member name="T:StreamCoders.Onvif.AnalyticsDevice.VideoRateControl">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.AnalyticsDevice.VideoRateControl.FrameRateLimit">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.AnalyticsDevice.VideoRateControl.EncodingInterval">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.AnalyticsDevice.VideoRateControl.BitrateLimit">
            <remarks/>
        </member>
        <member name="T:StreamCoders.Onvif.AnalyticsDevice.Mpeg4Configuration">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.AnalyticsDevice.Mpeg4Configuration.GovLength">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.AnalyticsDevice.Mpeg4Configuration.Mpeg4Profile">
            <remarks/>
        </member>
        <member name="T:StreamCoders.Onvif.AnalyticsDevice.Mpeg4Profile">
            <remarks/>
        </member>
        <member name="F:StreamCoders.Onvif.AnalyticsDevice.Mpeg4Profile.SP">
            <remarks/>
        </member>
        <member name="F:StreamCoders.Onvif.AnalyticsDevice.Mpeg4Profile.ASP">
            <remarks/>
        </member>
        <member name="T:StreamCoders.Onvif.AnalyticsDevice.H264Configuration">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.AnalyticsDevice.H264Configuration.GovLength">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.AnalyticsDevice.H264Configuration.H264Profile">
            <remarks/>
        </member>
        <member name="T:StreamCoders.Onvif.AnalyticsDevice.H264Profile">
            <remarks/>
        </member>
        <member name="F:StreamCoders.Onvif.AnalyticsDevice.H264Profile.Baseline">
            <remarks/>
        </member>
        <member name="F:StreamCoders.Onvif.AnalyticsDevice.H264Profile.Main">
            <remarks/>
        </member>
        <member name="F:StreamCoders.Onvif.AnalyticsDevice.H264Profile.Extended">
            <remarks/>
        </member>
        <member name="F:StreamCoders.Onvif.AnalyticsDevice.H264Profile.High">
            <remarks/>
        </member>
        <member name="T:StreamCoders.Onvif.AnalyticsDevice.AnalyticsEngine">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.AnalyticsDevice.AnalyticsEngine.AnalyticsEngineConfiguration">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.AnalyticsDevice.AnalyticsEngine.Any">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.AnalyticsDevice.AnalyticsEngine.AnyAttr">
            <remarks/>
        </member>
        <member name="T:StreamCoders.Onvif.AnalyticsDevice.AnalyticsDeviceEngineConfiguration">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.AnalyticsDevice.AnalyticsDeviceEngineConfiguration.EngineConfiguration">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.AnalyticsDevice.AnalyticsDeviceEngineConfiguration.Extension">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.AnalyticsDevice.AnalyticsDeviceEngineConfiguration.AnyAttr">
            <remarks/>
        </member>
        <member name="T:StreamCoders.Onvif.AnalyticsDevice.PTZConfiguration">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.AnalyticsDevice.PTZConfiguration.NodeToken">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.AnalyticsDevice.PTZConfiguration.DefaultAbsolutePantTiltPositionSpace">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.AnalyticsDevice.PTZConfiguration.DefaultAbsoluteZoomPositionSpace">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.AnalyticsDevice.PTZConfiguration.DefaultRelativePanTiltTranslationSpace">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.AnalyticsDevice.PTZConfiguration.DefaultRelativeZoomTranslationSpace">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.AnalyticsDevice.PTZConfiguration.DefaultContinuousPanTiltVelocitySpace">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.AnalyticsDevice.PTZConfiguration.DefaultContinuousZoomVelocitySpace">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.AnalyticsDevice.PTZConfiguration.DefaultPTZSpeed">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.AnalyticsDevice.PTZConfiguration.DefaultPTZTimeout">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.AnalyticsDevice.PTZConfiguration.PanTiltLimits">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.AnalyticsDevice.PTZConfiguration.ZoomLimits">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.AnalyticsDevice.PTZConfiguration.Extension">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.AnalyticsDevice.PTZConfiguration.MoveRamp">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.AnalyticsDevice.PTZConfiguration.MoveRampSpecified">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.AnalyticsDevice.PTZConfiguration.PresetRamp">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.AnalyticsDevice.PTZConfiguration.PresetRampSpecified">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.AnalyticsDevice.PTZConfiguration.PresetTourRamp">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.AnalyticsDevice.PTZConfiguration.PresetTourRampSpecified">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.AnalyticsDevice.PTZConfiguration.AnyAttr">
            <remarks/>
        </member>
        <member name="T:StreamCoders.Onvif.AnalyticsDevice.PTZSpeed">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.AnalyticsDevice.PTZSpeed.PanTilt">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.AnalyticsDevice.PTZSpeed.Zoom">
            <remarks/>
        </member>
        <member name="T:StreamCoders.Onvif.AnalyticsDevice.Vector2D">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.AnalyticsDevice.Vector2D.x">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.AnalyticsDevice.Vector2D.y">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.AnalyticsDevice.Vector2D.space">
            <remarks/>
        </member>
        <member name="T:StreamCoders.Onvif.AnalyticsDevice.Vector1D">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.AnalyticsDevice.Vector1D.x">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.AnalyticsDevice.Vector1D.space">
            <remarks/>
        </member>
        <member name="T:StreamCoders.Onvif.AnalyticsDevice.PanTiltLimits">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.AnalyticsDevice.PanTiltLimits.Range">
            <remarks/>
        </member>
        <member name="T:StreamCoders.Onvif.AnalyticsDevice.Space2DDescription">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.AnalyticsDevice.Space2DDescription.URI">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.AnalyticsDevice.Space2DDescription.XRange">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.AnalyticsDevice.Space2DDescription.YRange">
            <remarks/>
        </member>
        <member name="T:StreamCoders.Onvif.AnalyticsDevice.FloatRange">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.AnalyticsDevice.FloatRange.Min">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.AnalyticsDevice.FloatRange.Max">
            <remarks/>
        </member>
        <member name="T:StreamCoders.Onvif.AnalyticsDevice.ZoomLimits">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.AnalyticsDevice.ZoomLimits.Range">
            <remarks/>
        </member>
        <member name="T:StreamCoders.Onvif.AnalyticsDevice.Space1DDescription">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.AnalyticsDevice.Space1DDescription.URI">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.AnalyticsDevice.Space1DDescription.XRange">
            <remarks/>
        </member>
        <member name="T:StreamCoders.Onvif.AnalyticsDevice.PTZConfigurationExtension">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.AnalyticsDevice.PTZConfigurationExtension.Any">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.AnalyticsDevice.PTZConfigurationExtension.PTControlDirection">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.AnalyticsDevice.PTZConfigurationExtension.Extension">
            <remarks/>
        </member>
        <member name="T:StreamCoders.Onvif.AnalyticsDevice.PTControlDirection">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.AnalyticsDevice.PTControlDirection.EFlip">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.AnalyticsDevice.PTControlDirection.Reverse">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.AnalyticsDevice.PTControlDirection.Extension">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.AnalyticsDevice.PTControlDirection.AnyAttr">
            <remarks/>
        </member>
        <member name="T:StreamCoders.Onvif.AnalyticsDevice.EFlip">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.AnalyticsDevice.EFlip.Mode">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.AnalyticsDevice.EFlip.Any">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.AnalyticsDevice.EFlip.AnyAttr">
            <remarks/>
        </member>
        <member name="T:StreamCoders.Onvif.AnalyticsDevice.EFlipMode">
            <remarks/>
        </member>
        <member name="F:StreamCoders.Onvif.AnalyticsDevice.EFlipMode.OFF">
            <remarks/>
        </member>
        <member name="F:StreamCoders.Onvif.AnalyticsDevice.EFlipMode.ON">
            <remarks/>
        </member>
        <member name="F:StreamCoders.Onvif.AnalyticsDevice.EFlipMode.Extended">
            <remarks/>
        </member>
        <member name="T:StreamCoders.Onvif.AnalyticsDevice.Reverse">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.AnalyticsDevice.Reverse.Mode">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.AnalyticsDevice.Reverse.Any">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.AnalyticsDevice.Reverse.AnyAttr">
            <remarks/>
        </member>
        <member name="T:StreamCoders.Onvif.AnalyticsDevice.ReverseMode">
            <remarks/>
        </member>
        <member name="F:StreamCoders.Onvif.AnalyticsDevice.ReverseMode.OFF">
            <remarks/>
        </member>
        <member name="F:StreamCoders.Onvif.AnalyticsDevice.ReverseMode.ON">
            <remarks/>
        </member>
        <member name="F:StreamCoders.Onvif.AnalyticsDevice.ReverseMode.AUTO">
            <remarks/>
        </member>
        <member name="F:StreamCoders.Onvif.AnalyticsDevice.ReverseMode.Extended">
            <remarks/>
        </member>
        <member name="T:StreamCoders.Onvif.AnalyticsDevice.PTControlDirectionExtension">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.AnalyticsDevice.PTControlDirectionExtension.Any">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.AnalyticsDevice.PTControlDirectionExtension.AnyAttr">
            <remarks/>
        </member>
        <member name="T:StreamCoders.Onvif.AnalyticsDevice.PTZConfigurationExtension2">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.AnalyticsDevice.PTZConfigurationExtension2.Any">
            <remarks/>
        </member>
        <member name="T:StreamCoders.Onvif.AnalyticsDevice.AudioDecoderConfiguration">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.AnalyticsDevice.AudioDecoderConfiguration.Any">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.AnalyticsDevice.AudioDecoderConfiguration.AnyAttr">
            <remarks/>
        </member>
        <member name="T:StreamCoders.Onvif.AnalyticsDevice.AudioOutputConfiguration">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.AnalyticsDevice.AudioOutputConfiguration.OutputToken">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.AnalyticsDevice.AudioOutputConfiguration.SendPrimacy">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.AnalyticsDevice.AudioOutputConfiguration.OutputLevel">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.AnalyticsDevice.AudioOutputConfiguration.Any">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.AnalyticsDevice.AudioOutputConfiguration.AnyAttr">
            <remarks/>
        </member>
        <member name="T:StreamCoders.Onvif.AnalyticsDevice.VideoOutputConfiguration">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.AnalyticsDevice.VideoOutputConfiguration.OutputToken">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.AnalyticsDevice.VideoOutputConfiguration.Any">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.AnalyticsDevice.VideoOutputConfiguration.AnyAttr">
            <remarks/>
        </member>
        <member name="T:StreamCoders.Onvif.AnalyticsDevice.MetadataConfiguration">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.AnalyticsDevice.MetadataConfiguration.PTZStatus">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.AnalyticsDevice.MetadataConfiguration.Events">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.AnalyticsDevice.MetadataConfiguration.Analytics">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.AnalyticsDevice.MetadataConfiguration.AnalyticsSpecified">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.AnalyticsDevice.MetadataConfiguration.Multicast">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.AnalyticsDevice.MetadataConfiguration.SessionTimeout">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.AnalyticsDevice.MetadataConfiguration.Any">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.AnalyticsDevice.MetadataConfiguration.AnalyticsEngineConfiguration">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.AnalyticsDevice.MetadataConfiguration.Extension">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.AnalyticsDevice.MetadataConfiguration.CompressionType">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.AnalyticsDevice.MetadataConfiguration.AnyAttr">
            <remarks/>
        </member>
        <member name="T:StreamCoders.Onvif.AnalyticsDevice.PTZFilter">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.AnalyticsDevice.PTZFilter.Status">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.AnalyticsDevice.PTZFilter.Position">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.AnalyticsDevice.PTZFilter.AnyAttr">
            <remarks/>
        </member>
        <member name="T:StreamCoders.Onvif.AnalyticsDevice.EventSubscription">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.AnalyticsDevice.EventSubscription.Filter">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.AnalyticsDevice.EventSubscription.SubscriptionPolicy">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.AnalyticsDevice.EventSubscription.Any">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.AnalyticsDevice.EventSubscription.AnyAttr">
            <remarks/>
        </member>
        <member name="T:StreamCoders.Onvif.AnalyticsDevice.FilterType">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.AnalyticsDevice.FilterType.Any">
            <remarks/>
        </member>
        <member name="T:StreamCoders.Onvif.AnalyticsDevice.EventFilter">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.AnalyticsDevice.EventFilter.AnyAttr">
            <remarks/>
        </member>
        <member name="T:StreamCoders.Onvif.AnalyticsDevice.EventSubscriptionSubscriptionPolicy">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.AnalyticsDevice.EventSubscriptionSubscriptionPolicy.Any">
            <remarks/>
        </member>
        <member name="T:StreamCoders.Onvif.AnalyticsDevice.MetadataConfigurationExtension">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.AnalyticsDevice.MetadataConfigurationExtension.Any">
            <remarks/>
        </member>
        <member name="T:StreamCoders.Onvif.AnalyticsDevice.AudioEncoder2Configuration">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.AnalyticsDevice.AudioEncoder2Configuration.Encoding">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.AnalyticsDevice.AudioEncoder2Configuration.Multicast">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.AnalyticsDevice.AudioEncoder2Configuration.Bitrate">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.AnalyticsDevice.AudioEncoder2Configuration.SampleRate">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.AnalyticsDevice.AudioEncoder2Configuration.Any">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.AnalyticsDevice.AudioEncoder2Configuration.AnyAttr">
            <remarks/>
        </member>
        <member name="T:StreamCoders.Onvif.AnalyticsDevice.AudioEncoderConfiguration">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.AnalyticsDevice.AudioEncoderConfiguration.Encoding">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.AnalyticsDevice.AudioEncoderConfiguration.Bitrate">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.AnalyticsDevice.AudioEncoderConfiguration.SampleRate">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.AnalyticsDevice.AudioEncoderConfiguration.Multicast">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.AnalyticsDevice.AudioEncoderConfiguration.SessionTimeout">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.AnalyticsDevice.AudioEncoderConfiguration.Any">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.AnalyticsDevice.AudioEncoderConfiguration.AnyAttr">
            <remarks/>
        </member>
        <member name="T:StreamCoders.Onvif.AnalyticsDevice.AudioEncoding">
            <remarks/>
        </member>
        <member name="F:StreamCoders.Onvif.AnalyticsDevice.AudioEncoding.G711">
            <remarks/>
        </member>
        <member name="F:StreamCoders.Onvif.AnalyticsDevice.AudioEncoding.G726">
            <remarks/>
        </member>
        <member name="F:StreamCoders.Onvif.AnalyticsDevice.AudioEncoding.AAC">
            <remarks/>
        </member>
        <member name="T:StreamCoders.Onvif.AnalyticsDevice.AudioSourceConfiguration">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.AnalyticsDevice.AudioSourceConfiguration.SourceToken">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.AnalyticsDevice.AudioSourceConfiguration.Any">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.AnalyticsDevice.AudioSourceConfiguration.AnyAttr">
            <remarks/>
        </member>
        <member name="T:StreamCoders.Onvif.AnalyticsDevice.VideoEncoder2Configuration">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.AnalyticsDevice.VideoEncoder2Configuration.Encoding">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.AnalyticsDevice.VideoEncoder2Configuration.Resolution">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.AnalyticsDevice.VideoEncoder2Configuration.RateControl">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.AnalyticsDevice.VideoEncoder2Configuration.Multicast">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.AnalyticsDevice.VideoEncoder2Configuration.Quality">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.AnalyticsDevice.VideoEncoder2Configuration.Any">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.AnalyticsDevice.VideoEncoder2Configuration.GovLength">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.AnalyticsDevice.VideoEncoder2Configuration.GovLengthSpecified">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.AnalyticsDevice.VideoEncoder2Configuration.Profile">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.AnalyticsDevice.VideoEncoder2Configuration.AnyAttr">
            <remarks/>
        </member>
        <member name="T:StreamCoders.Onvif.AnalyticsDevice.VideoResolution2">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.AnalyticsDevice.VideoResolution2.Width">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.AnalyticsDevice.VideoResolution2.Height">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.AnalyticsDevice.VideoResolution2.Any">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.AnalyticsDevice.VideoResolution2.AnyAttr">
            <remarks/>
        </member>
        <member name="T:StreamCoders.Onvif.AnalyticsDevice.VideoRateControl2">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.AnalyticsDevice.VideoRateControl2.FrameRateLimit">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.AnalyticsDevice.VideoRateControl2.BitrateLimit">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.AnalyticsDevice.VideoRateControl2.Any">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.AnalyticsDevice.VideoRateControl2.ConstantBitRate">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.AnalyticsDevice.VideoRateControl2.ConstantBitRateSpecified">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.AnalyticsDevice.VideoRateControl2.AnyAttr">
            <remarks/>
        </member>
        <member name="T:StreamCoders.Onvif.AnalyticsDevice.VideoSourceConfiguration">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.AnalyticsDevice.VideoSourceConfiguration.SourceToken">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.AnalyticsDevice.VideoSourceConfiguration.Bounds">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.AnalyticsDevice.VideoSourceConfiguration.Any">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.AnalyticsDevice.VideoSourceConfiguration.Extension">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.AnalyticsDevice.VideoSourceConfiguration.AnyAttr">
            <remarks/>
        </member>
        <member name="T:StreamCoders.Onvif.AnalyticsDevice.IntRectangle">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.AnalyticsDevice.IntRectangle.x">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.AnalyticsDevice.IntRectangle.y">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.AnalyticsDevice.IntRectangle.width">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.AnalyticsDevice.IntRectangle.height">
            <remarks/>
        </member>
        <member name="T:StreamCoders.Onvif.AnalyticsDevice.VideoSourceConfigurationExtension">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.AnalyticsDevice.VideoSourceConfigurationExtension.Rotate">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.AnalyticsDevice.VideoSourceConfigurationExtension.Extension">
            <remarks/>
        </member>
        <member name="T:StreamCoders.Onvif.AnalyticsDevice.Rotate">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.AnalyticsDevice.Rotate.Mode">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.AnalyticsDevice.Rotate.Degree">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.AnalyticsDevice.Rotate.DegreeSpecified">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.AnalyticsDevice.Rotate.Extension">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.AnalyticsDevice.Rotate.AnyAttr">
            <remarks/>
        </member>
        <member name="T:StreamCoders.Onvif.AnalyticsDevice.RotateMode">
            <remarks/>
        </member>
        <member name="F:StreamCoders.Onvif.AnalyticsDevice.RotateMode.OFF">
            <remarks/>
        </member>
        <member name="F:StreamCoders.Onvif.AnalyticsDevice.RotateMode.ON">
            <remarks/>
        </member>
        <member name="F:StreamCoders.Onvif.AnalyticsDevice.RotateMode.AUTO">
            <remarks/>
        </member>
        <member name="T:StreamCoders.Onvif.AnalyticsDevice.RotateExtension">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.AnalyticsDevice.RotateExtension.Any">
            <remarks/>
        </member>
        <member name="T:StreamCoders.Onvif.AnalyticsDevice.VideoSourceConfigurationExtension2">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.AnalyticsDevice.VideoSourceConfigurationExtension2.LensDescription">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.AnalyticsDevice.VideoSourceConfigurationExtension2.SceneOrientation">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.AnalyticsDevice.VideoSourceConfigurationExtension2.Any">
            <remarks/>
        </member>
        <member name="T:StreamCoders.Onvif.AnalyticsDevice.LensDescription">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.AnalyticsDevice.LensDescription.Offset">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.AnalyticsDevice.LensDescription.Projection">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.AnalyticsDevice.LensDescription.XFactor">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.AnalyticsDevice.LensDescription.Any">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.AnalyticsDevice.LensDescription.FocalLength">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.AnalyticsDevice.LensDescription.FocalLengthSpecified">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.AnalyticsDevice.LensDescription.AnyAttr">
            <remarks/>
        </member>
        <member name="T:StreamCoders.Onvif.AnalyticsDevice.LensOffset">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.AnalyticsDevice.LensOffset.x">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.AnalyticsDevice.LensOffset.xSpecified">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.AnalyticsDevice.LensOffset.y">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.AnalyticsDevice.LensOffset.ySpecified">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.AnalyticsDevice.LensOffset.AnyAttr">
            <remarks/>
        </member>
        <member name="T:StreamCoders.Onvif.AnalyticsDevice.LensProjection">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.AnalyticsDevice.LensProjection.Angle">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.AnalyticsDevice.LensProjection.Radius">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.AnalyticsDevice.LensProjection.Transmittance">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.AnalyticsDevice.LensProjection.TransmittanceSpecified">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.AnalyticsDevice.LensProjection.Any">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.AnalyticsDevice.LensProjection.AnyAttr">
            <remarks/>
        </member>
        <member name="T:StreamCoders.Onvif.AnalyticsDevice.SceneOrientation">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.AnalyticsDevice.SceneOrientation.Mode">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.AnalyticsDevice.SceneOrientation.Orientation">
            <remarks/>
        </member>
        <member name="T:StreamCoders.Onvif.AnalyticsDevice.SceneOrientationMode">
            <remarks/>
        </member>
        <member name="F:StreamCoders.Onvif.AnalyticsDevice.SceneOrientationMode.MANUAL">
            <remarks/>
        </member>
        <member name="F:StreamCoders.Onvif.AnalyticsDevice.SceneOrientationMode.AUTO">
            <remarks/>
        </member>
        <member name="T:StreamCoders.Onvif.Analytics.SupportedRules">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Analytics.SupportedRules.RuleContentSchemaLocation">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Analytics.SupportedRules.RuleDescription">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Analytics.SupportedRules.Extension">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Analytics.SupportedRules.AnyAttr">
            <remarks/>
        </member>
        <member name="T:StreamCoders.Onvif.Analytics.ConfigDescription">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Analytics.ConfigDescription.Parameters">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Analytics.ConfigDescription.Messages">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Analytics.ConfigDescription.Extension">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Analytics.ConfigDescription.Name">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Analytics.ConfigDescription.AnyAttr">
            <remarks/>
        </member>
        <member name="T:StreamCoders.Onvif.Analytics.ItemListDescription">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Analytics.ItemListDescription.SimpleItemDescription">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Analytics.ItemListDescription.ElementItemDescription">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Analytics.ItemListDescription.Extension">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Analytics.ItemListDescription.AnyAttr">
            <remarks/>
        </member>
        <member name="T:StreamCoders.Onvif.Analytics.ItemListDescriptionSimpleItemDescription">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Analytics.ItemListDescriptionSimpleItemDescription.Name">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Analytics.ItemListDescriptionSimpleItemDescription.Type">
            <remarks/>
        </member>
        <member name="T:StreamCoders.Onvif.Analytics.SupportedAnalyticsModulesExtension">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Analytics.SupportedAnalyticsModulesExtension.Any">
            <remarks/>
        </member>
        <member name="T:StreamCoders.Onvif.Analytics.SupportedAnalyticsModules">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Analytics.SupportedAnalyticsModules.AnalyticsModuleContentSchemaLocation">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Analytics.SupportedAnalyticsModules.AnalyticsModuleDescription">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Analytics.SupportedAnalyticsModules.Extension">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Analytics.SupportedAnalyticsModules.AnyAttr">
            <remarks/>
        </member>
        <member name="T:StreamCoders.Onvif.Analytics.Capabilities">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Analytics.Capabilities.Any">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Analytics.Capabilities.RuleSupport">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Analytics.Capabilities.RuleSupportSpecified">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Analytics.Capabilities.AnalyticsModuleSupport">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Analytics.Capabilities.AnalyticsModuleSupportSpecified">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Analytics.Capabilities.CellBasedSceneDescriptionSupported">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Analytics.Capabilities.CellBasedSceneDescriptionSupportedSpecified">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Analytics.Capabilities.RuleOptionsSupported">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Analytics.Capabilities.RuleOptionsSupportedSpecified">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Analytics.Capabilities.AnyAttr">
            <remarks/>
        </member>
        <member name="T:StreamCoders.Onvif.Analytics.ConfigOptions">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Analytics.ConfigOptions.Any">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Analytics.ConfigOptions.Name">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Analytics.ConfigOptions.Type">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Analytics.ConfigOptions.AnyAttr">
            <remarks/>
        </member>
        <member name="T:StreamCoders.Onvif.Analytics.ItemListExtension">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Analytics.ItemListExtension.Any">
            <remarks/>
        </member>
        <member name="T:StreamCoders.Onvif.Analytics.ItemList">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Analytics.ItemList.SimpleItem">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Analytics.ItemList.ElementItem">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Analytics.ItemList.Extension">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Analytics.ItemList.AnyAttr">
            <remarks/>
        </member>
        <member name="T:StreamCoders.Onvif.Analytics.ItemListSimpleItem">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Analytics.ItemListSimpleItem.Name">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Analytics.ItemListSimpleItem.Value">
            <remarks/>
        </member>
        <member name="T:StreamCoders.Onvif.Analytics.ItemListElementItem">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Analytics.ItemListElementItem.Any">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Analytics.ItemListElementItem.Name">
            <remarks/>
        </member>
        <member name="T:StreamCoders.Onvif.Analytics.Config">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Analytics.Config.Parameters">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Analytics.Config.Name">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Analytics.Config.Type">
            <remarks/>
        </member>
        <member name="T:StreamCoders.Onvif.Analytics.SupportedRulesExtension">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Analytics.SupportedRulesExtension.Any">
            <remarks/>
        </member>
        <member name="T:StreamCoders.Onvif.Analytics.ConfigDescriptionExtension">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Analytics.ConfigDescriptionExtension.Any">
            <remarks/>
        </member>
        <member name="T:StreamCoders.Onvif.Analytics.MessageDescriptionExtension">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Analytics.MessageDescriptionExtension.Any">
            <remarks/>
        </member>
        <member name="T:StreamCoders.Onvif.Analytics.MessageDescription">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Analytics.MessageDescription.Source">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Analytics.MessageDescription.Key">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Analytics.MessageDescription.Data">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Analytics.MessageDescription.Extension">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Analytics.MessageDescription.IsProperty">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Analytics.MessageDescription.IsPropertySpecified">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Analytics.MessageDescription.AnyAttr">
            <remarks/>
        </member>
        <member name="T:StreamCoders.Onvif.Analytics.ItemListDescriptionExtension">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Analytics.ItemListDescriptionExtension.Any">
            <remarks/>
        </member>
        <member name="T:StreamCoders.Onvif.Analytics.ItemListDescriptionElementItemDescription">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Analytics.ItemListDescriptionElementItemDescription.Name">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Analytics.ItemListDescriptionElementItemDescription.Type">
            <remarks/>
        </member>
        <member name="T:StreamCoders.Onvif.Analytics.ConfigDescriptionMessages">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Analytics.ConfigDescriptionMessages.ParentTopic">
            <remarks/>
        </member>
        <member name="T:StreamCoders.Onvif.Credential.ServiceCapabilities">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Credential.ServiceCapabilities.SupportedIdentifierType">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Credential.ServiceCapabilities.Extension">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Credential.ServiceCapabilities.MaxLimit">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Credential.ServiceCapabilities.CredentialValiditySupported">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Credential.ServiceCapabilities.CredentialAccessProfileValiditySupported">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Credential.ServiceCapabilities.ValiditySupportsTimeValue">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Credential.ServiceCapabilities.MaxCredentials">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Credential.ServiceCapabilities.MaxAccessProfilesPerCredential">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Credential.ServiceCapabilities.ResetAntipassbackSupported">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Credential.ServiceCapabilities.AnyAttr">
            <remarks/>
        </member>
        <member name="T:StreamCoders.Onvif.Credential.ServiceCapabilitiesExtension">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Credential.ServiceCapabilitiesExtension.Any">
            <remarks/>
        </member>
        <member name="T:StreamCoders.Onvif.Credential.AntipassbackState">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Credential.AntipassbackState.AntipassbackViolated">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Credential.AntipassbackState.Any">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Credential.AntipassbackState.AnyAttr">
            <remarks/>
        </member>
        <member name="T:StreamCoders.Onvif.Credential.CredentialState">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Credential.CredentialState.Enabled">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Credential.CredentialState.Reason">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Credential.CredentialState.AntipassbackState">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Credential.CredentialState.Extension">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Credential.CredentialState.AnyAttr">
            <remarks/>
        </member>
        <member name="T:StreamCoders.Onvif.Credential.CredentialExtension">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Credential.CredentialExtension.Any">
            <remarks/>
        </member>
        <member name="T:StreamCoders.Onvif.Credential.Attribute">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Credential.Attribute.Any">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Credential.Attribute.Name">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Credential.Attribute.Value">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Credential.Attribute.AnyAttr">
            <remarks/>
        </member>
        <member name="T:StreamCoders.Onvif.Credential.CredentialAccessProfile">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Credential.CredentialAccessProfile.AccessProfileToken">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Credential.CredentialAccessProfile.ValidFrom">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Credential.CredentialAccessProfile.ValidFromSpecified">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Credential.CredentialAccessProfile.ValidTo">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Credential.CredentialAccessProfile.ValidToSpecified">
            <remarks/>
        </member>
        <member name="T:StreamCoders.Onvif.Credential.CredentialIdentifierType">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Credential.CredentialIdentifierType.Name">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Credential.CredentialIdentifierType.FormatType">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Credential.CredentialIdentifierType.Any">
            <remarks/>
        </member>
        <member name="T:StreamCoders.Onvif.Credential.CredentialIdentifier">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Credential.CredentialIdentifier.Type">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Credential.CredentialIdentifier.ExemptedFromAuthentication">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Credential.CredentialIdentifier.Value">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Credential.CredentialIdentifier.Any">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Credential.CredentialIdentifier.AnyAttr">
            <remarks/>
        </member>
        <member name="T:StreamCoders.Onvif.Credential.DataEntity">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Credential.DataEntity.token">
            <remarks/>
        </member>
        <member name="T:StreamCoders.Onvif.Credential.CredentialInfo">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Credential.CredentialInfo.Description">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Credential.CredentialInfo.CredentialHolderReference">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Credential.CredentialInfo.ValidFrom">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Credential.CredentialInfo.ValidFromSpecified">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Credential.CredentialInfo.ValidTo">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Credential.CredentialInfo.ValidToSpecified">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Credential.CredentialInfo.AnyAttr">
            <remarks/>
        </member>
        <member name="T:StreamCoders.Onvif.Credential.Credential">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Credential.Credential.CredentialIdentifier">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Credential.Credential.CredentialAccessProfile">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Credential.Credential.Attribute">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Credential.Credential.Extension">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Credential.Credential.AnyAttr1">
            <remarks/>
        </member>
        <member name="T:StreamCoders.Onvif.Credential.CredentialIdentifierFormatTypeInfoExtension">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Credential.CredentialIdentifierFormatTypeInfoExtension.Any">
            <remarks/>
        </member>
        <member name="T:StreamCoders.Onvif.Credential.CredentialIdentifierFormatTypeInfo">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Credential.CredentialIdentifierFormatTypeInfo.FormatType">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Credential.CredentialIdentifierFormatTypeInfo.Description">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Credential.CredentialIdentifierFormatTypeInfo.Extension">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Credential.CredentialIdentifierFormatTypeInfo.AnyAttr">
            <remarks/>
        </member>
        <member name="T:StreamCoders.Onvif.DeviceIO.Service">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.DeviceIO.Service.Namespace">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.DeviceIO.Service.XAddr">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.DeviceIO.Service.Capabilities">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.DeviceIO.Service.Version">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.DeviceIO.Service.Any">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.DeviceIO.Service.AnyAttr">
            <remarks/>
        </member>
        <member name="T:StreamCoders.Onvif.DeviceIO.OnvifVersion">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.DeviceIO.OnvifVersion.Major">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.DeviceIO.OnvifVersion.Minor">
            <remarks/>
        </member>
        <member name="T:StreamCoders.Onvif.DeviceIO.SerialData">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.DeviceIO.SerialData.Item">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.DeviceIO.SerialData.AnyAttr">
            <remarks/>
        </member>
        <member name="T:StreamCoders.Onvif.DeviceIO.SerialPortConfigurationOptions">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.DeviceIO.SerialPortConfigurationOptions.BaudRateList">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.DeviceIO.SerialPortConfigurationOptions.ParityBitList">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.DeviceIO.SerialPortConfigurationOptions.CharacterLengthList">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.DeviceIO.SerialPortConfigurationOptions.StopBitList">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.DeviceIO.SerialPortConfigurationOptions.Any">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.DeviceIO.SerialPortConfigurationOptions.token">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.DeviceIO.SerialPortConfigurationOptions.AnyAttr">
            <remarks/>
        </member>
        <member name="T:StreamCoders.Onvif.DeviceIO.ParityBit">
            <remarks/>
        </member>
        <member name="F:StreamCoders.Onvif.DeviceIO.ParityBit.None">
            <remarks/>
        </member>
        <member name="F:StreamCoders.Onvif.DeviceIO.ParityBit.Even">
            <remarks/>
        </member>
        <member name="F:StreamCoders.Onvif.DeviceIO.ParityBit.Odd">
            <remarks/>
        </member>
        <member name="F:StreamCoders.Onvif.DeviceIO.ParityBit.Mark">
            <remarks/>
        </member>
        <member name="F:StreamCoders.Onvif.DeviceIO.ParityBit.Space">
            <remarks/>
        </member>
        <member name="F:StreamCoders.Onvif.DeviceIO.ParityBit.Extended">
            <remarks/>
        </member>
        <member name="T:StreamCoders.Onvif.DeviceIO.SerialPortConfiguration">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.DeviceIO.SerialPortConfiguration.BaudRate">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.DeviceIO.SerialPortConfiguration.ParityBit">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.DeviceIO.SerialPortConfiguration.CharacterLength">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.DeviceIO.SerialPortConfiguration.StopBit">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.DeviceIO.SerialPortConfiguration.Any">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.DeviceIO.SerialPortConfiguration.token">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.DeviceIO.SerialPortConfiguration.type">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.DeviceIO.SerialPortConfiguration.AnyAttr">
            <remarks/>
        </member>
        <member name="T:StreamCoders.Onvif.DeviceIO.SerialPortType">
            <remarks/>
        </member>
        <member name="F:StreamCoders.Onvif.DeviceIO.SerialPortType.RS232">
            <remarks/>
        </member>
        <member name="F:StreamCoders.Onvif.DeviceIO.SerialPortType.RS422HalfDuplex">
            <remarks/>
        </member>
        <member name="F:StreamCoders.Onvif.DeviceIO.SerialPortType.RS422FullDuplex">
            <remarks/>
        </member>
        <member name="F:StreamCoders.Onvif.DeviceIO.SerialPortType.RS485HalfDuplex">
            <remarks/>
        </member>
        <member name="F:StreamCoders.Onvif.DeviceIO.SerialPortType.RS485FullDuplex">
            <remarks/>
        </member>
        <member name="F:StreamCoders.Onvif.DeviceIO.SerialPortType.Generic">
            <remarks/>
        </member>
        <member name="T:StreamCoders.Onvif.DeviceIO.DigitalInputConfigurationInputOptions">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.DeviceIO.DigitalInputConfigurationInputOptions.IdleState">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.DeviceIO.DigitalInputConfigurationInputOptions.Any">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.DeviceIO.DigitalInputConfigurationInputOptions.AnyAttr">
            <remarks/>
        </member>
        <member name="T:StreamCoders.Onvif.DeviceIO.DigitalIdleState">
            <remarks/>
        </member>
        <member name="F:StreamCoders.Onvif.DeviceIO.DigitalIdleState.closed">
            <remarks/>
        </member>
        <member name="F:StreamCoders.Onvif.DeviceIO.DigitalIdleState.open">
            <remarks/>
        </member>
        <member name="T:StreamCoders.Onvif.DeviceIO.AudioOutputConfigurationOptions">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.DeviceIO.AudioOutputConfigurationOptions.OutputTokensAvailable">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.DeviceIO.AudioOutputConfigurationOptions.SendPrimacyOptions">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.DeviceIO.AudioOutputConfigurationOptions.OutputLevelRange">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.DeviceIO.AudioOutputConfigurationOptions.Any">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.DeviceIO.AudioOutputConfigurationOptions.AnyAttr">
            <remarks/>
        </member>
        <member name="T:StreamCoders.Onvif.DeviceIO.IntRange">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.DeviceIO.IntRange.Min">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.DeviceIO.IntRange.Max">
            <remarks/>
        </member>
        <member name="T:StreamCoders.Onvif.DeviceIO.AudioSourceOptionsExtension">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.DeviceIO.AudioSourceOptionsExtension.Any">
            <remarks/>
        </member>
        <member name="T:StreamCoders.Onvif.DeviceIO.AudioSourceConfigurationOptions">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.DeviceIO.AudioSourceConfigurationOptions.InputTokensAvailable">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.DeviceIO.AudioSourceConfigurationOptions.Extension">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.DeviceIO.AudioSourceConfigurationOptions.AnyAttr">
            <remarks/>
        </member>
        <member name="T:StreamCoders.Onvif.DeviceIO.VideoOutputConfigurationOptions">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.DeviceIO.VideoOutputConfigurationOptions.Any">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.DeviceIO.VideoOutputConfigurationOptions.AnyAttr">
            <remarks/>
        </member>
        <member name="T:StreamCoders.Onvif.DeviceIO.VideoSourceConfigurationOptionsExtension2">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.DeviceIO.VideoSourceConfigurationOptionsExtension2.SceneOrientationMode">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.DeviceIO.VideoSourceConfigurationOptionsExtension2.Any">
            <remarks/>
        </member>
        <member name="T:StreamCoders.Onvif.DeviceIO.SceneOrientationMode">
            <remarks/>
        </member>
        <member name="F:StreamCoders.Onvif.DeviceIO.SceneOrientationMode.MANUAL">
            <remarks/>
        </member>
        <member name="F:StreamCoders.Onvif.DeviceIO.SceneOrientationMode.AUTO">
            <remarks/>
        </member>
        <member name="T:StreamCoders.Onvif.DeviceIO.RotateOptionsExtension">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.DeviceIO.RotateOptionsExtension.Any">
            <remarks/>
        </member>
        <member name="T:StreamCoders.Onvif.DeviceIO.RotateOptions">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.DeviceIO.RotateOptions.Mode">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.DeviceIO.RotateOptions.DegreeList">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.DeviceIO.RotateOptions.Extension">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.DeviceIO.RotateOptions.AnyAttr">
            <remarks/>
        </member>
        <member name="T:StreamCoders.Onvif.DeviceIO.RotateMode">
            <remarks/>
        </member>
        <member name="F:StreamCoders.Onvif.DeviceIO.RotateMode.OFF">
            <remarks/>
        </member>
        <member name="F:StreamCoders.Onvif.DeviceIO.RotateMode.ON">
            <remarks/>
        </member>
        <member name="F:StreamCoders.Onvif.DeviceIO.RotateMode.AUTO">
            <remarks/>
        </member>
        <member name="T:StreamCoders.Onvif.DeviceIO.VideoSourceConfigurationOptionsExtension">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.DeviceIO.VideoSourceConfigurationOptionsExtension.Any">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.DeviceIO.VideoSourceConfigurationOptionsExtension.Rotate">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.DeviceIO.VideoSourceConfigurationOptionsExtension.Extension">
            <remarks/>
        </member>
        <member name="T:StreamCoders.Onvif.DeviceIO.IntRectangleRange">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.DeviceIO.IntRectangleRange.XRange">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.DeviceIO.IntRectangleRange.YRange">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.DeviceIO.IntRectangleRange.WidthRange">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.DeviceIO.IntRectangleRange.HeightRange">
            <remarks/>
        </member>
        <member name="T:StreamCoders.Onvif.DeviceIO.VideoSourceConfigurationOptions">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.DeviceIO.VideoSourceConfigurationOptions.BoundsRange">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.DeviceIO.VideoSourceConfigurationOptions.VideoSourceTokensAvailable">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.DeviceIO.VideoSourceConfigurationOptions.Extension">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.DeviceIO.VideoSourceConfigurationOptions.AnyAttr">
            <remarks/>
        </member>
        <member name="T:StreamCoders.Onvif.DeviceIO.MetadataInputExtension">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.DeviceIO.MetadataInputExtension.Any">
            <remarks/>
        </member>
        <member name="T:StreamCoders.Onvif.DeviceIO.MetadataInput">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.DeviceIO.MetadataInput.MetadataConfig">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.DeviceIO.MetadataInput.Extension">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.DeviceIO.MetadataInput.AnyAttr">
            <remarks/>
        </member>
        <member name="T:StreamCoders.Onvif.DeviceIO.Config">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.DeviceIO.Config.Parameters">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.DeviceIO.Config.Name">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.DeviceIO.Config.Type">
            <remarks/>
        </member>
        <member name="T:StreamCoders.Onvif.DeviceIO.ItemList">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.DeviceIO.ItemList.SimpleItem">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.DeviceIO.ItemList.ElementItem">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.DeviceIO.ItemList.Extension">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.DeviceIO.ItemList.AnyAttr">
            <remarks/>
        </member>
        <member name="T:StreamCoders.Onvif.DeviceIO.ItemListSimpleItem">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.DeviceIO.ItemListSimpleItem.Name">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.DeviceIO.ItemListSimpleItem.Value">
            <remarks/>
        </member>
        <member name="T:StreamCoders.Onvif.DeviceIO.ItemListElementItem">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.DeviceIO.ItemListElementItem.Any">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.DeviceIO.ItemListElementItem.Name">
            <remarks/>
        </member>
        <member name="T:StreamCoders.Onvif.DeviceIO.ItemListExtension">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.DeviceIO.ItemListExtension.Any">
            <remarks/>
        </member>
        <member name="T:StreamCoders.Onvif.DeviceIO.SourceIdentificationExtension">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.DeviceIO.SourceIdentificationExtension.Any">
            <remarks/>
        </member>
        <member name="T:StreamCoders.Onvif.DeviceIO.SourceIdentification">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.DeviceIO.SourceIdentification.Name">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.DeviceIO.SourceIdentification.Token">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.DeviceIO.SourceIdentification.Extension">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.DeviceIO.SourceIdentification.AnyAttr">
            <remarks/>
        </member>
        <member name="T:StreamCoders.Onvif.DeviceIO.AnalyticsDeviceEngineConfigurationExtension">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.DeviceIO.AnalyticsDeviceEngineConfigurationExtension.Any">
            <remarks/>
        </member>
        <member name="T:StreamCoders.Onvif.DeviceIO.AnalyticsEngineInputInfoExtension">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.DeviceIO.AnalyticsEngineInputInfoExtension.Any">
            <remarks/>
        </member>
        <member name="T:StreamCoders.Onvif.DeviceIO.AnalyticsEngineInputInfo">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.DeviceIO.AnalyticsEngineInputInfo.InputInfo">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.DeviceIO.AnalyticsEngineInputInfo.Extension">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.DeviceIO.AnalyticsEngineInputInfo.AnyAttr">
            <remarks/>
        </member>
        <member name="T:StreamCoders.Onvif.DeviceIO.EngineConfiguration">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.DeviceIO.EngineConfiguration.VideoAnalyticsConfiguration">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.DeviceIO.EngineConfiguration.AnalyticsEngineInputInfo">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.DeviceIO.EngineConfiguration.Any">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.DeviceIO.EngineConfiguration.AnyAttr">
            <remarks/>
        </member>
        <member name="T:StreamCoders.Onvif.DeviceIO.VideoAnalyticsConfiguration">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.DeviceIO.VideoAnalyticsConfiguration.AnalyticsEngineConfiguration">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.DeviceIO.VideoAnalyticsConfiguration.RuleEngineConfiguration">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.DeviceIO.VideoAnalyticsConfiguration.Any">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.DeviceIO.VideoAnalyticsConfiguration.AnyAttr">
            <remarks/>
        </member>
        <member name="T:StreamCoders.Onvif.DeviceIO.AnalyticsEngineConfiguration">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.DeviceIO.AnalyticsEngineConfiguration.AnalyticsModule">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.DeviceIO.AnalyticsEngineConfiguration.Extension">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.DeviceIO.AnalyticsEngineConfiguration.AnyAttr">
            <remarks/>
        </member>
        <member name="T:StreamCoders.Onvif.DeviceIO.AnalyticsEngineConfigurationExtension">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.DeviceIO.AnalyticsEngineConfigurationExtension.Any">
            <remarks/>
        </member>
        <member name="T:StreamCoders.Onvif.DeviceIO.RuleEngineConfiguration">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.DeviceIO.RuleEngineConfiguration.Rule">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.DeviceIO.RuleEngineConfiguration.Extension">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.DeviceIO.RuleEngineConfiguration.AnyAttr">
            <remarks/>
        </member>
        <member name="T:StreamCoders.Onvif.DeviceIO.RuleEngineConfigurationExtension">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.DeviceIO.RuleEngineConfigurationExtension.Any">
            <remarks/>
        </member>
        <member name="T:StreamCoders.Onvif.DeviceIO.ConfigurationEntity">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.DeviceIO.ConfigurationEntity.Name">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.DeviceIO.ConfigurationEntity.UseCount">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.DeviceIO.ConfigurationEntity.token">
            <remarks/>
        </member>
        <member name="T:StreamCoders.Onvif.DeviceIO.AnalyticsEngineControl">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.DeviceIO.AnalyticsEngineControl.EngineToken">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.DeviceIO.AnalyticsEngineControl.EngineConfigToken">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.DeviceIO.AnalyticsEngineControl.InputToken">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.DeviceIO.AnalyticsEngineControl.ReceiverToken">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.DeviceIO.AnalyticsEngineControl.Multicast">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.DeviceIO.AnalyticsEngineControl.Subscription">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.DeviceIO.AnalyticsEngineControl.Mode">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.DeviceIO.AnalyticsEngineControl.Any">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.DeviceIO.AnalyticsEngineControl.AnyAttr">
            <remarks/>
        </member>
        <member name="T:StreamCoders.Onvif.DeviceIO.MulticastConfiguration">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.DeviceIO.MulticastConfiguration.Address">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.DeviceIO.MulticastConfiguration.Port">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.DeviceIO.MulticastConfiguration.TTL">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.DeviceIO.MulticastConfiguration.AutoStart">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.DeviceIO.MulticastConfiguration.Any">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.DeviceIO.MulticastConfiguration.AnyAttr">
            <remarks/>
        </member>
        <member name="T:StreamCoders.Onvif.DeviceIO.IPAddress">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.DeviceIO.IPAddress.Type">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.DeviceIO.IPAddress.IPv4Address">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.DeviceIO.IPAddress.IPv6Address">
            <remarks/>
        </member>
        <member name="T:StreamCoders.Onvif.DeviceIO.IPType">
            <remarks/>
        </member>
        <member name="F:StreamCoders.Onvif.DeviceIO.IPType.IPv4">
            <remarks/>
        </member>
        <member name="F:StreamCoders.Onvif.DeviceIO.IPType.IPv6">
            <remarks/>
        </member>
        <member name="T:StreamCoders.Onvif.DeviceIO.ModeOfOperation">
            <remarks/>
        </member>
        <member name="F:StreamCoders.Onvif.DeviceIO.ModeOfOperation.Idle">
            <remarks/>
        </member>
        <member name="F:StreamCoders.Onvif.DeviceIO.ModeOfOperation.Active">
            <remarks/>
        </member>
        <member name="F:StreamCoders.Onvif.DeviceIO.ModeOfOperation.Unknown">
            <remarks/>
        </member>
        <member name="T:StreamCoders.Onvif.DeviceIO.AnalyticsEngineInput">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.DeviceIO.AnalyticsEngineInput.SourceIdentification">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.DeviceIO.AnalyticsEngineInput.VideoInput">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.DeviceIO.AnalyticsEngineInput.MetadataInput">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.DeviceIO.AnalyticsEngineInput.Any">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.DeviceIO.AnalyticsEngineInput.AnyAttr">
            <remarks/>
        </member>
        <member name="T:StreamCoders.Onvif.DeviceIO.VideoEncoderConfiguration">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.DeviceIO.VideoEncoderConfiguration.Encoding">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.DeviceIO.VideoEncoderConfiguration.Resolution">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.DeviceIO.VideoEncoderConfiguration.Quality">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.DeviceIO.VideoEncoderConfiguration.RateControl">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.DeviceIO.VideoEncoderConfiguration.MPEG4">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.DeviceIO.VideoEncoderConfiguration.H264">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.DeviceIO.VideoEncoderConfiguration.Multicast">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.DeviceIO.VideoEncoderConfiguration.SessionTimeout">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.DeviceIO.VideoEncoderConfiguration.Any">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.DeviceIO.VideoEncoderConfiguration.AnyAttr">
            <remarks/>
        </member>
        <member name="T:StreamCoders.Onvif.DeviceIO.VideoEncoding">
            <remarks/>
        </member>
        <member name="F:StreamCoders.Onvif.DeviceIO.VideoEncoding.JPEG">
            <remarks/>
        </member>
        <member name="F:StreamCoders.Onvif.DeviceIO.VideoEncoding.MPEG4">
            <remarks/>
        </member>
        <member name="F:StreamCoders.Onvif.DeviceIO.VideoEncoding.H264">
            <remarks/>
        </member>
        <member name="T:StreamCoders.Onvif.DeviceIO.VideoResolution">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.DeviceIO.VideoResolution.Width">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.DeviceIO.VideoResolution.Height">
            <remarks/>
        </member>
        <member name="T:StreamCoders.Onvif.DeviceIO.VideoRateControl">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.DeviceIO.VideoRateControl.FrameRateLimit">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.DeviceIO.VideoRateControl.EncodingInterval">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.DeviceIO.VideoRateControl.BitrateLimit">
            <remarks/>
        </member>
        <member name="T:StreamCoders.Onvif.DeviceIO.Mpeg4Configuration">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.DeviceIO.Mpeg4Configuration.GovLength">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.DeviceIO.Mpeg4Configuration.Mpeg4Profile">
            <remarks/>
        </member>
        <member name="T:StreamCoders.Onvif.DeviceIO.Mpeg4Profile">
            <remarks/>
        </member>
        <member name="F:StreamCoders.Onvif.DeviceIO.Mpeg4Profile.SP">
            <remarks/>
        </member>
        <member name="F:StreamCoders.Onvif.DeviceIO.Mpeg4Profile.ASP">
            <remarks/>
        </member>
        <member name="T:StreamCoders.Onvif.DeviceIO.H264Configuration">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.DeviceIO.H264Configuration.GovLength">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.DeviceIO.H264Configuration.H264Profile">
            <remarks/>
        </member>
        <member name="T:StreamCoders.Onvif.DeviceIO.H264Profile">
            <remarks/>
        </member>
        <member name="F:StreamCoders.Onvif.DeviceIO.H264Profile.Baseline">
            <remarks/>
        </member>
        <member name="F:StreamCoders.Onvif.DeviceIO.H264Profile.Main">
            <remarks/>
        </member>
        <member name="F:StreamCoders.Onvif.DeviceIO.H264Profile.Extended">
            <remarks/>
        </member>
        <member name="F:StreamCoders.Onvif.DeviceIO.H264Profile.High">
            <remarks/>
        </member>
        <member name="T:StreamCoders.Onvif.DeviceIO.AnalyticsEngine">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.DeviceIO.AnalyticsEngine.AnalyticsEngineConfiguration">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.DeviceIO.AnalyticsEngine.Any">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.DeviceIO.AnalyticsEngine.AnyAttr">
            <remarks/>
        </member>
        <member name="T:StreamCoders.Onvif.DeviceIO.AnalyticsDeviceEngineConfiguration">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.DeviceIO.AnalyticsDeviceEngineConfiguration.EngineConfiguration">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.DeviceIO.AnalyticsDeviceEngineConfiguration.Extension">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.DeviceIO.AnalyticsDeviceEngineConfiguration.AnyAttr">
            <remarks/>
        </member>
        <member name="T:StreamCoders.Onvif.DeviceIO.PTZConfiguration">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.DeviceIO.PTZConfiguration.NodeToken">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.DeviceIO.PTZConfiguration.DefaultAbsolutePantTiltPositionSpace">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.DeviceIO.PTZConfiguration.DefaultAbsoluteZoomPositionSpace">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.DeviceIO.PTZConfiguration.DefaultRelativePanTiltTranslationSpace">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.DeviceIO.PTZConfiguration.DefaultRelativeZoomTranslationSpace">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.DeviceIO.PTZConfiguration.DefaultContinuousPanTiltVelocitySpace">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.DeviceIO.PTZConfiguration.DefaultContinuousZoomVelocitySpace">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.DeviceIO.PTZConfiguration.DefaultPTZSpeed">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.DeviceIO.PTZConfiguration.DefaultPTZTimeout">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.DeviceIO.PTZConfiguration.PanTiltLimits">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.DeviceIO.PTZConfiguration.ZoomLimits">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.DeviceIO.PTZConfiguration.Extension">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.DeviceIO.PTZConfiguration.MoveRamp">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.DeviceIO.PTZConfiguration.MoveRampSpecified">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.DeviceIO.PTZConfiguration.PresetRamp">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.DeviceIO.PTZConfiguration.PresetRampSpecified">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.DeviceIO.PTZConfiguration.PresetTourRamp">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.DeviceIO.PTZConfiguration.PresetTourRampSpecified">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.DeviceIO.PTZConfiguration.AnyAttr">
            <remarks/>
        </member>
        <member name="T:StreamCoders.Onvif.DeviceIO.PTZSpeed">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.DeviceIO.PTZSpeed.PanTilt">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.DeviceIO.PTZSpeed.Zoom">
            <remarks/>
        </member>
        <member name="T:StreamCoders.Onvif.DeviceIO.Vector2D">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.DeviceIO.Vector2D.x">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.DeviceIO.Vector2D.y">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.DeviceIO.Vector2D.space">
            <remarks/>
        </member>
        <member name="T:StreamCoders.Onvif.DeviceIO.Vector1D">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.DeviceIO.Vector1D.x">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.DeviceIO.Vector1D.space">
            <remarks/>
        </member>
        <member name="T:StreamCoders.Onvif.DeviceIO.PanTiltLimits">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.DeviceIO.PanTiltLimits.Range">
            <remarks/>
        </member>
        <member name="T:StreamCoders.Onvif.DeviceIO.Space2DDescription">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.DeviceIO.Space2DDescription.URI">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.DeviceIO.Space2DDescription.XRange">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.DeviceIO.Space2DDescription.YRange">
            <remarks/>
        </member>
        <member name="T:StreamCoders.Onvif.DeviceIO.FloatRange">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.DeviceIO.FloatRange.Min">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.DeviceIO.FloatRange.Max">
            <remarks/>
        </member>
        <member name="T:StreamCoders.Onvif.DeviceIO.ZoomLimits">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.DeviceIO.ZoomLimits.Range">
            <remarks/>
        </member>
        <member name="T:StreamCoders.Onvif.DeviceIO.Space1DDescription">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.DeviceIO.Space1DDescription.URI">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.DeviceIO.Space1DDescription.XRange">
            <remarks/>
        </member>
        <member name="T:StreamCoders.Onvif.DeviceIO.PTZConfigurationExtension">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.DeviceIO.PTZConfigurationExtension.Any">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.DeviceIO.PTZConfigurationExtension.PTControlDirection">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.DeviceIO.PTZConfigurationExtension.Extension">
            <remarks/>
        </member>
        <member name="T:StreamCoders.Onvif.DeviceIO.PTControlDirection">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.DeviceIO.PTControlDirection.EFlip">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.DeviceIO.PTControlDirection.Reverse">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.DeviceIO.PTControlDirection.Extension">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.DeviceIO.PTControlDirection.AnyAttr">
            <remarks/>
        </member>
        <member name="T:StreamCoders.Onvif.DeviceIO.EFlip">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.DeviceIO.EFlip.Mode">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.DeviceIO.EFlip.Any">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.DeviceIO.EFlip.AnyAttr">
            <remarks/>
        </member>
        <member name="T:StreamCoders.Onvif.DeviceIO.EFlipMode">
            <remarks/>
        </member>
        <member name="F:StreamCoders.Onvif.DeviceIO.EFlipMode.OFF">
            <remarks/>
        </member>
        <member name="F:StreamCoders.Onvif.DeviceIO.EFlipMode.ON">
            <remarks/>
        </member>
        <member name="F:StreamCoders.Onvif.DeviceIO.EFlipMode.Extended">
            <remarks/>
        </member>
        <member name="T:StreamCoders.Onvif.DeviceIO.Reverse">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.DeviceIO.Reverse.Mode">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.DeviceIO.Reverse.Any">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.DeviceIO.Reverse.AnyAttr">
            <remarks/>
        </member>
        <member name="T:StreamCoders.Onvif.DeviceIO.ReverseMode">
            <remarks/>
        </member>
        <member name="F:StreamCoders.Onvif.DeviceIO.ReverseMode.OFF">
            <remarks/>
        </member>
        <member name="F:StreamCoders.Onvif.DeviceIO.ReverseMode.ON">
            <remarks/>
        </member>
        <member name="F:StreamCoders.Onvif.DeviceIO.ReverseMode.AUTO">
            <remarks/>
        </member>
        <member name="F:StreamCoders.Onvif.DeviceIO.ReverseMode.Extended">
            <remarks/>
        </member>
        <member name="T:StreamCoders.Onvif.DeviceIO.PTControlDirectionExtension">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.DeviceIO.PTControlDirectionExtension.Any">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.DeviceIO.PTControlDirectionExtension.AnyAttr">
            <remarks/>
        </member>
        <member name="T:StreamCoders.Onvif.DeviceIO.PTZConfigurationExtension2">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.DeviceIO.PTZConfigurationExtension2.Any">
            <remarks/>
        </member>
        <member name="T:StreamCoders.Onvif.DeviceIO.AudioDecoderConfiguration">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.DeviceIO.AudioDecoderConfiguration.Any">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.DeviceIO.AudioDecoderConfiguration.AnyAttr">
            <remarks/>
        </member>
        <member name="T:StreamCoders.Onvif.DeviceIO.AudioOutputConfiguration">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.DeviceIO.AudioOutputConfiguration.OutputToken">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.DeviceIO.AudioOutputConfiguration.SendPrimacy">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.DeviceIO.AudioOutputConfiguration.OutputLevel">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.DeviceIO.AudioOutputConfiguration.Any">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.DeviceIO.AudioOutputConfiguration.AnyAttr">
            <remarks/>
        </member>
        <member name="T:StreamCoders.Onvif.DeviceIO.VideoOutputConfiguration">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.DeviceIO.VideoOutputConfiguration.OutputToken">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.DeviceIO.VideoOutputConfiguration.Any">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.DeviceIO.VideoOutputConfiguration.AnyAttr">
            <remarks/>
        </member>
        <member name="T:StreamCoders.Onvif.DeviceIO.MetadataConfiguration">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.DeviceIO.MetadataConfiguration.PTZStatus">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.DeviceIO.MetadataConfiguration.Events">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.DeviceIO.MetadataConfiguration.Analytics">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.DeviceIO.MetadataConfiguration.AnalyticsSpecified">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.DeviceIO.MetadataConfiguration.Multicast">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.DeviceIO.MetadataConfiguration.SessionTimeout">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.DeviceIO.MetadataConfiguration.Any">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.DeviceIO.MetadataConfiguration.AnalyticsEngineConfiguration">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.DeviceIO.MetadataConfiguration.Extension">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.DeviceIO.MetadataConfiguration.CompressionType">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.DeviceIO.MetadataConfiguration.AnyAttr">
            <remarks/>
        </member>
        <member name="T:StreamCoders.Onvif.DeviceIO.PTZFilter">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.DeviceIO.PTZFilter.Status">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.DeviceIO.PTZFilter.Position">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.DeviceIO.PTZFilter.AnyAttr">
            <remarks/>
        </member>
        <member name="T:StreamCoders.Onvif.DeviceIO.EventSubscription">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.DeviceIO.EventSubscription.Filter">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.DeviceIO.EventSubscription.SubscriptionPolicy">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.DeviceIO.EventSubscription.Any">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.DeviceIO.EventSubscription.AnyAttr">
            <remarks/>
        </member>
        <member name="T:StreamCoders.Onvif.DeviceIO.FilterType">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.DeviceIO.FilterType.Any">
            <remarks/>
        </member>
        <member name="T:StreamCoders.Onvif.DeviceIO.EventFilter">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.DeviceIO.EventFilter.AnyAttr">
            <remarks/>
        </member>
        <member name="T:StreamCoders.Onvif.DeviceIO.EventSubscriptionSubscriptionPolicy">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.DeviceIO.EventSubscriptionSubscriptionPolicy.Any">
            <remarks/>
        </member>
        <member name="T:StreamCoders.Onvif.DeviceIO.MetadataConfigurationExtension">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.DeviceIO.MetadataConfigurationExtension.Any">
            <remarks/>
        </member>
        <member name="T:StreamCoders.Onvif.DeviceIO.AudioEncoder2Configuration">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.DeviceIO.AudioEncoder2Configuration.Encoding">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.DeviceIO.AudioEncoder2Configuration.Multicast">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.DeviceIO.AudioEncoder2Configuration.Bitrate">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.DeviceIO.AudioEncoder2Configuration.SampleRate">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.DeviceIO.AudioEncoder2Configuration.Any">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.DeviceIO.AudioEncoder2Configuration.AnyAttr">
            <remarks/>
        </member>
        <member name="T:StreamCoders.Onvif.DeviceIO.AudioEncoderConfiguration">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.DeviceIO.AudioEncoderConfiguration.Encoding">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.DeviceIO.AudioEncoderConfiguration.Bitrate">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.DeviceIO.AudioEncoderConfiguration.SampleRate">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.DeviceIO.AudioEncoderConfiguration.Multicast">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.DeviceIO.AudioEncoderConfiguration.SessionTimeout">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.DeviceIO.AudioEncoderConfiguration.Any">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.DeviceIO.AudioEncoderConfiguration.AnyAttr">
            <remarks/>
        </member>
        <member name="T:StreamCoders.Onvif.DeviceIO.AudioEncoding">
            <remarks/>
        </member>
        <member name="F:StreamCoders.Onvif.DeviceIO.AudioEncoding.G711">
            <remarks/>
        </member>
        <member name="F:StreamCoders.Onvif.DeviceIO.AudioEncoding.G726">
            <remarks/>
        </member>
        <member name="F:StreamCoders.Onvif.DeviceIO.AudioEncoding.AAC">
            <remarks/>
        </member>
        <member name="T:StreamCoders.Onvif.DeviceIO.AudioSourceConfiguration">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.DeviceIO.AudioSourceConfiguration.SourceToken">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.DeviceIO.AudioSourceConfiguration.Any">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.DeviceIO.AudioSourceConfiguration.AnyAttr">
            <remarks/>
        </member>
        <member name="T:StreamCoders.Onvif.DeviceIO.VideoEncoder2Configuration">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.DeviceIO.VideoEncoder2Configuration.Encoding">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.DeviceIO.VideoEncoder2Configuration.Resolution">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.DeviceIO.VideoEncoder2Configuration.RateControl">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.DeviceIO.VideoEncoder2Configuration.Multicast">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.DeviceIO.VideoEncoder2Configuration.Quality">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.DeviceIO.VideoEncoder2Configuration.Any">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.DeviceIO.VideoEncoder2Configuration.GovLength">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.DeviceIO.VideoEncoder2Configuration.GovLengthSpecified">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.DeviceIO.VideoEncoder2Configuration.Profile">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.DeviceIO.VideoEncoder2Configuration.AnyAttr">
            <remarks/>
        </member>
        <member name="T:StreamCoders.Onvif.DeviceIO.VideoResolution2">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.DeviceIO.VideoResolution2.Width">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.DeviceIO.VideoResolution2.Height">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.DeviceIO.VideoResolution2.Any">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.DeviceIO.VideoResolution2.AnyAttr">
            <remarks/>
        </member>
        <member name="T:StreamCoders.Onvif.DeviceIO.VideoRateControl2">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.DeviceIO.VideoRateControl2.FrameRateLimit">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.DeviceIO.VideoRateControl2.BitrateLimit">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.DeviceIO.VideoRateControl2.Any">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.DeviceIO.VideoRateControl2.ConstantBitRate">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.DeviceIO.VideoRateControl2.ConstantBitRateSpecified">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.DeviceIO.VideoRateControl2.AnyAttr">
            <remarks/>
        </member>
        <member name="T:StreamCoders.Onvif.DeviceIO.VideoSourceConfiguration">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.DeviceIO.VideoSourceConfiguration.SourceToken">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.DeviceIO.VideoSourceConfiguration.Bounds">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.DeviceIO.VideoSourceConfiguration.Any">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.DeviceIO.VideoSourceConfiguration.Extension">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.DeviceIO.VideoSourceConfiguration.AnyAttr">
            <remarks/>
        </member>
        <member name="T:StreamCoders.Onvif.DeviceIO.IntRectangle">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.DeviceIO.IntRectangle.x">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.DeviceIO.IntRectangle.y">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.DeviceIO.IntRectangle.width">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.DeviceIO.IntRectangle.height">
            <remarks/>
        </member>
        <member name="T:StreamCoders.Onvif.DeviceIO.VideoSourceConfigurationExtension">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.DeviceIO.VideoSourceConfigurationExtension.Rotate">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.DeviceIO.VideoSourceConfigurationExtension.Extension">
            <remarks/>
        </member>
        <member name="T:StreamCoders.Onvif.DeviceIO.Rotate">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.DeviceIO.Rotate.Mode">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.DeviceIO.Rotate.Degree">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.DeviceIO.Rotate.DegreeSpecified">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.DeviceIO.Rotate.Extension">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.DeviceIO.Rotate.AnyAttr">
            <remarks/>
        </member>
        <member name="T:StreamCoders.Onvif.DeviceIO.RotateExtension">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.DeviceIO.RotateExtension.Any">
            <remarks/>
        </member>
        <member name="T:StreamCoders.Onvif.DeviceIO.VideoSourceConfigurationExtension2">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.DeviceIO.VideoSourceConfigurationExtension2.LensDescription">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.DeviceIO.VideoSourceConfigurationExtension2.SceneOrientation">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.DeviceIO.VideoSourceConfigurationExtension2.Any">
            <remarks/>
        </member>
        <member name="T:StreamCoders.Onvif.DeviceIO.LensDescription">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.DeviceIO.LensDescription.Offset">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.DeviceIO.LensDescription.Projection">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.DeviceIO.LensDescription.XFactor">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.DeviceIO.LensDescription.Any">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.DeviceIO.LensDescription.FocalLength">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.DeviceIO.LensDescription.FocalLengthSpecified">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.DeviceIO.LensDescription.AnyAttr">
            <remarks/>
        </member>
        <member name="T:StreamCoders.Onvif.DeviceIO.LensOffset">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.DeviceIO.LensOffset.x">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.DeviceIO.LensOffset.xSpecified">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.DeviceIO.LensOffset.y">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.DeviceIO.LensOffset.ySpecified">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.DeviceIO.LensOffset.AnyAttr">
            <remarks/>
        </member>
        <member name="T:StreamCoders.Onvif.DeviceIO.LensProjection">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.DeviceIO.LensProjection.Angle">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.DeviceIO.LensProjection.Radius">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.DeviceIO.LensProjection.Transmittance">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.DeviceIO.LensProjection.TransmittanceSpecified">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.DeviceIO.LensProjection.Any">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.DeviceIO.LensProjection.AnyAttr">
            <remarks/>
        </member>
        <member name="T:StreamCoders.Onvif.DeviceIO.SceneOrientation">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.DeviceIO.SceneOrientation.Mode">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.DeviceIO.SceneOrientation.Orientation">
            <remarks/>
        </member>
        <member name="T:StreamCoders.Onvif.DeviceIO.RelayOutputOptionsExtension">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.DeviceIO.RelayOutputOptionsExtension.Any">
            <remarks/>
        </member>
        <member name="T:StreamCoders.Onvif.DeviceIO.RelayOutputOptions">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.DeviceIO.RelayOutputOptions.Mode">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.DeviceIO.RelayOutputOptions.DelayTimes">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.DeviceIO.RelayOutputOptions.Discrete">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.DeviceIO.RelayOutputOptions.DiscreteSpecified">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.DeviceIO.RelayOutputOptions.Extension">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.DeviceIO.RelayOutputOptions.token">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.DeviceIO.RelayOutputOptions.AnyAttr">
            <remarks/>
        </member>
        <member name="T:StreamCoders.Onvif.DeviceIO.RelayMode">
            <remarks/>
        </member>
        <member name="F:StreamCoders.Onvif.DeviceIO.RelayMode.Monostable">
            <remarks/>
        </member>
        <member name="F:StreamCoders.Onvif.DeviceIO.RelayMode.Bistable">
            <remarks/>
        </member>
        <member name="T:StreamCoders.Onvif.DeviceIO.Capabilities1">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.DeviceIO.Capabilities1.Any">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.DeviceIO.Capabilities1.VideoSources">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.DeviceIO.Capabilities1.VideoOutputs">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.DeviceIO.Capabilities1.AudioSources">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.DeviceIO.Capabilities1.AudioOutputs">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.DeviceIO.Capabilities1.RelayOutputs">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.DeviceIO.Capabilities1.SerialPorts">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.DeviceIO.Capabilities1.DigitalInputs">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.DeviceIO.Capabilities1.DigitalInputOptions">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.DeviceIO.Capabilities1.AnyAttr">
            <remarks/>
        </member>
        <member name="T:StreamCoders.Onvif.DeviceIO.LocalOrientation">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.DeviceIO.LocalOrientation.Any">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.DeviceIO.LocalOrientation.pan">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.DeviceIO.LocalOrientation.panSpecified">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.DeviceIO.LocalOrientation.tilt">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.DeviceIO.LocalOrientation.tiltSpecified">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.DeviceIO.LocalOrientation.roll">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.DeviceIO.LocalOrientation.rollSpecified">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.DeviceIO.LocalOrientation.AnyAttr">
            <remarks/>
        </member>
        <member name="T:StreamCoders.Onvif.DeviceIO.LocalLocation">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.DeviceIO.LocalLocation.Any">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.DeviceIO.LocalLocation.x">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.DeviceIO.LocalLocation.xSpecified">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.DeviceIO.LocalLocation.y">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.DeviceIO.LocalLocation.ySpecified">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.DeviceIO.LocalLocation.z">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.DeviceIO.LocalLocation.zSpecified">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.DeviceIO.LocalLocation.AnyAttr">
            <remarks/>
        </member>
        <member name="T:StreamCoders.Onvif.DeviceIO.GeoOrientation">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.DeviceIO.GeoOrientation.Any">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.DeviceIO.GeoOrientation.roll">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.DeviceIO.GeoOrientation.rollSpecified">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.DeviceIO.GeoOrientation.pitch">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.DeviceIO.GeoOrientation.pitchSpecified">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.DeviceIO.GeoOrientation.yaw">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.DeviceIO.GeoOrientation.yawSpecified">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.DeviceIO.GeoOrientation.AnyAttr">
            <remarks/>
        </member>
        <member name="T:StreamCoders.Onvif.DeviceIO.GeoLocation">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.DeviceIO.GeoLocation.Any">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.DeviceIO.GeoLocation.lon">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.DeviceIO.GeoLocation.lonSpecified">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.DeviceIO.GeoLocation.lat">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.DeviceIO.GeoLocation.latSpecified">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.DeviceIO.GeoLocation.elevation">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.DeviceIO.GeoLocation.elevationSpecified">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.DeviceIO.GeoLocation.AnyAttr">
            <remarks/>
        </member>
        <member name="T:StreamCoders.Onvif.DeviceIO.LocationEntity">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.DeviceIO.LocationEntity.GeoLocation">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.DeviceIO.LocationEntity.GeoOrientation">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.DeviceIO.LocationEntity.LocalLocation">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.DeviceIO.LocationEntity.LocalOrientation">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.DeviceIO.LocationEntity.Entity">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.DeviceIO.LocationEntity.Token">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.DeviceIO.LocationEntity.Fixed">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.DeviceIO.LocationEntity.FixedSpecified">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.DeviceIO.LocationEntity.GeoSource">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.DeviceIO.LocationEntity.AutoGeo">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.DeviceIO.LocationEntity.AutoGeoSpecified">
            <remarks/>
        </member>
        <member name="T:StreamCoders.Onvif.DeviceIO.SystemLogUri">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.DeviceIO.SystemLogUri.Type">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.DeviceIO.SystemLogUri.Uri">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.DeviceIO.SystemLogUri.Any">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.DeviceIO.SystemLogUri.AnyAttr">
            <remarks/>
        </member>
        <member name="T:StreamCoders.Onvif.DeviceIO.SystemLogType">
            <remarks/>
        </member>
        <member name="F:StreamCoders.Onvif.DeviceIO.SystemLogType.System">
            <remarks/>
        </member>
        <member name="F:StreamCoders.Onvif.DeviceIO.SystemLogType.Access">
            <remarks/>
        </member>
        <member name="T:StreamCoders.Onvif.DeviceIO.Dot11AvailableNetworksExtension">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.DeviceIO.Dot11AvailableNetworksExtension.Any">
            <remarks/>
        </member>
        <member name="T:StreamCoders.Onvif.DeviceIO.Dot11AvailableNetworks">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.DeviceIO.Dot11AvailableNetworks.SSID">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.DeviceIO.Dot11AvailableNetworks.BSSID">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.DeviceIO.Dot11AvailableNetworks.AuthAndMangementSuite">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.DeviceIO.Dot11AvailableNetworks.PairCipher">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.DeviceIO.Dot11AvailableNetworks.GroupCipher">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.DeviceIO.Dot11AvailableNetworks.SignalStrength">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.DeviceIO.Dot11AvailableNetworks.SignalStrengthSpecified">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.DeviceIO.Dot11AvailableNetworks.Extension">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.DeviceIO.Dot11AvailableNetworks.AnyAttr">
            <remarks/>
        </member>
        <member name="T:StreamCoders.Onvif.DeviceIO.Dot11AuthAndMangementSuite">
            <remarks/>
        </member>
        <member name="F:StreamCoders.Onvif.DeviceIO.Dot11AuthAndMangementSuite.None">
            <remarks/>
        </member>
        <member name="F:StreamCoders.Onvif.DeviceIO.Dot11AuthAndMangementSuite.Dot1X">
            <remarks/>
        </member>
        <member name="F:StreamCoders.Onvif.DeviceIO.Dot11AuthAndMangementSuite.PSK">
            <remarks/>
        </member>
        <member name="F:StreamCoders.Onvif.DeviceIO.Dot11AuthAndMangementSuite.Extended">
            <remarks/>
        </member>
        <member name="T:StreamCoders.Onvif.DeviceIO.Dot11Cipher">
            <remarks/>
        </member>
        <member name="F:StreamCoders.Onvif.DeviceIO.Dot11Cipher.CCMP">
            <remarks/>
        </member>
        <member name="F:StreamCoders.Onvif.DeviceIO.Dot11Cipher.TKIP">
            <remarks/>
        </member>
        <member name="F:StreamCoders.Onvif.DeviceIO.Dot11Cipher.Any">
            <remarks/>
        </member>
        <member name="F:StreamCoders.Onvif.DeviceIO.Dot11Cipher.Extended">
            <remarks/>
        </member>
        <member name="T:StreamCoders.Onvif.DeviceIO.Dot11SignalStrength">
            <remarks/>
        </member>
        <member name="F:StreamCoders.Onvif.DeviceIO.Dot11SignalStrength.None">
            <remarks/>
        </member>
        <member name="F:StreamCoders.Onvif.DeviceIO.Dot11SignalStrength.VeryBad">
            <remarks/>
        </member>
        <member name="F:StreamCoders.Onvif.DeviceIO.Dot11SignalStrength.Bad">
            <remarks/>
        </member>
        <member name="F:StreamCoders.Onvif.DeviceIO.Dot11SignalStrength.Good">
            <remarks/>
        </member>
        <member name="F:StreamCoders.Onvif.DeviceIO.Dot11SignalStrength.VeryGood">
            <remarks/>
        </member>
        <member name="F:StreamCoders.Onvif.DeviceIO.Dot11SignalStrength.Extended">
            <remarks/>
        </member>
        <member name="T:StreamCoders.Onvif.DeviceIO.Dot11Status">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.DeviceIO.Dot11Status.SSID">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.DeviceIO.Dot11Status.BSSID">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.DeviceIO.Dot11Status.PairCipher">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.DeviceIO.Dot11Status.PairCipherSpecified">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.DeviceIO.Dot11Status.GroupCipher">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.DeviceIO.Dot11Status.GroupCipherSpecified">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.DeviceIO.Dot11Status.SignalStrength">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.DeviceIO.Dot11Status.SignalStrengthSpecified">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.DeviceIO.Dot11Status.ActiveConfigAlias">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.DeviceIO.Dot11Status.Any">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.DeviceIO.Dot11Status.AnyAttr">
            <remarks/>
        </member>
        <member name="T:StreamCoders.Onvif.DeviceIO.Dot11Capabilities">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.DeviceIO.Dot11Capabilities.TKIP">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.DeviceIO.Dot11Capabilities.ScanAvailableNetworks">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.DeviceIO.Dot11Capabilities.MultipleConfiguration">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.DeviceIO.Dot11Capabilities.AdHocStationMode">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.DeviceIO.Dot11Capabilities.WEP">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.DeviceIO.Dot11Capabilities.Any">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.DeviceIO.Dot11Capabilities.AnyAttr">
            <remarks/>
        </member>
        <member name="T:StreamCoders.Onvif.DeviceIO.Dot1XConfigurationExtension">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.DeviceIO.Dot1XConfigurationExtension.Any">
            <remarks/>
        </member>
        <member name="T:StreamCoders.Onvif.DeviceIO.EapMethodExtension">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.DeviceIO.EapMethodExtension.Any">
            <remarks/>
        </member>
        <member name="T:StreamCoders.Onvif.DeviceIO.TLSConfiguration">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.DeviceIO.TLSConfiguration.CertificateID">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.DeviceIO.TLSConfiguration.Any">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.DeviceIO.TLSConfiguration.AnyAttr">
            <remarks/>
        </member>
        <member name="T:StreamCoders.Onvif.DeviceIO.EAPMethodConfiguration">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.DeviceIO.EAPMethodConfiguration.TLSConfiguration">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.DeviceIO.EAPMethodConfiguration.Password">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.DeviceIO.EAPMethodConfiguration.Extension">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.DeviceIO.EAPMethodConfiguration.AnyAttr">
            <remarks/>
        </member>
        <member name="T:StreamCoders.Onvif.DeviceIO.Dot1XConfiguration">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.DeviceIO.Dot1XConfiguration.Dot1XConfigurationToken">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.DeviceIO.Dot1XConfiguration.Identity">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.DeviceIO.Dot1XConfiguration.AnonymousID">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.DeviceIO.Dot1XConfiguration.EAPMethod">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.DeviceIO.Dot1XConfiguration.CACertificateID">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.DeviceIO.Dot1XConfiguration.EAPMethodConfiguration">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.DeviceIO.Dot1XConfiguration.Extension">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.DeviceIO.Dot1XConfiguration.AnyAttr">
            <remarks/>
        </member>
        <member name="T:StreamCoders.Onvif.DeviceIO.CertificateInformationExtension">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.DeviceIO.CertificateInformationExtension.Any">
            <remarks/>
        </member>
        <member name="T:StreamCoders.Onvif.DeviceIO.DateTimeRange">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.DeviceIO.DateTimeRange.From">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.DeviceIO.DateTimeRange.Until">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.DeviceIO.DateTimeRange.Any">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.DeviceIO.DateTimeRange.AnyAttr">
            <remarks/>
        </member>
        <member name="T:StreamCoders.Onvif.DeviceIO.CertificateUsage">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.DeviceIO.CertificateUsage.Critical">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.DeviceIO.CertificateUsage.Value">
            <remarks/>
        </member>
        <member name="T:StreamCoders.Onvif.DeviceIO.CertificateInformation">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.DeviceIO.CertificateInformation.CertificateID">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.DeviceIO.CertificateInformation.IssuerDN">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.DeviceIO.CertificateInformation.SubjectDN">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.DeviceIO.CertificateInformation.KeyUsage">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.DeviceIO.CertificateInformation.ExtendedKeyUsage">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.DeviceIO.CertificateInformation.KeyLength">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.DeviceIO.CertificateInformation.KeyLengthSpecified">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.DeviceIO.CertificateInformation.Version">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.DeviceIO.CertificateInformation.SerialNum">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.DeviceIO.CertificateInformation.SignatureAlgorithm">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.DeviceIO.CertificateInformation.Validity">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.DeviceIO.CertificateInformation.Extension">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.DeviceIO.CertificateInformation.AnyAttr">
            <remarks/>
        </member>
        <member name="T:StreamCoders.Onvif.DeviceIO.CertificateWithPrivateKey">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.DeviceIO.CertificateWithPrivateKey.CertificateID">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.DeviceIO.CertificateWithPrivateKey.Certificate">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.DeviceIO.CertificateWithPrivateKey.PrivateKey">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.DeviceIO.CertificateWithPrivateKey.Any">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.DeviceIO.CertificateWithPrivateKey.AnyAttr">
            <remarks/>
        </member>
        <member name="T:StreamCoders.Onvif.DeviceIO.BinaryData">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.DeviceIO.BinaryData.Data">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.DeviceIO.BinaryData.contentType">
            <remarks/>
        </member>
        <member name="T:StreamCoders.Onvif.DeviceIO.CertificateStatus">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.DeviceIO.CertificateStatus.CertificateID">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.DeviceIO.CertificateStatus.Status">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.DeviceIO.CertificateStatus.Any">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.DeviceIO.CertificateStatus.AnyAttr">
            <remarks/>
        </member>
        <member name="T:StreamCoders.Onvif.DeviceIO.Certificate">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.DeviceIO.Certificate.CertificateID">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.DeviceIO.Certificate.Certificate1">
            <remarks/>
        </member>
        <member name="T:StreamCoders.Onvif.DeviceIO.IPAddressFilterExtension">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.DeviceIO.IPAddressFilterExtension.Any">
            <remarks/>
        </member>
        <member name="T:StreamCoders.Onvif.DeviceIO.IPAddressFilter">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.DeviceIO.IPAddressFilter.Type">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.DeviceIO.IPAddressFilter.IPv4Address">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.DeviceIO.IPAddressFilter.IPv6Address">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.DeviceIO.IPAddressFilter.Extension">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.DeviceIO.IPAddressFilter.AnyAttr">
            <remarks/>
        </member>
        <member name="T:StreamCoders.Onvif.DeviceIO.IPAddressFilterType">
            <remarks/>
        </member>
        <member name="F:StreamCoders.Onvif.DeviceIO.IPAddressFilterType.Allow">
            <remarks/>
        </member>
        <member name="F:StreamCoders.Onvif.DeviceIO.IPAddressFilterType.Deny">
            <remarks/>
        </member>
        <member name="T:StreamCoders.Onvif.DeviceIO.PrefixedIPv4Address">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.DeviceIO.PrefixedIPv4Address.Address">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.DeviceIO.PrefixedIPv4Address.PrefixLength">
            <remarks/>
        </member>
        <member name="T:StreamCoders.Onvif.DeviceIO.PrefixedIPv6Address">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.DeviceIO.PrefixedIPv6Address.Address">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.DeviceIO.PrefixedIPv6Address.PrefixLength">
            <remarks/>
        </member>
        <member name="T:StreamCoders.Onvif.DeviceIO.NetworkZeroConfigurationExtension2">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.DeviceIO.NetworkZeroConfigurationExtension2.Any">
            <remarks/>
        </member>
        <member name="T:StreamCoders.Onvif.DeviceIO.NetworkZeroConfigurationExtension">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.DeviceIO.NetworkZeroConfigurationExtension.Any">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.DeviceIO.NetworkZeroConfigurationExtension.Additional">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.DeviceIO.NetworkZeroConfigurationExtension.Extension">
            <remarks/>
        </member>
        <member name="T:StreamCoders.Onvif.DeviceIO.NetworkZeroConfiguration">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.DeviceIO.NetworkZeroConfiguration.InterfaceToken">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.DeviceIO.NetworkZeroConfiguration.Enabled">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.DeviceIO.NetworkZeroConfiguration.Addresses">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.DeviceIO.NetworkZeroConfiguration.Extension">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.DeviceIO.NetworkZeroConfiguration.AnyAttr">
            <remarks/>
        </member>
        <member name="T:StreamCoders.Onvif.DeviceIO.NetworkGateway">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.DeviceIO.NetworkGateway.IPv4Address">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.DeviceIO.NetworkGateway.IPv6Address">
            <remarks/>
        </member>
        <member name="T:StreamCoders.Onvif.DeviceIO.NetworkProtocolExtension">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.DeviceIO.NetworkProtocolExtension.Any">
            <remarks/>
        </member>
        <member name="T:StreamCoders.Onvif.DeviceIO.NetworkProtocol">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.DeviceIO.NetworkProtocol.Name">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.DeviceIO.NetworkProtocol.Enabled">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.DeviceIO.NetworkProtocol.Port">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.DeviceIO.NetworkProtocol.Extension">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.DeviceIO.NetworkProtocol.AnyAttr">
            <remarks/>
        </member>
        <member name="T:StreamCoders.Onvif.DeviceIO.NetworkProtocolType">
            <remarks/>
        </member>
        <member name="F:StreamCoders.Onvif.DeviceIO.NetworkProtocolType.HTTP">
            <remarks/>
        </member>
        <member name="F:StreamCoders.Onvif.DeviceIO.NetworkProtocolType.HTTPS">
            <remarks/>
        </member>
        <member name="F:StreamCoders.Onvif.DeviceIO.NetworkProtocolType.RTSP">
            <remarks/>
        </member>
        <member name="T:StreamCoders.Onvif.DeviceIO.NetworkInterfaceSetConfigurationExtension2">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.DeviceIO.NetworkInterfaceSetConfigurationExtension2.Any">
            <remarks/>
        </member>
        <member name="T:StreamCoders.Onvif.DeviceIO.NetworkInterfaceSetConfigurationExtension">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.DeviceIO.NetworkInterfaceSetConfigurationExtension.Any">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.DeviceIO.NetworkInterfaceSetConfigurationExtension.Dot3">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.DeviceIO.NetworkInterfaceSetConfigurationExtension.Dot11">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.DeviceIO.NetworkInterfaceSetConfigurationExtension.Extension">
            <remarks/>
        </member>
        <member name="T:StreamCoders.Onvif.DeviceIO.Dot3Configuration">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.DeviceIO.Dot3Configuration.Any">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.DeviceIO.Dot3Configuration.AnyAttr">
            <remarks/>
        </member>
        <member name="T:StreamCoders.Onvif.DeviceIO.Dot11Configuration">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.DeviceIO.Dot11Configuration.SSID">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.DeviceIO.Dot11Configuration.Mode">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.DeviceIO.Dot11Configuration.Alias">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.DeviceIO.Dot11Configuration.Priority">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.DeviceIO.Dot11Configuration.Security">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.DeviceIO.Dot11Configuration.Any">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.DeviceIO.Dot11Configuration.AnyAttr">
            <remarks/>
        </member>
        <member name="T:StreamCoders.Onvif.DeviceIO.Dot11StationMode">
            <remarks/>
        </member>
        <member name="F:StreamCoders.Onvif.DeviceIO.Dot11StationMode.Adhoc">
            <remarks/>
        </member>
        <member name="F:StreamCoders.Onvif.DeviceIO.Dot11StationMode.Infrastructure">
            <remarks/>
        </member>
        <member name="F:StreamCoders.Onvif.DeviceIO.Dot11StationMode.Extended">
            <remarks/>
        </member>
        <member name="T:StreamCoders.Onvif.DeviceIO.Dot11SecurityConfiguration">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.DeviceIO.Dot11SecurityConfiguration.Mode">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.DeviceIO.Dot11SecurityConfiguration.Algorithm">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.DeviceIO.Dot11SecurityConfiguration.AlgorithmSpecified">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.DeviceIO.Dot11SecurityConfiguration.PSK">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.DeviceIO.Dot11SecurityConfiguration.Dot1X">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.DeviceIO.Dot11SecurityConfiguration.Extension">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.DeviceIO.Dot11SecurityConfiguration.AnyAttr">
            <remarks/>
        </member>
        <member name="T:StreamCoders.Onvif.DeviceIO.Dot11SecurityMode">
            <remarks/>
        </member>
        <member name="F:StreamCoders.Onvif.DeviceIO.Dot11SecurityMode.None">
            <remarks/>
        </member>
        <member name="F:StreamCoders.Onvif.DeviceIO.Dot11SecurityMode.WEP">
            <remarks/>
        </member>
        <member name="F:StreamCoders.Onvif.DeviceIO.Dot11SecurityMode.PSK">
            <remarks/>
        </member>
        <member name="F:StreamCoders.Onvif.DeviceIO.Dot11SecurityMode.Dot1X">
            <remarks/>
        </member>
        <member name="F:StreamCoders.Onvif.DeviceIO.Dot11SecurityMode.Extended">
            <remarks/>
        </member>
        <member name="T:StreamCoders.Onvif.DeviceIO.Dot11PSKSet">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.DeviceIO.Dot11PSKSet.Key">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.DeviceIO.Dot11PSKSet.Passphrase">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.DeviceIO.Dot11PSKSet.Extension">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.DeviceIO.Dot11PSKSet.AnyAttr">
            <remarks/>
        </member>
        <member name="T:StreamCoders.Onvif.DeviceIO.Dot11PSKSetExtension">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.DeviceIO.Dot11PSKSetExtension.Any">
            <remarks/>
        </member>
        <member name="T:StreamCoders.Onvif.DeviceIO.Dot11SecurityConfigurationExtension">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.DeviceIO.Dot11SecurityConfigurationExtension.Any">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.DeviceIO.Dot11SecurityConfigurationExtension.AnyAttr">
            <remarks/>
        </member>
        <member name="T:StreamCoders.Onvif.DeviceIO.IPv6NetworkInterfaceSetConfiguration">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.DeviceIO.IPv6NetworkInterfaceSetConfiguration.Enabled">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.DeviceIO.IPv6NetworkInterfaceSetConfiguration.EnabledSpecified">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.DeviceIO.IPv6NetworkInterfaceSetConfiguration.AcceptRouterAdvert">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.DeviceIO.IPv6NetworkInterfaceSetConfiguration.AcceptRouterAdvertSpecified">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.DeviceIO.IPv6NetworkInterfaceSetConfiguration.Manual">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.DeviceIO.IPv6NetworkInterfaceSetConfiguration.DHCP">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.DeviceIO.IPv6NetworkInterfaceSetConfiguration.DHCPSpecified">
            <remarks/>
        </member>
        <member name="T:StreamCoders.Onvif.DeviceIO.IPv6DHCPConfiguration">
            <remarks/>
        </member>
        <member name="F:StreamCoders.Onvif.DeviceIO.IPv6DHCPConfiguration.Auto">
            <remarks/>
        </member>
        <member name="F:StreamCoders.Onvif.DeviceIO.IPv6DHCPConfiguration.Stateful">
            <remarks/>
        </member>
        <member name="F:StreamCoders.Onvif.DeviceIO.IPv6DHCPConfiguration.Stateless">
            <remarks/>
        </member>
        <member name="F:StreamCoders.Onvif.DeviceIO.IPv6DHCPConfiguration.Off">
            <remarks/>
        </member>
        <member name="T:StreamCoders.Onvif.DeviceIO.IPv4NetworkInterfaceSetConfiguration">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.DeviceIO.IPv4NetworkInterfaceSetConfiguration.Enabled">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.DeviceIO.IPv4NetworkInterfaceSetConfiguration.EnabledSpecified">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.DeviceIO.IPv4NetworkInterfaceSetConfiguration.Manual">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.DeviceIO.IPv4NetworkInterfaceSetConfiguration.DHCP">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.DeviceIO.IPv4NetworkInterfaceSetConfiguration.DHCPSpecified">
            <remarks/>
        </member>
        <member name="T:StreamCoders.Onvif.DeviceIO.NetworkInterfaceSetConfiguration">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.DeviceIO.NetworkInterfaceSetConfiguration.Enabled">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.DeviceIO.NetworkInterfaceSetConfiguration.EnabledSpecified">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.DeviceIO.NetworkInterfaceSetConfiguration.Link">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.DeviceIO.NetworkInterfaceSetConfiguration.MTU">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.DeviceIO.NetworkInterfaceSetConfiguration.MTUSpecified">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.DeviceIO.NetworkInterfaceSetConfiguration.IPv4">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.DeviceIO.NetworkInterfaceSetConfiguration.IPv6">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.DeviceIO.NetworkInterfaceSetConfiguration.Extension">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.DeviceIO.NetworkInterfaceSetConfiguration.AnyAttr">
            <remarks/>
        </member>
        <member name="T:StreamCoders.Onvif.DeviceIO.NetworkInterfaceConnectionSetting">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.DeviceIO.NetworkInterfaceConnectionSetting.AutoNegotiation">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.DeviceIO.NetworkInterfaceConnectionSetting.Speed">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.DeviceIO.NetworkInterfaceConnectionSetting.Duplex">
            <remarks/>
        </member>
        <member name="T:StreamCoders.Onvif.DeviceIO.Duplex">
            <remarks/>
        </member>
        <member name="F:StreamCoders.Onvif.DeviceIO.Duplex.Full">
            <remarks/>
        </member>
        <member name="F:StreamCoders.Onvif.DeviceIO.Duplex.Half">
            <remarks/>
        </member>
        <member name="T:StreamCoders.Onvif.DeviceIO.OSDConfigurationExtension">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.DeviceIO.OSDConfigurationExtension.Any">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.DeviceIO.OSDConfigurationExtension.AnyAttr">
            <remarks/>
        </member>
        <member name="T:StreamCoders.Onvif.DeviceIO.OSDImgConfigurationExtension">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.DeviceIO.OSDImgConfigurationExtension.Any">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.DeviceIO.OSDImgConfigurationExtension.AnyAttr">
            <remarks/>
        </member>
        <member name="T:StreamCoders.Onvif.DeviceIO.OSDImgConfiguration">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.DeviceIO.OSDImgConfiguration.ImgPath">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.DeviceIO.OSDImgConfiguration.Extension">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.DeviceIO.OSDImgConfiguration.AnyAttr">
            <remarks/>
        </member>
        <member name="T:StreamCoders.Onvif.DeviceIO.OSDTextConfigurationExtension">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.DeviceIO.OSDTextConfigurationExtension.Any">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.DeviceIO.OSDTextConfigurationExtension.AnyAttr">
            <remarks/>
        </member>
        <member name="T:StreamCoders.Onvif.DeviceIO.Color">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.DeviceIO.Color.X">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.DeviceIO.Color.Y">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.DeviceIO.Color.Z">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.DeviceIO.Color.Colorspace">
            <remarks/>
        </member>
        <member name="T:StreamCoders.Onvif.DeviceIO.OSDColor">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.DeviceIO.OSDColor.Color">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.DeviceIO.OSDColor.Transparent">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.DeviceIO.OSDColor.TransparentSpecified">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.DeviceIO.OSDColor.AnyAttr">
            <remarks/>
        </member>
        <member name="T:StreamCoders.Onvif.DeviceIO.OSDTextConfiguration">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.DeviceIO.OSDTextConfiguration.Type">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.DeviceIO.OSDTextConfiguration.DateFormat">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.DeviceIO.OSDTextConfiguration.TimeFormat">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.DeviceIO.OSDTextConfiguration.FontSize">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.DeviceIO.OSDTextConfiguration.FontSizeSpecified">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.DeviceIO.OSDTextConfiguration.FontColor">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.DeviceIO.OSDTextConfiguration.BackgroundColor">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.DeviceIO.OSDTextConfiguration.PlainText">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.DeviceIO.OSDTextConfiguration.Extension">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.DeviceIO.OSDTextConfiguration.AnyAttr">
            <remarks/>
        </member>
        <member name="T:StreamCoders.Onvif.DeviceIO.OSDPosConfigurationExtension">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.DeviceIO.OSDPosConfigurationExtension.Any">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.DeviceIO.OSDPosConfigurationExtension.AnyAttr">
            <remarks/>
        </member>
        <member name="T:StreamCoders.Onvif.DeviceIO.Vector">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.DeviceIO.Vector.x">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.DeviceIO.Vector.xSpecified">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.DeviceIO.Vector.y">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.DeviceIO.Vector.ySpecified">
            <remarks/>
        </member>
        <member name="T:StreamCoders.Onvif.DeviceIO.OSDPosConfiguration">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.DeviceIO.OSDPosConfiguration.Type">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.DeviceIO.OSDPosConfiguration.Pos">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.DeviceIO.OSDPosConfiguration.Extension">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.DeviceIO.OSDPosConfiguration.AnyAttr">
            <remarks/>
        </member>
        <member name="T:StreamCoders.Onvif.DeviceIO.OSDReference">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.DeviceIO.OSDReference.AnyAttr">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.DeviceIO.OSDReference.Value">
            <remarks/>
        </member>
        <member name="T:StreamCoders.Onvif.DeviceIO.PTZNodeExtension2">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.DeviceIO.PTZNodeExtension2.Any">
            <remarks/>
        </member>
        <member name="T:StreamCoders.Onvif.DeviceIO.PTZPresetTourSupportedExtension">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.DeviceIO.PTZPresetTourSupportedExtension.Any">
            <remarks/>
        </member>
        <member name="T:StreamCoders.Onvif.DeviceIO.PTZPresetTourSupported">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.DeviceIO.PTZPresetTourSupported.MaximumNumberOfPresetTours">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.DeviceIO.PTZPresetTourSupported.PTZPresetTourOperation">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.DeviceIO.PTZPresetTourSupported.Extension">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.DeviceIO.PTZPresetTourSupported.AnyAttr">
            <remarks/>
        </member>
        <member name="T:StreamCoders.Onvif.DeviceIO.PTZPresetTourOperation">
            <remarks/>
        </member>
        <member name="F:StreamCoders.Onvif.DeviceIO.PTZPresetTourOperation.Start">
            <remarks/>
        </member>
        <member name="F:StreamCoders.Onvif.DeviceIO.PTZPresetTourOperation.Stop">
            <remarks/>
        </member>
        <member name="F:StreamCoders.Onvif.DeviceIO.PTZPresetTourOperation.Pause">
            <remarks/>
        </member>
        <member name="F:StreamCoders.Onvif.DeviceIO.PTZPresetTourOperation.Extended">
            <remarks/>
        </member>
        <member name="T:StreamCoders.Onvif.DeviceIO.PTZNodeExtension">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.DeviceIO.PTZNodeExtension.Any">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.DeviceIO.PTZNodeExtension.SupportedPresetTour">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.DeviceIO.PTZNodeExtension.Extension">
            <remarks/>
        </member>
        <member name="T:StreamCoders.Onvif.DeviceIO.PTZSpacesExtension">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.DeviceIO.PTZSpacesExtension.Any">
            <remarks/>
        </member>
        <member name="T:StreamCoders.Onvif.DeviceIO.PTZSpaces">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.DeviceIO.PTZSpaces.AbsolutePanTiltPositionSpace">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.DeviceIO.PTZSpaces.AbsoluteZoomPositionSpace">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.DeviceIO.PTZSpaces.RelativePanTiltTranslationSpace">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.DeviceIO.PTZSpaces.RelativeZoomTranslationSpace">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.DeviceIO.PTZSpaces.ContinuousPanTiltVelocitySpace">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.DeviceIO.PTZSpaces.ContinuousZoomVelocitySpace">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.DeviceIO.PTZSpaces.PanTiltSpeedSpace">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.DeviceIO.PTZSpaces.ZoomSpeedSpace">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.DeviceIO.PTZSpaces.Extension">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.DeviceIO.PTZSpaces.AnyAttr">
            <remarks/>
        </member>
        <member name="T:StreamCoders.Onvif.DeviceIO.RelayOutputSettings">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.DeviceIO.RelayOutputSettings.Mode">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.DeviceIO.RelayOutputSettings.DelayTime">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.DeviceIO.RelayOutputSettings.IdleState">
            <remarks/>
        </member>
        <member name="T:StreamCoders.Onvif.DeviceIO.RelayIdleState">
            <remarks/>
        </member>
        <member name="F:StreamCoders.Onvif.DeviceIO.RelayIdleState.closed">
            <remarks/>
        </member>
        <member name="F:StreamCoders.Onvif.DeviceIO.RelayIdleState.open">
            <remarks/>
        </member>
        <member name="T:StreamCoders.Onvif.DeviceIO.NetworkInterfaceExtension2">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.DeviceIO.NetworkInterfaceExtension2.Any">
            <remarks/>
        </member>
        <member name="T:StreamCoders.Onvif.DeviceIO.NetworkInterfaceExtension">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.DeviceIO.NetworkInterfaceExtension.Any">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.DeviceIO.NetworkInterfaceExtension.InterfaceType">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.DeviceIO.NetworkInterfaceExtension.Dot3">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.DeviceIO.NetworkInterfaceExtension.Dot11">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.DeviceIO.NetworkInterfaceExtension.Extension">
            <remarks/>
        </member>
        <member name="T:StreamCoders.Onvif.DeviceIO.IPv6ConfigurationExtension">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.DeviceIO.IPv6ConfigurationExtension.Any">
            <remarks/>
        </member>
        <member name="T:StreamCoders.Onvif.DeviceIO.IPv6Configuration">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.DeviceIO.IPv6Configuration.AcceptRouterAdvert">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.DeviceIO.IPv6Configuration.AcceptRouterAdvertSpecified">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.DeviceIO.IPv6Configuration.DHCP">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.DeviceIO.IPv6Configuration.Manual">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.DeviceIO.IPv6Configuration.LinkLocal">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.DeviceIO.IPv6Configuration.FromDHCP">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.DeviceIO.IPv6Configuration.FromRA">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.DeviceIO.IPv6Configuration.Extension">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.DeviceIO.IPv6Configuration.AnyAttr">
            <remarks/>
        </member>
        <member name="T:StreamCoders.Onvif.DeviceIO.IPv6NetworkInterface">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.DeviceIO.IPv6NetworkInterface.Enabled">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.DeviceIO.IPv6NetworkInterface.Config">
            <remarks/>
        </member>
        <member name="T:StreamCoders.Onvif.DeviceIO.IPv4Configuration">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.DeviceIO.IPv4Configuration.Manual">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.DeviceIO.IPv4Configuration.LinkLocal">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.DeviceIO.IPv4Configuration.FromDHCP">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.DeviceIO.IPv4Configuration.DHCP">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.DeviceIO.IPv4Configuration.Any">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.DeviceIO.IPv4Configuration.AnyAttr">
            <remarks/>
        </member>
        <member name="T:StreamCoders.Onvif.DeviceIO.IPv4NetworkInterface">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.DeviceIO.IPv4NetworkInterface.Enabled">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.DeviceIO.IPv4NetworkInterface.Config">
            <remarks/>
        </member>
        <member name="T:StreamCoders.Onvif.DeviceIO.NetworkInterfaceLink">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.DeviceIO.NetworkInterfaceLink.AdminSettings">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.DeviceIO.NetworkInterfaceLink.OperSettings">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.DeviceIO.NetworkInterfaceLink.InterfaceType">
            <remarks/>
        </member>
        <member name="T:StreamCoders.Onvif.DeviceIO.NetworkInterfaceInfo">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.DeviceIO.NetworkInterfaceInfo.Name">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.DeviceIO.NetworkInterfaceInfo.HwAddress">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.DeviceIO.NetworkInterfaceInfo.MTU">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.DeviceIO.NetworkInterfaceInfo.MTUSpecified">
            <remarks/>
        </member>
        <member name="T:StreamCoders.Onvif.DeviceIO.VideoOutputExtension">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.DeviceIO.VideoOutputExtension.Any">
            <remarks/>
        </member>
        <member name="T:StreamCoders.Onvif.DeviceIO.LayoutExtension">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.DeviceIO.LayoutExtension.Any">
            <remarks/>
        </member>
        <member name="T:StreamCoders.Onvif.DeviceIO.PaneLayout">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.DeviceIO.PaneLayout.Pane">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.DeviceIO.PaneLayout.Area">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.DeviceIO.PaneLayout.Any">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.DeviceIO.PaneLayout.AnyAttr">
            <remarks/>
        </member>
        <member name="T:StreamCoders.Onvif.DeviceIO.Rectangle">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.DeviceIO.Rectangle.bottom">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.DeviceIO.Rectangle.bottomSpecified">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.DeviceIO.Rectangle.top">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.DeviceIO.Rectangle.topSpecified">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.DeviceIO.Rectangle.right">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.DeviceIO.Rectangle.rightSpecified">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.DeviceIO.Rectangle.left">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.DeviceIO.Rectangle.leftSpecified">
            <remarks/>
        </member>
        <member name="T:StreamCoders.Onvif.DeviceIO.Layout">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.DeviceIO.Layout.PaneLayout">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.DeviceIO.Layout.Extension">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.DeviceIO.Layout.AnyAttr">
            <remarks/>
        </member>
        <member name="T:StreamCoders.Onvif.DeviceIO.VideoSourceExtension2">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.DeviceIO.VideoSourceExtension2.Any">
            <remarks/>
        </member>
        <member name="T:StreamCoders.Onvif.DeviceIO.ImagingSettingsExtension204">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.DeviceIO.ImagingSettingsExtension204.Any">
            <remarks/>
        </member>
        <member name="T:StreamCoders.Onvif.DeviceIO.NoiseReduction">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.DeviceIO.NoiseReduction.Level">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.DeviceIO.NoiseReduction.Any">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.DeviceIO.NoiseReduction.AnyAttr">
            <remarks/>
        </member>
        <member name="T:StreamCoders.Onvif.DeviceIO.DefoggingExtension">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.DeviceIO.DefoggingExtension.Any">
            <remarks/>
        </member>
        <member name="T:StreamCoders.Onvif.DeviceIO.Defogging">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.DeviceIO.Defogging.Mode">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.DeviceIO.Defogging.Level">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.DeviceIO.Defogging.LevelSpecified">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.DeviceIO.Defogging.Extension">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.DeviceIO.Defogging.AnyAttr">
            <remarks/>
        </member>
        <member name="T:StreamCoders.Onvif.DeviceIO.ToneCompensationExtension">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.DeviceIO.ToneCompensationExtension.Any">
            <remarks/>
        </member>
        <member name="T:StreamCoders.Onvif.DeviceIO.ToneCompensation">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.DeviceIO.ToneCompensation.Mode">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.DeviceIO.ToneCompensation.Level">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.DeviceIO.ToneCompensation.LevelSpecified">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.DeviceIO.ToneCompensation.Extension">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.DeviceIO.ToneCompensation.AnyAttr">
            <remarks/>
        </member>
        <member name="T:StreamCoders.Onvif.DeviceIO.ImagingSettingsExtension203">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.DeviceIO.ImagingSettingsExtension203.ToneCompensation">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.DeviceIO.ImagingSettingsExtension203.Defogging">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.DeviceIO.ImagingSettingsExtension203.NoiseReduction">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.DeviceIO.ImagingSettingsExtension203.Extension">
            <remarks/>
        </member>
        <member name="T:StreamCoders.Onvif.DeviceIO.IrCutFilterAutoAdjustmentExtension">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.DeviceIO.IrCutFilterAutoAdjustmentExtension.Any">
            <remarks/>
        </member>
        <member name="T:StreamCoders.Onvif.DeviceIO.IrCutFilterAutoAdjustment">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.DeviceIO.IrCutFilterAutoAdjustment.BoundaryType">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.DeviceIO.IrCutFilterAutoAdjustment.BoundaryOffset">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.DeviceIO.IrCutFilterAutoAdjustment.BoundaryOffsetSpecified">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.DeviceIO.IrCutFilterAutoAdjustment.ResponseTime">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.DeviceIO.IrCutFilterAutoAdjustment.Extension">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.DeviceIO.IrCutFilterAutoAdjustment.AnyAttr">
            <remarks/>
        </member>
        <member name="T:StreamCoders.Onvif.DeviceIO.ImagingSettingsExtension202">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.DeviceIO.ImagingSettingsExtension202.IrCutFilterAutoAdjustment">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.DeviceIO.ImagingSettingsExtension202.Extension">
            <remarks/>
        </member>
        <member name="T:StreamCoders.Onvif.DeviceIO.ImageStabilizationExtension">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.DeviceIO.ImageStabilizationExtension.Any">
            <remarks/>
        </member>
        <member name="T:StreamCoders.Onvif.DeviceIO.ImageStabilization">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.DeviceIO.ImageStabilization.Mode">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.DeviceIO.ImageStabilization.Level">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.DeviceIO.ImageStabilization.LevelSpecified">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.DeviceIO.ImageStabilization.Extension">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.DeviceIO.ImageStabilization.AnyAttr">
            <remarks/>
        </member>
        <member name="T:StreamCoders.Onvif.DeviceIO.ImageStabilizationMode">
            <remarks/>
        </member>
        <member name="F:StreamCoders.Onvif.DeviceIO.ImageStabilizationMode.OFF">
            <remarks/>
        </member>
        <member name="F:StreamCoders.Onvif.DeviceIO.ImageStabilizationMode.ON">
            <remarks/>
        </member>
        <member name="F:StreamCoders.Onvif.DeviceIO.ImageStabilizationMode.AUTO">
            <remarks/>
        </member>
        <member name="F:StreamCoders.Onvif.DeviceIO.ImageStabilizationMode.Extended">
            <remarks/>
        </member>
        <member name="T:StreamCoders.Onvif.DeviceIO.ImagingSettingsExtension20">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.DeviceIO.ImagingSettingsExtension20.Any">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.DeviceIO.ImagingSettingsExtension20.ImageStabilization">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.DeviceIO.ImagingSettingsExtension20.Extension">
            <remarks/>
        </member>
        <member name="T:StreamCoders.Onvif.DeviceIO.WhiteBalance20Extension">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.DeviceIO.WhiteBalance20Extension.Any">
            <remarks/>
        </member>
        <member name="T:StreamCoders.Onvif.DeviceIO.WhiteBalance20">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.DeviceIO.WhiteBalance20.Mode">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.DeviceIO.WhiteBalance20.CrGain">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.DeviceIO.WhiteBalance20.CrGainSpecified">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.DeviceIO.WhiteBalance20.CbGain">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.DeviceIO.WhiteBalance20.CbGainSpecified">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.DeviceIO.WhiteBalance20.Extension">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.DeviceIO.WhiteBalance20.AnyAttr">
            <remarks/>
        </member>
        <member name="T:StreamCoders.Onvif.DeviceIO.WhiteBalanceMode">
            <remarks/>
        </member>
        <member name="F:StreamCoders.Onvif.DeviceIO.WhiteBalanceMode.AUTO">
            <remarks/>
        </member>
        <member name="F:StreamCoders.Onvif.DeviceIO.WhiteBalanceMode.MANUAL">
            <remarks/>
        </member>
        <member name="T:StreamCoders.Onvif.DeviceIO.WideDynamicRange20">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.DeviceIO.WideDynamicRange20.Mode">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.DeviceIO.WideDynamicRange20.Level">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.DeviceIO.WideDynamicRange20.LevelSpecified">
            <remarks/>
        </member>
        <member name="T:StreamCoders.Onvif.DeviceIO.WideDynamicMode">
            <remarks/>
        </member>
        <member name="F:StreamCoders.Onvif.DeviceIO.WideDynamicMode.OFF">
            <remarks/>
        </member>
        <member name="F:StreamCoders.Onvif.DeviceIO.WideDynamicMode.ON">
            <remarks/>
        </member>
        <member name="T:StreamCoders.Onvif.DeviceIO.FocusConfiguration20Extension">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.DeviceIO.FocusConfiguration20Extension.Any">
            <remarks/>
        </member>
        <member name="T:StreamCoders.Onvif.DeviceIO.FocusConfiguration20">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.DeviceIO.FocusConfiguration20.AutoFocusMode">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.DeviceIO.FocusConfiguration20.DefaultSpeed">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.DeviceIO.FocusConfiguration20.DefaultSpeedSpecified">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.DeviceIO.FocusConfiguration20.NearLimit">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.DeviceIO.FocusConfiguration20.NearLimitSpecified">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.DeviceIO.FocusConfiguration20.FarLimit">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.DeviceIO.FocusConfiguration20.FarLimitSpecified">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.DeviceIO.FocusConfiguration20.Extension">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.DeviceIO.FocusConfiguration20.AnyAttr">
            <remarks/>
        </member>
        <member name="T:StreamCoders.Onvif.DeviceIO.AutoFocusMode">
            <remarks/>
        </member>
        <member name="F:StreamCoders.Onvif.DeviceIO.AutoFocusMode.AUTO">
            <remarks/>
        </member>
        <member name="F:StreamCoders.Onvif.DeviceIO.AutoFocusMode.MANUAL">
            <remarks/>
        </member>
        <member name="T:StreamCoders.Onvif.DeviceIO.Exposure20">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.DeviceIO.Exposure20.Mode">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.DeviceIO.Exposure20.Priority">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.DeviceIO.Exposure20.PrioritySpecified">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.DeviceIO.Exposure20.Window">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.DeviceIO.Exposure20.MinExposureTime">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.DeviceIO.Exposure20.MinExposureTimeSpecified">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.DeviceIO.Exposure20.MaxExposureTime">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.DeviceIO.Exposure20.MaxExposureTimeSpecified">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.DeviceIO.Exposure20.MinGain">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.DeviceIO.Exposure20.MinGainSpecified">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.DeviceIO.Exposure20.MaxGain">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.DeviceIO.Exposure20.MaxGainSpecified">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.DeviceIO.Exposure20.MinIris">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.DeviceIO.Exposure20.MinIrisSpecified">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.DeviceIO.Exposure20.MaxIris">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.DeviceIO.Exposure20.MaxIrisSpecified">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.DeviceIO.Exposure20.ExposureTime">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.DeviceIO.Exposure20.ExposureTimeSpecified">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.DeviceIO.Exposure20.Gain">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.DeviceIO.Exposure20.GainSpecified">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.DeviceIO.Exposure20.Iris">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.DeviceIO.Exposure20.IrisSpecified">
            <remarks/>
        </member>
        <member name="T:StreamCoders.Onvif.DeviceIO.ExposureMode">
            <remarks/>
        </member>
        <member name="F:StreamCoders.Onvif.DeviceIO.ExposureMode.AUTO">
            <remarks/>
        </member>
        <member name="F:StreamCoders.Onvif.DeviceIO.ExposureMode.MANUAL">
            <remarks/>
        </member>
        <member name="T:StreamCoders.Onvif.DeviceIO.ExposurePriority">
            <remarks/>
        </member>
        <member name="F:StreamCoders.Onvif.DeviceIO.ExposurePriority.LowNoise">
            <remarks/>
        </member>
        <member name="F:StreamCoders.Onvif.DeviceIO.ExposurePriority.FrameRate">
            <remarks/>
        </member>
        <member name="T:StreamCoders.Onvif.DeviceIO.BacklightCompensation20">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.DeviceIO.BacklightCompensation20.Mode">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.DeviceIO.BacklightCompensation20.Level">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.DeviceIO.BacklightCompensation20.LevelSpecified">
            <remarks/>
        </member>
        <member name="T:StreamCoders.Onvif.DeviceIO.BacklightCompensationMode">
            <remarks/>
        </member>
        <member name="F:StreamCoders.Onvif.DeviceIO.BacklightCompensationMode.OFF">
            <remarks/>
        </member>
        <member name="F:StreamCoders.Onvif.DeviceIO.BacklightCompensationMode.ON">
            <remarks/>
        </member>
        <member name="T:StreamCoders.Onvif.DeviceIO.ImagingSettings20">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.DeviceIO.ImagingSettings20.BacklightCompensation">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.DeviceIO.ImagingSettings20.Brightness">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.DeviceIO.ImagingSettings20.BrightnessSpecified">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.DeviceIO.ImagingSettings20.ColorSaturation">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.DeviceIO.ImagingSettings20.ColorSaturationSpecified">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.DeviceIO.ImagingSettings20.Contrast">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.DeviceIO.ImagingSettings20.ContrastSpecified">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.DeviceIO.ImagingSettings20.Exposure">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.DeviceIO.ImagingSettings20.Focus">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.DeviceIO.ImagingSettings20.IrCutFilter">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.DeviceIO.ImagingSettings20.IrCutFilterSpecified">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.DeviceIO.ImagingSettings20.Sharpness">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.DeviceIO.ImagingSettings20.SharpnessSpecified">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.DeviceIO.ImagingSettings20.WideDynamicRange">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.DeviceIO.ImagingSettings20.WhiteBalance">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.DeviceIO.ImagingSettings20.Extension">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.DeviceIO.ImagingSettings20.AnyAttr">
            <remarks/>
        </member>
        <member name="T:StreamCoders.Onvif.DeviceIO.IrCutFilterMode">
            <remarks/>
        </member>
        <member name="F:StreamCoders.Onvif.DeviceIO.IrCutFilterMode.ON">
            <remarks/>
        </member>
        <member name="F:StreamCoders.Onvif.DeviceIO.IrCutFilterMode.OFF">
            <remarks/>
        </member>
        <member name="F:StreamCoders.Onvif.DeviceIO.IrCutFilterMode.AUTO">
            <remarks/>
        </member>
        <member name="T:StreamCoders.Onvif.DeviceIO.VideoSourceExtension">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.DeviceIO.VideoSourceExtension.Any">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.DeviceIO.VideoSourceExtension.Imaging">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.DeviceIO.VideoSourceExtension.Extension">
            <remarks/>
        </member>
        <member name="T:StreamCoders.Onvif.DeviceIO.ImagingSettingsExtension">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.DeviceIO.ImagingSettingsExtension.Any">
            <remarks/>
        </member>
        <member name="T:StreamCoders.Onvif.DeviceIO.WhiteBalance">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.DeviceIO.WhiteBalance.Mode">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.DeviceIO.WhiteBalance.CrGain">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.DeviceIO.WhiteBalance.CbGain">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.DeviceIO.WhiteBalance.Any">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.DeviceIO.WhiteBalance.AnyAttr">
            <remarks/>
        </member>
        <member name="T:StreamCoders.Onvif.DeviceIO.WideDynamicRange">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.DeviceIO.WideDynamicRange.Mode">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.DeviceIO.WideDynamicRange.Level">
            <remarks/>
        </member>
        <member name="T:StreamCoders.Onvif.DeviceIO.FocusConfiguration">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.DeviceIO.FocusConfiguration.AutoFocusMode">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.DeviceIO.FocusConfiguration.DefaultSpeed">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.DeviceIO.FocusConfiguration.NearLimit">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.DeviceIO.FocusConfiguration.FarLimit">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.DeviceIO.FocusConfiguration.Any">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.DeviceIO.FocusConfiguration.AnyAttr">
            <remarks/>
        </member>
        <member name="T:StreamCoders.Onvif.DeviceIO.Exposure">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.DeviceIO.Exposure.Mode">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.DeviceIO.Exposure.Priority">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.DeviceIO.Exposure.Window">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.DeviceIO.Exposure.MinExposureTime">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.DeviceIO.Exposure.MaxExposureTime">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.DeviceIO.Exposure.MinGain">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.DeviceIO.Exposure.MaxGain">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.DeviceIO.Exposure.MinIris">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.DeviceIO.Exposure.MaxIris">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.DeviceIO.Exposure.ExposureTime">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.DeviceIO.Exposure.Gain">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.DeviceIO.Exposure.Iris">
            <remarks/>
        </member>
        <member name="T:StreamCoders.Onvif.DeviceIO.BacklightCompensation">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.DeviceIO.BacklightCompensation.Mode">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.DeviceIO.BacklightCompensation.Level">
            <remarks/>
        </member>
        <member name="T:StreamCoders.Onvif.DeviceIO.ImagingSettings">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.DeviceIO.ImagingSettings.BacklightCompensation">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.DeviceIO.ImagingSettings.Brightness">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.DeviceIO.ImagingSettings.BrightnessSpecified">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.DeviceIO.ImagingSettings.ColorSaturation">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.DeviceIO.ImagingSettings.ColorSaturationSpecified">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.DeviceIO.ImagingSettings.Contrast">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.DeviceIO.ImagingSettings.ContrastSpecified">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.DeviceIO.ImagingSettings.Exposure">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.DeviceIO.ImagingSettings.Focus">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.DeviceIO.ImagingSettings.IrCutFilter">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.DeviceIO.ImagingSettings.IrCutFilterSpecified">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.DeviceIO.ImagingSettings.Sharpness">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.DeviceIO.ImagingSettings.SharpnessSpecified">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.DeviceIO.ImagingSettings.WideDynamicRange">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.DeviceIO.ImagingSettings.WhiteBalance">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.DeviceIO.ImagingSettings.Extension">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.DeviceIO.ImagingSettings.AnyAttr">
            <remarks/>
        </member>
        <member name="T:StreamCoders.Onvif.DeviceIO.UserCredential">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.DeviceIO.UserCredential.UserName">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.DeviceIO.UserCredential.Password">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.DeviceIO.UserCredential.Extension">
            <remarks/>
        </member>
        <member name="T:StreamCoders.Onvif.DeviceIO.UserCredentialExtension">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.DeviceIO.UserCredentialExtension.Any">
            <remarks/>
        </member>
        <member name="T:StreamCoders.Onvif.DeviceIO.StorageConfigurationData">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.DeviceIO.StorageConfigurationData.LocalPath">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.DeviceIO.StorageConfigurationData.StorageUri">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.DeviceIO.StorageConfigurationData.User">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.DeviceIO.StorageConfigurationData.Extension">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.DeviceIO.StorageConfigurationData.type">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.DeviceIO.StorageConfigurationData.AnyAttr">
            <remarks/>
        </member>
        <member name="T:StreamCoders.Onvif.DeviceIO.StorageConfigurationDataExtension">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.DeviceIO.StorageConfigurationDataExtension.Any">
            <remarks/>
        </member>
        <member name="T:StreamCoders.Onvif.DeviceIO.DeviceEntity">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.DeviceIO.DeviceEntity.token">
            <remarks/>
        </member>
        <member name="T:StreamCoders.Onvif.DeviceIO.OSDConfiguration">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.DeviceIO.OSDConfiguration.VideoSourceConfigurationToken">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.DeviceIO.OSDConfiguration.Type">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.DeviceIO.OSDConfiguration.Position">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.DeviceIO.OSDConfiguration.TextString">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.DeviceIO.OSDConfiguration.Image">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.DeviceIO.OSDConfiguration.Extension">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.DeviceIO.OSDConfiguration.AnyAttr">
            <remarks/>
        </member>
        <member name="T:StreamCoders.Onvif.DeviceIO.OSDType">
            <remarks/>
        </member>
        <member name="F:StreamCoders.Onvif.DeviceIO.OSDType.Text">
            <remarks/>
        </member>
        <member name="F:StreamCoders.Onvif.DeviceIO.OSDType.Image">
            <remarks/>
        </member>
        <member name="F:StreamCoders.Onvif.DeviceIO.OSDType.Extended">
            <remarks/>
        </member>
        <member name="T:StreamCoders.Onvif.DeviceIO.PTZNode">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.DeviceIO.PTZNode.Name">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.DeviceIO.PTZNode.SupportedPTZSpaces">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.DeviceIO.PTZNode.MaximumNumberOfPresets">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.DeviceIO.PTZNode.HomeSupported">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.DeviceIO.PTZNode.AuxiliaryCommands">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.DeviceIO.PTZNode.Extension">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.DeviceIO.PTZNode.FixedHomePosition">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.DeviceIO.PTZNode.FixedHomePositionSpecified">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.DeviceIO.PTZNode.AnyAttr">
            <remarks/>
        </member>
        <member name="T:StreamCoders.Onvif.DeviceIO.DigitalInput">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.DeviceIO.DigitalInput.Any">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.DeviceIO.DigitalInput.IdleState">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.DeviceIO.DigitalInput.IdleStateSpecified">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.DeviceIO.DigitalInput.AnyAttr">
            <remarks/>
        </member>
        <member name="T:StreamCoders.Onvif.DeviceIO.RelayOutput">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.DeviceIO.RelayOutput.Properties">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.DeviceIO.RelayOutput.Any">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.DeviceIO.RelayOutput.AnyAttr">
            <remarks/>
        </member>
        <member name="T:StreamCoders.Onvif.DeviceIO.NetworkInterface">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.DeviceIO.NetworkInterface.Enabled">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.DeviceIO.NetworkInterface.Info">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.DeviceIO.NetworkInterface.Link">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.DeviceIO.NetworkInterface.IPv4">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.DeviceIO.NetworkInterface.IPv6">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.DeviceIO.NetworkInterface.Extension">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.DeviceIO.NetworkInterface.AnyAttr">
            <remarks/>
        </member>
        <member name="T:StreamCoders.Onvif.DeviceIO.AudioOutput">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.DeviceIO.AudioOutput.Any">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.DeviceIO.AudioOutput.AnyAttr">
            <remarks/>
        </member>
        <member name="T:StreamCoders.Onvif.DeviceIO.VideoOutput">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.DeviceIO.VideoOutput.Layout">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.DeviceIO.VideoOutput.Resolution">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.DeviceIO.VideoOutput.RefreshRate">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.DeviceIO.VideoOutput.RefreshRateSpecified">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.DeviceIO.VideoOutput.AspectRatio">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.DeviceIO.VideoOutput.AspectRatioSpecified">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.DeviceIO.VideoOutput.Extension">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.DeviceIO.VideoOutput.AnyAttr">
            <remarks/>
        </member>
        <member name="T:StreamCoders.Onvif.DeviceIO.AudioSource">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.DeviceIO.AudioSource.Channels">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.DeviceIO.AudioSource.Any">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.DeviceIO.AudioSource.AnyAttr">
            <remarks/>
        </member>
        <member name="T:StreamCoders.Onvif.DeviceIO.VideoSource">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.DeviceIO.VideoSource.Framerate">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.DeviceIO.VideoSource.Resolution">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.DeviceIO.VideoSource.Imaging">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.DeviceIO.VideoSource.Extension">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.DeviceIO.VideoSource.AnyAttr">
            <remarks/>
        </member>
        <member name="T:StreamCoders.Onvif.DeviceIO.SerialPort">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.DeviceIO.SerialPort.Any">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.DeviceIO.SerialPort.AnyAttr">
            <remarks/>
        </member>
        <member name="T:StreamCoders.Onvif.DeviceIO.StorageConfiguration">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.DeviceIO.StorageConfiguration.Data">
            <remarks/>
        </member>
        <member name="T:StreamCoders.Onvif.DeviceIO.DynamicDNSInformationExtension">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.DeviceIO.DynamicDNSInformationExtension.Any">
            <remarks/>
        </member>
        <member name="T:StreamCoders.Onvif.DeviceIO.DynamicDNSInformation">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.DeviceIO.DynamicDNSInformation.Type">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.DeviceIO.DynamicDNSInformation.Name">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.DeviceIO.DynamicDNSInformation.TTL">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.DeviceIO.DynamicDNSInformation.Extension">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.DeviceIO.DynamicDNSInformation.AnyAttr">
            <remarks/>
        </member>
        <member name="T:StreamCoders.Onvif.DeviceIO.DynamicDNSType">
            <remarks/>
        </member>
        <member name="F:StreamCoders.Onvif.DeviceIO.DynamicDNSType.NoUpdate">
            <remarks/>
        </member>
        <member name="F:StreamCoders.Onvif.DeviceIO.DynamicDNSType.ClientUpdates">
            <remarks/>
        </member>
        <member name="F:StreamCoders.Onvif.DeviceIO.DynamicDNSType.ServerUpdates">
            <remarks/>
        </member>
        <member name="T:StreamCoders.Onvif.DeviceIO.NTPInformationExtension">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.DeviceIO.NTPInformationExtension.Any">
            <remarks/>
        </member>
        <member name="T:StreamCoders.Onvif.DeviceIO.NTPInformation">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.DeviceIO.NTPInformation.FromDHCP">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.DeviceIO.NTPInformation.NTPFromDHCP">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.DeviceIO.NTPInformation.NTPManual">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.DeviceIO.NTPInformation.Extension">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.DeviceIO.NTPInformation.AnyAttr">
            <remarks/>
        </member>
        <member name="T:StreamCoders.Onvif.DeviceIO.NetworkHost">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.DeviceIO.NetworkHost.Type">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.DeviceIO.NetworkHost.IPv4Address">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.DeviceIO.NetworkHost.IPv6Address">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.DeviceIO.NetworkHost.DNSname">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.DeviceIO.NetworkHost.Extension">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.DeviceIO.NetworkHost.AnyAttr">
            <remarks/>
        </member>
        <member name="T:StreamCoders.Onvif.DeviceIO.NetworkHostType">
            <remarks/>
        </member>
        <member name="F:StreamCoders.Onvif.DeviceIO.NetworkHostType.IPv4">
            <remarks/>
        </member>
        <member name="F:StreamCoders.Onvif.DeviceIO.NetworkHostType.IPv6">
            <remarks/>
        </member>
        <member name="F:StreamCoders.Onvif.DeviceIO.NetworkHostType.DNS">
            <remarks/>
        </member>
        <member name="T:StreamCoders.Onvif.DeviceIO.NetworkHostExtension">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.DeviceIO.NetworkHostExtension.Any">
            <remarks/>
        </member>
        <member name="T:StreamCoders.Onvif.DeviceIO.DNSInformationExtension">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.DeviceIO.DNSInformationExtension.Any">
            <remarks/>
        </member>
        <member name="T:StreamCoders.Onvif.DeviceIO.DNSInformation">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.DeviceIO.DNSInformation.FromDHCP">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.DeviceIO.DNSInformation.SearchDomain">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.DeviceIO.DNSInformation.DNSFromDHCP">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.DeviceIO.DNSInformation.DNSManual">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.DeviceIO.DNSInformation.Extension">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.DeviceIO.DNSInformation.AnyAttr">
            <remarks/>
        </member>
        <member name="T:StreamCoders.Onvif.DeviceIO.HostnameInformationExtension">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.DeviceIO.HostnameInformationExtension.Any">
            <remarks/>
        </member>
        <member name="T:StreamCoders.Onvif.DeviceIO.HostnameInformation">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.DeviceIO.HostnameInformation.FromDHCP">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.DeviceIO.HostnameInformation.Name">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.DeviceIO.HostnameInformation.Extension">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.DeviceIO.HostnameInformation.AnyAttr">
            <remarks/>
        </member>
        <member name="T:StreamCoders.Onvif.DeviceIO.CapabilitiesExtension2">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.DeviceIO.CapabilitiesExtension2.Any">
            <remarks/>
        </member>
        <member name="T:StreamCoders.Onvif.DeviceIO.AnalyticsDeviceExtension">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.DeviceIO.AnalyticsDeviceExtension.Any">
            <remarks/>
        </member>
        <member name="T:StreamCoders.Onvif.DeviceIO.AnalyticsDeviceCapabilities">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.DeviceIO.AnalyticsDeviceCapabilities.XAddr">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.DeviceIO.AnalyticsDeviceCapabilities.RuleSupport">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.DeviceIO.AnalyticsDeviceCapabilities.RuleSupportSpecified">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.DeviceIO.AnalyticsDeviceCapabilities.Extension">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.DeviceIO.AnalyticsDeviceCapabilities.AnyAttr">
            <remarks/>
        </member>
        <member name="T:StreamCoders.Onvif.DeviceIO.ReceiverCapabilities">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.DeviceIO.ReceiverCapabilities.XAddr">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.DeviceIO.ReceiverCapabilities.RTP_Multicast">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.DeviceIO.ReceiverCapabilities.RTP_TCP">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.DeviceIO.ReceiverCapabilities.RTP_RTSP_TCP">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.DeviceIO.ReceiverCapabilities.SupportedReceivers">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.DeviceIO.ReceiverCapabilities.MaximumRTSPURILength">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.DeviceIO.ReceiverCapabilities.Any">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.DeviceIO.ReceiverCapabilities.AnyAttr">
            <remarks/>
        </member>
        <member name="T:StreamCoders.Onvif.DeviceIO.ReplayCapabilities">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.DeviceIO.ReplayCapabilities.XAddr">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.DeviceIO.ReplayCapabilities.Any">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.DeviceIO.ReplayCapabilities.AnyAttr">
            <remarks/>
        </member>
        <member name="T:StreamCoders.Onvif.DeviceIO.SearchCapabilities">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.DeviceIO.SearchCapabilities.XAddr">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.DeviceIO.SearchCapabilities.MetadataSearch">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.DeviceIO.SearchCapabilities.Any">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.DeviceIO.SearchCapabilities.AnyAttr">
            <remarks/>
        </member>
        <member name="T:StreamCoders.Onvif.DeviceIO.RecordingCapabilities">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.DeviceIO.RecordingCapabilities.XAddr">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.DeviceIO.RecordingCapabilities.ReceiverSource">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.DeviceIO.RecordingCapabilities.MediaProfileSource">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.DeviceIO.RecordingCapabilities.DynamicRecordings">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.DeviceIO.RecordingCapabilities.DynamicTracks">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.DeviceIO.RecordingCapabilities.MaxStringLength">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.DeviceIO.RecordingCapabilities.Any">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.DeviceIO.RecordingCapabilities.AnyAttr">
            <remarks/>
        </member>
        <member name="T:StreamCoders.Onvif.DeviceIO.DisplayCapabilities">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.DeviceIO.DisplayCapabilities.XAddr">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.DeviceIO.DisplayCapabilities.FixedLayout">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.DeviceIO.DisplayCapabilities.Any">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.DeviceIO.DisplayCapabilities.AnyAttr">
            <remarks/>
        </member>
        <member name="T:StreamCoders.Onvif.DeviceIO.DeviceIOCapabilities">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.DeviceIO.DeviceIOCapabilities.XAddr">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.DeviceIO.DeviceIOCapabilities.VideoSources">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.DeviceIO.DeviceIOCapabilities.VideoOutputs">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.DeviceIO.DeviceIOCapabilities.AudioSources">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.DeviceIO.DeviceIOCapabilities.AudioOutputs">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.DeviceIO.DeviceIOCapabilities.RelayOutputs">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.DeviceIO.DeviceIOCapabilities.Any">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.DeviceIO.DeviceIOCapabilities.AnyAttr">
            <remarks/>
        </member>
        <member name="T:StreamCoders.Onvif.DeviceIO.CapabilitiesExtension">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.DeviceIO.CapabilitiesExtension.Any">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.DeviceIO.CapabilitiesExtension.DeviceIO">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.DeviceIO.CapabilitiesExtension.Display">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.DeviceIO.CapabilitiesExtension.Recording">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.DeviceIO.CapabilitiesExtension.Search">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.DeviceIO.CapabilitiesExtension.Replay">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.DeviceIO.CapabilitiesExtension.Receiver">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.DeviceIO.CapabilitiesExtension.AnalyticsDevice">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.DeviceIO.CapabilitiesExtension.Extensions">
            <remarks/>
        </member>
        <member name="T:StreamCoders.Onvif.DeviceIO.PTZCapabilities">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.DeviceIO.PTZCapabilities.XAddr">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.DeviceIO.PTZCapabilities.Any">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.DeviceIO.PTZCapabilities.AnyAttr">
            <remarks/>
        </member>
        <member name="T:StreamCoders.Onvif.DeviceIO.ProfileCapabilities">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.DeviceIO.ProfileCapabilities.MaximumNumberOfProfiles">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.DeviceIO.ProfileCapabilities.Any">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.DeviceIO.ProfileCapabilities.AnyAttr">
            <remarks/>
        </member>
        <member name="T:StreamCoders.Onvif.DeviceIO.MediaCapabilitiesExtension">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.DeviceIO.MediaCapabilitiesExtension.ProfileCapabilities">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.DeviceIO.MediaCapabilitiesExtension.Any">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.DeviceIO.MediaCapabilitiesExtension.AnyAttr">
            <remarks/>
        </member>
        <member name="T:StreamCoders.Onvif.DeviceIO.RealTimeStreamingCapabilitiesExtension">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.DeviceIO.RealTimeStreamingCapabilitiesExtension.Any">
            <remarks/>
        </member>
        <member name="T:StreamCoders.Onvif.DeviceIO.RealTimeStreamingCapabilities">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.DeviceIO.RealTimeStreamingCapabilities.RTPMulticast">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.DeviceIO.RealTimeStreamingCapabilities.RTPMulticastSpecified">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.DeviceIO.RealTimeStreamingCapabilities.RTP_TCP">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.DeviceIO.RealTimeStreamingCapabilities.RTP_TCPSpecified">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.DeviceIO.RealTimeStreamingCapabilities.RTP_RTSP_TCP">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.DeviceIO.RealTimeStreamingCapabilities.RTP_RTSP_TCPSpecified">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.DeviceIO.RealTimeStreamingCapabilities.Extension">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.DeviceIO.RealTimeStreamingCapabilities.AnyAttr">
            <remarks/>
        </member>
        <member name="T:StreamCoders.Onvif.DeviceIO.MediaCapabilities">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.DeviceIO.MediaCapabilities.XAddr">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.DeviceIO.MediaCapabilities.StreamingCapabilities">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.DeviceIO.MediaCapabilities.Any">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.DeviceIO.MediaCapabilities.Extension">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.DeviceIO.MediaCapabilities.AnyAttr">
            <remarks/>
        </member>
        <member name="T:StreamCoders.Onvif.DeviceIO.ImagingCapabilities">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.DeviceIO.ImagingCapabilities.XAddr">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.DeviceIO.ImagingCapabilities.AnyAttr">
            <remarks/>
        </member>
        <member name="T:StreamCoders.Onvif.DeviceIO.EventCapabilities">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.DeviceIO.EventCapabilities.XAddr">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.DeviceIO.EventCapabilities.WSSubscriptionPolicySupport">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.DeviceIO.EventCapabilities.WSPullPointSupport">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.DeviceIO.EventCapabilities.WSPausableSubscriptionManagerInterfaceSupport">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.DeviceIO.EventCapabilities.Any">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.DeviceIO.EventCapabilities.AnyAttr">
            <remarks/>
        </member>
        <member name="T:StreamCoders.Onvif.DeviceIO.DeviceCapabilitiesExtension">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.DeviceIO.DeviceCapabilitiesExtension.Any">
            <remarks/>
        </member>
        <member name="T:StreamCoders.Onvif.DeviceIO.SecurityCapabilitiesExtension2">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.DeviceIO.SecurityCapabilitiesExtension2.Dot1X">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.DeviceIO.SecurityCapabilitiesExtension2.SupportedEAPMethod">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.DeviceIO.SecurityCapabilitiesExtension2.RemoteUserHandling">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.DeviceIO.SecurityCapabilitiesExtension2.Any">
            <remarks/>
        </member>
        <member name="T:StreamCoders.Onvif.DeviceIO.SecurityCapabilitiesExtension">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.DeviceIO.SecurityCapabilitiesExtension.TLS10">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.DeviceIO.SecurityCapabilitiesExtension.Extension">
            <remarks/>
        </member>
        <member name="T:StreamCoders.Onvif.DeviceIO.SecurityCapabilities1">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.DeviceIO.SecurityCapabilities1.TLS11">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.DeviceIO.SecurityCapabilities1.TLS12">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.DeviceIO.SecurityCapabilities1.OnboardKeyGeneration">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.DeviceIO.SecurityCapabilities1.AccessPolicyConfig">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.DeviceIO.SecurityCapabilities1.X509Token">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.DeviceIO.SecurityCapabilities1.SAMLToken">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.DeviceIO.SecurityCapabilities1.KerberosToken">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.DeviceIO.SecurityCapabilities1.RELToken">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.DeviceIO.SecurityCapabilities1.Any">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.DeviceIO.SecurityCapabilities1.Extension">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.DeviceIO.SecurityCapabilities1.AnyAttr">
            <remarks/>
        </member>
        <member name="T:StreamCoders.Onvif.DeviceIO.IOCapabilitiesExtension2">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.DeviceIO.IOCapabilitiesExtension2.Any">
            <remarks/>
        </member>
        <member name="T:StreamCoders.Onvif.DeviceIO.IOCapabilitiesExtension">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.DeviceIO.IOCapabilitiesExtension.Any">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.DeviceIO.IOCapabilitiesExtension.Auxiliary">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.DeviceIO.IOCapabilitiesExtension.AuxiliarySpecified">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.DeviceIO.IOCapabilitiesExtension.AuxiliaryCommands">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.DeviceIO.IOCapabilitiesExtension.Extension">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.DeviceIO.IOCapabilitiesExtension.AnyAttr">
            <remarks/>
        </member>
        <member name="T:StreamCoders.Onvif.DeviceIO.IOCapabilities">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.DeviceIO.IOCapabilities.InputConnectors">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.DeviceIO.IOCapabilities.InputConnectorsSpecified">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.DeviceIO.IOCapabilities.RelayOutputs">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.DeviceIO.IOCapabilities.RelayOutputsSpecified">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.DeviceIO.IOCapabilities.Extension">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.DeviceIO.IOCapabilities.AnyAttr">
            <remarks/>
        </member>
        <member name="T:StreamCoders.Onvif.DeviceIO.SystemCapabilitiesExtension2">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.DeviceIO.SystemCapabilitiesExtension2.Any">
            <remarks/>
        </member>
        <member name="T:StreamCoders.Onvif.DeviceIO.SystemCapabilitiesExtension">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.DeviceIO.SystemCapabilitiesExtension.Any">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.DeviceIO.SystemCapabilitiesExtension.HttpFirmwareUpgrade">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.DeviceIO.SystemCapabilitiesExtension.HttpFirmwareUpgradeSpecified">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.DeviceIO.SystemCapabilitiesExtension.HttpSystemBackup">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.DeviceIO.SystemCapabilitiesExtension.HttpSystemBackupSpecified">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.DeviceIO.SystemCapabilitiesExtension.HttpSystemLogging">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.DeviceIO.SystemCapabilitiesExtension.HttpSystemLoggingSpecified">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.DeviceIO.SystemCapabilitiesExtension.HttpSupportInformation">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.DeviceIO.SystemCapabilitiesExtension.HttpSupportInformationSpecified">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.DeviceIO.SystemCapabilitiesExtension.Extension">
            <remarks/>
        </member>
        <member name="T:StreamCoders.Onvif.DeviceIO.SystemCapabilities1">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.DeviceIO.SystemCapabilities1.DiscoveryResolve">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.DeviceIO.SystemCapabilities1.DiscoveryBye">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.DeviceIO.SystemCapabilities1.RemoteDiscovery">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.DeviceIO.SystemCapabilities1.SystemBackup">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.DeviceIO.SystemCapabilities1.SystemLogging">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.DeviceIO.SystemCapabilities1.FirmwareUpgrade">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.DeviceIO.SystemCapabilities1.SupportedVersions">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.DeviceIO.SystemCapabilities1.Extension">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.DeviceIO.SystemCapabilities1.AnyAttr">
            <remarks/>
        </member>
        <member name="T:StreamCoders.Onvif.DeviceIO.NetworkCapabilitiesExtension2">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.DeviceIO.NetworkCapabilitiesExtension2.Any">
            <remarks/>
        </member>
        <member name="T:StreamCoders.Onvif.DeviceIO.NetworkCapabilitiesExtension">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.DeviceIO.NetworkCapabilitiesExtension.Any">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.DeviceIO.NetworkCapabilitiesExtension.Dot11Configuration">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.DeviceIO.NetworkCapabilitiesExtension.Dot11ConfigurationSpecified">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.DeviceIO.NetworkCapabilitiesExtension.Extension">
            <remarks/>
        </member>
        <member name="T:StreamCoders.Onvif.DeviceIO.NetworkCapabilities1">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.DeviceIO.NetworkCapabilities1.IPFilter">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.DeviceIO.NetworkCapabilities1.IPFilterSpecified">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.DeviceIO.NetworkCapabilities1.ZeroConfiguration">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.DeviceIO.NetworkCapabilities1.ZeroConfigurationSpecified">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.DeviceIO.NetworkCapabilities1.IPVersion6">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.DeviceIO.NetworkCapabilities1.IPVersion6Specified">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.DeviceIO.NetworkCapabilities1.DynDNS">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.DeviceIO.NetworkCapabilities1.DynDNSSpecified">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.DeviceIO.NetworkCapabilities1.Extension">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.DeviceIO.NetworkCapabilities1.AnyAttr">
            <remarks/>
        </member>
        <member name="T:StreamCoders.Onvif.DeviceIO.DeviceCapabilities">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.DeviceIO.DeviceCapabilities.XAddr">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.DeviceIO.DeviceCapabilities.Network">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.DeviceIO.DeviceCapabilities.System">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.DeviceIO.DeviceCapabilities.IO">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.DeviceIO.DeviceCapabilities.Security">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.DeviceIO.DeviceCapabilities.Extension">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.DeviceIO.DeviceCapabilities.AnyAttr">
            <remarks/>
        </member>
        <member name="T:StreamCoders.Onvif.DeviceIO.AnalyticsCapabilities">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.DeviceIO.AnalyticsCapabilities.XAddr">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.DeviceIO.AnalyticsCapabilities.RuleSupport">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.DeviceIO.AnalyticsCapabilities.AnalyticsModuleSupport">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.DeviceIO.AnalyticsCapabilities.Any">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.DeviceIO.AnalyticsCapabilities.AnyAttr">
            <remarks/>
        </member>
        <member name="T:StreamCoders.Onvif.DeviceIO.Capabilities">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.DeviceIO.Capabilities.Analytics">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.DeviceIO.Capabilities.Device">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.DeviceIO.Capabilities.Events">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.DeviceIO.Capabilities.Imaging">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.DeviceIO.Capabilities.Media">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.DeviceIO.Capabilities.PTZ">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.DeviceIO.Capabilities.Extension">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.DeviceIO.Capabilities.AnyAttr">
            <remarks/>
        </member>
        <member name="T:StreamCoders.Onvif.DeviceIO.UserExtension">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.DeviceIO.UserExtension.Any">
            <remarks/>
        </member>
        <member name="T:StreamCoders.Onvif.DeviceIO.User">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.DeviceIO.User.Username">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.DeviceIO.User.Password">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.DeviceIO.User.UserLevel">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.DeviceIO.User.Extension">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.DeviceIO.User.AnyAttr">
            <remarks/>
        </member>
        <member name="T:StreamCoders.Onvif.DeviceIO.UserLevel">
            <remarks/>
        </member>
        <member name="F:StreamCoders.Onvif.DeviceIO.UserLevel.Administrator">
            <remarks/>
        </member>
        <member name="F:StreamCoders.Onvif.DeviceIO.UserLevel.Operator">
            <remarks/>
        </member>
        <member name="F:StreamCoders.Onvif.DeviceIO.UserLevel.User">
            <remarks/>
        </member>
        <member name="F:StreamCoders.Onvif.DeviceIO.UserLevel.Anonymous">
            <remarks/>
        </member>
        <member name="F:StreamCoders.Onvif.DeviceIO.UserLevel.Extended">
            <remarks/>
        </member>
        <member name="T:StreamCoders.Onvif.DeviceIO.RemoteUser">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.DeviceIO.RemoteUser.Username">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.DeviceIO.RemoteUser.Password">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.DeviceIO.RemoteUser.UseDerivedPassword">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.DeviceIO.RemoteUser.Any">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.DeviceIO.RemoteUser.AnyAttr">
            <remarks/>
        </member>
        <member name="T:StreamCoders.Onvif.DeviceIO.Scope">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.DeviceIO.Scope.ScopeDef">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.DeviceIO.Scope.ScopeItem">
            <remarks/>
        </member>
        <member name="T:StreamCoders.Onvif.DeviceIO.ScopeDefinition">
            <remarks/>
        </member>
        <member name="F:StreamCoders.Onvif.DeviceIO.ScopeDefinition.Fixed">
            <remarks/>
        </member>
        <member name="F:StreamCoders.Onvif.DeviceIO.ScopeDefinition.Configurable">
            <remarks/>
        </member>
        <member name="T:StreamCoders.Onvif.DeviceIO.SupportInformation">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.DeviceIO.SupportInformation.Binary">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.DeviceIO.SupportInformation.String">
            <remarks/>
        </member>
        <member name="T:StreamCoders.Onvif.DeviceIO.AttachmentData">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.DeviceIO.AttachmentData.Include">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.DeviceIO.AttachmentData.contentType">
            <remarks/>
        </member>
        <member name="T:StreamCoders.Onvif.DeviceIO.Include">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.DeviceIO.Include.Any">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.DeviceIO.Include.href">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.DeviceIO.Include.AnyAttr">
            <remarks/>
        </member>
        <member name="T:StreamCoders.Onvif.DeviceIO.SystemLog">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.DeviceIO.SystemLog.Binary">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.DeviceIO.SystemLog.String">
            <remarks/>
        </member>
        <member name="T:StreamCoders.Onvif.DeviceIO.BackupFile">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.DeviceIO.BackupFile.Name">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.DeviceIO.BackupFile.Data">
            <remarks/>
        </member>
        <member name="T:StreamCoders.Onvif.DeviceIO.SystemDateTimeExtension">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.DeviceIO.SystemDateTimeExtension.Any">
            <remarks/>
        </member>
        <member name="T:StreamCoders.Onvif.DeviceIO.SystemDateTime">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.DeviceIO.SystemDateTime.DateTimeType">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.DeviceIO.SystemDateTime.DaylightSavings">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.DeviceIO.SystemDateTime.TimeZone">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.DeviceIO.SystemDateTime.UTCDateTime">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.DeviceIO.SystemDateTime.LocalDateTime">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.DeviceIO.SystemDateTime.Extension">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.DeviceIO.SystemDateTime.AnyAttr">
            <remarks/>
        </member>
        <member name="T:StreamCoders.Onvif.DeviceIO.SetDateTimeType">
            <remarks/>
        </member>
        <member name="F:StreamCoders.Onvif.DeviceIO.SetDateTimeType.Manual">
            <remarks/>
        </member>
        <member name="F:StreamCoders.Onvif.DeviceIO.SetDateTimeType.NTP">
            <remarks/>
        </member>
        <member name="T:StreamCoders.Onvif.DeviceIO.TimeZone">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.DeviceIO.TimeZone.TZ">
            <remarks/>
        </member>
        <member name="T:StreamCoders.Onvif.DeviceIO.DateTime">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.DeviceIO.DateTime.Time">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.DeviceIO.DateTime.Date">
            <remarks/>
        </member>
        <member name="T:StreamCoders.Onvif.DeviceIO.Time">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.DeviceIO.Time.Hour">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.DeviceIO.Time.Minute">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.DeviceIO.Time.Second">
            <remarks/>
        </member>
        <member name="T:StreamCoders.Onvif.DeviceIO.Date">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.DeviceIO.Date.Year">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.DeviceIO.Date.Month">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.DeviceIO.Date.Day">
            <remarks/>
        </member>
        <member name="T:StreamCoders.Onvif.DeviceIO.MiscCapabilities">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.DeviceIO.MiscCapabilities.AuxiliaryCommands">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.DeviceIO.MiscCapabilities.AnyAttr">
            <remarks/>
        </member>
        <member name="T:StreamCoders.Onvif.DeviceIO.SystemCapabilities">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.DeviceIO.SystemCapabilities.DiscoveryResolve">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.DeviceIO.SystemCapabilities.DiscoveryResolveSpecified">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.DeviceIO.SystemCapabilities.DiscoveryBye">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.DeviceIO.SystemCapabilities.DiscoveryByeSpecified">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.DeviceIO.SystemCapabilities.RemoteDiscovery">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.DeviceIO.SystemCapabilities.RemoteDiscoverySpecified">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.DeviceIO.SystemCapabilities.SystemBackup">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.DeviceIO.SystemCapabilities.SystemBackupSpecified">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.DeviceIO.SystemCapabilities.SystemLogging">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.DeviceIO.SystemCapabilities.SystemLoggingSpecified">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.DeviceIO.SystemCapabilities.FirmwareUpgrade">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.DeviceIO.SystemCapabilities.FirmwareUpgradeSpecified">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.DeviceIO.SystemCapabilities.HttpFirmwareUpgrade">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.DeviceIO.SystemCapabilities.HttpFirmwareUpgradeSpecified">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.DeviceIO.SystemCapabilities.HttpSystemBackup">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.DeviceIO.SystemCapabilities.HttpSystemBackupSpecified">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.DeviceIO.SystemCapabilities.HttpSystemLogging">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.DeviceIO.SystemCapabilities.HttpSystemLoggingSpecified">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.DeviceIO.SystemCapabilities.HttpSupportInformation">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.DeviceIO.SystemCapabilities.HttpSupportInformationSpecified">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.DeviceIO.SystemCapabilities.StorageConfiguration">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.DeviceIO.SystemCapabilities.StorageConfigurationSpecified">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.DeviceIO.SystemCapabilities.MaxStorageConfigurations">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.DeviceIO.SystemCapabilities.MaxStorageConfigurationsSpecified">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.DeviceIO.SystemCapabilities.GeoLocationEntries">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.DeviceIO.SystemCapabilities.GeoLocationEntriesSpecified">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.DeviceIO.SystemCapabilities.AutoGeo">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.DeviceIO.SystemCapabilities.AnyAttr">
            <remarks/>
        </member>
        <member name="T:StreamCoders.Onvif.DeviceIO.SecurityCapabilities">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.DeviceIO.SecurityCapabilities.TLS10">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.DeviceIO.SecurityCapabilities.TLS10Specified">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.DeviceIO.SecurityCapabilities.TLS11">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.DeviceIO.SecurityCapabilities.TLS11Specified">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.DeviceIO.SecurityCapabilities.TLS12">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.DeviceIO.SecurityCapabilities.TLS12Specified">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.DeviceIO.SecurityCapabilities.OnboardKeyGeneration">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.DeviceIO.SecurityCapabilities.OnboardKeyGenerationSpecified">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.DeviceIO.SecurityCapabilities.AccessPolicyConfig">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.DeviceIO.SecurityCapabilities.AccessPolicyConfigSpecified">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.DeviceIO.SecurityCapabilities.DefaultAccessPolicy">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.DeviceIO.SecurityCapabilities.DefaultAccessPolicySpecified">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.DeviceIO.SecurityCapabilities.Dot1X">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.DeviceIO.SecurityCapabilities.Dot1XSpecified">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.DeviceIO.SecurityCapabilities.RemoteUserHandling">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.DeviceIO.SecurityCapabilities.RemoteUserHandlingSpecified">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.DeviceIO.SecurityCapabilities.X509Token">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.DeviceIO.SecurityCapabilities.X509TokenSpecified">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.DeviceIO.SecurityCapabilities.SAMLToken">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.DeviceIO.SecurityCapabilities.SAMLTokenSpecified">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.DeviceIO.SecurityCapabilities.KerberosToken">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.DeviceIO.SecurityCapabilities.KerberosTokenSpecified">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.DeviceIO.SecurityCapabilities.UsernameToken">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.DeviceIO.SecurityCapabilities.UsernameTokenSpecified">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.DeviceIO.SecurityCapabilities.HttpDigest">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.DeviceIO.SecurityCapabilities.HttpDigestSpecified">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.DeviceIO.SecurityCapabilities.RELToken">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.DeviceIO.SecurityCapabilities.RELTokenSpecified">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.DeviceIO.SecurityCapabilities.SupportedEAPMethods">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.DeviceIO.SecurityCapabilities.MaxUsers">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.DeviceIO.SecurityCapabilities.MaxUsersSpecified">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.DeviceIO.SecurityCapabilities.MaxUserNameLength">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.DeviceIO.SecurityCapabilities.MaxUserNameLengthSpecified">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.DeviceIO.SecurityCapabilities.MaxPasswordLength">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.DeviceIO.SecurityCapabilities.MaxPasswordLengthSpecified">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.DeviceIO.SecurityCapabilities.AnyAttr">
            <remarks/>
        </member>
        <member name="T:StreamCoders.Onvif.DeviceIO.NetworkCapabilities">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.DeviceIO.NetworkCapabilities.IPFilter">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.DeviceIO.NetworkCapabilities.IPFilterSpecified">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.DeviceIO.NetworkCapabilities.ZeroConfiguration">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.DeviceIO.NetworkCapabilities.ZeroConfigurationSpecified">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.DeviceIO.NetworkCapabilities.IPVersion6">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.DeviceIO.NetworkCapabilities.IPVersion6Specified">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.DeviceIO.NetworkCapabilities.DynDNS">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.DeviceIO.NetworkCapabilities.DynDNSSpecified">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.DeviceIO.NetworkCapabilities.Dot11Configuration">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.DeviceIO.NetworkCapabilities.Dot11ConfigurationSpecified">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.DeviceIO.NetworkCapabilities.Dot1XConfigurations">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.DeviceIO.NetworkCapabilities.Dot1XConfigurationsSpecified">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.DeviceIO.NetworkCapabilities.HostnameFromDHCP">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.DeviceIO.NetworkCapabilities.HostnameFromDHCPSpecified">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.DeviceIO.NetworkCapabilities.NTP">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.DeviceIO.NetworkCapabilities.NTPSpecified">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.DeviceIO.NetworkCapabilities.DHCPv6">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.DeviceIO.NetworkCapabilities.DHCPv6Specified">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.DeviceIO.NetworkCapabilities.AnyAttr">
            <remarks/>
        </member>
        <member name="T:StreamCoders.Onvif.DeviceIO.DeviceServiceCapabilities">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.DeviceIO.DeviceServiceCapabilities.Network">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.DeviceIO.DeviceServiceCapabilities.Security">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.DeviceIO.DeviceServiceCapabilities.System">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.DeviceIO.DeviceServiceCapabilities.Misc">
            <remarks/>
        </member>
        <member name="T:StreamCoders.Onvif.DeviceIO.FactoryDefaultType">
            <remarks/>
        </member>
        <member name="F:StreamCoders.Onvif.DeviceIO.FactoryDefaultType.Hard">
            <remarks/>
        </member>
        <member name="F:StreamCoders.Onvif.DeviceIO.FactoryDefaultType.Soft">
            <remarks/>
        </member>
        <member name="T:StreamCoders.Onvif.DeviceIO.DiscoveryMode">
            <remarks/>
        </member>
        <member name="F:StreamCoders.Onvif.DeviceIO.DiscoveryMode.Discoverable">
            <remarks/>
        </member>
        <member name="F:StreamCoders.Onvif.DeviceIO.DiscoveryMode.NonDiscoverable">
            <remarks/>
        </member>
        <member name="T:StreamCoders.Onvif.DeviceIO.CapabilityCategory">
            <remarks/>
        </member>
        <member name="F:StreamCoders.Onvif.DeviceIO.CapabilityCategory.All">
            <remarks/>
        </member>
        <member name="F:StreamCoders.Onvif.DeviceIO.CapabilityCategory.Analytics">
            <remarks/>
        </member>
        <member name="F:StreamCoders.Onvif.DeviceIO.CapabilityCategory.Device">
            <remarks/>
        </member>
        <member name="F:StreamCoders.Onvif.DeviceIO.CapabilityCategory.Events">
            <remarks/>
        </member>
        <member name="F:StreamCoders.Onvif.DeviceIO.CapabilityCategory.Imaging">
            <remarks/>
        </member>
        <member name="F:StreamCoders.Onvif.DeviceIO.CapabilityCategory.Media">
            <remarks/>
        </member>
        <member name="F:StreamCoders.Onvif.DeviceIO.CapabilityCategory.PTZ">
            <remarks/>
        </member>
        <member name="T:StreamCoders.Onvif.DeviceIO.RelayLogicalState">
            <remarks/>
        </member>
        <member name="F:StreamCoders.Onvif.DeviceIO.RelayLogicalState.active">
            <remarks/>
        </member>
        <member name="F:StreamCoders.Onvif.DeviceIO.RelayLogicalState.inactive">
            <remarks/>
        </member>
        <member name="T:StreamCoders.Onvif.DeviceIO.GetSystemUrisResponseExtension">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.DeviceIO.GetSystemUrisResponseExtension.Any">
            <remarks/>
        </member>
        <member name="T:StreamCoders.Onvif.Device.Service">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Device.Service.Namespace">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Device.Service.XAddr">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Device.Service.Capabilities">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Device.Service.Version">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Device.Service.Any">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Device.Service.AnyAttr">
            <remarks/>
        </member>
        <member name="T:StreamCoders.Onvif.Device.OnvifVersion">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Device.OnvifVersion.Major">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Device.OnvifVersion.Minor">
            <remarks/>
        </member>
        <member name="T:StreamCoders.Onvif.Device.LocalOrientation">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Device.LocalOrientation.Any">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Device.LocalOrientation.pan">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Device.LocalOrientation.panSpecified">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Device.LocalOrientation.tilt">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Device.LocalOrientation.tiltSpecified">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Device.LocalOrientation.roll">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Device.LocalOrientation.rollSpecified">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Device.LocalOrientation.AnyAttr">
            <remarks/>
        </member>
        <member name="T:StreamCoders.Onvif.Device.LocalLocation">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Device.LocalLocation.Any">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Device.LocalLocation.x">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Device.LocalLocation.xSpecified">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Device.LocalLocation.y">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Device.LocalLocation.ySpecified">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Device.LocalLocation.z">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Device.LocalLocation.zSpecified">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Device.LocalLocation.AnyAttr">
            <remarks/>
        </member>
        <member name="T:StreamCoders.Onvif.Device.GeoOrientation">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Device.GeoOrientation.Any">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Device.GeoOrientation.roll">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Device.GeoOrientation.rollSpecified">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Device.GeoOrientation.pitch">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Device.GeoOrientation.pitchSpecified">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Device.GeoOrientation.yaw">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Device.GeoOrientation.yawSpecified">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Device.GeoOrientation.AnyAttr">
            <remarks/>
        </member>
        <member name="T:StreamCoders.Onvif.Device.GeoLocation">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Device.GeoLocation.Any">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Device.GeoLocation.lon">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Device.GeoLocation.lonSpecified">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Device.GeoLocation.lat">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Device.GeoLocation.latSpecified">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Device.GeoLocation.elevation">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Device.GeoLocation.elevationSpecified">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Device.GeoLocation.AnyAttr">
            <remarks/>
        </member>
        <member name="T:StreamCoders.Onvif.Device.LocationEntity">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Device.LocationEntity.GeoLocation">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Device.LocationEntity.GeoOrientation">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Device.LocationEntity.LocalLocation">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Device.LocationEntity.LocalOrientation">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Device.LocationEntity.Entity">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Device.LocationEntity.Token">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Device.LocationEntity.Fixed">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Device.LocationEntity.FixedSpecified">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Device.LocationEntity.GeoSource">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Device.LocationEntity.AutoGeo">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Device.LocationEntity.AutoGeoSpecified">
            <remarks/>
        </member>
        <member name="T:StreamCoders.Onvif.Device.SystemLogUri">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Device.SystemLogUri.Type">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Device.SystemLogUri.Uri">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Device.SystemLogUri.Any">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Device.SystemLogUri.AnyAttr">
            <remarks/>
        </member>
        <member name="T:StreamCoders.Onvif.Device.SystemLogType">
            <remarks/>
        </member>
        <member name="F:StreamCoders.Onvif.Device.SystemLogType.System">
            <remarks/>
        </member>
        <member name="F:StreamCoders.Onvif.Device.SystemLogType.Access">
            <remarks/>
        </member>
        <member name="T:StreamCoders.Onvif.Device.Dot11AvailableNetworksExtension">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Device.Dot11AvailableNetworksExtension.Any">
            <remarks/>
        </member>
        <member name="T:StreamCoders.Onvif.Device.Dot11AvailableNetworks">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Device.Dot11AvailableNetworks.SSID">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Device.Dot11AvailableNetworks.BSSID">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Device.Dot11AvailableNetworks.AuthAndMangementSuite">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Device.Dot11AvailableNetworks.PairCipher">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Device.Dot11AvailableNetworks.GroupCipher">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Device.Dot11AvailableNetworks.SignalStrength">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Device.Dot11AvailableNetworks.SignalStrengthSpecified">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Device.Dot11AvailableNetworks.Extension">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Device.Dot11AvailableNetworks.AnyAttr">
            <remarks/>
        </member>
        <member name="T:StreamCoders.Onvif.Device.Dot11AuthAndMangementSuite">
            <remarks/>
        </member>
        <member name="F:StreamCoders.Onvif.Device.Dot11AuthAndMangementSuite.None">
            <remarks/>
        </member>
        <member name="F:StreamCoders.Onvif.Device.Dot11AuthAndMangementSuite.Dot1X">
            <remarks/>
        </member>
        <member name="F:StreamCoders.Onvif.Device.Dot11AuthAndMangementSuite.PSK">
            <remarks/>
        </member>
        <member name="F:StreamCoders.Onvif.Device.Dot11AuthAndMangementSuite.Extended">
            <remarks/>
        </member>
        <member name="T:StreamCoders.Onvif.Device.Dot11Cipher">
            <remarks/>
        </member>
        <member name="F:StreamCoders.Onvif.Device.Dot11Cipher.CCMP">
            <remarks/>
        </member>
        <member name="F:StreamCoders.Onvif.Device.Dot11Cipher.TKIP">
            <remarks/>
        </member>
        <member name="F:StreamCoders.Onvif.Device.Dot11Cipher.Any">
            <remarks/>
        </member>
        <member name="F:StreamCoders.Onvif.Device.Dot11Cipher.Extended">
            <remarks/>
        </member>
        <member name="T:StreamCoders.Onvif.Device.Dot11SignalStrength">
            <remarks/>
        </member>
        <member name="F:StreamCoders.Onvif.Device.Dot11SignalStrength.None">
            <remarks/>
        </member>
        <member name="F:StreamCoders.Onvif.Device.Dot11SignalStrength.VeryBad">
            <remarks/>
        </member>
        <member name="F:StreamCoders.Onvif.Device.Dot11SignalStrength.Bad">
            <remarks/>
        </member>
        <member name="F:StreamCoders.Onvif.Device.Dot11SignalStrength.Good">
            <remarks/>
        </member>
        <member name="F:StreamCoders.Onvif.Device.Dot11SignalStrength.VeryGood">
            <remarks/>
        </member>
        <member name="F:StreamCoders.Onvif.Device.Dot11SignalStrength.Extended">
            <remarks/>
        </member>
        <member name="T:StreamCoders.Onvif.Device.Dot11Status">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Device.Dot11Status.SSID">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Device.Dot11Status.BSSID">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Device.Dot11Status.PairCipher">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Device.Dot11Status.PairCipherSpecified">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Device.Dot11Status.GroupCipher">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Device.Dot11Status.GroupCipherSpecified">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Device.Dot11Status.SignalStrength">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Device.Dot11Status.SignalStrengthSpecified">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Device.Dot11Status.ActiveConfigAlias">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Device.Dot11Status.Any">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Device.Dot11Status.AnyAttr">
            <remarks/>
        </member>
        <member name="T:StreamCoders.Onvif.Device.Dot11Capabilities">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Device.Dot11Capabilities.TKIP">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Device.Dot11Capabilities.ScanAvailableNetworks">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Device.Dot11Capabilities.MultipleConfiguration">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Device.Dot11Capabilities.AdHocStationMode">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Device.Dot11Capabilities.WEP">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Device.Dot11Capabilities.Any">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Device.Dot11Capabilities.AnyAttr">
            <remarks/>
        </member>
        <member name="T:StreamCoders.Onvif.Device.Dot1XConfigurationExtension">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Device.Dot1XConfigurationExtension.Any">
            <remarks/>
        </member>
        <member name="T:StreamCoders.Onvif.Device.EapMethodExtension">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Device.EapMethodExtension.Any">
            <remarks/>
        </member>
        <member name="T:StreamCoders.Onvif.Device.TLSConfiguration">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Device.TLSConfiguration.CertificateID">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Device.TLSConfiguration.Any">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Device.TLSConfiguration.AnyAttr">
            <remarks/>
        </member>
        <member name="T:StreamCoders.Onvif.Device.EAPMethodConfiguration">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Device.EAPMethodConfiguration.TLSConfiguration">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Device.EAPMethodConfiguration.Password">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Device.EAPMethodConfiguration.Extension">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Device.EAPMethodConfiguration.AnyAttr">
            <remarks/>
        </member>
        <member name="T:StreamCoders.Onvif.Device.Dot1XConfiguration">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Device.Dot1XConfiguration.Dot1XConfigurationToken">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Device.Dot1XConfiguration.Identity">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Device.Dot1XConfiguration.AnonymousID">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Device.Dot1XConfiguration.EAPMethod">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Device.Dot1XConfiguration.CACertificateID">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Device.Dot1XConfiguration.EAPMethodConfiguration">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Device.Dot1XConfiguration.Extension">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Device.Dot1XConfiguration.AnyAttr">
            <remarks/>
        </member>
        <member name="T:StreamCoders.Onvif.Device.CertificateInformationExtension">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Device.CertificateInformationExtension.Any">
            <remarks/>
        </member>
        <member name="T:StreamCoders.Onvif.Device.DateTimeRange">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Device.DateTimeRange.From">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Device.DateTimeRange.Until">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Device.DateTimeRange.Any">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Device.DateTimeRange.AnyAttr">
            <remarks/>
        </member>
        <member name="T:StreamCoders.Onvif.Device.CertificateUsage">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Device.CertificateUsage.Critical">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Device.CertificateUsage.Value">
            <remarks/>
        </member>
        <member name="T:StreamCoders.Onvif.Device.CertificateInformation">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Device.CertificateInformation.CertificateID">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Device.CertificateInformation.IssuerDN">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Device.CertificateInformation.SubjectDN">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Device.CertificateInformation.KeyUsage">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Device.CertificateInformation.ExtendedKeyUsage">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Device.CertificateInformation.KeyLength">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Device.CertificateInformation.KeyLengthSpecified">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Device.CertificateInformation.Version">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Device.CertificateInformation.SerialNum">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Device.CertificateInformation.SignatureAlgorithm">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Device.CertificateInformation.Validity">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Device.CertificateInformation.Extension">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Device.CertificateInformation.AnyAttr">
            <remarks/>
        </member>
        <member name="T:StreamCoders.Onvif.Device.CertificateWithPrivateKey">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Device.CertificateWithPrivateKey.CertificateID">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Device.CertificateWithPrivateKey.Certificate">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Device.CertificateWithPrivateKey.PrivateKey">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Device.CertificateWithPrivateKey.Any">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Device.CertificateWithPrivateKey.AnyAttr">
            <remarks/>
        </member>
        <member name="T:StreamCoders.Onvif.Device.BinaryData">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Device.BinaryData.Data">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Device.BinaryData.contentType">
            <remarks/>
        </member>
        <member name="T:StreamCoders.Onvif.Device.CertificateStatus">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Device.CertificateStatus.CertificateID">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Device.CertificateStatus.Status">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Device.CertificateStatus.Any">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Device.CertificateStatus.AnyAttr">
            <remarks/>
        </member>
        <member name="T:StreamCoders.Onvif.Device.Certificate">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Device.Certificate.CertificateID">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Device.Certificate.Certificate1">
            <remarks/>
        </member>
        <member name="T:StreamCoders.Onvif.Device.IPAddressFilterExtension">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Device.IPAddressFilterExtension.Any">
            <remarks/>
        </member>
        <member name="T:StreamCoders.Onvif.Device.IPAddressFilter">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Device.IPAddressFilter.Type">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Device.IPAddressFilter.IPv4Address">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Device.IPAddressFilter.IPv6Address">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Device.IPAddressFilter.Extension">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Device.IPAddressFilter.AnyAttr">
            <remarks/>
        </member>
        <member name="T:StreamCoders.Onvif.Device.IPAddressFilterType">
            <remarks/>
        </member>
        <member name="F:StreamCoders.Onvif.Device.IPAddressFilterType.Allow">
            <remarks/>
        </member>
        <member name="F:StreamCoders.Onvif.Device.IPAddressFilterType.Deny">
            <remarks/>
        </member>
        <member name="T:StreamCoders.Onvif.Device.PrefixedIPv4Address">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Device.PrefixedIPv4Address.Address">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Device.PrefixedIPv4Address.PrefixLength">
            <remarks/>
        </member>
        <member name="T:StreamCoders.Onvif.Device.PrefixedIPv6Address">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Device.PrefixedIPv6Address.Address">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Device.PrefixedIPv6Address.PrefixLength">
            <remarks/>
        </member>
        <member name="T:StreamCoders.Onvif.Device.NetworkZeroConfigurationExtension2">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Device.NetworkZeroConfigurationExtension2.Any">
            <remarks/>
        </member>
        <member name="T:StreamCoders.Onvif.Device.NetworkZeroConfigurationExtension">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Device.NetworkZeroConfigurationExtension.Any">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Device.NetworkZeroConfigurationExtension.Additional">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Device.NetworkZeroConfigurationExtension.Extension">
            <remarks/>
        </member>
        <member name="T:StreamCoders.Onvif.Device.NetworkZeroConfiguration">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Device.NetworkZeroConfiguration.InterfaceToken">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Device.NetworkZeroConfiguration.Enabled">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Device.NetworkZeroConfiguration.Addresses">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Device.NetworkZeroConfiguration.Extension">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Device.NetworkZeroConfiguration.AnyAttr">
            <remarks/>
        </member>
        <member name="T:StreamCoders.Onvif.Device.NetworkGateway">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Device.NetworkGateway.IPv4Address">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Device.NetworkGateway.IPv6Address">
            <remarks/>
        </member>
        <member name="T:StreamCoders.Onvif.Device.NetworkProtocolExtension">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Device.NetworkProtocolExtension.Any">
            <remarks/>
        </member>
        <member name="T:StreamCoders.Onvif.Device.NetworkProtocol">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Device.NetworkProtocol.Name">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Device.NetworkProtocol.Enabled">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Device.NetworkProtocol.Port">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Device.NetworkProtocol.Extension">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Device.NetworkProtocol.AnyAttr">
            <remarks/>
        </member>
        <member name="T:StreamCoders.Onvif.Device.NetworkProtocolType">
            <remarks/>
        </member>
        <member name="F:StreamCoders.Onvif.Device.NetworkProtocolType.HTTP">
            <remarks/>
        </member>
        <member name="F:StreamCoders.Onvif.Device.NetworkProtocolType.HTTPS">
            <remarks/>
        </member>
        <member name="F:StreamCoders.Onvif.Device.NetworkProtocolType.RTSP">
            <remarks/>
        </member>
        <member name="T:StreamCoders.Onvif.Device.NetworkInterfaceSetConfigurationExtension2">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Device.NetworkInterfaceSetConfigurationExtension2.Any">
            <remarks/>
        </member>
        <member name="T:StreamCoders.Onvif.Device.NetworkInterfaceSetConfigurationExtension">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Device.NetworkInterfaceSetConfigurationExtension.Any">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Device.NetworkInterfaceSetConfigurationExtension.Dot3">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Device.NetworkInterfaceSetConfigurationExtension.Dot11">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Device.NetworkInterfaceSetConfigurationExtension.Extension">
            <remarks/>
        </member>
        <member name="T:StreamCoders.Onvif.Device.Dot3Configuration">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Device.Dot3Configuration.Any">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Device.Dot3Configuration.AnyAttr">
            <remarks/>
        </member>
        <member name="T:StreamCoders.Onvif.Device.Dot11Configuration">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Device.Dot11Configuration.SSID">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Device.Dot11Configuration.Mode">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Device.Dot11Configuration.Alias">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Device.Dot11Configuration.Priority">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Device.Dot11Configuration.Security">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Device.Dot11Configuration.Any">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Device.Dot11Configuration.AnyAttr">
            <remarks/>
        </member>
        <member name="T:StreamCoders.Onvif.Device.Dot11StationMode">
            <remarks/>
        </member>
        <member name="F:StreamCoders.Onvif.Device.Dot11StationMode.Adhoc">
            <remarks/>
        </member>
        <member name="F:StreamCoders.Onvif.Device.Dot11StationMode.Infrastructure">
            <remarks/>
        </member>
        <member name="F:StreamCoders.Onvif.Device.Dot11StationMode.Extended">
            <remarks/>
        </member>
        <member name="T:StreamCoders.Onvif.Device.Dot11SecurityConfiguration">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Device.Dot11SecurityConfiguration.Mode">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Device.Dot11SecurityConfiguration.Algorithm">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Device.Dot11SecurityConfiguration.AlgorithmSpecified">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Device.Dot11SecurityConfiguration.PSK">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Device.Dot11SecurityConfiguration.Dot1X">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Device.Dot11SecurityConfiguration.Extension">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Device.Dot11SecurityConfiguration.AnyAttr">
            <remarks/>
        </member>
        <member name="T:StreamCoders.Onvif.Device.Dot11SecurityMode">
            <remarks/>
        </member>
        <member name="F:StreamCoders.Onvif.Device.Dot11SecurityMode.None">
            <remarks/>
        </member>
        <member name="F:StreamCoders.Onvif.Device.Dot11SecurityMode.WEP">
            <remarks/>
        </member>
        <member name="F:StreamCoders.Onvif.Device.Dot11SecurityMode.PSK">
            <remarks/>
        </member>
        <member name="F:StreamCoders.Onvif.Device.Dot11SecurityMode.Dot1X">
            <remarks/>
        </member>
        <member name="F:StreamCoders.Onvif.Device.Dot11SecurityMode.Extended">
            <remarks/>
        </member>
        <member name="T:StreamCoders.Onvif.Device.Dot11PSKSet">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Device.Dot11PSKSet.Key">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Device.Dot11PSKSet.Passphrase">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Device.Dot11PSKSet.Extension">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Device.Dot11PSKSet.AnyAttr">
            <remarks/>
        </member>
        <member name="T:StreamCoders.Onvif.Device.Dot11PSKSetExtension">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Device.Dot11PSKSetExtension.Any">
            <remarks/>
        </member>
        <member name="T:StreamCoders.Onvif.Device.Dot11SecurityConfigurationExtension">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Device.Dot11SecurityConfigurationExtension.Any">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Device.Dot11SecurityConfigurationExtension.AnyAttr">
            <remarks/>
        </member>
        <member name="T:StreamCoders.Onvif.Device.IPv6NetworkInterfaceSetConfiguration">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Device.IPv6NetworkInterfaceSetConfiguration.Enabled">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Device.IPv6NetworkInterfaceSetConfiguration.EnabledSpecified">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Device.IPv6NetworkInterfaceSetConfiguration.AcceptRouterAdvert">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Device.IPv6NetworkInterfaceSetConfiguration.AcceptRouterAdvertSpecified">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Device.IPv6NetworkInterfaceSetConfiguration.Manual">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Device.IPv6NetworkInterfaceSetConfiguration.DHCP">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Device.IPv6NetworkInterfaceSetConfiguration.DHCPSpecified">
            <remarks/>
        </member>
        <member name="T:StreamCoders.Onvif.Device.IPv6DHCPConfiguration">
            <remarks/>
        </member>
        <member name="F:StreamCoders.Onvif.Device.IPv6DHCPConfiguration.Auto">
            <remarks/>
        </member>
        <member name="F:StreamCoders.Onvif.Device.IPv6DHCPConfiguration.Stateful">
            <remarks/>
        </member>
        <member name="F:StreamCoders.Onvif.Device.IPv6DHCPConfiguration.Stateless">
            <remarks/>
        </member>
        <member name="F:StreamCoders.Onvif.Device.IPv6DHCPConfiguration.Off">
            <remarks/>
        </member>
        <member name="T:StreamCoders.Onvif.Device.IPv4NetworkInterfaceSetConfiguration">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Device.IPv4NetworkInterfaceSetConfiguration.Enabled">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Device.IPv4NetworkInterfaceSetConfiguration.EnabledSpecified">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Device.IPv4NetworkInterfaceSetConfiguration.Manual">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Device.IPv4NetworkInterfaceSetConfiguration.DHCP">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Device.IPv4NetworkInterfaceSetConfiguration.DHCPSpecified">
            <remarks/>
        </member>
        <member name="T:StreamCoders.Onvif.Device.NetworkInterfaceSetConfiguration">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Device.NetworkInterfaceSetConfiguration.Enabled">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Device.NetworkInterfaceSetConfiguration.EnabledSpecified">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Device.NetworkInterfaceSetConfiguration.Link">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Device.NetworkInterfaceSetConfiguration.MTU">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Device.NetworkInterfaceSetConfiguration.MTUSpecified">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Device.NetworkInterfaceSetConfiguration.IPv4">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Device.NetworkInterfaceSetConfiguration.IPv6">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Device.NetworkInterfaceSetConfiguration.Extension">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Device.NetworkInterfaceSetConfiguration.AnyAttr">
            <remarks/>
        </member>
        <member name="T:StreamCoders.Onvif.Device.NetworkInterfaceConnectionSetting">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Device.NetworkInterfaceConnectionSetting.AutoNegotiation">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Device.NetworkInterfaceConnectionSetting.Speed">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Device.NetworkInterfaceConnectionSetting.Duplex">
            <remarks/>
        </member>
        <member name="T:StreamCoders.Onvif.Device.Duplex">
            <remarks/>
        </member>
        <member name="F:StreamCoders.Onvif.Device.Duplex.Full">
            <remarks/>
        </member>
        <member name="F:StreamCoders.Onvif.Device.Duplex.Half">
            <remarks/>
        </member>
        <member name="T:StreamCoders.Onvif.Device.OSDConfigurationExtension">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Device.OSDConfigurationExtension.Any">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Device.OSDConfigurationExtension.AnyAttr">
            <remarks/>
        </member>
        <member name="T:StreamCoders.Onvif.Device.OSDImgConfigurationExtension">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Device.OSDImgConfigurationExtension.Any">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Device.OSDImgConfigurationExtension.AnyAttr">
            <remarks/>
        </member>
        <member name="T:StreamCoders.Onvif.Device.OSDImgConfiguration">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Device.OSDImgConfiguration.ImgPath">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Device.OSDImgConfiguration.Extension">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Device.OSDImgConfiguration.AnyAttr">
            <remarks/>
        </member>
        <member name="T:StreamCoders.Onvif.Device.OSDTextConfigurationExtension">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Device.OSDTextConfigurationExtension.Any">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Device.OSDTextConfigurationExtension.AnyAttr">
            <remarks/>
        </member>
        <member name="T:StreamCoders.Onvif.Device.Color">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Device.Color.X">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Device.Color.Y">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Device.Color.Z">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Device.Color.Colorspace">
            <remarks/>
        </member>
        <member name="T:StreamCoders.Onvif.Device.OSDColor">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Device.OSDColor.Color">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Device.OSDColor.Transparent">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Device.OSDColor.TransparentSpecified">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Device.OSDColor.AnyAttr">
            <remarks/>
        </member>
        <member name="T:StreamCoders.Onvif.Device.OSDTextConfiguration">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Device.OSDTextConfiguration.Type">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Device.OSDTextConfiguration.DateFormat">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Device.OSDTextConfiguration.TimeFormat">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Device.OSDTextConfiguration.FontSize">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Device.OSDTextConfiguration.FontSizeSpecified">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Device.OSDTextConfiguration.FontColor">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Device.OSDTextConfiguration.BackgroundColor">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Device.OSDTextConfiguration.PlainText">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Device.OSDTextConfiguration.Extension">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Device.OSDTextConfiguration.AnyAttr">
            <remarks/>
        </member>
        <member name="T:StreamCoders.Onvif.Device.OSDPosConfigurationExtension">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Device.OSDPosConfigurationExtension.Any">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Device.OSDPosConfigurationExtension.AnyAttr">
            <remarks/>
        </member>
        <member name="T:StreamCoders.Onvif.Device.Vector">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Device.Vector.x">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Device.Vector.xSpecified">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Device.Vector.y">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Device.Vector.ySpecified">
            <remarks/>
        </member>
        <member name="T:StreamCoders.Onvif.Device.OSDPosConfiguration">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Device.OSDPosConfiguration.Type">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Device.OSDPosConfiguration.Pos">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Device.OSDPosConfiguration.Extension">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Device.OSDPosConfiguration.AnyAttr">
            <remarks/>
        </member>
        <member name="T:StreamCoders.Onvif.Device.OSDReference">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Device.OSDReference.AnyAttr">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Device.OSDReference.Value">
            <remarks/>
        </member>
        <member name="T:StreamCoders.Onvif.Device.PTZNodeExtension2">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Device.PTZNodeExtension2.Any">
            <remarks/>
        </member>
        <member name="T:StreamCoders.Onvif.Device.PTZPresetTourSupportedExtension">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Device.PTZPresetTourSupportedExtension.Any">
            <remarks/>
        </member>
        <member name="T:StreamCoders.Onvif.Device.PTZPresetTourSupported">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Device.PTZPresetTourSupported.MaximumNumberOfPresetTours">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Device.PTZPresetTourSupported.PTZPresetTourOperation">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Device.PTZPresetTourSupported.Extension">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Device.PTZPresetTourSupported.AnyAttr">
            <remarks/>
        </member>
        <member name="T:StreamCoders.Onvif.Device.PTZPresetTourOperation">
            <remarks/>
        </member>
        <member name="F:StreamCoders.Onvif.Device.PTZPresetTourOperation.Start">
            <remarks/>
        </member>
        <member name="F:StreamCoders.Onvif.Device.PTZPresetTourOperation.Stop">
            <remarks/>
        </member>
        <member name="F:StreamCoders.Onvif.Device.PTZPresetTourOperation.Pause">
            <remarks/>
        </member>
        <member name="F:StreamCoders.Onvif.Device.PTZPresetTourOperation.Extended">
            <remarks/>
        </member>
        <member name="T:StreamCoders.Onvif.Device.PTZNodeExtension">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Device.PTZNodeExtension.Any">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Device.PTZNodeExtension.SupportedPresetTour">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Device.PTZNodeExtension.Extension">
            <remarks/>
        </member>
        <member name="T:StreamCoders.Onvif.Device.PTZSpacesExtension">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Device.PTZSpacesExtension.Any">
            <remarks/>
        </member>
        <member name="T:StreamCoders.Onvif.Device.Space1DDescription">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Device.Space1DDescription.URI">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Device.Space1DDescription.XRange">
            <remarks/>
        </member>
        <member name="T:StreamCoders.Onvif.Device.FloatRange">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Device.FloatRange.Min">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Device.FloatRange.Max">
            <remarks/>
        </member>
        <member name="T:StreamCoders.Onvif.Device.Space2DDescription">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Device.Space2DDescription.URI">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Device.Space2DDescription.XRange">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Device.Space2DDescription.YRange">
            <remarks/>
        </member>
        <member name="T:StreamCoders.Onvif.Device.PTZSpaces">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Device.PTZSpaces.AbsolutePanTiltPositionSpace">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Device.PTZSpaces.AbsoluteZoomPositionSpace">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Device.PTZSpaces.RelativePanTiltTranslationSpace">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Device.PTZSpaces.RelativeZoomTranslationSpace">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Device.PTZSpaces.ContinuousPanTiltVelocitySpace">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Device.PTZSpaces.ContinuousZoomVelocitySpace">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Device.PTZSpaces.PanTiltSpeedSpace">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Device.PTZSpaces.ZoomSpeedSpace">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Device.PTZSpaces.Extension">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Device.PTZSpaces.AnyAttr">
            <remarks/>
        </member>
        <member name="T:StreamCoders.Onvif.Device.RelayOutputSettings">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Device.RelayOutputSettings.Mode">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Device.RelayOutputSettings.DelayTime">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Device.RelayOutputSettings.IdleState">
            <remarks/>
        </member>
        <member name="T:StreamCoders.Onvif.Device.RelayMode">
            <remarks/>
        </member>
        <member name="F:StreamCoders.Onvif.Device.RelayMode.Monostable">
            <remarks/>
        </member>
        <member name="F:StreamCoders.Onvif.Device.RelayMode.Bistable">
            <remarks/>
        </member>
        <member name="T:StreamCoders.Onvif.Device.RelayIdleState">
            <remarks/>
        </member>
        <member name="F:StreamCoders.Onvif.Device.RelayIdleState.closed">
            <remarks/>
        </member>
        <member name="F:StreamCoders.Onvif.Device.RelayIdleState.open">
            <remarks/>
        </member>
        <member name="T:StreamCoders.Onvif.Device.NetworkInterfaceExtension2">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Device.NetworkInterfaceExtension2.Any">
            <remarks/>
        </member>
        <member name="T:StreamCoders.Onvif.Device.NetworkInterfaceExtension">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Device.NetworkInterfaceExtension.Any">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Device.NetworkInterfaceExtension.InterfaceType">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Device.NetworkInterfaceExtension.Dot3">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Device.NetworkInterfaceExtension.Dot11">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Device.NetworkInterfaceExtension.Extension">
            <remarks/>
        </member>
        <member name="T:StreamCoders.Onvif.Device.IPv6ConfigurationExtension">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Device.IPv6ConfigurationExtension.Any">
            <remarks/>
        </member>
        <member name="T:StreamCoders.Onvif.Device.IPv6Configuration">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Device.IPv6Configuration.AcceptRouterAdvert">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Device.IPv6Configuration.AcceptRouterAdvertSpecified">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Device.IPv6Configuration.DHCP">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Device.IPv6Configuration.Manual">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Device.IPv6Configuration.LinkLocal">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Device.IPv6Configuration.FromDHCP">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Device.IPv6Configuration.FromRA">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Device.IPv6Configuration.Extension">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Device.IPv6Configuration.AnyAttr">
            <remarks/>
        </member>
        <member name="T:StreamCoders.Onvif.Device.IPv6NetworkInterface">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Device.IPv6NetworkInterface.Enabled">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Device.IPv6NetworkInterface.Config">
            <remarks/>
        </member>
        <member name="T:StreamCoders.Onvif.Device.IPv4Configuration">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Device.IPv4Configuration.Manual">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Device.IPv4Configuration.LinkLocal">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Device.IPv4Configuration.FromDHCP">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Device.IPv4Configuration.DHCP">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Device.IPv4Configuration.Any">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Device.IPv4Configuration.AnyAttr">
            <remarks/>
        </member>
        <member name="T:StreamCoders.Onvif.Device.IPv4NetworkInterface">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Device.IPv4NetworkInterface.Enabled">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Device.IPv4NetworkInterface.Config">
            <remarks/>
        </member>
        <member name="T:StreamCoders.Onvif.Device.NetworkInterfaceLink">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Device.NetworkInterfaceLink.AdminSettings">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Device.NetworkInterfaceLink.OperSettings">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Device.NetworkInterfaceLink.InterfaceType">
            <remarks/>
        </member>
        <member name="T:StreamCoders.Onvif.Device.NetworkInterfaceInfo">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Device.NetworkInterfaceInfo.Name">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Device.NetworkInterfaceInfo.HwAddress">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Device.NetworkInterfaceInfo.MTU">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Device.NetworkInterfaceInfo.MTUSpecified">
            <remarks/>
        </member>
        <member name="T:StreamCoders.Onvif.Device.VideoOutputExtension">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Device.VideoOutputExtension.Any">
            <remarks/>
        </member>
        <member name="T:StreamCoders.Onvif.Device.LayoutExtension">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Device.LayoutExtension.Any">
            <remarks/>
        </member>
        <member name="T:StreamCoders.Onvif.Device.PaneLayout">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Device.PaneLayout.Pane">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Device.PaneLayout.Area">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Device.PaneLayout.Any">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Device.PaneLayout.AnyAttr">
            <remarks/>
        </member>
        <member name="T:StreamCoders.Onvif.Device.Rectangle">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Device.Rectangle.bottom">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Device.Rectangle.bottomSpecified">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Device.Rectangle.top">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Device.Rectangle.topSpecified">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Device.Rectangle.right">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Device.Rectangle.rightSpecified">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Device.Rectangle.left">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Device.Rectangle.leftSpecified">
            <remarks/>
        </member>
        <member name="T:StreamCoders.Onvif.Device.Layout">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Device.Layout.PaneLayout">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Device.Layout.Extension">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Device.Layout.AnyAttr">
            <remarks/>
        </member>
        <member name="T:StreamCoders.Onvif.Device.VideoSourceExtension2">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Device.VideoSourceExtension2.Any">
            <remarks/>
        </member>
        <member name="T:StreamCoders.Onvif.Device.ImagingSettingsExtension204">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Device.ImagingSettingsExtension204.Any">
            <remarks/>
        </member>
        <member name="T:StreamCoders.Onvif.Device.NoiseReduction">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Device.NoiseReduction.Level">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Device.NoiseReduction.Any">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Device.NoiseReduction.AnyAttr">
            <remarks/>
        </member>
        <member name="T:StreamCoders.Onvif.Device.DefoggingExtension">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Device.DefoggingExtension.Any">
            <remarks/>
        </member>
        <member name="T:StreamCoders.Onvif.Device.Defogging">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Device.Defogging.Mode">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Device.Defogging.Level">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Device.Defogging.LevelSpecified">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Device.Defogging.Extension">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Device.Defogging.AnyAttr">
            <remarks/>
        </member>
        <member name="T:StreamCoders.Onvif.Device.ToneCompensationExtension">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Device.ToneCompensationExtension.Any">
            <remarks/>
        </member>
        <member name="T:StreamCoders.Onvif.Device.ToneCompensation">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Device.ToneCompensation.Mode">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Device.ToneCompensation.Level">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Device.ToneCompensation.LevelSpecified">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Device.ToneCompensation.Extension">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Device.ToneCompensation.AnyAttr">
            <remarks/>
        </member>
        <member name="T:StreamCoders.Onvif.Device.ImagingSettingsExtension203">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Device.ImagingSettingsExtension203.ToneCompensation">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Device.ImagingSettingsExtension203.Defogging">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Device.ImagingSettingsExtension203.NoiseReduction">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Device.ImagingSettingsExtension203.Extension">
            <remarks/>
        </member>
        <member name="T:StreamCoders.Onvif.Device.IrCutFilterAutoAdjustmentExtension">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Device.IrCutFilterAutoAdjustmentExtension.Any">
            <remarks/>
        </member>
        <member name="T:StreamCoders.Onvif.Device.IrCutFilterAutoAdjustment">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Device.IrCutFilterAutoAdjustment.BoundaryType">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Device.IrCutFilterAutoAdjustment.BoundaryOffset">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Device.IrCutFilterAutoAdjustment.BoundaryOffsetSpecified">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Device.IrCutFilterAutoAdjustment.ResponseTime">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Device.IrCutFilterAutoAdjustment.Extension">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Device.IrCutFilterAutoAdjustment.AnyAttr">
            <remarks/>
        </member>
        <member name="T:StreamCoders.Onvif.Device.ImagingSettingsExtension202">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Device.ImagingSettingsExtension202.IrCutFilterAutoAdjustment">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Device.ImagingSettingsExtension202.Extension">
            <remarks/>
        </member>
        <member name="T:StreamCoders.Onvif.Device.ImageStabilizationExtension">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Device.ImageStabilizationExtension.Any">
            <remarks/>
        </member>
        <member name="T:StreamCoders.Onvif.Device.ImageStabilization">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Device.ImageStabilization.Mode">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Device.ImageStabilization.Level">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Device.ImageStabilization.LevelSpecified">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Device.ImageStabilization.Extension">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Device.ImageStabilization.AnyAttr">
            <remarks/>
        </member>
        <member name="T:StreamCoders.Onvif.Device.ImageStabilizationMode">
            <remarks/>
        </member>
        <member name="F:StreamCoders.Onvif.Device.ImageStabilizationMode.OFF">
            <remarks/>
        </member>
        <member name="F:StreamCoders.Onvif.Device.ImageStabilizationMode.ON">
            <remarks/>
        </member>
        <member name="F:StreamCoders.Onvif.Device.ImageStabilizationMode.AUTO">
            <remarks/>
        </member>
        <member name="F:StreamCoders.Onvif.Device.ImageStabilizationMode.Extended">
            <remarks/>
        </member>
        <member name="T:StreamCoders.Onvif.Device.ImagingSettingsExtension20">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Device.ImagingSettingsExtension20.Any">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Device.ImagingSettingsExtension20.ImageStabilization">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Device.ImagingSettingsExtension20.Extension">
            <remarks/>
        </member>
        <member name="T:StreamCoders.Onvif.Device.WhiteBalance20Extension">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Device.WhiteBalance20Extension.Any">
            <remarks/>
        </member>
        <member name="T:StreamCoders.Onvif.Device.WhiteBalance20">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Device.WhiteBalance20.Mode">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Device.WhiteBalance20.CrGain">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Device.WhiteBalance20.CrGainSpecified">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Device.WhiteBalance20.CbGain">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Device.WhiteBalance20.CbGainSpecified">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Device.WhiteBalance20.Extension">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Device.WhiteBalance20.AnyAttr">
            <remarks/>
        </member>
        <member name="T:StreamCoders.Onvif.Device.WhiteBalanceMode">
            <remarks/>
        </member>
        <member name="F:StreamCoders.Onvif.Device.WhiteBalanceMode.AUTO">
            <remarks/>
        </member>
        <member name="F:StreamCoders.Onvif.Device.WhiteBalanceMode.MANUAL">
            <remarks/>
        </member>
        <member name="T:StreamCoders.Onvif.Device.WideDynamicRange20">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Device.WideDynamicRange20.Mode">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Device.WideDynamicRange20.Level">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Device.WideDynamicRange20.LevelSpecified">
            <remarks/>
        </member>
        <member name="T:StreamCoders.Onvif.Device.WideDynamicMode">
            <remarks/>
        </member>
        <member name="F:StreamCoders.Onvif.Device.WideDynamicMode.OFF">
            <remarks/>
        </member>
        <member name="F:StreamCoders.Onvif.Device.WideDynamicMode.ON">
            <remarks/>
        </member>
        <member name="T:StreamCoders.Onvif.Device.FocusConfiguration20Extension">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Device.FocusConfiguration20Extension.Any">
            <remarks/>
        </member>
        <member name="T:StreamCoders.Onvif.Device.FocusConfiguration20">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Device.FocusConfiguration20.AutoFocusMode">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Device.FocusConfiguration20.DefaultSpeed">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Device.FocusConfiguration20.DefaultSpeedSpecified">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Device.FocusConfiguration20.NearLimit">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Device.FocusConfiguration20.NearLimitSpecified">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Device.FocusConfiguration20.FarLimit">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Device.FocusConfiguration20.FarLimitSpecified">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Device.FocusConfiguration20.Extension">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Device.FocusConfiguration20.AnyAttr">
            <remarks/>
        </member>
        <member name="T:StreamCoders.Onvif.Device.AutoFocusMode">
            <remarks/>
        </member>
        <member name="F:StreamCoders.Onvif.Device.AutoFocusMode.AUTO">
            <remarks/>
        </member>
        <member name="F:StreamCoders.Onvif.Device.AutoFocusMode.MANUAL">
            <remarks/>
        </member>
        <member name="T:StreamCoders.Onvif.Device.Exposure20">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Device.Exposure20.Mode">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Device.Exposure20.Priority">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Device.Exposure20.PrioritySpecified">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Device.Exposure20.Window">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Device.Exposure20.MinExposureTime">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Device.Exposure20.MinExposureTimeSpecified">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Device.Exposure20.MaxExposureTime">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Device.Exposure20.MaxExposureTimeSpecified">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Device.Exposure20.MinGain">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Device.Exposure20.MinGainSpecified">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Device.Exposure20.MaxGain">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Device.Exposure20.MaxGainSpecified">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Device.Exposure20.MinIris">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Device.Exposure20.MinIrisSpecified">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Device.Exposure20.MaxIris">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Device.Exposure20.MaxIrisSpecified">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Device.Exposure20.ExposureTime">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Device.Exposure20.ExposureTimeSpecified">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Device.Exposure20.Gain">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Device.Exposure20.GainSpecified">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Device.Exposure20.Iris">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Device.Exposure20.IrisSpecified">
            <remarks/>
        </member>
        <member name="T:StreamCoders.Onvif.Device.ExposureMode">
            <remarks/>
        </member>
        <member name="F:StreamCoders.Onvif.Device.ExposureMode.AUTO">
            <remarks/>
        </member>
        <member name="F:StreamCoders.Onvif.Device.ExposureMode.MANUAL">
            <remarks/>
        </member>
        <member name="T:StreamCoders.Onvif.Device.ExposurePriority">
            <remarks/>
        </member>
        <member name="F:StreamCoders.Onvif.Device.ExposurePriority.LowNoise">
            <remarks/>
        </member>
        <member name="F:StreamCoders.Onvif.Device.ExposurePriority.FrameRate">
            <remarks/>
        </member>
        <member name="T:StreamCoders.Onvif.Device.BacklightCompensation20">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Device.BacklightCompensation20.Mode">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Device.BacklightCompensation20.Level">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Device.BacklightCompensation20.LevelSpecified">
            <remarks/>
        </member>
        <member name="T:StreamCoders.Onvif.Device.BacklightCompensationMode">
            <remarks/>
        </member>
        <member name="F:StreamCoders.Onvif.Device.BacklightCompensationMode.OFF">
            <remarks/>
        </member>
        <member name="F:StreamCoders.Onvif.Device.BacklightCompensationMode.ON">
            <remarks/>
        </member>
        <member name="T:StreamCoders.Onvif.Device.ImagingSettings20">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Device.ImagingSettings20.BacklightCompensation">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Device.ImagingSettings20.Brightness">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Device.ImagingSettings20.BrightnessSpecified">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Device.ImagingSettings20.ColorSaturation">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Device.ImagingSettings20.ColorSaturationSpecified">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Device.ImagingSettings20.Contrast">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Device.ImagingSettings20.ContrastSpecified">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Device.ImagingSettings20.Exposure">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Device.ImagingSettings20.Focus">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Device.ImagingSettings20.IrCutFilter">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Device.ImagingSettings20.IrCutFilterSpecified">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Device.ImagingSettings20.Sharpness">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Device.ImagingSettings20.SharpnessSpecified">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Device.ImagingSettings20.WideDynamicRange">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Device.ImagingSettings20.WhiteBalance">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Device.ImagingSettings20.Extension">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Device.ImagingSettings20.AnyAttr">
            <remarks/>
        </member>
        <member name="T:StreamCoders.Onvif.Device.IrCutFilterMode">
            <remarks/>
        </member>
        <member name="F:StreamCoders.Onvif.Device.IrCutFilterMode.ON">
            <remarks/>
        </member>
        <member name="F:StreamCoders.Onvif.Device.IrCutFilterMode.OFF">
            <remarks/>
        </member>
        <member name="F:StreamCoders.Onvif.Device.IrCutFilterMode.AUTO">
            <remarks/>
        </member>
        <member name="T:StreamCoders.Onvif.Device.VideoSourceExtension">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Device.VideoSourceExtension.Any">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Device.VideoSourceExtension.Imaging">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Device.VideoSourceExtension.Extension">
            <remarks/>
        </member>
        <member name="T:StreamCoders.Onvif.Device.ImagingSettingsExtension">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Device.ImagingSettingsExtension.Any">
            <remarks/>
        </member>
        <member name="T:StreamCoders.Onvif.Device.WhiteBalance">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Device.WhiteBalance.Mode">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Device.WhiteBalance.CrGain">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Device.WhiteBalance.CbGain">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Device.WhiteBalance.Any">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Device.WhiteBalance.AnyAttr">
            <remarks/>
        </member>
        <member name="T:StreamCoders.Onvif.Device.WideDynamicRange">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Device.WideDynamicRange.Mode">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Device.WideDynamicRange.Level">
            <remarks/>
        </member>
        <member name="T:StreamCoders.Onvif.Device.FocusConfiguration">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Device.FocusConfiguration.AutoFocusMode">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Device.FocusConfiguration.DefaultSpeed">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Device.FocusConfiguration.NearLimit">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Device.FocusConfiguration.FarLimit">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Device.FocusConfiguration.Any">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Device.FocusConfiguration.AnyAttr">
            <remarks/>
        </member>
        <member name="T:StreamCoders.Onvif.Device.Exposure">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Device.Exposure.Mode">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Device.Exposure.Priority">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Device.Exposure.Window">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Device.Exposure.MinExposureTime">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Device.Exposure.MaxExposureTime">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Device.Exposure.MinGain">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Device.Exposure.MaxGain">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Device.Exposure.MinIris">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Device.Exposure.MaxIris">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Device.Exposure.ExposureTime">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Device.Exposure.Gain">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Device.Exposure.Iris">
            <remarks/>
        </member>
        <member name="T:StreamCoders.Onvif.Device.BacklightCompensation">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Device.BacklightCompensation.Mode">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Device.BacklightCompensation.Level">
            <remarks/>
        </member>
        <member name="T:StreamCoders.Onvif.Device.ImagingSettings">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Device.ImagingSettings.BacklightCompensation">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Device.ImagingSettings.Brightness">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Device.ImagingSettings.BrightnessSpecified">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Device.ImagingSettings.ColorSaturation">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Device.ImagingSettings.ColorSaturationSpecified">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Device.ImagingSettings.Contrast">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Device.ImagingSettings.ContrastSpecified">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Device.ImagingSettings.Exposure">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Device.ImagingSettings.Focus">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Device.ImagingSettings.IrCutFilter">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Device.ImagingSettings.IrCutFilterSpecified">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Device.ImagingSettings.Sharpness">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Device.ImagingSettings.SharpnessSpecified">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Device.ImagingSettings.WideDynamicRange">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Device.ImagingSettings.WhiteBalance">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Device.ImagingSettings.Extension">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Device.ImagingSettings.AnyAttr">
            <remarks/>
        </member>
        <member name="T:StreamCoders.Onvif.Device.VideoResolution">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Device.VideoResolution.Width">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Device.VideoResolution.Height">
            <remarks/>
        </member>
        <member name="T:StreamCoders.Onvif.Device.UserCredential">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Device.UserCredential.UserName">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Device.UserCredential.Password">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Device.UserCredential.Extension">
            <remarks/>
        </member>
        <member name="T:StreamCoders.Onvif.Device.UserCredentialExtension">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Device.UserCredentialExtension.Any">
            <remarks/>
        </member>
        <member name="T:StreamCoders.Onvif.Device.StorageConfigurationData">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Device.StorageConfigurationData.LocalPath">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Device.StorageConfigurationData.StorageUri">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Device.StorageConfigurationData.User">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Device.StorageConfigurationData.Extension">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Device.StorageConfigurationData.type">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Device.StorageConfigurationData.AnyAttr">
            <remarks/>
        </member>
        <member name="T:StreamCoders.Onvif.Device.StorageConfigurationDataExtension">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Device.StorageConfigurationDataExtension.Any">
            <remarks/>
        </member>
        <member name="T:StreamCoders.Onvif.Device.DeviceEntity">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Device.DeviceEntity.token">
            <remarks/>
        </member>
        <member name="T:StreamCoders.Onvif.Device.OSDConfiguration">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Device.OSDConfiguration.VideoSourceConfigurationToken">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Device.OSDConfiguration.Type">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Device.OSDConfiguration.Position">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Device.OSDConfiguration.TextString">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Device.OSDConfiguration.Image">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Device.OSDConfiguration.Extension">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Device.OSDConfiguration.AnyAttr">
            <remarks/>
        </member>
        <member name="T:StreamCoders.Onvif.Device.OSDType">
            <remarks/>
        </member>
        <member name="F:StreamCoders.Onvif.Device.OSDType.Text">
            <remarks/>
        </member>
        <member name="F:StreamCoders.Onvif.Device.OSDType.Image">
            <remarks/>
        </member>
        <member name="F:StreamCoders.Onvif.Device.OSDType.Extended">
            <remarks/>
        </member>
        <member name="T:StreamCoders.Onvif.Device.PTZNode">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Device.PTZNode.Name">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Device.PTZNode.SupportedPTZSpaces">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Device.PTZNode.MaximumNumberOfPresets">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Device.PTZNode.HomeSupported">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Device.PTZNode.AuxiliaryCommands">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Device.PTZNode.Extension">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Device.PTZNode.FixedHomePosition">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Device.PTZNode.FixedHomePositionSpecified">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Device.PTZNode.AnyAttr">
            <remarks/>
        </member>
        <member name="T:StreamCoders.Onvif.Device.DigitalInput">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Device.DigitalInput.Any">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Device.DigitalInput.IdleState">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Device.DigitalInput.IdleStateSpecified">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Device.DigitalInput.AnyAttr">
            <remarks/>
        </member>
        <member name="T:StreamCoders.Onvif.Device.DigitalIdleState">
            <remarks/>
        </member>
        <member name="F:StreamCoders.Onvif.Device.DigitalIdleState.closed">
            <remarks/>
        </member>
        <member name="F:StreamCoders.Onvif.Device.DigitalIdleState.open">
            <remarks/>
        </member>
        <member name="T:StreamCoders.Onvif.Device.RelayOutput">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Device.RelayOutput.Properties">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Device.RelayOutput.Any">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Device.RelayOutput.AnyAttr">
            <remarks/>
        </member>
        <member name="T:StreamCoders.Onvif.Device.NetworkInterface">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Device.NetworkInterface.Enabled">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Device.NetworkInterface.Info">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Device.NetworkInterface.Link">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Device.NetworkInterface.IPv4">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Device.NetworkInterface.IPv6">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Device.NetworkInterface.Extension">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Device.NetworkInterface.AnyAttr">
            <remarks/>
        </member>
        <member name="T:StreamCoders.Onvif.Device.AudioOutput">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Device.AudioOutput.Any">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Device.AudioOutput.AnyAttr">
            <remarks/>
        </member>
        <member name="T:StreamCoders.Onvif.Device.VideoOutput">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Device.VideoOutput.Layout">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Device.VideoOutput.Resolution">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Device.VideoOutput.RefreshRate">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Device.VideoOutput.RefreshRateSpecified">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Device.VideoOutput.AspectRatio">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Device.VideoOutput.AspectRatioSpecified">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Device.VideoOutput.Extension">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Device.VideoOutput.AnyAttr">
            <remarks/>
        </member>
        <member name="T:StreamCoders.Onvif.Device.AudioSource">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Device.AudioSource.Channels">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Device.AudioSource.Any">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Device.AudioSource.AnyAttr">
            <remarks/>
        </member>
        <member name="T:StreamCoders.Onvif.Device.VideoSource">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Device.VideoSource.Framerate">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Device.VideoSource.Resolution">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Device.VideoSource.Imaging">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Device.VideoSource.Extension">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Device.VideoSource.AnyAttr">
            <remarks/>
        </member>
        <member name="T:StreamCoders.Onvif.Device.StorageConfiguration">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Device.StorageConfiguration.Data">
            <remarks/>
        </member>
        <member name="T:StreamCoders.Onvif.Device.DynamicDNSInformationExtension">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Device.DynamicDNSInformationExtension.Any">
            <remarks/>
        </member>
        <member name="T:StreamCoders.Onvif.Device.DynamicDNSInformation">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Device.DynamicDNSInformation.Type">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Device.DynamicDNSInformation.Name">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Device.DynamicDNSInformation.TTL">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Device.DynamicDNSInformation.Extension">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Device.DynamicDNSInformation.AnyAttr">
            <remarks/>
        </member>
        <member name="T:StreamCoders.Onvif.Device.DynamicDNSType">
            <remarks/>
        </member>
        <member name="F:StreamCoders.Onvif.Device.DynamicDNSType.NoUpdate">
            <remarks/>
        </member>
        <member name="F:StreamCoders.Onvif.Device.DynamicDNSType.ClientUpdates">
            <remarks/>
        </member>
        <member name="F:StreamCoders.Onvif.Device.DynamicDNSType.ServerUpdates">
            <remarks/>
        </member>
        <member name="T:StreamCoders.Onvif.Device.NTPInformationExtension">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Device.NTPInformationExtension.Any">
            <remarks/>
        </member>
        <member name="T:StreamCoders.Onvif.Device.NTPInformation">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Device.NTPInformation.FromDHCP">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Device.NTPInformation.NTPFromDHCP">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Device.NTPInformation.NTPManual">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Device.NTPInformation.Extension">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Device.NTPInformation.AnyAttr">
            <remarks/>
        </member>
        <member name="T:StreamCoders.Onvif.Device.NetworkHost">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Device.NetworkHost.Type">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Device.NetworkHost.IPv4Address">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Device.NetworkHost.IPv6Address">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Device.NetworkHost.DNSname">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Device.NetworkHost.Extension">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Device.NetworkHost.AnyAttr">
            <remarks/>
        </member>
        <member name="T:StreamCoders.Onvif.Device.NetworkHostType">
            <remarks/>
        </member>
        <member name="F:StreamCoders.Onvif.Device.NetworkHostType.IPv4">
            <remarks/>
        </member>
        <member name="F:StreamCoders.Onvif.Device.NetworkHostType.IPv6">
            <remarks/>
        </member>
        <member name="F:StreamCoders.Onvif.Device.NetworkHostType.DNS">
            <remarks/>
        </member>
        <member name="T:StreamCoders.Onvif.Device.NetworkHostExtension">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Device.NetworkHostExtension.Any">
            <remarks/>
        </member>
        <member name="T:StreamCoders.Onvif.Device.DNSInformationExtension">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Device.DNSInformationExtension.Any">
            <remarks/>
        </member>
        <member name="T:StreamCoders.Onvif.Device.IPAddress">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Device.IPAddress.Type">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Device.IPAddress.IPv4Address">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Device.IPAddress.IPv6Address">
            <remarks/>
        </member>
        <member name="T:StreamCoders.Onvif.Device.IPType">
            <remarks/>
        </member>
        <member name="F:StreamCoders.Onvif.Device.IPType.IPv4">
            <remarks/>
        </member>
        <member name="F:StreamCoders.Onvif.Device.IPType.IPv6">
            <remarks/>
        </member>
        <member name="T:StreamCoders.Onvif.Device.DNSInformation">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Device.DNSInformation.FromDHCP">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Device.DNSInformation.SearchDomain">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Device.DNSInformation.DNSFromDHCP">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Device.DNSInformation.DNSManual">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Device.DNSInformation.Extension">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Device.DNSInformation.AnyAttr">
            <remarks/>
        </member>
        <member name="T:StreamCoders.Onvif.Device.HostnameInformationExtension">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Device.HostnameInformationExtension.Any">
            <remarks/>
        </member>
        <member name="T:StreamCoders.Onvif.Device.HostnameInformation">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Device.HostnameInformation.FromDHCP">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Device.HostnameInformation.Name">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Device.HostnameInformation.Extension">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Device.HostnameInformation.AnyAttr">
            <remarks/>
        </member>
        <member name="T:StreamCoders.Onvif.Device.CapabilitiesExtension2">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Device.CapabilitiesExtension2.Any">
            <remarks/>
        </member>
        <member name="T:StreamCoders.Onvif.Device.AnalyticsDeviceExtension">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Device.AnalyticsDeviceExtension.Any">
            <remarks/>
        </member>
        <member name="T:StreamCoders.Onvif.Device.AnalyticsDeviceCapabilities">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Device.AnalyticsDeviceCapabilities.XAddr">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Device.AnalyticsDeviceCapabilities.RuleSupport">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Device.AnalyticsDeviceCapabilities.RuleSupportSpecified">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Device.AnalyticsDeviceCapabilities.Extension">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Device.AnalyticsDeviceCapabilities.AnyAttr">
            <remarks/>
        </member>
        <member name="T:StreamCoders.Onvif.Device.ReceiverCapabilities">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Device.ReceiverCapabilities.XAddr">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Device.ReceiverCapabilities.RTP_Multicast">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Device.ReceiverCapabilities.RTP_TCP">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Device.ReceiverCapabilities.RTP_RTSP_TCP">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Device.ReceiverCapabilities.SupportedReceivers">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Device.ReceiverCapabilities.MaximumRTSPURILength">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Device.ReceiverCapabilities.Any">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Device.ReceiverCapabilities.AnyAttr">
            <remarks/>
        </member>
        <member name="T:StreamCoders.Onvif.Device.ReplayCapabilities">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Device.ReplayCapabilities.XAddr">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Device.ReplayCapabilities.Any">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Device.ReplayCapabilities.AnyAttr">
            <remarks/>
        </member>
        <member name="T:StreamCoders.Onvif.Device.SearchCapabilities">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Device.SearchCapabilities.XAddr">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Device.SearchCapabilities.MetadataSearch">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Device.SearchCapabilities.Any">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Device.SearchCapabilities.AnyAttr">
            <remarks/>
        </member>
        <member name="T:StreamCoders.Onvif.Device.RecordingCapabilities">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Device.RecordingCapabilities.XAddr">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Device.RecordingCapabilities.ReceiverSource">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Device.RecordingCapabilities.MediaProfileSource">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Device.RecordingCapabilities.DynamicRecordings">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Device.RecordingCapabilities.DynamicTracks">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Device.RecordingCapabilities.MaxStringLength">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Device.RecordingCapabilities.Any">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Device.RecordingCapabilities.AnyAttr">
            <remarks/>
        </member>
        <member name="T:StreamCoders.Onvif.Device.DisplayCapabilities">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Device.DisplayCapabilities.XAddr">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Device.DisplayCapabilities.FixedLayout">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Device.DisplayCapabilities.Any">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Device.DisplayCapabilities.AnyAttr">
            <remarks/>
        </member>
        <member name="T:StreamCoders.Onvif.Device.DeviceIOCapabilities">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Device.DeviceIOCapabilities.XAddr">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Device.DeviceIOCapabilities.VideoSources">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Device.DeviceIOCapabilities.VideoOutputs">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Device.DeviceIOCapabilities.AudioSources">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Device.DeviceIOCapabilities.AudioOutputs">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Device.DeviceIOCapabilities.RelayOutputs">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Device.DeviceIOCapabilities.Any">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Device.DeviceIOCapabilities.AnyAttr">
            <remarks/>
        </member>
        <member name="T:StreamCoders.Onvif.Device.CapabilitiesExtension">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Device.CapabilitiesExtension.Any">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Device.CapabilitiesExtension.DeviceIO">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Device.CapabilitiesExtension.Display">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Device.CapabilitiesExtension.Recording">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Device.CapabilitiesExtension.Search">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Device.CapabilitiesExtension.Replay">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Device.CapabilitiesExtension.Receiver">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Device.CapabilitiesExtension.AnalyticsDevice">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Device.CapabilitiesExtension.Extensions">
            <remarks/>
        </member>
        <member name="T:StreamCoders.Onvif.Device.PTZCapabilities">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Device.PTZCapabilities.XAddr">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Device.PTZCapabilities.Any">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Device.PTZCapabilities.AnyAttr">
            <remarks/>
        </member>
        <member name="T:StreamCoders.Onvif.Device.ProfileCapabilities">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Device.ProfileCapabilities.MaximumNumberOfProfiles">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Device.ProfileCapabilities.Any">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Device.ProfileCapabilities.AnyAttr">
            <remarks/>
        </member>
        <member name="T:StreamCoders.Onvif.Device.MediaCapabilitiesExtension">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Device.MediaCapabilitiesExtension.ProfileCapabilities">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Device.MediaCapabilitiesExtension.Any">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Device.MediaCapabilitiesExtension.AnyAttr">
            <remarks/>
        </member>
        <member name="T:StreamCoders.Onvif.Device.RealTimeStreamingCapabilitiesExtension">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Device.RealTimeStreamingCapabilitiesExtension.Any">
            <remarks/>
        </member>
        <member name="T:StreamCoders.Onvif.Device.RealTimeStreamingCapabilities">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Device.RealTimeStreamingCapabilities.RTPMulticast">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Device.RealTimeStreamingCapabilities.RTPMulticastSpecified">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Device.RealTimeStreamingCapabilities.RTP_TCP">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Device.RealTimeStreamingCapabilities.RTP_TCPSpecified">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Device.RealTimeStreamingCapabilities.RTP_RTSP_TCP">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Device.RealTimeStreamingCapabilities.RTP_RTSP_TCPSpecified">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Device.RealTimeStreamingCapabilities.Extension">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Device.RealTimeStreamingCapabilities.AnyAttr">
            <remarks/>
        </member>
        <member name="T:StreamCoders.Onvif.Device.MediaCapabilities">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Device.MediaCapabilities.XAddr">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Device.MediaCapabilities.StreamingCapabilities">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Device.MediaCapabilities.Any">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Device.MediaCapabilities.Extension">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Device.MediaCapabilities.AnyAttr">
            <remarks/>
        </member>
        <member name="T:StreamCoders.Onvif.Device.ImagingCapabilities">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Device.ImagingCapabilities.XAddr">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Device.ImagingCapabilities.AnyAttr">
            <remarks/>
        </member>
        <member name="T:StreamCoders.Onvif.Device.EventCapabilities">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Device.EventCapabilities.XAddr">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Device.EventCapabilities.WSSubscriptionPolicySupport">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Device.EventCapabilities.WSPullPointSupport">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Device.EventCapabilities.WSPausableSubscriptionManagerInterfaceSupport">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Device.EventCapabilities.Any">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Device.EventCapabilities.AnyAttr">
            <remarks/>
        </member>
        <member name="T:StreamCoders.Onvif.Device.DeviceCapabilitiesExtension">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Device.DeviceCapabilitiesExtension.Any">
            <remarks/>
        </member>
        <member name="T:StreamCoders.Onvif.Device.SecurityCapabilitiesExtension2">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Device.SecurityCapabilitiesExtension2.Dot1X">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Device.SecurityCapabilitiesExtension2.SupportedEAPMethod">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Device.SecurityCapabilitiesExtension2.RemoteUserHandling">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Device.SecurityCapabilitiesExtension2.Any">
            <remarks/>
        </member>
        <member name="T:StreamCoders.Onvif.Device.SecurityCapabilitiesExtension">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Device.SecurityCapabilitiesExtension.TLS10">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Device.SecurityCapabilitiesExtension.Extension">
            <remarks/>
        </member>
        <member name="T:StreamCoders.Onvif.Device.SecurityCapabilities1">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Device.SecurityCapabilities1.TLS11">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Device.SecurityCapabilities1.TLS12">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Device.SecurityCapabilities1.OnboardKeyGeneration">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Device.SecurityCapabilities1.AccessPolicyConfig">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Device.SecurityCapabilities1.X509Token">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Device.SecurityCapabilities1.SAMLToken">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Device.SecurityCapabilities1.KerberosToken">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Device.SecurityCapabilities1.RELToken">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Device.SecurityCapabilities1.Any">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Device.SecurityCapabilities1.Extension">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Device.SecurityCapabilities1.AnyAttr">
            <remarks/>
        </member>
        <member name="T:StreamCoders.Onvif.Device.IOCapabilitiesExtension2">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Device.IOCapabilitiesExtension2.Any">
            <remarks/>
        </member>
        <member name="T:StreamCoders.Onvif.Device.IOCapabilitiesExtension">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Device.IOCapabilitiesExtension.Any">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Device.IOCapabilitiesExtension.Auxiliary">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Device.IOCapabilitiesExtension.AuxiliarySpecified">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Device.IOCapabilitiesExtension.AuxiliaryCommands">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Device.IOCapabilitiesExtension.Extension">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Device.IOCapabilitiesExtension.AnyAttr">
            <remarks/>
        </member>
        <member name="T:StreamCoders.Onvif.Device.IOCapabilities">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Device.IOCapabilities.InputConnectors">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Device.IOCapabilities.InputConnectorsSpecified">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Device.IOCapabilities.RelayOutputs">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Device.IOCapabilities.RelayOutputsSpecified">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Device.IOCapabilities.Extension">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Device.IOCapabilities.AnyAttr">
            <remarks/>
        </member>
        <member name="T:StreamCoders.Onvif.Device.SystemCapabilitiesExtension2">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Device.SystemCapabilitiesExtension2.Any">
            <remarks/>
        </member>
        <member name="T:StreamCoders.Onvif.Device.SystemCapabilitiesExtension">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Device.SystemCapabilitiesExtension.Any">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Device.SystemCapabilitiesExtension.HttpFirmwareUpgrade">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Device.SystemCapabilitiesExtension.HttpFirmwareUpgradeSpecified">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Device.SystemCapabilitiesExtension.HttpSystemBackup">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Device.SystemCapabilitiesExtension.HttpSystemBackupSpecified">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Device.SystemCapabilitiesExtension.HttpSystemLogging">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Device.SystemCapabilitiesExtension.HttpSystemLoggingSpecified">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Device.SystemCapabilitiesExtension.HttpSupportInformation">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Device.SystemCapabilitiesExtension.HttpSupportInformationSpecified">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Device.SystemCapabilitiesExtension.Extension">
            <remarks/>
        </member>
        <member name="T:StreamCoders.Onvif.Device.SystemCapabilities1">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Device.SystemCapabilities1.DiscoveryResolve">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Device.SystemCapabilities1.DiscoveryBye">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Device.SystemCapabilities1.RemoteDiscovery">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Device.SystemCapabilities1.SystemBackup">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Device.SystemCapabilities1.SystemLogging">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Device.SystemCapabilities1.FirmwareUpgrade">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Device.SystemCapabilities1.SupportedVersions">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Device.SystemCapabilities1.Extension">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Device.SystemCapabilities1.AnyAttr">
            <remarks/>
        </member>
        <member name="T:StreamCoders.Onvif.Device.NetworkCapabilitiesExtension2">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Device.NetworkCapabilitiesExtension2.Any">
            <remarks/>
        </member>
        <member name="T:StreamCoders.Onvif.Device.NetworkCapabilitiesExtension">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Device.NetworkCapabilitiesExtension.Any">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Device.NetworkCapabilitiesExtension.Dot11Configuration">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Device.NetworkCapabilitiesExtension.Dot11ConfigurationSpecified">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Device.NetworkCapabilitiesExtension.Extension">
            <remarks/>
        </member>
        <member name="T:StreamCoders.Onvif.Device.NetworkCapabilities1">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Device.NetworkCapabilities1.IPFilter">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Device.NetworkCapabilities1.IPFilterSpecified">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Device.NetworkCapabilities1.ZeroConfiguration">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Device.NetworkCapabilities1.ZeroConfigurationSpecified">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Device.NetworkCapabilities1.IPVersion6">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Device.NetworkCapabilities1.IPVersion6Specified">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Device.NetworkCapabilities1.DynDNS">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Device.NetworkCapabilities1.DynDNSSpecified">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Device.NetworkCapabilities1.Extension">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Device.NetworkCapabilities1.AnyAttr">
            <remarks/>
        </member>
        <member name="T:StreamCoders.Onvif.Device.DeviceCapabilities">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Device.DeviceCapabilities.XAddr">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Device.DeviceCapabilities.Network">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Device.DeviceCapabilities.System">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Device.DeviceCapabilities.IO">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Device.DeviceCapabilities.Security">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Device.DeviceCapabilities.Extension">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Device.DeviceCapabilities.AnyAttr">
            <remarks/>
        </member>
        <member name="T:StreamCoders.Onvif.Device.AnalyticsCapabilities">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Device.AnalyticsCapabilities.XAddr">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Device.AnalyticsCapabilities.RuleSupport">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Device.AnalyticsCapabilities.AnalyticsModuleSupport">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Device.AnalyticsCapabilities.Any">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Device.AnalyticsCapabilities.AnyAttr">
            <remarks/>
        </member>
        <member name="T:StreamCoders.Onvif.Device.Capabilities">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Device.Capabilities.Analytics">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Device.Capabilities.Device">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Device.Capabilities.Events">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Device.Capabilities.Imaging">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Device.Capabilities.Media">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Device.Capabilities.PTZ">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Device.Capabilities.Extension">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Device.Capabilities.AnyAttr">
            <remarks/>
        </member>
        <member name="T:StreamCoders.Onvif.Device.UserExtension">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Device.UserExtension.Any">
            <remarks/>
        </member>
        <member name="T:StreamCoders.Onvif.Device.User">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Device.User.Username">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Device.User.Password">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Device.User.UserLevel">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Device.User.Extension">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Device.User.AnyAttr">
            <remarks/>
        </member>
        <member name="T:StreamCoders.Onvif.Device.UserLevel">
            <remarks/>
        </member>
        <member name="F:StreamCoders.Onvif.Device.UserLevel.Administrator">
            <remarks/>
        </member>
        <member name="F:StreamCoders.Onvif.Device.UserLevel.Operator">
            <remarks/>
        </member>
        <member name="F:StreamCoders.Onvif.Device.UserLevel.User">
            <remarks/>
        </member>
        <member name="F:StreamCoders.Onvif.Device.UserLevel.Anonymous">
            <remarks/>
        </member>
        <member name="F:StreamCoders.Onvif.Device.UserLevel.Extended">
            <remarks/>
        </member>
        <member name="T:StreamCoders.Onvif.Device.RemoteUser">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Device.RemoteUser.Username">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Device.RemoteUser.Password">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Device.RemoteUser.UseDerivedPassword">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Device.RemoteUser.Any">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Device.RemoteUser.AnyAttr">
            <remarks/>
        </member>
        <member name="T:StreamCoders.Onvif.Device.Scope">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Device.Scope.ScopeDef">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Device.Scope.ScopeItem">
            <remarks/>
        </member>
        <member name="T:StreamCoders.Onvif.Device.ScopeDefinition">
            <remarks/>
        </member>
        <member name="F:StreamCoders.Onvif.Device.ScopeDefinition.Fixed">
            <remarks/>
        </member>
        <member name="F:StreamCoders.Onvif.Device.ScopeDefinition.Configurable">
            <remarks/>
        </member>
        <member name="T:StreamCoders.Onvif.Device.SupportInformation">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Device.SupportInformation.Binary">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Device.SupportInformation.String">
            <remarks/>
        </member>
        <member name="T:StreamCoders.Onvif.Device.AttachmentData">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Device.AttachmentData.Include">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Device.AttachmentData.contentType">
            <remarks/>
        </member>
        <member name="T:StreamCoders.Onvif.Device.Include">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Device.Include.Any">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Device.Include.href">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Device.Include.AnyAttr">
            <remarks/>
        </member>
        <member name="T:StreamCoders.Onvif.Device.SystemLog">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Device.SystemLog.Binary">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Device.SystemLog.String">
            <remarks/>
        </member>
        <member name="T:StreamCoders.Onvif.Device.BackupFile">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Device.BackupFile.Name">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Device.BackupFile.Data">
            <remarks/>
        </member>
        <member name="T:StreamCoders.Onvif.Device.SystemDateTimeExtension">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Device.SystemDateTimeExtension.Any">
            <remarks/>
        </member>
        <member name="T:StreamCoders.Onvif.Device.SystemDateTime">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Device.SystemDateTime.DateTimeType">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Device.SystemDateTime.DaylightSavings">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Device.SystemDateTime.TimeZone">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Device.SystemDateTime.UTCDateTime">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Device.SystemDateTime.LocalDateTime">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Device.SystemDateTime.Extension">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Device.SystemDateTime.AnyAttr">
            <remarks/>
        </member>
        <member name="T:StreamCoders.Onvif.Device.SetDateTimeType">
            <remarks/>
        </member>
        <member name="F:StreamCoders.Onvif.Device.SetDateTimeType.Manual">
            <remarks/>
        </member>
        <member name="F:StreamCoders.Onvif.Device.SetDateTimeType.NTP">
            <remarks/>
        </member>
        <member name="T:StreamCoders.Onvif.Device.TimeZone">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Device.TimeZone.TZ">
            <remarks/>
        </member>
        <member name="T:StreamCoders.Onvif.Device.DateTime">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Device.DateTime.Time">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Device.DateTime.Date">
            <remarks/>
        </member>
        <member name="T:StreamCoders.Onvif.Device.Time">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Device.Time.Hour">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Device.Time.Minute">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Device.Time.Second">
            <remarks/>
        </member>
        <member name="T:StreamCoders.Onvif.Device.Date">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Device.Date.Year">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Device.Date.Month">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Device.Date.Day">
            <remarks/>
        </member>
        <member name="T:StreamCoders.Onvif.Device.MiscCapabilities">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Device.MiscCapabilities.AuxiliaryCommands">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Device.MiscCapabilities.AnyAttr">
            <remarks/>
        </member>
        <member name="T:StreamCoders.Onvif.Device.SystemCapabilities">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Device.SystemCapabilities.DiscoveryResolve">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Device.SystemCapabilities.DiscoveryResolveSpecified">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Device.SystemCapabilities.DiscoveryBye">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Device.SystemCapabilities.DiscoveryByeSpecified">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Device.SystemCapabilities.RemoteDiscovery">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Device.SystemCapabilities.RemoteDiscoverySpecified">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Device.SystemCapabilities.SystemBackup">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Device.SystemCapabilities.SystemBackupSpecified">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Device.SystemCapabilities.SystemLogging">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Device.SystemCapabilities.SystemLoggingSpecified">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Device.SystemCapabilities.FirmwareUpgrade">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Device.SystemCapabilities.FirmwareUpgradeSpecified">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Device.SystemCapabilities.HttpFirmwareUpgrade">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Device.SystemCapabilities.HttpFirmwareUpgradeSpecified">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Device.SystemCapabilities.HttpSystemBackup">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Device.SystemCapabilities.HttpSystemBackupSpecified">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Device.SystemCapabilities.HttpSystemLogging">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Device.SystemCapabilities.HttpSystemLoggingSpecified">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Device.SystemCapabilities.HttpSupportInformation">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Device.SystemCapabilities.HttpSupportInformationSpecified">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Device.SystemCapabilities.StorageConfiguration">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Device.SystemCapabilities.StorageConfigurationSpecified">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Device.SystemCapabilities.MaxStorageConfigurations">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Device.SystemCapabilities.MaxStorageConfigurationsSpecified">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Device.SystemCapabilities.GeoLocationEntries">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Device.SystemCapabilities.GeoLocationEntriesSpecified">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Device.SystemCapabilities.AutoGeo">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Device.SystemCapabilities.AnyAttr">
            <remarks/>
        </member>
        <member name="T:StreamCoders.Onvif.Device.SecurityCapabilities">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Device.SecurityCapabilities.TLS10">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Device.SecurityCapabilities.TLS10Specified">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Device.SecurityCapabilities.TLS11">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Device.SecurityCapabilities.TLS11Specified">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Device.SecurityCapabilities.TLS12">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Device.SecurityCapabilities.TLS12Specified">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Device.SecurityCapabilities.OnboardKeyGeneration">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Device.SecurityCapabilities.OnboardKeyGenerationSpecified">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Device.SecurityCapabilities.AccessPolicyConfig">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Device.SecurityCapabilities.AccessPolicyConfigSpecified">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Device.SecurityCapabilities.DefaultAccessPolicy">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Device.SecurityCapabilities.DefaultAccessPolicySpecified">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Device.SecurityCapabilities.Dot1X">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Device.SecurityCapabilities.Dot1XSpecified">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Device.SecurityCapabilities.RemoteUserHandling">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Device.SecurityCapabilities.RemoteUserHandlingSpecified">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Device.SecurityCapabilities.X509Token">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Device.SecurityCapabilities.X509TokenSpecified">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Device.SecurityCapabilities.SAMLToken">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Device.SecurityCapabilities.SAMLTokenSpecified">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Device.SecurityCapabilities.KerberosToken">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Device.SecurityCapabilities.KerberosTokenSpecified">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Device.SecurityCapabilities.UsernameToken">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Device.SecurityCapabilities.UsernameTokenSpecified">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Device.SecurityCapabilities.HttpDigest">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Device.SecurityCapabilities.HttpDigestSpecified">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Device.SecurityCapabilities.RELToken">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Device.SecurityCapabilities.RELTokenSpecified">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Device.SecurityCapabilities.SupportedEAPMethods">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Device.SecurityCapabilities.MaxUsers">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Device.SecurityCapabilities.MaxUsersSpecified">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Device.SecurityCapabilities.MaxUserNameLength">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Device.SecurityCapabilities.MaxUserNameLengthSpecified">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Device.SecurityCapabilities.MaxPasswordLength">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Device.SecurityCapabilities.MaxPasswordLengthSpecified">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Device.SecurityCapabilities.AnyAttr">
            <remarks/>
        </member>
        <member name="T:StreamCoders.Onvif.Device.NetworkCapabilities">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Device.NetworkCapabilities.IPFilter">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Device.NetworkCapabilities.IPFilterSpecified">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Device.NetworkCapabilities.ZeroConfiguration">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Device.NetworkCapabilities.ZeroConfigurationSpecified">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Device.NetworkCapabilities.IPVersion6">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Device.NetworkCapabilities.IPVersion6Specified">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Device.NetworkCapabilities.DynDNS">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Device.NetworkCapabilities.DynDNSSpecified">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Device.NetworkCapabilities.Dot11Configuration">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Device.NetworkCapabilities.Dot11ConfigurationSpecified">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Device.NetworkCapabilities.Dot1XConfigurations">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Device.NetworkCapabilities.Dot1XConfigurationsSpecified">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Device.NetworkCapabilities.HostnameFromDHCP">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Device.NetworkCapabilities.HostnameFromDHCPSpecified">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Device.NetworkCapabilities.NTP">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Device.NetworkCapabilities.NTPSpecified">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Device.NetworkCapabilities.DHCPv6">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Device.NetworkCapabilities.DHCPv6Specified">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Device.NetworkCapabilities.AnyAttr">
            <remarks/>
        </member>
        <member name="T:StreamCoders.Onvif.Device.DeviceServiceCapabilities">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Device.DeviceServiceCapabilities.Network">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Device.DeviceServiceCapabilities.Security">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Device.DeviceServiceCapabilities.System">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Device.DeviceServiceCapabilities.Misc">
            <remarks/>
        </member>
        <member name="T:StreamCoders.Onvif.Device.FactoryDefaultType">
            <remarks/>
        </member>
        <member name="F:StreamCoders.Onvif.Device.FactoryDefaultType.Hard">
            <remarks/>
        </member>
        <member name="F:StreamCoders.Onvif.Device.FactoryDefaultType.Soft">
            <remarks/>
        </member>
        <member name="T:StreamCoders.Onvif.Device.DiscoveryMode">
            <remarks/>
        </member>
        <member name="F:StreamCoders.Onvif.Device.DiscoveryMode.Discoverable">
            <remarks/>
        </member>
        <member name="F:StreamCoders.Onvif.Device.DiscoveryMode.NonDiscoverable">
            <remarks/>
        </member>
        <member name="T:StreamCoders.Onvif.Device.CapabilityCategory">
            <remarks/>
        </member>
        <member name="F:StreamCoders.Onvif.Device.CapabilityCategory.All">
            <remarks/>
        </member>
        <member name="F:StreamCoders.Onvif.Device.CapabilityCategory.Analytics">
            <remarks/>
        </member>
        <member name="F:StreamCoders.Onvif.Device.CapabilityCategory.Device">
            <remarks/>
        </member>
        <member name="F:StreamCoders.Onvif.Device.CapabilityCategory.Events">
            <remarks/>
        </member>
        <member name="F:StreamCoders.Onvif.Device.CapabilityCategory.Imaging">
            <remarks/>
        </member>
        <member name="F:StreamCoders.Onvif.Device.CapabilityCategory.Media">
            <remarks/>
        </member>
        <member name="F:StreamCoders.Onvif.Device.CapabilityCategory.PTZ">
            <remarks/>
        </member>
        <member name="T:StreamCoders.Onvif.Device.RelayLogicalState">
            <remarks/>
        </member>
        <member name="F:StreamCoders.Onvif.Device.RelayLogicalState.active">
            <remarks/>
        </member>
        <member name="F:StreamCoders.Onvif.Device.RelayLogicalState.inactive">
            <remarks/>
        </member>
        <member name="T:StreamCoders.Onvif.Device.GetSystemUrisResponseExtension">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Device.GetSystemUrisResponseExtension.Any">
            <remarks/>
        </member>
        <member name="T:StreamCoders.Onvif.Display.Capabilities">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Display.Capabilities.Any">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Display.Capabilities.FixedLayout">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Display.Capabilities.FixedLayoutSpecified">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Display.Capabilities.AnyAttr">
            <remarks/>
        </member>
        <member name="T:StreamCoders.Onvif.Display.MetadataInputExtension">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Display.MetadataInputExtension.Any">
            <remarks/>
        </member>
        <member name="T:StreamCoders.Onvif.Display.MetadataInput">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Display.MetadataInput.MetadataConfig">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Display.MetadataInput.Extension">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Display.MetadataInput.AnyAttr">
            <remarks/>
        </member>
        <member name="T:StreamCoders.Onvif.Display.Config">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Display.Config.Parameters">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Display.Config.Name">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Display.Config.Type">
            <remarks/>
        </member>
        <member name="T:StreamCoders.Onvif.Display.ItemList">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Display.ItemList.SimpleItem">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Display.ItemList.ElementItem">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Display.ItemList.Extension">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Display.ItemList.AnyAttr">
            <remarks/>
        </member>
        <member name="T:StreamCoders.Onvif.Display.ItemListSimpleItem">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Display.ItemListSimpleItem.Name">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Display.ItemListSimpleItem.Value">
            <remarks/>
        </member>
        <member name="T:StreamCoders.Onvif.Display.ItemListElementItem">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Display.ItemListElementItem.Any">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Display.ItemListElementItem.Name">
            <remarks/>
        </member>
        <member name="T:StreamCoders.Onvif.Display.ItemListExtension">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Display.ItemListExtension.Any">
            <remarks/>
        </member>
        <member name="T:StreamCoders.Onvif.Display.SourceIdentificationExtension">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Display.SourceIdentificationExtension.Any">
            <remarks/>
        </member>
        <member name="T:StreamCoders.Onvif.Display.SourceIdentification">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Display.SourceIdentification.Name">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Display.SourceIdentification.Token">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Display.SourceIdentification.Extension">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Display.SourceIdentification.AnyAttr">
            <remarks/>
        </member>
        <member name="T:StreamCoders.Onvif.Display.AnalyticsDeviceEngineConfigurationExtension">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Display.AnalyticsDeviceEngineConfigurationExtension.Any">
            <remarks/>
        </member>
        <member name="T:StreamCoders.Onvif.Display.AnalyticsEngineInputInfoExtension">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Display.AnalyticsEngineInputInfoExtension.Any">
            <remarks/>
        </member>
        <member name="T:StreamCoders.Onvif.Display.AnalyticsEngineInputInfo">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Display.AnalyticsEngineInputInfo.InputInfo">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Display.AnalyticsEngineInputInfo.Extension">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Display.AnalyticsEngineInputInfo.AnyAttr">
            <remarks/>
        </member>
        <member name="T:StreamCoders.Onvif.Display.EngineConfiguration">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Display.EngineConfiguration.VideoAnalyticsConfiguration">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Display.EngineConfiguration.AnalyticsEngineInputInfo">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Display.EngineConfiguration.Any">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Display.EngineConfiguration.AnyAttr">
            <remarks/>
        </member>
        <member name="T:StreamCoders.Onvif.Display.VideoAnalyticsConfiguration">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Display.VideoAnalyticsConfiguration.AnalyticsEngineConfiguration">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Display.VideoAnalyticsConfiguration.RuleEngineConfiguration">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Display.VideoAnalyticsConfiguration.Any">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Display.VideoAnalyticsConfiguration.AnyAttr">
            <remarks/>
        </member>
        <member name="T:StreamCoders.Onvif.Display.AnalyticsEngineConfiguration">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Display.AnalyticsEngineConfiguration.AnalyticsModule">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Display.AnalyticsEngineConfiguration.Extension">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Display.AnalyticsEngineConfiguration.AnyAttr">
            <remarks/>
        </member>
        <member name="T:StreamCoders.Onvif.Display.AnalyticsEngineConfigurationExtension">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Display.AnalyticsEngineConfigurationExtension.Any">
            <remarks/>
        </member>
        <member name="T:StreamCoders.Onvif.Display.RuleEngineConfiguration">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Display.RuleEngineConfiguration.Rule">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Display.RuleEngineConfiguration.Extension">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Display.RuleEngineConfiguration.AnyAttr">
            <remarks/>
        </member>
        <member name="T:StreamCoders.Onvif.Display.RuleEngineConfigurationExtension">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Display.RuleEngineConfigurationExtension.Any">
            <remarks/>
        </member>
        <member name="T:StreamCoders.Onvif.Display.ConfigurationEntity">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Display.ConfigurationEntity.Name">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Display.ConfigurationEntity.UseCount">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Display.ConfigurationEntity.token">
            <remarks/>
        </member>
        <member name="T:StreamCoders.Onvif.Display.AnalyticsEngineControl">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Display.AnalyticsEngineControl.EngineToken">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Display.AnalyticsEngineControl.EngineConfigToken">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Display.AnalyticsEngineControl.InputToken">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Display.AnalyticsEngineControl.ReceiverToken">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Display.AnalyticsEngineControl.Multicast">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Display.AnalyticsEngineControl.Subscription">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Display.AnalyticsEngineControl.Mode">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Display.AnalyticsEngineControl.Any">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Display.AnalyticsEngineControl.AnyAttr">
            <remarks/>
        </member>
        <member name="T:StreamCoders.Onvif.Display.MulticastConfiguration">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Display.MulticastConfiguration.Address">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Display.MulticastConfiguration.Port">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Display.MulticastConfiguration.TTL">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Display.MulticastConfiguration.AutoStart">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Display.MulticastConfiguration.Any">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Display.MulticastConfiguration.AnyAttr">
            <remarks/>
        </member>
        <member name="T:StreamCoders.Onvif.Display.IPAddress">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Display.IPAddress.Type">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Display.IPAddress.IPv4Address">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Display.IPAddress.IPv6Address">
            <remarks/>
        </member>
        <member name="T:StreamCoders.Onvif.Display.IPType">
            <remarks/>
        </member>
        <member name="F:StreamCoders.Onvif.Display.IPType.IPv4">
            <remarks/>
        </member>
        <member name="F:StreamCoders.Onvif.Display.IPType.IPv6">
            <remarks/>
        </member>
        <member name="T:StreamCoders.Onvif.Display.ModeOfOperation">
            <remarks/>
        </member>
        <member name="F:StreamCoders.Onvif.Display.ModeOfOperation.Idle">
            <remarks/>
        </member>
        <member name="F:StreamCoders.Onvif.Display.ModeOfOperation.Active">
            <remarks/>
        </member>
        <member name="F:StreamCoders.Onvif.Display.ModeOfOperation.Unknown">
            <remarks/>
        </member>
        <member name="T:StreamCoders.Onvif.Display.AnalyticsEngineInput">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Display.AnalyticsEngineInput.SourceIdentification">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Display.AnalyticsEngineInput.VideoInput">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Display.AnalyticsEngineInput.MetadataInput">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Display.AnalyticsEngineInput.Any">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Display.AnalyticsEngineInput.AnyAttr">
            <remarks/>
        </member>
        <member name="T:StreamCoders.Onvif.Display.VideoEncoderConfiguration">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Display.VideoEncoderConfiguration.Encoding">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Display.VideoEncoderConfiguration.Resolution">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Display.VideoEncoderConfiguration.Quality">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Display.VideoEncoderConfiguration.RateControl">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Display.VideoEncoderConfiguration.MPEG4">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Display.VideoEncoderConfiguration.H264">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Display.VideoEncoderConfiguration.Multicast">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Display.VideoEncoderConfiguration.SessionTimeout">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Display.VideoEncoderConfiguration.Any">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Display.VideoEncoderConfiguration.AnyAttr">
            <remarks/>
        </member>
        <member name="T:StreamCoders.Onvif.Display.VideoEncoding">
            <remarks/>
        </member>
        <member name="F:StreamCoders.Onvif.Display.VideoEncoding.JPEG">
            <remarks/>
        </member>
        <member name="F:StreamCoders.Onvif.Display.VideoEncoding.MPEG4">
            <remarks/>
        </member>
        <member name="F:StreamCoders.Onvif.Display.VideoEncoding.H264">
            <remarks/>
        </member>
        <member name="T:StreamCoders.Onvif.Display.VideoResolution">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Display.VideoResolution.Width">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Display.VideoResolution.Height">
            <remarks/>
        </member>
        <member name="T:StreamCoders.Onvif.Display.VideoRateControl">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Display.VideoRateControl.FrameRateLimit">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Display.VideoRateControl.EncodingInterval">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Display.VideoRateControl.BitrateLimit">
            <remarks/>
        </member>
        <member name="T:StreamCoders.Onvif.Display.Mpeg4Configuration">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Display.Mpeg4Configuration.GovLength">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Display.Mpeg4Configuration.Mpeg4Profile">
            <remarks/>
        </member>
        <member name="T:StreamCoders.Onvif.Display.Mpeg4Profile">
            <remarks/>
        </member>
        <member name="F:StreamCoders.Onvif.Display.Mpeg4Profile.SP">
            <remarks/>
        </member>
        <member name="F:StreamCoders.Onvif.Display.Mpeg4Profile.ASP">
            <remarks/>
        </member>
        <member name="T:StreamCoders.Onvif.Display.H264Configuration">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Display.H264Configuration.GovLength">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Display.H264Configuration.H264Profile">
            <remarks/>
        </member>
        <member name="T:StreamCoders.Onvif.Display.H264Profile">
            <remarks/>
        </member>
        <member name="F:StreamCoders.Onvif.Display.H264Profile.Baseline">
            <remarks/>
        </member>
        <member name="F:StreamCoders.Onvif.Display.H264Profile.Main">
            <remarks/>
        </member>
        <member name="F:StreamCoders.Onvif.Display.H264Profile.Extended">
            <remarks/>
        </member>
        <member name="F:StreamCoders.Onvif.Display.H264Profile.High">
            <remarks/>
        </member>
        <member name="T:StreamCoders.Onvif.Display.AnalyticsEngine">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Display.AnalyticsEngine.AnalyticsEngineConfiguration">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Display.AnalyticsEngine.Any">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Display.AnalyticsEngine.AnyAttr">
            <remarks/>
        </member>
        <member name="T:StreamCoders.Onvif.Display.AnalyticsDeviceEngineConfiguration">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Display.AnalyticsDeviceEngineConfiguration.EngineConfiguration">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Display.AnalyticsDeviceEngineConfiguration.Extension">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Display.AnalyticsDeviceEngineConfiguration.AnyAttr">
            <remarks/>
        </member>
        <member name="T:StreamCoders.Onvif.Display.PTZConfiguration">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Display.PTZConfiguration.NodeToken">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Display.PTZConfiguration.DefaultAbsolutePantTiltPositionSpace">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Display.PTZConfiguration.DefaultAbsoluteZoomPositionSpace">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Display.PTZConfiguration.DefaultRelativePanTiltTranslationSpace">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Display.PTZConfiguration.DefaultRelativeZoomTranslationSpace">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Display.PTZConfiguration.DefaultContinuousPanTiltVelocitySpace">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Display.PTZConfiguration.DefaultContinuousZoomVelocitySpace">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Display.PTZConfiguration.DefaultPTZSpeed">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Display.PTZConfiguration.DefaultPTZTimeout">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Display.PTZConfiguration.PanTiltLimits">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Display.PTZConfiguration.ZoomLimits">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Display.PTZConfiguration.Extension">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Display.PTZConfiguration.MoveRamp">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Display.PTZConfiguration.MoveRampSpecified">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Display.PTZConfiguration.PresetRamp">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Display.PTZConfiguration.PresetRampSpecified">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Display.PTZConfiguration.PresetTourRamp">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Display.PTZConfiguration.PresetTourRampSpecified">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Display.PTZConfiguration.AnyAttr">
            <remarks/>
        </member>
        <member name="T:StreamCoders.Onvif.Display.PTZSpeed">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Display.PTZSpeed.PanTilt">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Display.PTZSpeed.Zoom">
            <remarks/>
        </member>
        <member name="T:StreamCoders.Onvif.Display.Vector2D">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Display.Vector2D.x">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Display.Vector2D.y">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Display.Vector2D.space">
            <remarks/>
        </member>
        <member name="T:StreamCoders.Onvif.Display.Vector1D">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Display.Vector1D.x">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Display.Vector1D.space">
            <remarks/>
        </member>
        <member name="T:StreamCoders.Onvif.Display.PanTiltLimits">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Display.PanTiltLimits.Range">
            <remarks/>
        </member>
        <member name="T:StreamCoders.Onvif.Display.Space2DDescription">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Display.Space2DDescription.URI">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Display.Space2DDescription.XRange">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Display.Space2DDescription.YRange">
            <remarks/>
        </member>
        <member name="T:StreamCoders.Onvif.Display.FloatRange">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Display.FloatRange.Min">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Display.FloatRange.Max">
            <remarks/>
        </member>
        <member name="T:StreamCoders.Onvif.Display.ZoomLimits">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Display.ZoomLimits.Range">
            <remarks/>
        </member>
        <member name="T:StreamCoders.Onvif.Display.Space1DDescription">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Display.Space1DDescription.URI">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Display.Space1DDescription.XRange">
            <remarks/>
        </member>
        <member name="T:StreamCoders.Onvif.Display.PTZConfigurationExtension">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Display.PTZConfigurationExtension.Any">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Display.PTZConfigurationExtension.PTControlDirection">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Display.PTZConfigurationExtension.Extension">
            <remarks/>
        </member>
        <member name="T:StreamCoders.Onvif.Display.PTControlDirection">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Display.PTControlDirection.EFlip">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Display.PTControlDirection.Reverse">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Display.PTControlDirection.Extension">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Display.PTControlDirection.AnyAttr">
            <remarks/>
        </member>
        <member name="T:StreamCoders.Onvif.Display.EFlip">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Display.EFlip.Mode">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Display.EFlip.Any">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Display.EFlip.AnyAttr">
            <remarks/>
        </member>
        <member name="T:StreamCoders.Onvif.Display.EFlipMode">
            <remarks/>
        </member>
        <member name="F:StreamCoders.Onvif.Display.EFlipMode.OFF">
            <remarks/>
        </member>
        <member name="F:StreamCoders.Onvif.Display.EFlipMode.ON">
            <remarks/>
        </member>
        <member name="F:StreamCoders.Onvif.Display.EFlipMode.Extended">
            <remarks/>
        </member>
        <member name="T:StreamCoders.Onvif.Display.Reverse">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Display.Reverse.Mode">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Display.Reverse.Any">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Display.Reverse.AnyAttr">
            <remarks/>
        </member>
        <member name="T:StreamCoders.Onvif.Display.ReverseMode">
            <remarks/>
        </member>
        <member name="F:StreamCoders.Onvif.Display.ReverseMode.OFF">
            <remarks/>
        </member>
        <member name="F:StreamCoders.Onvif.Display.ReverseMode.ON">
            <remarks/>
        </member>
        <member name="F:StreamCoders.Onvif.Display.ReverseMode.AUTO">
            <remarks/>
        </member>
        <member name="F:StreamCoders.Onvif.Display.ReverseMode.Extended">
            <remarks/>
        </member>
        <member name="T:StreamCoders.Onvif.Display.PTControlDirectionExtension">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Display.PTControlDirectionExtension.Any">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Display.PTControlDirectionExtension.AnyAttr">
            <remarks/>
        </member>
        <member name="T:StreamCoders.Onvif.Display.PTZConfigurationExtension2">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Display.PTZConfigurationExtension2.Any">
            <remarks/>
        </member>
        <member name="T:StreamCoders.Onvif.Display.AudioDecoderConfiguration">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Display.AudioDecoderConfiguration.Any">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Display.AudioDecoderConfiguration.AnyAttr">
            <remarks/>
        </member>
        <member name="T:StreamCoders.Onvif.Display.AudioOutputConfiguration">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Display.AudioOutputConfiguration.OutputToken">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Display.AudioOutputConfiguration.SendPrimacy">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Display.AudioOutputConfiguration.OutputLevel">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Display.AudioOutputConfiguration.Any">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Display.AudioOutputConfiguration.AnyAttr">
            <remarks/>
        </member>
        <member name="T:StreamCoders.Onvif.Display.VideoOutputConfiguration">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Display.VideoOutputConfiguration.OutputToken">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Display.VideoOutputConfiguration.Any">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Display.VideoOutputConfiguration.AnyAttr">
            <remarks/>
        </member>
        <member name="T:StreamCoders.Onvif.Display.MetadataConfiguration">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Display.MetadataConfiguration.PTZStatus">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Display.MetadataConfiguration.Events">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Display.MetadataConfiguration.Analytics">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Display.MetadataConfiguration.AnalyticsSpecified">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Display.MetadataConfiguration.Multicast">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Display.MetadataConfiguration.SessionTimeout">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Display.MetadataConfiguration.Any">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Display.MetadataConfiguration.AnalyticsEngineConfiguration">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Display.MetadataConfiguration.Extension">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Display.MetadataConfiguration.CompressionType">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Display.MetadataConfiguration.AnyAttr">
            <remarks/>
        </member>
        <member name="T:StreamCoders.Onvif.Display.PTZFilter">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Display.PTZFilter.Status">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Display.PTZFilter.Position">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Display.PTZFilter.AnyAttr">
            <remarks/>
        </member>
        <member name="T:StreamCoders.Onvif.Display.EventSubscription">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Display.EventSubscription.Filter">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Display.EventSubscription.SubscriptionPolicy">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Display.EventSubscription.Any">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Display.EventSubscription.AnyAttr">
            <remarks/>
        </member>
        <member name="T:StreamCoders.Onvif.Display.FilterType">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Display.FilterType.Any">
            <remarks/>
        </member>
        <member name="T:StreamCoders.Onvif.Display.EventFilter">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Display.EventFilter.AnyAttr">
            <remarks/>
        </member>
        <member name="T:StreamCoders.Onvif.Display.EventSubscriptionSubscriptionPolicy">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Display.EventSubscriptionSubscriptionPolicy.Any">
            <remarks/>
        </member>
        <member name="T:StreamCoders.Onvif.Display.MetadataConfigurationExtension">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Display.MetadataConfigurationExtension.Any">
            <remarks/>
        </member>
        <member name="T:StreamCoders.Onvif.Display.AudioEncoder2Configuration">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Display.AudioEncoder2Configuration.Encoding">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Display.AudioEncoder2Configuration.Multicast">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Display.AudioEncoder2Configuration.Bitrate">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Display.AudioEncoder2Configuration.SampleRate">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Display.AudioEncoder2Configuration.Any">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Display.AudioEncoder2Configuration.AnyAttr">
            <remarks/>
        </member>
        <member name="T:StreamCoders.Onvif.Display.AudioEncoderConfiguration">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Display.AudioEncoderConfiguration.Encoding">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Display.AudioEncoderConfiguration.Bitrate">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Display.AudioEncoderConfiguration.SampleRate">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Display.AudioEncoderConfiguration.Multicast">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Display.AudioEncoderConfiguration.SessionTimeout">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Display.AudioEncoderConfiguration.Any">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Display.AudioEncoderConfiguration.AnyAttr">
            <remarks/>
        </member>
        <member name="T:StreamCoders.Onvif.Display.AudioEncoding">
            <remarks/>
        </member>
        <member name="F:StreamCoders.Onvif.Display.AudioEncoding.G711">
            <remarks/>
        </member>
        <member name="F:StreamCoders.Onvif.Display.AudioEncoding.G726">
            <remarks/>
        </member>
        <member name="F:StreamCoders.Onvif.Display.AudioEncoding.AAC">
            <remarks/>
        </member>
        <member name="T:StreamCoders.Onvif.Display.AudioSourceConfiguration">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Display.AudioSourceConfiguration.SourceToken">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Display.AudioSourceConfiguration.Any">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Display.AudioSourceConfiguration.AnyAttr">
            <remarks/>
        </member>
        <member name="T:StreamCoders.Onvif.Display.VideoEncoder2Configuration">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Display.VideoEncoder2Configuration.Encoding">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Display.VideoEncoder2Configuration.Resolution">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Display.VideoEncoder2Configuration.RateControl">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Display.VideoEncoder2Configuration.Multicast">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Display.VideoEncoder2Configuration.Quality">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Display.VideoEncoder2Configuration.Any">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Display.VideoEncoder2Configuration.GovLength">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Display.VideoEncoder2Configuration.GovLengthSpecified">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Display.VideoEncoder2Configuration.Profile">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Display.VideoEncoder2Configuration.AnyAttr">
            <remarks/>
        </member>
        <member name="T:StreamCoders.Onvif.Display.VideoResolution2">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Display.VideoResolution2.Width">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Display.VideoResolution2.Height">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Display.VideoResolution2.Any">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Display.VideoResolution2.AnyAttr">
            <remarks/>
        </member>
        <member name="T:StreamCoders.Onvif.Display.VideoRateControl2">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Display.VideoRateControl2.FrameRateLimit">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Display.VideoRateControl2.BitrateLimit">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Display.VideoRateControl2.Any">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Display.VideoRateControl2.ConstantBitRate">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Display.VideoRateControl2.ConstantBitRateSpecified">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Display.VideoRateControl2.AnyAttr">
            <remarks/>
        </member>
        <member name="T:StreamCoders.Onvif.Display.VideoSourceConfiguration">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Display.VideoSourceConfiguration.SourceToken">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Display.VideoSourceConfiguration.Bounds">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Display.VideoSourceConfiguration.Any">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Display.VideoSourceConfiguration.Extension">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Display.VideoSourceConfiguration.AnyAttr">
            <remarks/>
        </member>
        <member name="T:StreamCoders.Onvif.Display.IntRectangle">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Display.IntRectangle.x">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Display.IntRectangle.y">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Display.IntRectangle.width">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Display.IntRectangle.height">
            <remarks/>
        </member>
        <member name="T:StreamCoders.Onvif.Display.VideoSourceConfigurationExtension">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Display.VideoSourceConfigurationExtension.Rotate">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Display.VideoSourceConfigurationExtension.Extension">
            <remarks/>
        </member>
        <member name="T:StreamCoders.Onvif.Display.Rotate">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Display.Rotate.Mode">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Display.Rotate.Degree">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Display.Rotate.DegreeSpecified">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Display.Rotate.Extension">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Display.Rotate.AnyAttr">
            <remarks/>
        </member>
        <member name="T:StreamCoders.Onvif.Display.RotateMode">
            <remarks/>
        </member>
        <member name="F:StreamCoders.Onvif.Display.RotateMode.OFF">
            <remarks/>
        </member>
        <member name="F:StreamCoders.Onvif.Display.RotateMode.ON">
            <remarks/>
        </member>
        <member name="F:StreamCoders.Onvif.Display.RotateMode.AUTO">
            <remarks/>
        </member>
        <member name="T:StreamCoders.Onvif.Display.RotateExtension">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Display.RotateExtension.Any">
            <remarks/>
        </member>
        <member name="T:StreamCoders.Onvif.Display.VideoSourceConfigurationExtension2">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Display.VideoSourceConfigurationExtension2.LensDescription">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Display.VideoSourceConfigurationExtension2.SceneOrientation">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Display.VideoSourceConfigurationExtension2.Any">
            <remarks/>
        </member>
        <member name="T:StreamCoders.Onvif.Display.LensDescription">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Display.LensDescription.Offset">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Display.LensDescription.Projection">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Display.LensDescription.XFactor">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Display.LensDescription.Any">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Display.LensDescription.FocalLength">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Display.LensDescription.FocalLengthSpecified">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Display.LensDescription.AnyAttr">
            <remarks/>
        </member>
        <member name="T:StreamCoders.Onvif.Display.LensOffset">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Display.LensOffset.x">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Display.LensOffset.xSpecified">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Display.LensOffset.y">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Display.LensOffset.ySpecified">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Display.LensOffset.AnyAttr">
            <remarks/>
        </member>
        <member name="T:StreamCoders.Onvif.Display.LensProjection">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Display.LensProjection.Angle">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Display.LensProjection.Radius">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Display.LensProjection.Transmittance">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Display.LensProjection.TransmittanceSpecified">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Display.LensProjection.Any">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Display.LensProjection.AnyAttr">
            <remarks/>
        </member>
        <member name="T:StreamCoders.Onvif.Display.SceneOrientation">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Display.SceneOrientation.Mode">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Display.SceneOrientation.Orientation">
            <remarks/>
        </member>
        <member name="T:StreamCoders.Onvif.Display.SceneOrientationMode">
            <remarks/>
        </member>
        <member name="F:StreamCoders.Onvif.Display.SceneOrientationMode.MANUAL">
            <remarks/>
        </member>
        <member name="F:StreamCoders.Onvif.Display.SceneOrientationMode.AUTO">
            <remarks/>
        </member>
        <member name="T:StreamCoders.Onvif.Display.PaneConfiguration">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Display.PaneConfiguration.PaneName">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Display.PaneConfiguration.AudioOutputToken">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Display.PaneConfiguration.AudioSourceToken">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Display.PaneConfiguration.AudioEncoderConfiguration">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Display.PaneConfiguration.ReceiverToken">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Display.PaneConfiguration.Token">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Display.PaneConfiguration.Any">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Display.PaneConfiguration.AnyAttr">
            <remarks/>
        </member>
        <member name="T:StreamCoders.Onvif.Display.VideoDecoderConfigurationOptionsExtension">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Display.VideoDecoderConfigurationOptionsExtension.Any">
            <remarks/>
        </member>
        <member name="T:StreamCoders.Onvif.Display.Mpeg4DecOptions">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Display.Mpeg4DecOptions.ResolutionsAvailable">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Display.Mpeg4DecOptions.SupportedMpeg4Profiles">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Display.Mpeg4DecOptions.SupportedInputBitrate">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Display.Mpeg4DecOptions.SupportedFrameRate">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Display.Mpeg4DecOptions.Any">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Display.Mpeg4DecOptions.AnyAttr">
            <remarks/>
        </member>
        <member name="T:StreamCoders.Onvif.Display.IntRange">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Display.IntRange.Min">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Display.IntRange.Max">
            <remarks/>
        </member>
        <member name="T:StreamCoders.Onvif.Display.H264DecOptions">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Display.H264DecOptions.ResolutionsAvailable">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Display.H264DecOptions.SupportedH264Profiles">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Display.H264DecOptions.SupportedInputBitrate">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Display.H264DecOptions.SupportedFrameRate">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Display.H264DecOptions.Any">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Display.H264DecOptions.AnyAttr">
            <remarks/>
        </member>
        <member name="T:StreamCoders.Onvif.Display.JpegDecOptions">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Display.JpegDecOptions.ResolutionsAvailable">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Display.JpegDecOptions.SupportedInputBitrate">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Display.JpegDecOptions.SupportedFrameRate">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Display.JpegDecOptions.Any">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Display.JpegDecOptions.AnyAttr">
            <remarks/>
        </member>
        <member name="T:StreamCoders.Onvif.Display.VideoDecoderConfigurationOptions">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Display.VideoDecoderConfigurationOptions.JpegDecOptions">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Display.VideoDecoderConfigurationOptions.H264DecOptions">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Display.VideoDecoderConfigurationOptions.Mpeg4DecOptions">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Display.VideoDecoderConfigurationOptions.Extension">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Display.VideoDecoderConfigurationOptions.AnyAttr">
            <remarks/>
        </member>
        <member name="T:StreamCoders.Onvif.Display.AudioDecoderConfigurationOptionsExtension">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Display.AudioDecoderConfigurationOptionsExtension.Any">
            <remarks/>
        </member>
        <member name="T:StreamCoders.Onvif.Display.G726DecOptions">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Display.G726DecOptions.Bitrate">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Display.G726DecOptions.SampleRateRange">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Display.G726DecOptions.Any">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Display.G726DecOptions.AnyAttr">
            <remarks/>
        </member>
        <member name="T:StreamCoders.Onvif.Display.G711DecOptions">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Display.G711DecOptions.Bitrate">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Display.G711DecOptions.SampleRateRange">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Display.G711DecOptions.Any">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Display.G711DecOptions.AnyAttr">
            <remarks/>
        </member>
        <member name="T:StreamCoders.Onvif.Display.AACDecOptions">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Display.AACDecOptions.Bitrate">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Display.AACDecOptions.SampleRateRange">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Display.AACDecOptions.Any">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Display.AACDecOptions.AnyAttr">
            <remarks/>
        </member>
        <member name="T:StreamCoders.Onvif.Display.AudioDecoderConfigurationOptions">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Display.AudioDecoderConfigurationOptions.AACDecOptions">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Display.AudioDecoderConfigurationOptions.G711DecOptions">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Display.AudioDecoderConfigurationOptions.G726DecOptions">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Display.AudioDecoderConfigurationOptions.Extension">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Display.AudioDecoderConfigurationOptions.AnyAttr">
            <remarks/>
        </member>
        <member name="T:StreamCoders.Onvif.Display.AudioEncoderConfigurationOption">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Display.AudioEncoderConfigurationOption.Encoding">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Display.AudioEncoderConfigurationOption.BitrateList">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Display.AudioEncoderConfigurationOption.SampleRateList">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Display.AudioEncoderConfigurationOption.Any">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Display.AudioEncoderConfigurationOption.AnyAttr">
            <remarks/>
        </member>
        <member name="T:StreamCoders.Onvif.Display.AudioEncoderConfigurationOptions">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Display.AudioEncoderConfigurationOptions.Options">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Display.AudioEncoderConfigurationOptions.AnyAttr">
            <remarks/>
        </member>
        <member name="T:StreamCoders.Onvif.Display.CodingCapabilities">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Display.CodingCapabilities.AudioEncodingCapabilities">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Display.CodingCapabilities.AudioDecodingCapabilities">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Display.CodingCapabilities.VideoDecodingCapabilities">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Display.CodingCapabilities.Any">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Display.CodingCapabilities.AnyAttr">
            <remarks/>
        </member>
        <member name="T:StreamCoders.Onvif.Display.LayoutOptionsExtension">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Display.LayoutOptionsExtension.Any">
            <remarks/>
        </member>
        <member name="T:StreamCoders.Onvif.Display.PaneOptionExtension">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Display.PaneOptionExtension.Any">
            <remarks/>
        </member>
        <member name="T:StreamCoders.Onvif.Display.PaneLayoutOptions">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Display.PaneLayoutOptions.Area">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Display.PaneLayoutOptions.Extension">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Display.PaneLayoutOptions.AnyAttr">
            <remarks/>
        </member>
        <member name="T:StreamCoders.Onvif.Display.Rectangle">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Display.Rectangle.bottom">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Display.Rectangle.bottomSpecified">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Display.Rectangle.top">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Display.Rectangle.topSpecified">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Display.Rectangle.right">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Display.Rectangle.rightSpecified">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Display.Rectangle.left">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Display.Rectangle.leftSpecified">
            <remarks/>
        </member>
        <member name="T:StreamCoders.Onvif.Display.LayoutOptions">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Display.LayoutOptions.PaneLayoutOptions">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Display.LayoutOptions.Extension">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Display.LayoutOptions.AnyAttr">
            <remarks/>
        </member>
        <member name="T:StreamCoders.Onvif.Display.LayoutExtension">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Display.LayoutExtension.Any">
            <remarks/>
        </member>
        <member name="T:StreamCoders.Onvif.Display.PaneLayout">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Display.PaneLayout.Pane">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Display.PaneLayout.Area">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Display.PaneLayout.Any">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Display.PaneLayout.AnyAttr">
            <remarks/>
        </member>
        <member name="T:StreamCoders.Onvif.Display.Layout">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Display.Layout.PaneLayout">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Display.Layout.Extension">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Display.Layout.AnyAttr">
            <remarks/>
        </member>
        <member name="T:StreamCoders.Onvif.DoorControl.ServiceCapabilities">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.DoorControl.ServiceCapabilities.Any">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.DoorControl.ServiceCapabilities.MaxLimit">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.DoorControl.ServiceCapabilities.AnyAttr">
            <remarks/>
        </member>
        <member name="T:StreamCoders.Onvif.DoorControl.AccessDoorExtension">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.DoorControl.AccessDoorExtension.Any">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.DoorControl.AccessDoorExtension.AnyAttr">
            <remarks/>
        </member>
        <member name="T:StreamCoders.Onvif.DoorControl.DoorFault">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.DoorControl.DoorFault.Reason">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.DoorControl.DoorFault.State">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.DoorControl.DoorFault.Any">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.DoorControl.DoorFault.AnyAttr">
            <remarks/>
        </member>
        <member name="T:StreamCoders.Onvif.DoorControl.DoorFaultState">
            <remarks/>
        </member>
        <member name="F:StreamCoders.Onvif.DoorControl.DoorFaultState.Unknown">
            <remarks/>
        </member>
        <member name="F:StreamCoders.Onvif.DoorControl.DoorFaultState.NotInFault">
            <remarks/>
        </member>
        <member name="F:StreamCoders.Onvif.DoorControl.DoorFaultState.FaultDetected">
            <remarks/>
        </member>
        <member name="T:StreamCoders.Onvif.DoorControl.DoorTamper">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.DoorControl.DoorTamper.Reason">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.DoorControl.DoorTamper.State">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.DoorControl.DoorTamper.Any">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.DoorControl.DoorTamper.AnyAttr">
            <remarks/>
        </member>
        <member name="T:StreamCoders.Onvif.DoorControl.DoorTamperState">
            <remarks/>
        </member>
        <member name="F:StreamCoders.Onvif.DoorControl.DoorTamperState.Unknown">
            <remarks/>
        </member>
        <member name="F:StreamCoders.Onvif.DoorControl.DoorTamperState.NotInTamper">
            <remarks/>
        </member>
        <member name="F:StreamCoders.Onvif.DoorControl.DoorTamperState.TamperDetected">
            <remarks/>
        </member>
        <member name="T:StreamCoders.Onvif.DoorControl.DoorState">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.DoorControl.DoorState.DoorPhysicalState">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.DoorControl.DoorState.DoorPhysicalStateSpecified">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.DoorControl.DoorState.LockPhysicalState">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.DoorControl.DoorState.LockPhysicalStateSpecified">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.DoorControl.DoorState.DoubleLockPhysicalState">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.DoorControl.DoorState.DoubleLockPhysicalStateSpecified">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.DoorControl.DoorState.Alarm">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.DoorControl.DoorState.AlarmSpecified">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.DoorControl.DoorState.Tamper">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.DoorControl.DoorState.Fault">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.DoorControl.DoorState.DoorMode">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.DoorControl.DoorState.Any">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.DoorControl.DoorState.AnyAttr">
            <remarks/>
        </member>
        <member name="T:StreamCoders.Onvif.DoorControl.DoorPhysicalState">
            <remarks/>
        </member>
        <member name="F:StreamCoders.Onvif.DoorControl.DoorPhysicalState.Unknown">
            <remarks/>
        </member>
        <member name="F:StreamCoders.Onvif.DoorControl.DoorPhysicalState.Open">
            <remarks/>
        </member>
        <member name="F:StreamCoders.Onvif.DoorControl.DoorPhysicalState.Closed">
            <remarks/>
        </member>
        <member name="F:StreamCoders.Onvif.DoorControl.DoorPhysicalState.Fault">
            <remarks/>
        </member>
        <member name="T:StreamCoders.Onvif.DoorControl.LockPhysicalState">
            <remarks/>
        </member>
        <member name="F:StreamCoders.Onvif.DoorControl.LockPhysicalState.Unknown">
            <remarks/>
        </member>
        <member name="F:StreamCoders.Onvif.DoorControl.LockPhysicalState.Locked">
            <remarks/>
        </member>
        <member name="F:StreamCoders.Onvif.DoorControl.LockPhysicalState.Unlocked">
            <remarks/>
        </member>
        <member name="F:StreamCoders.Onvif.DoorControl.LockPhysicalState.Fault">
            <remarks/>
        </member>
        <member name="T:StreamCoders.Onvif.DoorControl.DoorAlarmState">
            <remarks/>
        </member>
        <member name="F:StreamCoders.Onvif.DoorControl.DoorAlarmState.Normal">
            <remarks/>
        </member>
        <member name="F:StreamCoders.Onvif.DoorControl.DoorAlarmState.DoorForcedOpen">
            <remarks/>
        </member>
        <member name="F:StreamCoders.Onvif.DoorControl.DoorAlarmState.DoorOpenTooLong">
            <remarks/>
        </member>
        <member name="T:StreamCoders.Onvif.DoorControl.DoorMode">
            <remarks/>
        </member>
        <member name="F:StreamCoders.Onvif.DoorControl.DoorMode.Unknown">
            <remarks/>
        </member>
        <member name="F:StreamCoders.Onvif.DoorControl.DoorMode.Locked">
            <remarks/>
        </member>
        <member name="F:StreamCoders.Onvif.DoorControl.DoorMode.Unlocked">
            <remarks/>
        </member>
        <member name="F:StreamCoders.Onvif.DoorControl.DoorMode.Accessed">
            <remarks/>
        </member>
        <member name="F:StreamCoders.Onvif.DoorControl.DoorMode.Blocked">
            <remarks/>
        </member>
        <member name="F:StreamCoders.Onvif.DoorControl.DoorMode.LockedDown">
            <remarks/>
        </member>
        <member name="F:StreamCoders.Onvif.DoorControl.DoorMode.LockedOpen">
            <remarks/>
        </member>
        <member name="F:StreamCoders.Onvif.DoorControl.DoorMode.DoubleLocked">
            <remarks/>
        </member>
        <member name="T:StreamCoders.Onvif.DoorControl.DoorCapabilities">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.DoorControl.DoorCapabilities.Any">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.DoorControl.DoorCapabilities.Access">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.DoorControl.DoorCapabilities.AccessSpecified">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.DoorControl.DoorCapabilities.AccessTimingOverride">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.DoorControl.DoorCapabilities.AccessTimingOverrideSpecified">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.DoorControl.DoorCapabilities.Lock">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.DoorControl.DoorCapabilities.LockSpecified">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.DoorControl.DoorCapabilities.Unlock">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.DoorControl.DoorCapabilities.UnlockSpecified">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.DoorControl.DoorCapabilities.Block">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.DoorControl.DoorCapabilities.BlockSpecified">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.DoorControl.DoorCapabilities.DoubleLock">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.DoorControl.DoorCapabilities.DoubleLockSpecified">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.DoorControl.DoorCapabilities.LockDown">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.DoorControl.DoorCapabilities.LockDownSpecified">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.DoorControl.DoorCapabilities.LockOpen">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.DoorControl.DoorCapabilities.LockOpenSpecified">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.DoorControl.DoorCapabilities.DoorMonitor">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.DoorControl.DoorCapabilities.DoorMonitorSpecified">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.DoorControl.DoorCapabilities.LockMonitor">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.DoorControl.DoorCapabilities.LockMonitorSpecified">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.DoorControl.DoorCapabilities.DoubleLockMonitor">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.DoorControl.DoorCapabilities.DoubleLockMonitorSpecified">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.DoorControl.DoorCapabilities.Alarm">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.DoorControl.DoorCapabilities.AlarmSpecified">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.DoorControl.DoorCapabilities.Tamper">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.DoorControl.DoorCapabilities.TamperSpecified">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.DoorControl.DoorCapabilities.Fault">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.DoorControl.DoorCapabilities.FaultSpecified">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.DoorControl.DoorCapabilities.AnyAttr">
            <remarks/>
        </member>
        <member name="T:StreamCoders.Onvif.DoorControl.DataEntity">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.DoorControl.DataEntity.token">
            <remarks/>
        </member>
        <member name="T:StreamCoders.Onvif.DoorControl.DoorInfoBase">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.DoorControl.DoorInfoBase.Name">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.DoorControl.DoorInfoBase.Description">
            <remarks/>
        </member>
        <member name="T:StreamCoders.Onvif.DoorControl.DoorInfo">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.DoorControl.DoorInfo.Capabilities">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.DoorControl.DoorInfo.Any">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.DoorControl.DoorInfo.AnyAttr">
            <remarks/>
        </member>
        <member name="T:StreamCoders.Onvif.Imaging.Capabilities">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Imaging.Capabilities.Any">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Imaging.Capabilities.ImageStabilization">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Imaging.Capabilities.ImageStabilizationSpecified">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Imaging.Capabilities.Presets">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Imaging.Capabilities.PresetsSpecified">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Imaging.Capabilities.AnyAttr">
            <remarks/>
        </member>
        <member name="T:StreamCoders.Onvif.Imaging.ImagingPreset">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Imaging.ImagingPreset.Name">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Imaging.ImagingPreset.token">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Imaging.ImagingPreset.type">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Imaging.ImagingPreset.AnyAttr">
            <remarks/>
        </member>
        <member name="T:StreamCoders.Onvif.Imaging.ImagingStatus20Extension">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Imaging.ImagingStatus20Extension.Any">
            <remarks/>
        </member>
        <member name="T:StreamCoders.Onvif.Imaging.FocusStatus20Extension">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Imaging.FocusStatus20Extension.Any">
            <remarks/>
        </member>
        <member name="T:StreamCoders.Onvif.Imaging.FocusStatus20">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Imaging.FocusStatus20.Position">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Imaging.FocusStatus20.MoveStatus">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Imaging.FocusStatus20.Error">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Imaging.FocusStatus20.Extension">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Imaging.FocusStatus20.AnyAttr">
            <remarks/>
        </member>
        <member name="T:StreamCoders.Onvif.Imaging.MoveStatus">
            <remarks/>
        </member>
        <member name="F:StreamCoders.Onvif.Imaging.MoveStatus.IDLE">
            <remarks/>
        </member>
        <member name="F:StreamCoders.Onvif.Imaging.MoveStatus.MOVING">
            <remarks/>
        </member>
        <member name="F:StreamCoders.Onvif.Imaging.MoveStatus.UNKNOWN">
            <remarks/>
        </member>
        <member name="T:StreamCoders.Onvif.Imaging.ImagingStatus20">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Imaging.ImagingStatus20.FocusStatus20">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Imaging.ImagingStatus20.Extension">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Imaging.ImagingStatus20.AnyAttr">
            <remarks/>
        </member>
        <member name="T:StreamCoders.Onvif.Imaging.ContinuousFocusOptions">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Imaging.ContinuousFocusOptions.Speed">
            <remarks/>
        </member>
        <member name="T:StreamCoders.Onvif.Imaging.FloatRange">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Imaging.FloatRange.Min">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Imaging.FloatRange.Max">
            <remarks/>
        </member>
        <member name="T:StreamCoders.Onvif.Imaging.RelativeFocusOptions20">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Imaging.RelativeFocusOptions20.Distance">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Imaging.RelativeFocusOptions20.Speed">
            <remarks/>
        </member>
        <member name="T:StreamCoders.Onvif.Imaging.AbsoluteFocusOptions">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Imaging.AbsoluteFocusOptions.Position">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Imaging.AbsoluteFocusOptions.Speed">
            <remarks/>
        </member>
        <member name="T:StreamCoders.Onvif.Imaging.MoveOptions20">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Imaging.MoveOptions20.Absolute">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Imaging.MoveOptions20.Relative">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Imaging.MoveOptions20.Continuous">
            <remarks/>
        </member>
        <member name="T:StreamCoders.Onvif.Imaging.ContinuousFocus">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Imaging.ContinuousFocus.Speed">
            <remarks/>
        </member>
        <member name="T:StreamCoders.Onvif.Imaging.RelativeFocus">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Imaging.RelativeFocus.Distance">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Imaging.RelativeFocus.Speed">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Imaging.RelativeFocus.SpeedSpecified">
            <remarks/>
        </member>
        <member name="T:StreamCoders.Onvif.Imaging.AbsoluteFocus">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Imaging.AbsoluteFocus.Position">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Imaging.AbsoluteFocus.Speed">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Imaging.AbsoluteFocus.SpeedSpecified">
            <remarks/>
        </member>
        <member name="T:StreamCoders.Onvif.Imaging.FocusMove">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Imaging.FocusMove.Absolute">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Imaging.FocusMove.Relative">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Imaging.FocusMove.Continuous">
            <remarks/>
        </member>
        <member name="T:StreamCoders.Onvif.Imaging.ImagingOptions20Extension4">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Imaging.ImagingOptions20Extension4.Any">
            <remarks/>
        </member>
        <member name="T:StreamCoders.Onvif.Imaging.NoiseReductionOptions">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Imaging.NoiseReductionOptions.Level">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Imaging.NoiseReductionOptions.Any">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Imaging.NoiseReductionOptions.AnyAttr">
            <remarks/>
        </member>
        <member name="T:StreamCoders.Onvif.Imaging.DefoggingOptions">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Imaging.DefoggingOptions.Mode">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Imaging.DefoggingOptions.Level">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Imaging.DefoggingOptions.Any">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Imaging.DefoggingOptions.AnyAttr">
            <remarks/>
        </member>
        <member name="T:StreamCoders.Onvif.Imaging.ToneCompensationOptions">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Imaging.ToneCompensationOptions.Mode">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Imaging.ToneCompensationOptions.Level">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Imaging.ToneCompensationOptions.Any">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Imaging.ToneCompensationOptions.AnyAttr">
            <remarks/>
        </member>
        <member name="T:StreamCoders.Onvif.Imaging.ImagingOptions20Extension3">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Imaging.ImagingOptions20Extension3.ToneCompensationOptions">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Imaging.ImagingOptions20Extension3.DefoggingOptions">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Imaging.ImagingOptions20Extension3.NoiseReductionOptions">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Imaging.ImagingOptions20Extension3.Extension">
            <remarks/>
        </member>
        <member name="T:StreamCoders.Onvif.Imaging.IrCutFilterAutoAdjustmentOptionsExtension">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Imaging.IrCutFilterAutoAdjustmentOptionsExtension.Any">
            <remarks/>
        </member>
        <member name="T:StreamCoders.Onvif.Imaging.DurationRange">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Imaging.DurationRange.Min">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Imaging.DurationRange.Max">
            <remarks/>
        </member>
        <member name="T:StreamCoders.Onvif.Imaging.IrCutFilterAutoAdjustmentOptions">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Imaging.IrCutFilterAutoAdjustmentOptions.BoundaryType">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Imaging.IrCutFilterAutoAdjustmentOptions.BoundaryOffset">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Imaging.IrCutFilterAutoAdjustmentOptions.BoundaryOffsetSpecified">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Imaging.IrCutFilterAutoAdjustmentOptions.ResponseTimeRange">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Imaging.IrCutFilterAutoAdjustmentOptions.Extension">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Imaging.IrCutFilterAutoAdjustmentOptions.AnyAttr">
            <remarks/>
        </member>
        <member name="T:StreamCoders.Onvif.Imaging.ImagingOptions20Extension2">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Imaging.ImagingOptions20Extension2.IrCutFilterAutoAdjustment">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Imaging.ImagingOptions20Extension2.Extension">
            <remarks/>
        </member>
        <member name="T:StreamCoders.Onvif.Imaging.ImageStabilizationOptionsExtension">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Imaging.ImageStabilizationOptionsExtension.Any">
            <remarks/>
        </member>
        <member name="T:StreamCoders.Onvif.Imaging.ImageStabilizationOptions">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Imaging.ImageStabilizationOptions.Mode">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Imaging.ImageStabilizationOptions.Level">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Imaging.ImageStabilizationOptions.Extension">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Imaging.ImageStabilizationOptions.AnyAttr">
            <remarks/>
        </member>
        <member name="T:StreamCoders.Onvif.Imaging.ImageStabilizationMode">
            <remarks/>
        </member>
        <member name="F:StreamCoders.Onvif.Imaging.ImageStabilizationMode.OFF">
            <remarks/>
        </member>
        <member name="F:StreamCoders.Onvif.Imaging.ImageStabilizationMode.ON">
            <remarks/>
        </member>
        <member name="F:StreamCoders.Onvif.Imaging.ImageStabilizationMode.AUTO">
            <remarks/>
        </member>
        <member name="F:StreamCoders.Onvif.Imaging.ImageStabilizationMode.Extended">
            <remarks/>
        </member>
        <member name="T:StreamCoders.Onvif.Imaging.ImagingOptions20Extension">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Imaging.ImagingOptions20Extension.Any">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Imaging.ImagingOptions20Extension.ImageStabilization">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Imaging.ImagingOptions20Extension.Extension">
            <remarks/>
        </member>
        <member name="T:StreamCoders.Onvif.Imaging.WhiteBalanceOptions20Extension">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Imaging.WhiteBalanceOptions20Extension.Any">
            <remarks/>
        </member>
        <member name="T:StreamCoders.Onvif.Imaging.WhiteBalanceOptions20">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Imaging.WhiteBalanceOptions20.Mode">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Imaging.WhiteBalanceOptions20.YrGain">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Imaging.WhiteBalanceOptions20.YbGain">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Imaging.WhiteBalanceOptions20.Extension">
            <remarks/>
        </member>
        <member name="T:StreamCoders.Onvif.Imaging.WhiteBalanceMode">
            <remarks/>
        </member>
        <member name="F:StreamCoders.Onvif.Imaging.WhiteBalanceMode.AUTO">
            <remarks/>
        </member>
        <member name="F:StreamCoders.Onvif.Imaging.WhiteBalanceMode.MANUAL">
            <remarks/>
        </member>
        <member name="T:StreamCoders.Onvif.Imaging.WideDynamicRangeOptions20">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Imaging.WideDynamicRangeOptions20.Mode">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Imaging.WideDynamicRangeOptions20.Level">
            <remarks/>
        </member>
        <member name="T:StreamCoders.Onvif.Imaging.WideDynamicMode">
            <remarks/>
        </member>
        <member name="F:StreamCoders.Onvif.Imaging.WideDynamicMode.OFF">
            <remarks/>
        </member>
        <member name="F:StreamCoders.Onvif.Imaging.WideDynamicMode.ON">
            <remarks/>
        </member>
        <member name="T:StreamCoders.Onvif.Imaging.FocusOptions20Extension">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Imaging.FocusOptions20Extension.Any">
            <remarks/>
        </member>
        <member name="T:StreamCoders.Onvif.Imaging.FocusOptions20">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Imaging.FocusOptions20.AutoFocusModes">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Imaging.FocusOptions20.DefaultSpeed">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Imaging.FocusOptions20.NearLimit">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Imaging.FocusOptions20.FarLimit">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Imaging.FocusOptions20.Extension">
            <remarks/>
        </member>
        <member name="T:StreamCoders.Onvif.Imaging.AutoFocusMode">
            <remarks/>
        </member>
        <member name="F:StreamCoders.Onvif.Imaging.AutoFocusMode.AUTO">
            <remarks/>
        </member>
        <member name="F:StreamCoders.Onvif.Imaging.AutoFocusMode.MANUAL">
            <remarks/>
        </member>
        <member name="T:StreamCoders.Onvif.Imaging.ExposureOptions20">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Imaging.ExposureOptions20.Mode">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Imaging.ExposureOptions20.Priority">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Imaging.ExposureOptions20.MinExposureTime">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Imaging.ExposureOptions20.MaxExposureTime">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Imaging.ExposureOptions20.MinGain">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Imaging.ExposureOptions20.MaxGain">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Imaging.ExposureOptions20.MinIris">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Imaging.ExposureOptions20.MaxIris">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Imaging.ExposureOptions20.ExposureTime">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Imaging.ExposureOptions20.Gain">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Imaging.ExposureOptions20.Iris">
            <remarks/>
        </member>
        <member name="T:StreamCoders.Onvif.Imaging.ExposureMode">
            <remarks/>
        </member>
        <member name="F:StreamCoders.Onvif.Imaging.ExposureMode.AUTO">
            <remarks/>
        </member>
        <member name="F:StreamCoders.Onvif.Imaging.ExposureMode.MANUAL">
            <remarks/>
        </member>
        <member name="T:StreamCoders.Onvif.Imaging.ExposurePriority">
            <remarks/>
        </member>
        <member name="F:StreamCoders.Onvif.Imaging.ExposurePriority.LowNoise">
            <remarks/>
        </member>
        <member name="F:StreamCoders.Onvif.Imaging.ExposurePriority.FrameRate">
            <remarks/>
        </member>
        <member name="T:StreamCoders.Onvif.Imaging.BacklightCompensationOptions20">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Imaging.BacklightCompensationOptions20.Mode">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Imaging.BacklightCompensationOptions20.Level">
            <remarks/>
        </member>
        <member name="T:StreamCoders.Onvif.Imaging.BacklightCompensationMode">
            <remarks/>
        </member>
        <member name="F:StreamCoders.Onvif.Imaging.BacklightCompensationMode.OFF">
            <remarks/>
        </member>
        <member name="F:StreamCoders.Onvif.Imaging.BacklightCompensationMode.ON">
            <remarks/>
        </member>
        <member name="T:StreamCoders.Onvif.Imaging.ImagingOptions20">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Imaging.ImagingOptions20.BacklightCompensation">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Imaging.ImagingOptions20.Brightness">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Imaging.ImagingOptions20.ColorSaturation">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Imaging.ImagingOptions20.Contrast">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Imaging.ImagingOptions20.Exposure">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Imaging.ImagingOptions20.Focus">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Imaging.ImagingOptions20.IrCutFilterModes">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Imaging.ImagingOptions20.Sharpness">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Imaging.ImagingOptions20.WideDynamicRange">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Imaging.ImagingOptions20.WhiteBalance">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Imaging.ImagingOptions20.Extension">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Imaging.ImagingOptions20.AnyAttr">
            <remarks/>
        </member>
        <member name="T:StreamCoders.Onvif.Imaging.IrCutFilterMode">
            <remarks/>
        </member>
        <member name="F:StreamCoders.Onvif.Imaging.IrCutFilterMode.ON">
            <remarks/>
        </member>
        <member name="F:StreamCoders.Onvif.Imaging.IrCutFilterMode.OFF">
            <remarks/>
        </member>
        <member name="F:StreamCoders.Onvif.Imaging.IrCutFilterMode.AUTO">
            <remarks/>
        </member>
        <member name="T:StreamCoders.Onvif.Imaging.ImagingSettingsExtension204">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Imaging.ImagingSettingsExtension204.Any">
            <remarks/>
        </member>
        <member name="T:StreamCoders.Onvif.Imaging.NoiseReduction">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Imaging.NoiseReduction.Level">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Imaging.NoiseReduction.Any">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Imaging.NoiseReduction.AnyAttr">
            <remarks/>
        </member>
        <member name="T:StreamCoders.Onvif.Imaging.DefoggingExtension">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Imaging.DefoggingExtension.Any">
            <remarks/>
        </member>
        <member name="T:StreamCoders.Onvif.Imaging.Defogging">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Imaging.Defogging.Mode">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Imaging.Defogging.Level">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Imaging.Defogging.LevelSpecified">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Imaging.Defogging.Extension">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Imaging.Defogging.AnyAttr">
            <remarks/>
        </member>
        <member name="T:StreamCoders.Onvif.Imaging.ToneCompensationExtension">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Imaging.ToneCompensationExtension.Any">
            <remarks/>
        </member>
        <member name="T:StreamCoders.Onvif.Imaging.ToneCompensation">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Imaging.ToneCompensation.Mode">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Imaging.ToneCompensation.Level">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Imaging.ToneCompensation.LevelSpecified">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Imaging.ToneCompensation.Extension">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Imaging.ToneCompensation.AnyAttr">
            <remarks/>
        </member>
        <member name="T:StreamCoders.Onvif.Imaging.ImagingSettingsExtension203">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Imaging.ImagingSettingsExtension203.ToneCompensation">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Imaging.ImagingSettingsExtension203.Defogging">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Imaging.ImagingSettingsExtension203.NoiseReduction">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Imaging.ImagingSettingsExtension203.Extension">
            <remarks/>
        </member>
        <member name="T:StreamCoders.Onvif.Imaging.IrCutFilterAutoAdjustmentExtension">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Imaging.IrCutFilterAutoAdjustmentExtension.Any">
            <remarks/>
        </member>
        <member name="T:StreamCoders.Onvif.Imaging.IrCutFilterAutoAdjustment">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Imaging.IrCutFilterAutoAdjustment.BoundaryType">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Imaging.IrCutFilterAutoAdjustment.BoundaryOffset">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Imaging.IrCutFilterAutoAdjustment.BoundaryOffsetSpecified">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Imaging.IrCutFilterAutoAdjustment.ResponseTime">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Imaging.IrCutFilterAutoAdjustment.Extension">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Imaging.IrCutFilterAutoAdjustment.AnyAttr">
            <remarks/>
        </member>
        <member name="T:StreamCoders.Onvif.Imaging.ImagingSettingsExtension202">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Imaging.ImagingSettingsExtension202.IrCutFilterAutoAdjustment">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Imaging.ImagingSettingsExtension202.Extension">
            <remarks/>
        </member>
        <member name="T:StreamCoders.Onvif.Imaging.ImageStabilizationExtension">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Imaging.ImageStabilizationExtension.Any">
            <remarks/>
        </member>
        <member name="T:StreamCoders.Onvif.Imaging.ImageStabilization">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Imaging.ImageStabilization.Mode">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Imaging.ImageStabilization.Level">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Imaging.ImageStabilization.LevelSpecified">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Imaging.ImageStabilization.Extension">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Imaging.ImageStabilization.AnyAttr">
            <remarks/>
        </member>
        <member name="T:StreamCoders.Onvif.Imaging.ImagingSettingsExtension20">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Imaging.ImagingSettingsExtension20.Any">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Imaging.ImagingSettingsExtension20.ImageStabilization">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Imaging.ImagingSettingsExtension20.Extension">
            <remarks/>
        </member>
        <member name="T:StreamCoders.Onvif.Imaging.WhiteBalance20Extension">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Imaging.WhiteBalance20Extension.Any">
            <remarks/>
        </member>
        <member name="T:StreamCoders.Onvif.Imaging.WhiteBalance20">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Imaging.WhiteBalance20.Mode">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Imaging.WhiteBalance20.CrGain">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Imaging.WhiteBalance20.CrGainSpecified">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Imaging.WhiteBalance20.CbGain">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Imaging.WhiteBalance20.CbGainSpecified">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Imaging.WhiteBalance20.Extension">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Imaging.WhiteBalance20.AnyAttr">
            <remarks/>
        </member>
        <member name="T:StreamCoders.Onvif.Imaging.WideDynamicRange20">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Imaging.WideDynamicRange20.Mode">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Imaging.WideDynamicRange20.Level">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Imaging.WideDynamicRange20.LevelSpecified">
            <remarks/>
        </member>
        <member name="T:StreamCoders.Onvif.Imaging.FocusConfiguration20Extension">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Imaging.FocusConfiguration20Extension.Any">
            <remarks/>
        </member>
        <member name="T:StreamCoders.Onvif.Imaging.FocusConfiguration20">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Imaging.FocusConfiguration20.AutoFocusMode">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Imaging.FocusConfiguration20.DefaultSpeed">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Imaging.FocusConfiguration20.DefaultSpeedSpecified">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Imaging.FocusConfiguration20.NearLimit">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Imaging.FocusConfiguration20.NearLimitSpecified">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Imaging.FocusConfiguration20.FarLimit">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Imaging.FocusConfiguration20.FarLimitSpecified">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Imaging.FocusConfiguration20.Extension">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Imaging.FocusConfiguration20.AnyAttr">
            <remarks/>
        </member>
        <member name="T:StreamCoders.Onvif.Imaging.Rectangle">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Imaging.Rectangle.bottom">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Imaging.Rectangle.bottomSpecified">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Imaging.Rectangle.top">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Imaging.Rectangle.topSpecified">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Imaging.Rectangle.right">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Imaging.Rectangle.rightSpecified">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Imaging.Rectangle.left">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Imaging.Rectangle.leftSpecified">
            <remarks/>
        </member>
        <member name="T:StreamCoders.Onvif.Imaging.Exposure20">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Imaging.Exposure20.Mode">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Imaging.Exposure20.Priority">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Imaging.Exposure20.PrioritySpecified">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Imaging.Exposure20.Window">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Imaging.Exposure20.MinExposureTime">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Imaging.Exposure20.MinExposureTimeSpecified">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Imaging.Exposure20.MaxExposureTime">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Imaging.Exposure20.MaxExposureTimeSpecified">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Imaging.Exposure20.MinGain">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Imaging.Exposure20.MinGainSpecified">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Imaging.Exposure20.MaxGain">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Imaging.Exposure20.MaxGainSpecified">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Imaging.Exposure20.MinIris">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Imaging.Exposure20.MinIrisSpecified">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Imaging.Exposure20.MaxIris">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Imaging.Exposure20.MaxIrisSpecified">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Imaging.Exposure20.ExposureTime">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Imaging.Exposure20.ExposureTimeSpecified">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Imaging.Exposure20.Gain">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Imaging.Exposure20.GainSpecified">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Imaging.Exposure20.Iris">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Imaging.Exposure20.IrisSpecified">
            <remarks/>
        </member>
        <member name="T:StreamCoders.Onvif.Imaging.BacklightCompensation20">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Imaging.BacklightCompensation20.Mode">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Imaging.BacklightCompensation20.Level">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Imaging.BacklightCompensation20.LevelSpecified">
            <remarks/>
        </member>
        <member name="T:StreamCoders.Onvif.Imaging.ImagingSettings20">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Imaging.ImagingSettings20.BacklightCompensation">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Imaging.ImagingSettings20.Brightness">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Imaging.ImagingSettings20.BrightnessSpecified">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Imaging.ImagingSettings20.ColorSaturation">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Imaging.ImagingSettings20.ColorSaturationSpecified">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Imaging.ImagingSettings20.Contrast">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Imaging.ImagingSettings20.ContrastSpecified">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Imaging.ImagingSettings20.Exposure">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Imaging.ImagingSettings20.Focus">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Imaging.ImagingSettings20.IrCutFilter">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Imaging.ImagingSettings20.IrCutFilterSpecified">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Imaging.ImagingSettings20.Sharpness">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Imaging.ImagingSettings20.SharpnessSpecified">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Imaging.ImagingSettings20.WideDynamicRange">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Imaging.ImagingSettings20.WhiteBalance">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Imaging.ImagingSettings20.Extension">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Imaging.ImagingSettings20.AnyAttr">
            <remarks/>
        </member>
        <member name="T:StreamCoders.Onvif.Media2.Capabilities2">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Media2.Capabilities2.ProfileCapabilities">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Media2.Capabilities2.StreamingCapabilities">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Media2.Capabilities2.Any">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Media2.Capabilities2.SnapshotUri">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Media2.Capabilities2.SnapshotUriSpecified">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Media2.Capabilities2.Rotation">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Media2.Capabilities2.RotationSpecified">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Media2.Capabilities2.VideoSourceMode">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Media2.Capabilities2.VideoSourceModeSpecified">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Media2.Capabilities2.OSD">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Media2.Capabilities2.OSDSpecified">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Media2.Capabilities2.Mask">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Media2.Capabilities2.MaskSpecified">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Media2.Capabilities2.AnyAttr">
            <remarks/>
        </member>
        <member name="T:StreamCoders.Onvif.Media2.ProfileCapabilities">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Media2.ProfileCapabilities.Any">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Media2.ProfileCapabilities.MaximumNumberOfProfiles">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Media2.ProfileCapabilities.MaximumNumberOfProfilesSpecified">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Media2.ProfileCapabilities.ConfigurationsSupported">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Media2.ProfileCapabilities.AnyAttr">
            <remarks/>
        </member>
        <member name="T:StreamCoders.Onvif.Media2.MaskOptions">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Media2.MaskOptions.MaxMasks">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Media2.MaskOptions.MaxPoints">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Media2.MaskOptions.Types">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Media2.MaskOptions.Color">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Media2.MaskOptions.Any">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Media2.MaskOptions.RectangleOnly">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Media2.MaskOptions.RectangleOnlySpecified">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Media2.MaskOptions.SingleColorOnly">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Media2.MaskOptions.SingleColorOnlySpecified">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Media2.MaskOptions.AnyAttr">
            <remarks/>
        </member>
        <member name="T:StreamCoders.Onvif.Media2.ColorOptions">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Media2.ColorOptions.Items">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Media2.ColorOptions.AnyAttr">
            <remarks/>
        </member>
        <member name="T:StreamCoders.Onvif.Media2.Color">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Media2.Color.X">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Media2.Color.Y">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Media2.Color.Z">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Media2.Color.Colorspace">
            <remarks/>
        </member>
        <member name="T:StreamCoders.Onvif.Media2.ColorspaceRange">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Media2.ColorspaceRange.X">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Media2.ColorspaceRange.Y">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Media2.ColorspaceRange.Z">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Media2.ColorspaceRange.Colorspace">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Media2.ColorspaceRange.AnyAttr">
            <remarks/>
        </member>
        <member name="T:StreamCoders.Onvif.Media2.FloatRange">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Media2.FloatRange.Min">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Media2.FloatRange.Max">
            <remarks/>
        </member>
        <member name="T:StreamCoders.Onvif.Media2.Mask">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Media2.Mask.ConfigurationToken">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Media2.Mask.Polygon">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Media2.Mask.Type">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Media2.Mask.Color">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Media2.Mask.Enabled">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Media2.Mask.Any">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Media2.Mask.token">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Media2.Mask.VideoSourceConfiguration">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Media2.Mask.AnyAttr">
            <remarks/>
        </member>
        <member name="T:StreamCoders.Onvif.Media2.Vector">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Media2.Vector.x">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Media2.Vector.xSpecified">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Media2.Vector.y">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Media2.Vector.ySpecified">
            <remarks/>
        </member>
        <member name="T:StreamCoders.Onvif.Media2.OSDConfigurationOptionsExtension">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Media2.OSDConfigurationOptionsExtension.Any">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Media2.OSDConfigurationOptionsExtension.AnyAttr">
            <remarks/>
        </member>
        <member name="T:StreamCoders.Onvif.Media2.OSDImgOptionsExtension">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Media2.OSDImgOptionsExtension.Any">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Media2.OSDImgOptionsExtension.AnyAttr">
            <remarks/>
        </member>
        <member name="T:StreamCoders.Onvif.Media2.OSDImgOptions">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Media2.OSDImgOptions.ImagePath">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Media2.OSDImgOptions.Extension">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Media2.OSDImgOptions.AnyAttr">
            <remarks/>
        </member>
        <member name="T:StreamCoders.Onvif.Media2.OSDTextOptionsExtension">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Media2.OSDTextOptionsExtension.Any">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Media2.OSDTextOptionsExtension.AnyAttr">
            <remarks/>
        </member>
        <member name="T:StreamCoders.Onvif.Media2.OSDColorOptionsExtension">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Media2.OSDColorOptionsExtension.Any">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Media2.OSDColorOptionsExtension.AnyAttr">
            <remarks/>
        </member>
        <member name="T:StreamCoders.Onvif.Media2.OSDColorOptions">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Media2.OSDColorOptions.Color">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Media2.OSDColorOptions.Transparent">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Media2.OSDColorOptions.Extension">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Media2.OSDColorOptions.AnyAttr">
            <remarks/>
        </member>
        <member name="T:StreamCoders.Onvif.Media2.IntRange">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Media2.IntRange.Min">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Media2.IntRange.Max">
            <remarks/>
        </member>
        <member name="T:StreamCoders.Onvif.Media2.OSDTextOptions">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Media2.OSDTextOptions.Type">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Media2.OSDTextOptions.FontSizeRange">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Media2.OSDTextOptions.DateFormat">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Media2.OSDTextOptions.TimeFormat">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Media2.OSDTextOptions.FontColor">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Media2.OSDTextOptions.BackgroundColor">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Media2.OSDTextOptions.Extension">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Media2.OSDTextOptions.AnyAttr">
            <remarks/>
        </member>
        <member name="T:StreamCoders.Onvif.Media2.MaximumNumberOfOSDs">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Media2.MaximumNumberOfOSDs.Total">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Media2.MaximumNumberOfOSDs.Image">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Media2.MaximumNumberOfOSDs.ImageSpecified">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Media2.MaximumNumberOfOSDs.PlainText">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Media2.MaximumNumberOfOSDs.PlainTextSpecified">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Media2.MaximumNumberOfOSDs.Date">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Media2.MaximumNumberOfOSDs.DateSpecified">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Media2.MaximumNumberOfOSDs.Time">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Media2.MaximumNumberOfOSDs.TimeSpecified">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Media2.MaximumNumberOfOSDs.DateAndTime">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Media2.MaximumNumberOfOSDs.DateAndTimeSpecified">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Media2.MaximumNumberOfOSDs.AnyAttr">
            <remarks/>
        </member>
        <member name="T:StreamCoders.Onvif.Media2.OSDConfigurationOptions">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Media2.OSDConfigurationOptions.MaximumNumberOfOSDs">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Media2.OSDConfigurationOptions.Type">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Media2.OSDConfigurationOptions.PositionOption">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Media2.OSDConfigurationOptions.TextOption">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Media2.OSDConfigurationOptions.ImageOption">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Media2.OSDConfigurationOptions.Extension">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Media2.OSDConfigurationOptions.AnyAttr">
            <remarks/>
        </member>
        <member name="T:StreamCoders.Onvif.Media2.OSDType">
            <remarks/>
        </member>
        <member name="F:StreamCoders.Onvif.Media2.OSDType.Text">
            <remarks/>
        </member>
        <member name="F:StreamCoders.Onvif.Media2.OSDType.Image">
            <remarks/>
        </member>
        <member name="F:StreamCoders.Onvif.Media2.OSDType.Extended">
            <remarks/>
        </member>
        <member name="T:StreamCoders.Onvif.Media2.OSDConfigurationExtension">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Media2.OSDConfigurationExtension.Any">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Media2.OSDConfigurationExtension.AnyAttr">
            <remarks/>
        </member>
        <member name="T:StreamCoders.Onvif.Media2.OSDImgConfigurationExtension">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Media2.OSDImgConfigurationExtension.Any">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Media2.OSDImgConfigurationExtension.AnyAttr">
            <remarks/>
        </member>
        <member name="T:StreamCoders.Onvif.Media2.OSDImgConfiguration">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Media2.OSDImgConfiguration.ImgPath">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Media2.OSDImgConfiguration.Extension">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Media2.OSDImgConfiguration.AnyAttr">
            <remarks/>
        </member>
        <member name="T:StreamCoders.Onvif.Media2.OSDTextConfigurationExtension">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Media2.OSDTextConfigurationExtension.Any">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Media2.OSDTextConfigurationExtension.AnyAttr">
            <remarks/>
        </member>
        <member name="T:StreamCoders.Onvif.Media2.OSDColor">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Media2.OSDColor.Color">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Media2.OSDColor.Transparent">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Media2.OSDColor.TransparentSpecified">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Media2.OSDColor.AnyAttr">
            <remarks/>
        </member>
        <member name="T:StreamCoders.Onvif.Media2.OSDTextConfiguration">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Media2.OSDTextConfiguration.Type">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Media2.OSDTextConfiguration.DateFormat">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Media2.OSDTextConfiguration.TimeFormat">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Media2.OSDTextConfiguration.FontSize">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Media2.OSDTextConfiguration.FontSizeSpecified">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Media2.OSDTextConfiguration.FontColor">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Media2.OSDTextConfiguration.BackgroundColor">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Media2.OSDTextConfiguration.PlainText">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Media2.OSDTextConfiguration.Extension">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Media2.OSDTextConfiguration.AnyAttr">
            <remarks/>
        </member>
        <member name="T:StreamCoders.Onvif.Media2.OSDPosConfigurationExtension">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Media2.OSDPosConfigurationExtension.Any">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Media2.OSDPosConfigurationExtension.AnyAttr">
            <remarks/>
        </member>
        <member name="T:StreamCoders.Onvif.Media2.OSDPosConfiguration">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Media2.OSDPosConfiguration.Type">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Media2.OSDPosConfiguration.Pos">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Media2.OSDPosConfiguration.Extension">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Media2.OSDPosConfiguration.AnyAttr">
            <remarks/>
        </member>
        <member name="T:StreamCoders.Onvif.Media2.OSDReference">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Media2.OSDReference.AnyAttr">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Media2.OSDReference.Value">
            <remarks/>
        </member>
        <member name="T:StreamCoders.Onvif.Media2.PTZNodeExtension2">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Media2.PTZNodeExtension2.Any">
            <remarks/>
        </member>
        <member name="T:StreamCoders.Onvif.Media2.PTZPresetTourSupportedExtension">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Media2.PTZPresetTourSupportedExtension.Any">
            <remarks/>
        </member>
        <member name="T:StreamCoders.Onvif.Media2.PTZPresetTourSupported">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Media2.PTZPresetTourSupported.MaximumNumberOfPresetTours">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Media2.PTZPresetTourSupported.PTZPresetTourOperation">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Media2.PTZPresetTourSupported.Extension">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Media2.PTZPresetTourSupported.AnyAttr">
            <remarks/>
        </member>
        <member name="T:StreamCoders.Onvif.Media2.PTZPresetTourOperation">
            <remarks/>
        </member>
        <member name="F:StreamCoders.Onvif.Media2.PTZPresetTourOperation.Start">
            <remarks/>
        </member>
        <member name="F:StreamCoders.Onvif.Media2.PTZPresetTourOperation.Stop">
            <remarks/>
        </member>
        <member name="F:StreamCoders.Onvif.Media2.PTZPresetTourOperation.Pause">
            <remarks/>
        </member>
        <member name="F:StreamCoders.Onvif.Media2.PTZPresetTourOperation.Extended">
            <remarks/>
        </member>
        <member name="T:StreamCoders.Onvif.Media2.PTZNodeExtension">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Media2.PTZNodeExtension.Any">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Media2.PTZNodeExtension.SupportedPresetTour">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Media2.PTZNodeExtension.Extension">
            <remarks/>
        </member>
        <member name="T:StreamCoders.Onvif.Media2.PTZSpacesExtension">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Media2.PTZSpacesExtension.Any">
            <remarks/>
        </member>
        <member name="T:StreamCoders.Onvif.Media2.PTZSpaces">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Media2.PTZSpaces.AbsolutePanTiltPositionSpace">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Media2.PTZSpaces.AbsoluteZoomPositionSpace">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Media2.PTZSpaces.RelativePanTiltTranslationSpace">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Media2.PTZSpaces.RelativeZoomTranslationSpace">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Media2.PTZSpaces.ContinuousPanTiltVelocitySpace">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Media2.PTZSpaces.ContinuousZoomVelocitySpace">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Media2.PTZSpaces.PanTiltSpeedSpace">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Media2.PTZSpaces.ZoomSpeedSpace">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Media2.PTZSpaces.Extension">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Media2.PTZSpaces.AnyAttr">
            <remarks/>
        </member>
        <member name="T:StreamCoders.Onvif.Media2.Space2DDescription">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Media2.Space2DDescription.URI">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Media2.Space2DDescription.XRange">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Media2.Space2DDescription.YRange">
            <remarks/>
        </member>
        <member name="T:StreamCoders.Onvif.Media2.Space1DDescription">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Media2.Space1DDescription.URI">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Media2.Space1DDescription.XRange">
            <remarks/>
        </member>
        <member name="T:StreamCoders.Onvif.Media2.RelayOutputSettings">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Media2.RelayOutputSettings.Mode">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Media2.RelayOutputSettings.DelayTime">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Media2.RelayOutputSettings.IdleState">
            <remarks/>
        </member>
        <member name="T:StreamCoders.Onvif.Media2.RelayMode">
            <remarks/>
        </member>
        <member name="F:StreamCoders.Onvif.Media2.RelayMode.Monostable">
            <remarks/>
        </member>
        <member name="F:StreamCoders.Onvif.Media2.RelayMode.Bistable">
            <remarks/>
        </member>
        <member name="T:StreamCoders.Onvif.Media2.RelayIdleState">
            <remarks/>
        </member>
        <member name="F:StreamCoders.Onvif.Media2.RelayIdleState.closed">
            <remarks/>
        </member>
        <member name="F:StreamCoders.Onvif.Media2.RelayIdleState.open">
            <remarks/>
        </member>
        <member name="T:StreamCoders.Onvif.Media2.NetworkInterfaceExtension2">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Media2.NetworkInterfaceExtension2.Any">
            <remarks/>
        </member>
        <member name="T:StreamCoders.Onvif.Media2.Dot11SecurityConfigurationExtension">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Media2.Dot11SecurityConfigurationExtension.Any">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Media2.Dot11SecurityConfigurationExtension.AnyAttr">
            <remarks/>
        </member>
        <member name="T:StreamCoders.Onvif.Media2.Dot11PSKSetExtension">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Media2.Dot11PSKSetExtension.Any">
            <remarks/>
        </member>
        <member name="T:StreamCoders.Onvif.Media2.Dot11PSKSet">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Media2.Dot11PSKSet.Key">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Media2.Dot11PSKSet.Passphrase">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Media2.Dot11PSKSet.Extension">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Media2.Dot11PSKSet.AnyAttr">
            <remarks/>
        </member>
        <member name="T:StreamCoders.Onvif.Media2.Dot11SecurityConfiguration">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Media2.Dot11SecurityConfiguration.Mode">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Media2.Dot11SecurityConfiguration.Algorithm">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Media2.Dot11SecurityConfiguration.AlgorithmSpecified">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Media2.Dot11SecurityConfiguration.PSK">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Media2.Dot11SecurityConfiguration.Dot1X">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Media2.Dot11SecurityConfiguration.Extension">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Media2.Dot11SecurityConfiguration.AnyAttr">
            <remarks/>
        </member>
        <member name="T:StreamCoders.Onvif.Media2.Dot11SecurityMode">
            <remarks/>
        </member>
        <member name="F:StreamCoders.Onvif.Media2.Dot11SecurityMode.None">
            <remarks/>
        </member>
        <member name="F:StreamCoders.Onvif.Media2.Dot11SecurityMode.WEP">
            <remarks/>
        </member>
        <member name="F:StreamCoders.Onvif.Media2.Dot11SecurityMode.PSK">
            <remarks/>
        </member>
        <member name="F:StreamCoders.Onvif.Media2.Dot11SecurityMode.Dot1X">
            <remarks/>
        </member>
        <member name="F:StreamCoders.Onvif.Media2.Dot11SecurityMode.Extended">
            <remarks/>
        </member>
        <member name="T:StreamCoders.Onvif.Media2.Dot11Cipher">
            <remarks/>
        </member>
        <member name="F:StreamCoders.Onvif.Media2.Dot11Cipher.CCMP">
            <remarks/>
        </member>
        <member name="F:StreamCoders.Onvif.Media2.Dot11Cipher.TKIP">
            <remarks/>
        </member>
        <member name="F:StreamCoders.Onvif.Media2.Dot11Cipher.Any">
            <remarks/>
        </member>
        <member name="F:StreamCoders.Onvif.Media2.Dot11Cipher.Extended">
            <remarks/>
        </member>
        <member name="T:StreamCoders.Onvif.Media2.Dot11Configuration">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Media2.Dot11Configuration.SSID">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Media2.Dot11Configuration.Mode">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Media2.Dot11Configuration.Alias">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Media2.Dot11Configuration.Priority">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Media2.Dot11Configuration.Security">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Media2.Dot11Configuration.Any">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Media2.Dot11Configuration.AnyAttr">
            <remarks/>
        </member>
        <member name="T:StreamCoders.Onvif.Media2.Dot11StationMode">
            <remarks/>
        </member>
        <member name="F:StreamCoders.Onvif.Media2.Dot11StationMode.Adhoc">
            <remarks/>
        </member>
        <member name="F:StreamCoders.Onvif.Media2.Dot11StationMode.Infrastructure">
            <remarks/>
        </member>
        <member name="F:StreamCoders.Onvif.Media2.Dot11StationMode.Extended">
            <remarks/>
        </member>
        <member name="T:StreamCoders.Onvif.Media2.Dot3Configuration">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Media2.Dot3Configuration.Any">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Media2.Dot3Configuration.AnyAttr">
            <remarks/>
        </member>
        <member name="T:StreamCoders.Onvif.Media2.NetworkInterfaceExtension">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Media2.NetworkInterfaceExtension.Any">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Media2.NetworkInterfaceExtension.InterfaceType">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Media2.NetworkInterfaceExtension.Dot3">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Media2.NetworkInterfaceExtension.Dot11">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Media2.NetworkInterfaceExtension.Extension">
            <remarks/>
        </member>
        <member name="T:StreamCoders.Onvif.Media2.IPv6ConfigurationExtension">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Media2.IPv6ConfigurationExtension.Any">
            <remarks/>
        </member>
        <member name="T:StreamCoders.Onvif.Media2.PrefixedIPv6Address">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Media2.PrefixedIPv6Address.Address">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Media2.PrefixedIPv6Address.PrefixLength">
            <remarks/>
        </member>
        <member name="T:StreamCoders.Onvif.Media2.IPv6Configuration">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Media2.IPv6Configuration.AcceptRouterAdvert">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Media2.IPv6Configuration.AcceptRouterAdvertSpecified">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Media2.IPv6Configuration.DHCP">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Media2.IPv6Configuration.Manual">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Media2.IPv6Configuration.LinkLocal">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Media2.IPv6Configuration.FromDHCP">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Media2.IPv6Configuration.FromRA">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Media2.IPv6Configuration.Extension">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Media2.IPv6Configuration.AnyAttr">
            <remarks/>
        </member>
        <member name="T:StreamCoders.Onvif.Media2.IPv6DHCPConfiguration">
            <remarks/>
        </member>
        <member name="F:StreamCoders.Onvif.Media2.IPv6DHCPConfiguration.Auto">
            <remarks/>
        </member>
        <member name="F:StreamCoders.Onvif.Media2.IPv6DHCPConfiguration.Stateful">
            <remarks/>
        </member>
        <member name="F:StreamCoders.Onvif.Media2.IPv6DHCPConfiguration.Stateless">
            <remarks/>
        </member>
        <member name="F:StreamCoders.Onvif.Media2.IPv6DHCPConfiguration.Off">
            <remarks/>
        </member>
        <member name="T:StreamCoders.Onvif.Media2.IPv6NetworkInterface">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Media2.IPv6NetworkInterface.Enabled">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Media2.IPv6NetworkInterface.Config">
            <remarks/>
        </member>
        <member name="T:StreamCoders.Onvif.Media2.PrefixedIPv4Address">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Media2.PrefixedIPv4Address.Address">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Media2.PrefixedIPv4Address.PrefixLength">
            <remarks/>
        </member>
        <member name="T:StreamCoders.Onvif.Media2.IPv4Configuration">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Media2.IPv4Configuration.Manual">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Media2.IPv4Configuration.LinkLocal">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Media2.IPv4Configuration.FromDHCP">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Media2.IPv4Configuration.DHCP">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Media2.IPv4Configuration.Any">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Media2.IPv4Configuration.AnyAttr">
            <remarks/>
        </member>
        <member name="T:StreamCoders.Onvif.Media2.IPv4NetworkInterface">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Media2.IPv4NetworkInterface.Enabled">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Media2.IPv4NetworkInterface.Config">
            <remarks/>
        </member>
        <member name="T:StreamCoders.Onvif.Media2.NetworkInterfaceConnectionSetting">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Media2.NetworkInterfaceConnectionSetting.AutoNegotiation">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Media2.NetworkInterfaceConnectionSetting.Speed">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Media2.NetworkInterfaceConnectionSetting.Duplex">
            <remarks/>
        </member>
        <member name="T:StreamCoders.Onvif.Media2.Duplex">
            <remarks/>
        </member>
        <member name="F:StreamCoders.Onvif.Media2.Duplex.Full">
            <remarks/>
        </member>
        <member name="F:StreamCoders.Onvif.Media2.Duplex.Half">
            <remarks/>
        </member>
        <member name="T:StreamCoders.Onvif.Media2.NetworkInterfaceLink">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Media2.NetworkInterfaceLink.AdminSettings">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Media2.NetworkInterfaceLink.OperSettings">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Media2.NetworkInterfaceLink.InterfaceType">
            <remarks/>
        </member>
        <member name="T:StreamCoders.Onvif.Media2.NetworkInterfaceInfo">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Media2.NetworkInterfaceInfo.Name">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Media2.NetworkInterfaceInfo.HwAddress">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Media2.NetworkInterfaceInfo.MTU">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Media2.NetworkInterfaceInfo.MTUSpecified">
            <remarks/>
        </member>
        <member name="T:StreamCoders.Onvif.Media2.VideoOutputExtension">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Media2.VideoOutputExtension.Any">
            <remarks/>
        </member>
        <member name="T:StreamCoders.Onvif.Media2.LayoutExtension">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Media2.LayoutExtension.Any">
            <remarks/>
        </member>
        <member name="T:StreamCoders.Onvif.Media2.PaneLayout">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Media2.PaneLayout.Pane">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Media2.PaneLayout.Area">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Media2.PaneLayout.Any">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Media2.PaneLayout.AnyAttr">
            <remarks/>
        </member>
        <member name="T:StreamCoders.Onvif.Media2.Rectangle">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Media2.Rectangle.bottom">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Media2.Rectangle.bottomSpecified">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Media2.Rectangle.top">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Media2.Rectangle.topSpecified">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Media2.Rectangle.right">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Media2.Rectangle.rightSpecified">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Media2.Rectangle.left">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Media2.Rectangle.leftSpecified">
            <remarks/>
        </member>
        <member name="T:StreamCoders.Onvif.Media2.Layout">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Media2.Layout.PaneLayout">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Media2.Layout.Extension">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Media2.Layout.AnyAttr">
            <remarks/>
        </member>
        <member name="T:StreamCoders.Onvif.Media2.VideoSourceExtension2">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Media2.VideoSourceExtension2.Any">
            <remarks/>
        </member>
        <member name="T:StreamCoders.Onvif.Media2.ImagingSettingsExtension204">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Media2.ImagingSettingsExtension204.Any">
            <remarks/>
        </member>
        <member name="T:StreamCoders.Onvif.Media2.NoiseReduction">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Media2.NoiseReduction.Level">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Media2.NoiseReduction.Any">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Media2.NoiseReduction.AnyAttr">
            <remarks/>
        </member>
        <member name="T:StreamCoders.Onvif.Media2.DefoggingExtension">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Media2.DefoggingExtension.Any">
            <remarks/>
        </member>
        <member name="T:StreamCoders.Onvif.Media2.Defogging">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Media2.Defogging.Mode">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Media2.Defogging.Level">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Media2.Defogging.LevelSpecified">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Media2.Defogging.Extension">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Media2.Defogging.AnyAttr">
            <remarks/>
        </member>
        <member name="T:StreamCoders.Onvif.Media2.ToneCompensationExtension">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Media2.ToneCompensationExtension.Any">
            <remarks/>
        </member>
        <member name="T:StreamCoders.Onvif.Media2.ToneCompensation">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Media2.ToneCompensation.Mode">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Media2.ToneCompensation.Level">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Media2.ToneCompensation.LevelSpecified">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Media2.ToneCompensation.Extension">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Media2.ToneCompensation.AnyAttr">
            <remarks/>
        </member>
        <member name="T:StreamCoders.Onvif.Media2.ImagingSettingsExtension203">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Media2.ImagingSettingsExtension203.ToneCompensation">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Media2.ImagingSettingsExtension203.Defogging">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Media2.ImagingSettingsExtension203.NoiseReduction">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Media2.ImagingSettingsExtension203.Extension">
            <remarks/>
        </member>
        <member name="T:StreamCoders.Onvif.Media2.IrCutFilterAutoAdjustmentExtension">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Media2.IrCutFilterAutoAdjustmentExtension.Any">
            <remarks/>
        </member>
        <member name="T:StreamCoders.Onvif.Media2.IrCutFilterAutoAdjustment">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Media2.IrCutFilterAutoAdjustment.BoundaryType">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Media2.IrCutFilterAutoAdjustment.BoundaryOffset">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Media2.IrCutFilterAutoAdjustment.BoundaryOffsetSpecified">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Media2.IrCutFilterAutoAdjustment.ResponseTime">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Media2.IrCutFilterAutoAdjustment.Extension">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Media2.IrCutFilterAutoAdjustment.AnyAttr">
            <remarks/>
        </member>
        <member name="T:StreamCoders.Onvif.Media2.ImagingSettingsExtension202">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Media2.ImagingSettingsExtension202.IrCutFilterAutoAdjustment">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Media2.ImagingSettingsExtension202.Extension">
            <remarks/>
        </member>
        <member name="T:StreamCoders.Onvif.Media2.ImageStabilizationExtension">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Media2.ImageStabilizationExtension.Any">
            <remarks/>
        </member>
        <member name="T:StreamCoders.Onvif.Media2.ImageStabilization">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Media2.ImageStabilization.Mode">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Media2.ImageStabilization.Level">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Media2.ImageStabilization.LevelSpecified">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Media2.ImageStabilization.Extension">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Media2.ImageStabilization.AnyAttr">
            <remarks/>
        </member>
        <member name="T:StreamCoders.Onvif.Media2.ImageStabilizationMode">
            <remarks/>
        </member>
        <member name="F:StreamCoders.Onvif.Media2.ImageStabilizationMode.OFF">
            <remarks/>
        </member>
        <member name="F:StreamCoders.Onvif.Media2.ImageStabilizationMode.ON">
            <remarks/>
        </member>
        <member name="F:StreamCoders.Onvif.Media2.ImageStabilizationMode.AUTO">
            <remarks/>
        </member>
        <member name="F:StreamCoders.Onvif.Media2.ImageStabilizationMode.Extended">
            <remarks/>
        </member>
        <member name="T:StreamCoders.Onvif.Media2.ImagingSettingsExtension20">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Media2.ImagingSettingsExtension20.Any">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Media2.ImagingSettingsExtension20.ImageStabilization">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Media2.ImagingSettingsExtension20.Extension">
            <remarks/>
        </member>
        <member name="T:StreamCoders.Onvif.Media2.WhiteBalance20Extension">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Media2.WhiteBalance20Extension.Any">
            <remarks/>
        </member>
        <member name="T:StreamCoders.Onvif.Media2.WhiteBalance20">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Media2.WhiteBalance20.Mode">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Media2.WhiteBalance20.CrGain">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Media2.WhiteBalance20.CrGainSpecified">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Media2.WhiteBalance20.CbGain">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Media2.WhiteBalance20.CbGainSpecified">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Media2.WhiteBalance20.Extension">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Media2.WhiteBalance20.AnyAttr">
            <remarks/>
        </member>
        <member name="T:StreamCoders.Onvif.Media2.WhiteBalanceMode">
            <remarks/>
        </member>
        <member name="F:StreamCoders.Onvif.Media2.WhiteBalanceMode.AUTO">
            <remarks/>
        </member>
        <member name="F:StreamCoders.Onvif.Media2.WhiteBalanceMode.MANUAL">
            <remarks/>
        </member>
        <member name="T:StreamCoders.Onvif.Media2.WideDynamicRange20">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Media2.WideDynamicRange20.Mode">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Media2.WideDynamicRange20.Level">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Media2.WideDynamicRange20.LevelSpecified">
            <remarks/>
        </member>
        <member name="T:StreamCoders.Onvif.Media2.WideDynamicMode">
            <remarks/>
        </member>
        <member name="F:StreamCoders.Onvif.Media2.WideDynamicMode.OFF">
            <remarks/>
        </member>
        <member name="F:StreamCoders.Onvif.Media2.WideDynamicMode.ON">
            <remarks/>
        </member>
        <member name="T:StreamCoders.Onvif.Media2.FocusConfiguration20Extension">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Media2.FocusConfiguration20Extension.Any">
            <remarks/>
        </member>
        <member name="T:StreamCoders.Onvif.Media2.FocusConfiguration20">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Media2.FocusConfiguration20.AutoFocusMode">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Media2.FocusConfiguration20.DefaultSpeed">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Media2.FocusConfiguration20.DefaultSpeedSpecified">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Media2.FocusConfiguration20.NearLimit">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Media2.FocusConfiguration20.NearLimitSpecified">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Media2.FocusConfiguration20.FarLimit">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Media2.FocusConfiguration20.FarLimitSpecified">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Media2.FocusConfiguration20.Extension">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Media2.FocusConfiguration20.AnyAttr">
            <remarks/>
        </member>
        <member name="T:StreamCoders.Onvif.Media2.AutoFocusMode">
            <remarks/>
        </member>
        <member name="F:StreamCoders.Onvif.Media2.AutoFocusMode.AUTO">
            <remarks/>
        </member>
        <member name="F:StreamCoders.Onvif.Media2.AutoFocusMode.MANUAL">
            <remarks/>
        </member>
        <member name="T:StreamCoders.Onvif.Media2.Exposure20">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Media2.Exposure20.Mode">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Media2.Exposure20.Priority">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Media2.Exposure20.PrioritySpecified">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Media2.Exposure20.Window">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Media2.Exposure20.MinExposureTime">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Media2.Exposure20.MinExposureTimeSpecified">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Media2.Exposure20.MaxExposureTime">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Media2.Exposure20.MaxExposureTimeSpecified">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Media2.Exposure20.MinGain">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Media2.Exposure20.MinGainSpecified">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Media2.Exposure20.MaxGain">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Media2.Exposure20.MaxGainSpecified">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Media2.Exposure20.MinIris">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Media2.Exposure20.MinIrisSpecified">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Media2.Exposure20.MaxIris">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Media2.Exposure20.MaxIrisSpecified">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Media2.Exposure20.ExposureTime">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Media2.Exposure20.ExposureTimeSpecified">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Media2.Exposure20.Gain">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Media2.Exposure20.GainSpecified">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Media2.Exposure20.Iris">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Media2.Exposure20.IrisSpecified">
            <remarks/>
        </member>
        <member name="T:StreamCoders.Onvif.Media2.ExposureMode">
            <remarks/>
        </member>
        <member name="F:StreamCoders.Onvif.Media2.ExposureMode.AUTO">
            <remarks/>
        </member>
        <member name="F:StreamCoders.Onvif.Media2.ExposureMode.MANUAL">
            <remarks/>
        </member>
        <member name="T:StreamCoders.Onvif.Media2.ExposurePriority">
            <remarks/>
        </member>
        <member name="F:StreamCoders.Onvif.Media2.ExposurePriority.LowNoise">
            <remarks/>
        </member>
        <member name="F:StreamCoders.Onvif.Media2.ExposurePriority.FrameRate">
            <remarks/>
        </member>
        <member name="T:StreamCoders.Onvif.Media2.BacklightCompensation20">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Media2.BacklightCompensation20.Mode">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Media2.BacklightCompensation20.Level">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Media2.BacklightCompensation20.LevelSpecified">
            <remarks/>
        </member>
        <member name="T:StreamCoders.Onvif.Media2.BacklightCompensationMode">
            <remarks/>
        </member>
        <member name="F:StreamCoders.Onvif.Media2.BacklightCompensationMode.OFF">
            <remarks/>
        </member>
        <member name="F:StreamCoders.Onvif.Media2.BacklightCompensationMode.ON">
            <remarks/>
        </member>
        <member name="T:StreamCoders.Onvif.Media2.ImagingSettings20">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Media2.ImagingSettings20.BacklightCompensation">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Media2.ImagingSettings20.Brightness">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Media2.ImagingSettings20.BrightnessSpecified">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Media2.ImagingSettings20.ColorSaturation">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Media2.ImagingSettings20.ColorSaturationSpecified">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Media2.ImagingSettings20.Contrast">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Media2.ImagingSettings20.ContrastSpecified">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Media2.ImagingSettings20.Exposure">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Media2.ImagingSettings20.Focus">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Media2.ImagingSettings20.IrCutFilter">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Media2.ImagingSettings20.IrCutFilterSpecified">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Media2.ImagingSettings20.Sharpness">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Media2.ImagingSettings20.SharpnessSpecified">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Media2.ImagingSettings20.WideDynamicRange">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Media2.ImagingSettings20.WhiteBalance">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Media2.ImagingSettings20.Extension">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Media2.ImagingSettings20.AnyAttr">
            <remarks/>
        </member>
        <member name="T:StreamCoders.Onvif.Media2.IrCutFilterMode">
            <remarks/>
        </member>
        <member name="F:StreamCoders.Onvif.Media2.IrCutFilterMode.ON">
            <remarks/>
        </member>
        <member name="F:StreamCoders.Onvif.Media2.IrCutFilterMode.OFF">
            <remarks/>
        </member>
        <member name="F:StreamCoders.Onvif.Media2.IrCutFilterMode.AUTO">
            <remarks/>
        </member>
        <member name="T:StreamCoders.Onvif.Media2.VideoSourceExtension">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Media2.VideoSourceExtension.Any">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Media2.VideoSourceExtension.Imaging">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Media2.VideoSourceExtension.Extension">
            <remarks/>
        </member>
        <member name="T:StreamCoders.Onvif.Media2.ImagingSettingsExtension">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Media2.ImagingSettingsExtension.Any">
            <remarks/>
        </member>
        <member name="T:StreamCoders.Onvif.Media2.WhiteBalance">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Media2.WhiteBalance.Mode">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Media2.WhiteBalance.CrGain">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Media2.WhiteBalance.CbGain">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Media2.WhiteBalance.Any">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Media2.WhiteBalance.AnyAttr">
            <remarks/>
        </member>
        <member name="T:StreamCoders.Onvif.Media2.WideDynamicRange">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Media2.WideDynamicRange.Mode">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Media2.WideDynamicRange.Level">
            <remarks/>
        </member>
        <member name="T:StreamCoders.Onvif.Media2.FocusConfiguration">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Media2.FocusConfiguration.AutoFocusMode">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Media2.FocusConfiguration.DefaultSpeed">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Media2.FocusConfiguration.NearLimit">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Media2.FocusConfiguration.FarLimit">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Media2.FocusConfiguration.Any">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Media2.FocusConfiguration.AnyAttr">
            <remarks/>
        </member>
        <member name="T:StreamCoders.Onvif.Media2.Exposure">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Media2.Exposure.Mode">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Media2.Exposure.Priority">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Media2.Exposure.Window">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Media2.Exposure.MinExposureTime">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Media2.Exposure.MaxExposureTime">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Media2.Exposure.MinGain">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Media2.Exposure.MaxGain">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Media2.Exposure.MinIris">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Media2.Exposure.MaxIris">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Media2.Exposure.ExposureTime">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Media2.Exposure.Gain">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Media2.Exposure.Iris">
            <remarks/>
        </member>
        <member name="T:StreamCoders.Onvif.Media2.BacklightCompensation">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Media2.BacklightCompensation.Mode">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Media2.BacklightCompensation.Level">
            <remarks/>
        </member>
        <member name="T:StreamCoders.Onvif.Media2.ImagingSettings">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Media2.ImagingSettings.BacklightCompensation">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Media2.ImagingSettings.Brightness">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Media2.ImagingSettings.BrightnessSpecified">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Media2.ImagingSettings.ColorSaturation">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Media2.ImagingSettings.ColorSaturationSpecified">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Media2.ImagingSettings.Contrast">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Media2.ImagingSettings.ContrastSpecified">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Media2.ImagingSettings.Exposure">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Media2.ImagingSettings.Focus">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Media2.ImagingSettings.IrCutFilter">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Media2.ImagingSettings.IrCutFilterSpecified">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Media2.ImagingSettings.Sharpness">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Media2.ImagingSettings.SharpnessSpecified">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Media2.ImagingSettings.WideDynamicRange">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Media2.ImagingSettings.WhiteBalance">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Media2.ImagingSettings.Extension">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Media2.ImagingSettings.AnyAttr">
            <remarks/>
        </member>
        <member name="T:StreamCoders.Onvif.Media2.DeviceEntity">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Media2.DeviceEntity.token">
            <remarks/>
        </member>
        <member name="T:StreamCoders.Onvif.Media2.OSDConfiguration">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Media2.OSDConfiguration.VideoSourceConfigurationToken">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Media2.OSDConfiguration.Type">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Media2.OSDConfiguration.Position">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Media2.OSDConfiguration.TextString">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Media2.OSDConfiguration.Image">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Media2.OSDConfiguration.Extension">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Media2.OSDConfiguration.AnyAttr">
            <remarks/>
        </member>
        <member name="T:StreamCoders.Onvif.Media2.PTZNode">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Media2.PTZNode.Name">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Media2.PTZNode.SupportedPTZSpaces">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Media2.PTZNode.MaximumNumberOfPresets">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Media2.PTZNode.HomeSupported">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Media2.PTZNode.AuxiliaryCommands">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Media2.PTZNode.Extension">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Media2.PTZNode.FixedHomePosition">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Media2.PTZNode.FixedHomePositionSpecified">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Media2.PTZNode.AnyAttr">
            <remarks/>
        </member>
        <member name="T:StreamCoders.Onvif.Media2.DigitalInput">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Media2.DigitalInput.Any">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Media2.DigitalInput.IdleState">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Media2.DigitalInput.IdleStateSpecified">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Media2.DigitalInput.AnyAttr">
            <remarks/>
        </member>
        <member name="T:StreamCoders.Onvif.Media2.DigitalIdleState">
            <remarks/>
        </member>
        <member name="F:StreamCoders.Onvif.Media2.DigitalIdleState.closed">
            <remarks/>
        </member>
        <member name="F:StreamCoders.Onvif.Media2.DigitalIdleState.open">
            <remarks/>
        </member>
        <member name="T:StreamCoders.Onvif.Media2.RelayOutput">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Media2.RelayOutput.Properties">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Media2.RelayOutput.Any">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Media2.RelayOutput.AnyAttr">
            <remarks/>
        </member>
        <member name="T:StreamCoders.Onvif.Media2.NetworkInterface">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Media2.NetworkInterface.Enabled">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Media2.NetworkInterface.Info">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Media2.NetworkInterface.Link">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Media2.NetworkInterface.IPv4">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Media2.NetworkInterface.IPv6">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Media2.NetworkInterface.Extension">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Media2.NetworkInterface.AnyAttr">
            <remarks/>
        </member>
        <member name="T:StreamCoders.Onvif.Media2.AudioOutput">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Media2.AudioOutput.Any">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Media2.AudioOutput.AnyAttr">
            <remarks/>
        </member>
        <member name="T:StreamCoders.Onvif.Media2.VideoOutput">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Media2.VideoOutput.Layout">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Media2.VideoOutput.Resolution">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Media2.VideoOutput.RefreshRate">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Media2.VideoOutput.RefreshRateSpecified">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Media2.VideoOutput.AspectRatio">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Media2.VideoOutput.AspectRatioSpecified">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Media2.VideoOutput.Extension">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Media2.VideoOutput.AnyAttr">
            <remarks/>
        </member>
        <member name="T:StreamCoders.Onvif.Media2.VideoResolution">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Media2.VideoResolution.Width">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Media2.VideoResolution.Height">
            <remarks/>
        </member>
        <member name="T:StreamCoders.Onvif.Media2.AudioSource">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Media2.AudioSource.Channels">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Media2.AudioSource.Any">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Media2.AudioSource.AnyAttr">
            <remarks/>
        </member>
        <member name="T:StreamCoders.Onvif.Media2.VideoSource">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Media2.VideoSource.Framerate">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Media2.VideoSource.Resolution">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Media2.VideoSource.Imaging">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Media2.VideoSource.Extension">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Media2.VideoSource.AnyAttr">
            <remarks/>
        </member>
        <member name="T:StreamCoders.Onvif.Media2.VideoSourceMode">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Media2.VideoSourceMode.MaxFramerate">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Media2.VideoSourceMode.MaxResolution">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Media2.VideoSourceMode.Encodings">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Media2.VideoSourceMode.Reboot">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Media2.VideoSourceMode.Description">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Media2.VideoSourceMode.Any">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Media2.VideoSourceMode.token">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Media2.VideoSourceMode.Enabled">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Media2.VideoSourceMode.EnabledSpecified">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Media2.VideoSourceMode.AnyAttr">
            <remarks/>
        </member>
        <member name="T:StreamCoders.Onvif.Media2.EncoderInstance">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Media2.EncoderInstance.Encoding">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Media2.EncoderInstance.Number">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Media2.EncoderInstance.AnyAttr">
            <remarks/>
        </member>
        <member name="T:StreamCoders.Onvif.Media2.EncoderInstanceInfo">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Media2.EncoderInstanceInfo.Codec">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Media2.EncoderInstanceInfo.Total">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Media2.EncoderInstanceInfo.Any">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Media2.EncoderInstanceInfo.AnyAttr">
            <remarks/>
        </member>
        <member name="T:StreamCoders.Onvif.Media2.AudioOutputConfigurationOptions">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Media2.AudioOutputConfigurationOptions.OutputTokensAvailable">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Media2.AudioOutputConfigurationOptions.SendPrimacyOptions">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Media2.AudioOutputConfigurationOptions.OutputLevelRange">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Media2.AudioOutputConfigurationOptions.Any">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Media2.AudioOutputConfigurationOptions.AnyAttr">
            <remarks/>
        </member>
        <member name="T:StreamCoders.Onvif.Media2.MetadataConfigurationOptionsExtension2">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Media2.MetadataConfigurationOptionsExtension2.Any">
            <remarks/>
        </member>
        <member name="T:StreamCoders.Onvif.Media2.MetadataConfigurationOptionsExtension">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Media2.MetadataConfigurationOptionsExtension.CompressionType">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Media2.MetadataConfigurationOptionsExtension.Extension">
            <remarks/>
        </member>
        <member name="T:StreamCoders.Onvif.Media2.PTZStatusFilterOptionsExtension">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Media2.PTZStatusFilterOptionsExtension.Any">
            <remarks/>
        </member>
        <member name="T:StreamCoders.Onvif.Media2.PTZStatusFilterOptions">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Media2.PTZStatusFilterOptions.PanTiltStatusSupported">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Media2.PTZStatusFilterOptions.ZoomStatusSupported">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Media2.PTZStatusFilterOptions.Any">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Media2.PTZStatusFilterOptions.PanTiltPositionSupported">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Media2.PTZStatusFilterOptions.PanTiltPositionSupportedSpecified">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Media2.PTZStatusFilterOptions.ZoomPositionSupported">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Media2.PTZStatusFilterOptions.ZoomPositionSupportedSpecified">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Media2.PTZStatusFilterOptions.Extension">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Media2.PTZStatusFilterOptions.AnyAttr">
            <remarks/>
        </member>
        <member name="T:StreamCoders.Onvif.Media2.MetadataConfigurationOptions">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Media2.MetadataConfigurationOptions.PTZStatusFilterOptions">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Media2.MetadataConfigurationOptions.Any">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Media2.MetadataConfigurationOptions.Extension">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Media2.MetadataConfigurationOptions.AnyAttr">
            <remarks/>
        </member>
        <member name="T:StreamCoders.Onvif.Media2.AudioEncoder2ConfigurationOptions">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Media2.AudioEncoder2ConfigurationOptions.Encoding">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Media2.AudioEncoder2ConfigurationOptions.BitrateList">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Media2.AudioEncoder2ConfigurationOptions.SampleRateList">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Media2.AudioEncoder2ConfigurationOptions.Any">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Media2.AudioEncoder2ConfigurationOptions.AnyAttr">
            <remarks/>
        </member>
        <member name="T:StreamCoders.Onvif.Media2.AudioSourceOptionsExtension">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Media2.AudioSourceOptionsExtension.Any">
            <remarks/>
        </member>
        <member name="T:StreamCoders.Onvif.Media2.AudioSourceConfigurationOptions">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Media2.AudioSourceConfigurationOptions.InputTokensAvailable">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Media2.AudioSourceConfigurationOptions.Extension">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Media2.AudioSourceConfigurationOptions.AnyAttr">
            <remarks/>
        </member>
        <member name="T:StreamCoders.Onvif.Media2.VideoEncoder2ConfigurationOptions">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Media2.VideoEncoder2ConfigurationOptions.Encoding">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Media2.VideoEncoder2ConfigurationOptions.QualityRange">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Media2.VideoEncoder2ConfigurationOptions.ResolutionsAvailable">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Media2.VideoEncoder2ConfigurationOptions.BitrateRange">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Media2.VideoEncoder2ConfigurationOptions.Any">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Media2.VideoEncoder2ConfigurationOptions.GovLengthRange">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Media2.VideoEncoder2ConfigurationOptions.FrameRatesSupported">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Media2.VideoEncoder2ConfigurationOptions.ProfilesSupported">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Media2.VideoEncoder2ConfigurationOptions.ConstantBitRateSupported">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Media2.VideoEncoder2ConfigurationOptions.ConstantBitRateSupportedSpecified">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Media2.VideoEncoder2ConfigurationOptions.AnyAttr">
            <remarks/>
        </member>
        <member name="T:StreamCoders.Onvif.Media2.VideoResolution2">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Media2.VideoResolution2.Width">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Media2.VideoResolution2.Height">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Media2.VideoResolution2.Any">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Media2.VideoResolution2.AnyAttr">
            <remarks/>
        </member>
        <member name="T:StreamCoders.Onvif.Media2.VideoSourceConfigurationOptionsExtension2">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Media2.VideoSourceConfigurationOptionsExtension2.SceneOrientationMode">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Media2.VideoSourceConfigurationOptionsExtension2.Any">
            <remarks/>
        </member>
        <member name="T:StreamCoders.Onvif.Media2.SceneOrientationMode">
            <remarks/>
        </member>
        <member name="F:StreamCoders.Onvif.Media2.SceneOrientationMode.MANUAL">
            <remarks/>
        </member>
        <member name="F:StreamCoders.Onvif.Media2.SceneOrientationMode.AUTO">
            <remarks/>
        </member>
        <member name="T:StreamCoders.Onvif.Media2.RotateOptionsExtension">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Media2.RotateOptionsExtension.Any">
            <remarks/>
        </member>
        <member name="T:StreamCoders.Onvif.Media2.RotateOptions">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Media2.RotateOptions.Mode">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Media2.RotateOptions.DegreeList">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Media2.RotateOptions.Extension">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Media2.RotateOptions.AnyAttr">
            <remarks/>
        </member>
        <member name="T:StreamCoders.Onvif.Media2.RotateMode">
            <remarks/>
        </member>
        <member name="F:StreamCoders.Onvif.Media2.RotateMode.OFF">
            <remarks/>
        </member>
        <member name="F:StreamCoders.Onvif.Media2.RotateMode.ON">
            <remarks/>
        </member>
        <member name="F:StreamCoders.Onvif.Media2.RotateMode.AUTO">
            <remarks/>
        </member>
        <member name="T:StreamCoders.Onvif.Media2.VideoSourceConfigurationOptionsExtension">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Media2.VideoSourceConfigurationOptionsExtension.Any">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Media2.VideoSourceConfigurationOptionsExtension.Rotate">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Media2.VideoSourceConfigurationOptionsExtension.Extension">
            <remarks/>
        </member>
        <member name="T:StreamCoders.Onvif.Media2.IntRectangleRange">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Media2.IntRectangleRange.XRange">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Media2.IntRectangleRange.YRange">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Media2.IntRectangleRange.WidthRange">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Media2.IntRectangleRange.HeightRange">
            <remarks/>
        </member>
        <member name="T:StreamCoders.Onvif.Media2.VideoSourceConfigurationOptions">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Media2.VideoSourceConfigurationOptions.BoundsRange">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Media2.VideoSourceConfigurationOptions.VideoSourceTokensAvailable">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Media2.VideoSourceConfigurationOptions.Extension">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Media2.VideoSourceConfigurationOptions.AnyAttr">
            <remarks/>
        </member>
        <member name="T:StreamCoders.Onvif.Media2.MetadataInputExtension">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Media2.MetadataInputExtension.Any">
            <remarks/>
        </member>
        <member name="T:StreamCoders.Onvif.Media2.MetadataInput">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Media2.MetadataInput.MetadataConfig">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Media2.MetadataInput.Extension">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Media2.MetadataInput.AnyAttr">
            <remarks/>
        </member>
        <member name="T:StreamCoders.Onvif.Media2.Config">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Media2.Config.Parameters">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Media2.Config.Name">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Media2.Config.Type">
            <remarks/>
        </member>
        <member name="T:StreamCoders.Onvif.Media2.ItemList">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Media2.ItemList.SimpleItem">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Media2.ItemList.ElementItem">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Media2.ItemList.Extension">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Media2.ItemList.AnyAttr">
            <remarks/>
        </member>
        <member name="T:StreamCoders.Onvif.Media2.ItemListSimpleItem">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Media2.ItemListSimpleItem.Name">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Media2.ItemListSimpleItem.Value">
            <remarks/>
        </member>
        <member name="T:StreamCoders.Onvif.Media2.ItemListElementItem">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Media2.ItemListElementItem.Any">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Media2.ItemListElementItem.Name">
            <remarks/>
        </member>
        <member name="T:StreamCoders.Onvif.Media2.ItemListExtension">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Media2.ItemListExtension.Any">
            <remarks/>
        </member>
        <member name="T:StreamCoders.Onvif.Media2.SourceIdentificationExtension">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Media2.SourceIdentificationExtension.Any">
            <remarks/>
        </member>
        <member name="T:StreamCoders.Onvif.Media2.SourceIdentification">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Media2.SourceIdentification.Name">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Media2.SourceIdentification.Token">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Media2.SourceIdentification.Extension">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Media2.SourceIdentification.AnyAttr">
            <remarks/>
        </member>
        <member name="T:StreamCoders.Onvif.Media2.AnalyticsDeviceEngineConfigurationExtension">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Media2.AnalyticsDeviceEngineConfigurationExtension.Any">
            <remarks/>
        </member>
        <member name="T:StreamCoders.Onvif.Media2.AnalyticsEngineInputInfoExtension">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Media2.AnalyticsEngineInputInfoExtension.Any">
            <remarks/>
        </member>
        <member name="T:StreamCoders.Onvif.Media2.AnalyticsEngineInputInfo">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Media2.AnalyticsEngineInputInfo.InputInfo">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Media2.AnalyticsEngineInputInfo.Extension">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Media2.AnalyticsEngineInputInfo.AnyAttr">
            <remarks/>
        </member>
        <member name="T:StreamCoders.Onvif.Media2.EngineConfiguration">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Media2.EngineConfiguration.VideoAnalyticsConfiguration">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Media2.EngineConfiguration.AnalyticsEngineInputInfo">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Media2.EngineConfiguration.Any">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Media2.EngineConfiguration.AnyAttr">
            <remarks/>
        </member>
        <member name="T:StreamCoders.Onvif.Media2.VideoAnalyticsConfiguration">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Media2.VideoAnalyticsConfiguration.AnalyticsEngineConfiguration">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Media2.VideoAnalyticsConfiguration.RuleEngineConfiguration">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Media2.VideoAnalyticsConfiguration.Any">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Media2.VideoAnalyticsConfiguration.AnyAttr">
            <remarks/>
        </member>
        <member name="T:StreamCoders.Onvif.Media2.AnalyticsEngineConfiguration">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Media2.AnalyticsEngineConfiguration.AnalyticsModule">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Media2.AnalyticsEngineConfiguration.Extension">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Media2.AnalyticsEngineConfiguration.AnyAttr">
            <remarks/>
        </member>
        <member name="T:StreamCoders.Onvif.Media2.AnalyticsEngineConfigurationExtension">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Media2.AnalyticsEngineConfigurationExtension.Any">
            <remarks/>
        </member>
        <member name="T:StreamCoders.Onvif.Media2.RuleEngineConfiguration">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Media2.RuleEngineConfiguration.Rule">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Media2.RuleEngineConfiguration.Extension">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Media2.RuleEngineConfiguration.AnyAttr">
            <remarks/>
        </member>
        <member name="T:StreamCoders.Onvif.Media2.RuleEngineConfigurationExtension">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Media2.RuleEngineConfigurationExtension.Any">
            <remarks/>
        </member>
        <member name="T:StreamCoders.Onvif.Media2.ConfigurationEntity">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Media2.ConfigurationEntity.Name">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Media2.ConfigurationEntity.UseCount">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Media2.ConfigurationEntity.token">
            <remarks/>
        </member>
        <member name="T:StreamCoders.Onvif.Media2.AnalyticsEngineControl">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Media2.AnalyticsEngineControl.EngineToken">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Media2.AnalyticsEngineControl.EngineConfigToken">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Media2.AnalyticsEngineControl.InputToken">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Media2.AnalyticsEngineControl.ReceiverToken">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Media2.AnalyticsEngineControl.Multicast">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Media2.AnalyticsEngineControl.Subscription">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Media2.AnalyticsEngineControl.Mode">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Media2.AnalyticsEngineControl.Any">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Media2.AnalyticsEngineControl.AnyAttr">
            <remarks/>
        </member>
        <member name="T:StreamCoders.Onvif.Media2.MulticastConfiguration">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Media2.MulticastConfiguration.Address">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Media2.MulticastConfiguration.Port">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Media2.MulticastConfiguration.TTL">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Media2.MulticastConfiguration.AutoStart">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Media2.MulticastConfiguration.Any">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Media2.MulticastConfiguration.AnyAttr">
            <remarks/>
        </member>
        <member name="T:StreamCoders.Onvif.Media2.IPAddress">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Media2.IPAddress.Type">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Media2.IPAddress.IPv4Address">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Media2.IPAddress.IPv6Address">
            <remarks/>
        </member>
        <member name="T:StreamCoders.Onvif.Media2.IPType">
            <remarks/>
        </member>
        <member name="F:StreamCoders.Onvif.Media2.IPType.IPv4">
            <remarks/>
        </member>
        <member name="F:StreamCoders.Onvif.Media2.IPType.IPv6">
            <remarks/>
        </member>
        <member name="T:StreamCoders.Onvif.Media2.ModeOfOperation">
            <remarks/>
        </member>
        <member name="F:StreamCoders.Onvif.Media2.ModeOfOperation.Idle">
            <remarks/>
        </member>
        <member name="F:StreamCoders.Onvif.Media2.ModeOfOperation.Active">
            <remarks/>
        </member>
        <member name="F:StreamCoders.Onvif.Media2.ModeOfOperation.Unknown">
            <remarks/>
        </member>
        <member name="T:StreamCoders.Onvif.Media2.AnalyticsEngineInput">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Media2.AnalyticsEngineInput.SourceIdentification">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Media2.AnalyticsEngineInput.VideoInput">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Media2.AnalyticsEngineInput.MetadataInput">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Media2.AnalyticsEngineInput.Any">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Media2.AnalyticsEngineInput.AnyAttr">
            <remarks/>
        </member>
        <member name="T:StreamCoders.Onvif.Media2.VideoEncoderConfiguration">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Media2.VideoEncoderConfiguration.Encoding">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Media2.VideoEncoderConfiguration.Resolution">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Media2.VideoEncoderConfiguration.Quality">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Media2.VideoEncoderConfiguration.RateControl">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Media2.VideoEncoderConfiguration.MPEG4">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Media2.VideoEncoderConfiguration.H264">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Media2.VideoEncoderConfiguration.Multicast">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Media2.VideoEncoderConfiguration.SessionTimeout">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Media2.VideoEncoderConfiguration.Any">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Media2.VideoEncoderConfiguration.AnyAttr">
            <remarks/>
        </member>
        <member name="T:StreamCoders.Onvif.Media2.VideoEncoding">
            <remarks/>
        </member>
        <member name="F:StreamCoders.Onvif.Media2.VideoEncoding.JPEG">
            <remarks/>
        </member>
        <member name="F:StreamCoders.Onvif.Media2.VideoEncoding.MPEG4">
            <remarks/>
        </member>
        <member name="F:StreamCoders.Onvif.Media2.VideoEncoding.H264">
            <remarks/>
        </member>
        <member name="T:StreamCoders.Onvif.Media2.VideoRateControl">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Media2.VideoRateControl.FrameRateLimit">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Media2.VideoRateControl.EncodingInterval">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Media2.VideoRateControl.BitrateLimit">
            <remarks/>
        </member>
        <member name="T:StreamCoders.Onvif.Media2.Mpeg4Configuration">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Media2.Mpeg4Configuration.GovLength">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Media2.Mpeg4Configuration.Mpeg4Profile">
            <remarks/>
        </member>
        <member name="T:StreamCoders.Onvif.Media2.Mpeg4Profile">
            <remarks/>
        </member>
        <member name="F:StreamCoders.Onvif.Media2.Mpeg4Profile.SP">
            <remarks/>
        </member>
        <member name="F:StreamCoders.Onvif.Media2.Mpeg4Profile.ASP">
            <remarks/>
        </member>
        <member name="T:StreamCoders.Onvif.Media2.H264Configuration">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Media2.H264Configuration.GovLength">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Media2.H264Configuration.H264Profile">
            <remarks/>
        </member>
        <member name="T:StreamCoders.Onvif.Media2.H264Profile">
            <remarks/>
        </member>
        <member name="F:StreamCoders.Onvif.Media2.H264Profile.Baseline">
            <remarks/>
        </member>
        <member name="F:StreamCoders.Onvif.Media2.H264Profile.Main">
            <remarks/>
        </member>
        <member name="F:StreamCoders.Onvif.Media2.H264Profile.Extended">
            <remarks/>
        </member>
        <member name="F:StreamCoders.Onvif.Media2.H264Profile.High">
            <remarks/>
        </member>
        <member name="T:StreamCoders.Onvif.Media2.AnalyticsEngine">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Media2.AnalyticsEngine.AnalyticsEngineConfiguration">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Media2.AnalyticsEngine.Any">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Media2.AnalyticsEngine.AnyAttr">
            <remarks/>
        </member>
        <member name="T:StreamCoders.Onvif.Media2.AnalyticsDeviceEngineConfiguration">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Media2.AnalyticsDeviceEngineConfiguration.EngineConfiguration">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Media2.AnalyticsDeviceEngineConfiguration.Extension">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Media2.AnalyticsDeviceEngineConfiguration.AnyAttr">
            <remarks/>
        </member>
        <member name="T:StreamCoders.Onvif.Media2.PTZConfiguration">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Media2.PTZConfiguration.NodeToken">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Media2.PTZConfiguration.DefaultAbsolutePantTiltPositionSpace">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Media2.PTZConfiguration.DefaultAbsoluteZoomPositionSpace">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Media2.PTZConfiguration.DefaultRelativePanTiltTranslationSpace">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Media2.PTZConfiguration.DefaultRelativeZoomTranslationSpace">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Media2.PTZConfiguration.DefaultContinuousPanTiltVelocitySpace">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Media2.PTZConfiguration.DefaultContinuousZoomVelocitySpace">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Media2.PTZConfiguration.DefaultPTZSpeed">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Media2.PTZConfiguration.DefaultPTZTimeout">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Media2.PTZConfiguration.PanTiltLimits">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Media2.PTZConfiguration.ZoomLimits">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Media2.PTZConfiguration.Extension">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Media2.PTZConfiguration.MoveRamp">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Media2.PTZConfiguration.MoveRampSpecified">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Media2.PTZConfiguration.PresetRamp">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Media2.PTZConfiguration.PresetRampSpecified">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Media2.PTZConfiguration.PresetTourRamp">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Media2.PTZConfiguration.PresetTourRampSpecified">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Media2.PTZConfiguration.AnyAttr">
            <remarks/>
        </member>
        <member name="T:StreamCoders.Onvif.Media2.PTZSpeed">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Media2.PTZSpeed.PanTilt">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Media2.PTZSpeed.Zoom">
            <remarks/>
        </member>
        <member name="T:StreamCoders.Onvif.Media2.Vector2D">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Media2.Vector2D.x">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Media2.Vector2D.y">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Media2.Vector2D.space">
            <remarks/>
        </member>
        <member name="T:StreamCoders.Onvif.Media2.Vector1D">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Media2.Vector1D.x">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Media2.Vector1D.space">
            <remarks/>
        </member>
        <member name="T:StreamCoders.Onvif.Media2.PanTiltLimits">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Media2.PanTiltLimits.Range">
            <remarks/>
        </member>
        <member name="T:StreamCoders.Onvif.Media2.ZoomLimits">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Media2.ZoomLimits.Range">
            <remarks/>
        </member>
        <member name="T:StreamCoders.Onvif.Media2.PTZConfigurationExtension">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Media2.PTZConfigurationExtension.Any">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Media2.PTZConfigurationExtension.PTControlDirection">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Media2.PTZConfigurationExtension.Extension">
            <remarks/>
        </member>
        <member name="T:StreamCoders.Onvif.Media2.PTControlDirection">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Media2.PTControlDirection.EFlip">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Media2.PTControlDirection.Reverse">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Media2.PTControlDirection.Extension">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Media2.PTControlDirection.AnyAttr">
            <remarks/>
        </member>
        <member name="T:StreamCoders.Onvif.Media2.EFlip">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Media2.EFlip.Mode">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Media2.EFlip.Any">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Media2.EFlip.AnyAttr">
            <remarks/>
        </member>
        <member name="T:StreamCoders.Onvif.Media2.EFlipMode">
            <remarks/>
        </member>
        <member name="F:StreamCoders.Onvif.Media2.EFlipMode.OFF">
            <remarks/>
        </member>
        <member name="F:StreamCoders.Onvif.Media2.EFlipMode.ON">
            <remarks/>
        </member>
        <member name="F:StreamCoders.Onvif.Media2.EFlipMode.Extended">
            <remarks/>
        </member>
        <member name="T:StreamCoders.Onvif.Media2.Reverse">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Media2.Reverse.Mode">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Media2.Reverse.Any">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Media2.Reverse.AnyAttr">
            <remarks/>
        </member>
        <member name="T:StreamCoders.Onvif.Media2.ReverseMode">
            <remarks/>
        </member>
        <member name="F:StreamCoders.Onvif.Media2.ReverseMode.OFF">
            <remarks/>
        </member>
        <member name="F:StreamCoders.Onvif.Media2.ReverseMode.ON">
            <remarks/>
        </member>
        <member name="F:StreamCoders.Onvif.Media2.ReverseMode.AUTO">
            <remarks/>
        </member>
        <member name="F:StreamCoders.Onvif.Media2.ReverseMode.Extended">
            <remarks/>
        </member>
        <member name="T:StreamCoders.Onvif.Media2.PTControlDirectionExtension">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Media2.PTControlDirectionExtension.Any">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Media2.PTControlDirectionExtension.AnyAttr">
            <remarks/>
        </member>
        <member name="T:StreamCoders.Onvif.Media2.PTZConfigurationExtension2">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Media2.PTZConfigurationExtension2.Any">
            <remarks/>
        </member>
        <member name="T:StreamCoders.Onvif.Media2.AudioDecoderConfiguration">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Media2.AudioDecoderConfiguration.Any">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Media2.AudioDecoderConfiguration.AnyAttr">
            <remarks/>
        </member>
        <member name="T:StreamCoders.Onvif.Media2.AudioOutputConfiguration">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Media2.AudioOutputConfiguration.OutputToken">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Media2.AudioOutputConfiguration.SendPrimacy">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Media2.AudioOutputConfiguration.OutputLevel">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Media2.AudioOutputConfiguration.Any">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Media2.AudioOutputConfiguration.AnyAttr">
            <remarks/>
        </member>
        <member name="T:StreamCoders.Onvif.Media2.VideoOutputConfiguration">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Media2.VideoOutputConfiguration.OutputToken">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Media2.VideoOutputConfiguration.Any">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Media2.VideoOutputConfiguration.AnyAttr">
            <remarks/>
        </member>
        <member name="T:StreamCoders.Onvif.Media2.MetadataConfiguration">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Media2.MetadataConfiguration.PTZStatus">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Media2.MetadataConfiguration.Events">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Media2.MetadataConfiguration.Analytics">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Media2.MetadataConfiguration.AnalyticsSpecified">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Media2.MetadataConfiguration.Multicast">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Media2.MetadataConfiguration.SessionTimeout">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Media2.MetadataConfiguration.Any">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Media2.MetadataConfiguration.AnalyticsEngineConfiguration">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Media2.MetadataConfiguration.Extension">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Media2.MetadataConfiguration.CompressionType">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Media2.MetadataConfiguration.AnyAttr">
            <remarks/>
        </member>
        <member name="T:StreamCoders.Onvif.Media2.PTZFilter">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Media2.PTZFilter.Status">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Media2.PTZFilter.Position">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Media2.PTZFilter.AnyAttr">
            <remarks/>
        </member>
        <member name="T:StreamCoders.Onvif.Media2.EventSubscription">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Media2.EventSubscription.Filter">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Media2.EventSubscription.SubscriptionPolicy">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Media2.EventSubscription.Any">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Media2.EventSubscription.AnyAttr">
            <remarks/>
        </member>
        <member name="T:StreamCoders.Onvif.Media2.FilterType">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Media2.FilterType.Any">
            <remarks/>
        </member>
        <member name="T:StreamCoders.Onvif.Media2.EventFilter">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Media2.EventFilter.AnyAttr">
            <remarks/>
        </member>
        <member name="T:StreamCoders.Onvif.Media2.EventSubscriptionSubscriptionPolicy">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Media2.EventSubscriptionSubscriptionPolicy.Any">
            <remarks/>
        </member>
        <member name="T:StreamCoders.Onvif.Media2.MetadataConfigurationExtension">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Media2.MetadataConfigurationExtension.Any">
            <remarks/>
        </member>
        <member name="T:StreamCoders.Onvif.Media2.AudioEncoder2Configuration">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Media2.AudioEncoder2Configuration.Encoding">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Media2.AudioEncoder2Configuration.Multicast">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Media2.AudioEncoder2Configuration.Bitrate">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Media2.AudioEncoder2Configuration.SampleRate">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Media2.AudioEncoder2Configuration.Any">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Media2.AudioEncoder2Configuration.AnyAttr">
            <remarks/>
        </member>
        <member name="T:StreamCoders.Onvif.Media2.AudioEncoderConfiguration">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Media2.AudioEncoderConfiguration.Encoding">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Media2.AudioEncoderConfiguration.Bitrate">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Media2.AudioEncoderConfiguration.SampleRate">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Media2.AudioEncoderConfiguration.Multicast">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Media2.AudioEncoderConfiguration.SessionTimeout">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Media2.AudioEncoderConfiguration.Any">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Media2.AudioEncoderConfiguration.AnyAttr">
            <remarks/>
        </member>
        <member name="T:StreamCoders.Onvif.Media2.AudioEncoding">
            <remarks/>
        </member>
        <member name="F:StreamCoders.Onvif.Media2.AudioEncoding.G711">
            <remarks/>
        </member>
        <member name="F:StreamCoders.Onvif.Media2.AudioEncoding.G726">
            <remarks/>
        </member>
        <member name="F:StreamCoders.Onvif.Media2.AudioEncoding.AAC">
            <remarks/>
        </member>
        <member name="T:StreamCoders.Onvif.Media2.AudioSourceConfiguration">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Media2.AudioSourceConfiguration.SourceToken">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Media2.AudioSourceConfiguration.Any">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Media2.AudioSourceConfiguration.AnyAttr">
            <remarks/>
        </member>
        <member name="T:StreamCoders.Onvif.Media2.VideoEncoder2Configuration">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Media2.VideoEncoder2Configuration.Encoding">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Media2.VideoEncoder2Configuration.Resolution">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Media2.VideoEncoder2Configuration.RateControl">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Media2.VideoEncoder2Configuration.Multicast">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Media2.VideoEncoder2Configuration.Quality">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Media2.VideoEncoder2Configuration.Any">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Media2.VideoEncoder2Configuration.GovLength">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Media2.VideoEncoder2Configuration.GovLengthSpecified">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Media2.VideoEncoder2Configuration.Profile">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Media2.VideoEncoder2Configuration.AnyAttr">
            <remarks/>
        </member>
        <member name="T:StreamCoders.Onvif.Media2.VideoRateControl2">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Media2.VideoRateControl2.FrameRateLimit">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Media2.VideoRateControl2.BitrateLimit">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Media2.VideoRateControl2.Any">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Media2.VideoRateControl2.ConstantBitRate">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Media2.VideoRateControl2.ConstantBitRateSpecified">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Media2.VideoRateControl2.AnyAttr">
            <remarks/>
        </member>
        <member name="T:StreamCoders.Onvif.Media2.VideoSourceConfiguration">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Media2.VideoSourceConfiguration.SourceToken">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Media2.VideoSourceConfiguration.Bounds">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Media2.VideoSourceConfiguration.Any">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Media2.VideoSourceConfiguration.Extension">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Media2.VideoSourceConfiguration.AnyAttr">
            <remarks/>
        </member>
        <member name="T:StreamCoders.Onvif.Media2.IntRectangle">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Media2.IntRectangle.x">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Media2.IntRectangle.y">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Media2.IntRectangle.width">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Media2.IntRectangle.height">
            <remarks/>
        </member>
        <member name="T:StreamCoders.Onvif.Media2.VideoSourceConfigurationExtension">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Media2.VideoSourceConfigurationExtension.Rotate">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Media2.VideoSourceConfigurationExtension.Extension">
            <remarks/>
        </member>
        <member name="T:StreamCoders.Onvif.Media2.Rotate">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Media2.Rotate.Mode">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Media2.Rotate.Degree">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Media2.Rotate.DegreeSpecified">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Media2.Rotate.Extension">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Media2.Rotate.AnyAttr">
            <remarks/>
        </member>
        <member name="T:StreamCoders.Onvif.Media2.RotateExtension">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Media2.RotateExtension.Any">
            <remarks/>
        </member>
        <member name="T:StreamCoders.Onvif.Media2.VideoSourceConfigurationExtension2">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Media2.VideoSourceConfigurationExtension2.LensDescription">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Media2.VideoSourceConfigurationExtension2.SceneOrientation">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Media2.VideoSourceConfigurationExtension2.Any">
            <remarks/>
        </member>
        <member name="T:StreamCoders.Onvif.Media2.LensDescription">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Media2.LensDescription.Offset">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Media2.LensDescription.Projection">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Media2.LensDescription.XFactor">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Media2.LensDescription.Any">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Media2.LensDescription.FocalLength">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Media2.LensDescription.FocalLengthSpecified">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Media2.LensDescription.AnyAttr">
            <remarks/>
        </member>
        <member name="T:StreamCoders.Onvif.Media2.LensOffset">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Media2.LensOffset.x">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Media2.LensOffset.xSpecified">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Media2.LensOffset.y">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Media2.LensOffset.ySpecified">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Media2.LensOffset.AnyAttr">
            <remarks/>
        </member>
        <member name="T:StreamCoders.Onvif.Media2.LensProjection">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Media2.LensProjection.Angle">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Media2.LensProjection.Radius">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Media2.LensProjection.Transmittance">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Media2.LensProjection.TransmittanceSpecified">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Media2.LensProjection.Any">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Media2.LensProjection.AnyAttr">
            <remarks/>
        </member>
        <member name="T:StreamCoders.Onvif.Media2.SceneOrientation">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Media2.SceneOrientation.Mode">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Media2.SceneOrientation.Orientation">
            <remarks/>
        </member>
        <member name="T:StreamCoders.Onvif.Media2.ConfigurationSet">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Media2.ConfigurationSet.VideoSource">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Media2.ConfigurationSet.AudioSource">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Media2.ConfigurationSet.VideoEncoder">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Media2.ConfigurationSet.AudioEncoder">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Media2.ConfigurationSet.Analytics">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Media2.ConfigurationSet.PTZ">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Media2.ConfigurationSet.Metadata">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Media2.ConfigurationSet.AudioOutput">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Media2.ConfigurationSet.AudioDecoder">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Media2.ConfigurationSet.Any">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Media2.ConfigurationSet.AnyAttr">
            <remarks/>
        </member>
        <member name="T:StreamCoders.Onvif.Media2.MediaProfile">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Media2.MediaProfile.Name">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Media2.MediaProfile.Configurations">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Media2.MediaProfile.token">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Media2.MediaProfile.fixed">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Media2.MediaProfile.fixedSpecified">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Media2.MediaProfile.AnyAttr">
            <remarks/>
        </member>
        <member name="T:StreamCoders.Onvif.Media2.ConfigurationRef">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Media2.ConfigurationRef.Type">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Media2.ConfigurationRef.Token">
            <remarks/>
        </member>
        <member name="T:StreamCoders.Onvif.Media2.StreamingCapabilities">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Media2.StreamingCapabilities.Any">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Media2.StreamingCapabilities.RTSPStreaming">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Media2.StreamingCapabilities.RTSPStreamingSpecified">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Media2.StreamingCapabilities.RTPMulticast">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Media2.StreamingCapabilities.RTPMulticastSpecified">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Media2.StreamingCapabilities.RTP_RTSP_TCP">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Media2.StreamingCapabilities.RTP_RTSP_TCPSpecified">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Media2.StreamingCapabilities.NonAggregateControl">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Media2.StreamingCapabilities.NonAggregateControlSpecified">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Media2.StreamingCapabilities.RTSPWebSocketUri">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Media2.StreamingCapabilities.AnyAttr">
            <remarks/>
        </member>
        <member name="T:StreamCoders.Onvif.Media.Capabilities">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Media.Capabilities.ProfileCapabilities">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Media.Capabilities.StreamingCapabilities">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Media.Capabilities.Any">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Media.Capabilities.SnapshotUri">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Media.Capabilities.SnapshotUriSpecified">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Media.Capabilities.Rotation">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Media.Capabilities.RotationSpecified">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Media.Capabilities.VideoSourceMode">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Media.Capabilities.VideoSourceModeSpecified">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Media.Capabilities.OSD">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Media.Capabilities.OSDSpecified">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Media.Capabilities.EXICompression">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Media.Capabilities.EXICompressionSpecified">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Media.Capabilities.AnyAttr">
            <remarks/>
        </member>
        <member name="T:StreamCoders.Onvif.Media.ProfileCapabilities">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Media.ProfileCapabilities.Any">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Media.ProfileCapabilities.MaximumNumberOfProfiles">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Media.ProfileCapabilities.MaximumNumberOfProfilesSpecified">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Media.ProfileCapabilities.AnyAttr">
            <remarks/>
        </member>
        <member name="T:StreamCoders.Onvif.Media.OSDConfigurationOptionsExtension">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Media.OSDConfigurationOptionsExtension.Any">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Media.OSDConfigurationOptionsExtension.AnyAttr">
            <remarks/>
        </member>
        <member name="T:StreamCoders.Onvif.Media.OSDImgOptionsExtension">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Media.OSDImgOptionsExtension.Any">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Media.OSDImgOptionsExtension.AnyAttr">
            <remarks/>
        </member>
        <member name="T:StreamCoders.Onvif.Media.OSDImgOptions">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Media.OSDImgOptions.ImagePath">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Media.OSDImgOptions.Extension">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Media.OSDImgOptions.AnyAttr">
            <remarks/>
        </member>
        <member name="T:StreamCoders.Onvif.Media.OSDTextOptionsExtension">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Media.OSDTextOptionsExtension.Any">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Media.OSDTextOptionsExtension.AnyAttr">
            <remarks/>
        </member>
        <member name="T:StreamCoders.Onvif.Media.OSDColorOptionsExtension">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Media.OSDColorOptionsExtension.Any">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Media.OSDColorOptionsExtension.AnyAttr">
            <remarks/>
        </member>
        <member name="T:StreamCoders.Onvif.Media.ColorspaceRange">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Media.ColorspaceRange.X">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Media.ColorspaceRange.Y">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Media.ColorspaceRange.Z">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Media.ColorspaceRange.Colorspace">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Media.ColorspaceRange.AnyAttr">
            <remarks/>
        </member>
        <member name="T:StreamCoders.Onvif.Media.FloatRange">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Media.FloatRange.Min">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Media.FloatRange.Max">
            <remarks/>
        </member>
        <member name="T:StreamCoders.Onvif.Media.ColorOptions">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Media.ColorOptions.Items">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Media.ColorOptions.AnyAttr">
            <remarks/>
        </member>
        <member name="T:StreamCoders.Onvif.Media.Color">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Media.Color.X">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Media.Color.Y">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Media.Color.Z">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Media.Color.Colorspace">
            <remarks/>
        </member>
        <member name="T:StreamCoders.Onvif.Media.OSDColorOptions">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Media.OSDColorOptions.Color">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Media.OSDColorOptions.Transparent">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Media.OSDColorOptions.Extension">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Media.OSDColorOptions.AnyAttr">
            <remarks/>
        </member>
        <member name="T:StreamCoders.Onvif.Media.IntRange">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Media.IntRange.Min">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Media.IntRange.Max">
            <remarks/>
        </member>
        <member name="T:StreamCoders.Onvif.Media.OSDTextOptions">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Media.OSDTextOptions.Type">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Media.OSDTextOptions.FontSizeRange">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Media.OSDTextOptions.DateFormat">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Media.OSDTextOptions.TimeFormat">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Media.OSDTextOptions.FontColor">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Media.OSDTextOptions.BackgroundColor">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Media.OSDTextOptions.Extension">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Media.OSDTextOptions.AnyAttr">
            <remarks/>
        </member>
        <member name="T:StreamCoders.Onvif.Media.MaximumNumberOfOSDs">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Media.MaximumNumberOfOSDs.Total">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Media.MaximumNumberOfOSDs.Image">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Media.MaximumNumberOfOSDs.ImageSpecified">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Media.MaximumNumberOfOSDs.PlainText">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Media.MaximumNumberOfOSDs.PlainTextSpecified">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Media.MaximumNumberOfOSDs.Date">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Media.MaximumNumberOfOSDs.DateSpecified">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Media.MaximumNumberOfOSDs.Time">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Media.MaximumNumberOfOSDs.TimeSpecified">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Media.MaximumNumberOfOSDs.DateAndTime">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Media.MaximumNumberOfOSDs.DateAndTimeSpecified">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Media.MaximumNumberOfOSDs.AnyAttr">
            <remarks/>
        </member>
        <member name="T:StreamCoders.Onvif.Media.OSDConfigurationOptions">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Media.OSDConfigurationOptions.MaximumNumberOfOSDs">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Media.OSDConfigurationOptions.Type">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Media.OSDConfigurationOptions.PositionOption">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Media.OSDConfigurationOptions.TextOption">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Media.OSDConfigurationOptions.ImageOption">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Media.OSDConfigurationOptions.Extension">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Media.OSDConfigurationOptions.AnyAttr">
            <remarks/>
        </member>
        <member name="T:StreamCoders.Onvif.Media.OSDType">
            <remarks/>
        </member>
        <member name="F:StreamCoders.Onvif.Media.OSDType.Text">
            <remarks/>
        </member>
        <member name="F:StreamCoders.Onvif.Media.OSDType.Image">
            <remarks/>
        </member>
        <member name="F:StreamCoders.Onvif.Media.OSDType.Extended">
            <remarks/>
        </member>
        <member name="T:StreamCoders.Onvif.Media.VideoSourceModeExtension">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Media.VideoSourceModeExtension.Any">
            <remarks/>
        </member>
        <member name="T:StreamCoders.Onvif.Media.VideoSourceMode">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Media.VideoSourceMode.MaxFramerate">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Media.VideoSourceMode.MaxResolution">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Media.VideoSourceMode.Encodings">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Media.VideoSourceMode.Reboot">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Media.VideoSourceMode.Description">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Media.VideoSourceMode.Extension">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Media.VideoSourceMode.token">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Media.VideoSourceMode.Enabled">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Media.VideoSourceMode.EnabledSpecified">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Media.VideoSourceMode.AnyAttr">
            <remarks/>
        </member>
        <member name="T:StreamCoders.Onvif.Media.VideoResolution">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Media.VideoResolution.Width">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Media.VideoResolution.Height">
            <remarks/>
        </member>
        <member name="T:StreamCoders.Onvif.Media.MediaUri">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Media.MediaUri.Uri">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Media.MediaUri.InvalidAfterConnect">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Media.MediaUri.InvalidAfterReboot">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Media.MediaUri.Timeout">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Media.MediaUri.Any">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Media.MediaUri.AnyAttr">
            <remarks/>
        </member>
        <member name="T:StreamCoders.Onvif.Media.Transport">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Media.Transport.Protocol">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Media.Transport.Tunnel">
            <remarks/>
        </member>
        <member name="T:StreamCoders.Onvif.Media.TransportProtocol">
            <remarks/>
        </member>
        <member name="F:StreamCoders.Onvif.Media.TransportProtocol.UDP">
            <remarks/>
        </member>
        <member name="F:StreamCoders.Onvif.Media.TransportProtocol.TCP">
            <remarks/>
        </member>
        <member name="F:StreamCoders.Onvif.Media.TransportProtocol.RTSP">
            <remarks/>
        </member>
        <member name="F:StreamCoders.Onvif.Media.TransportProtocol.HTTP">
            <remarks/>
        </member>
        <member name="T:StreamCoders.Onvif.Media.StreamSetup">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Media.StreamSetup.Stream">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Media.StreamSetup.Transport">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Media.StreamSetup.Any">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Media.StreamSetup.AnyAttr">
            <remarks/>
        </member>
        <member name="T:StreamCoders.Onvif.Media.StreamType">
            <remarks/>
        </member>
        <member name="F:StreamCoders.Onvif.Media.StreamType.RTPUnicast">
            <remarks/>
        </member>
        <member name="F:StreamCoders.Onvif.Media.StreamType.RTPMulticast">
            <remarks/>
        </member>
        <member name="T:StreamCoders.Onvif.Media.AudioDecoderConfigurationOptionsExtension">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Media.AudioDecoderConfigurationOptionsExtension.Any">
            <remarks/>
        </member>
        <member name="T:StreamCoders.Onvif.Media.G726DecOptions">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Media.G726DecOptions.Bitrate">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Media.G726DecOptions.SampleRateRange">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Media.G726DecOptions.Any">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Media.G726DecOptions.AnyAttr">
            <remarks/>
        </member>
        <member name="T:StreamCoders.Onvif.Media.G711DecOptions">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Media.G711DecOptions.Bitrate">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Media.G711DecOptions.SampleRateRange">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Media.G711DecOptions.Any">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Media.G711DecOptions.AnyAttr">
            <remarks/>
        </member>
        <member name="T:StreamCoders.Onvif.Media.AACDecOptions">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Media.AACDecOptions.Bitrate">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Media.AACDecOptions.SampleRateRange">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Media.AACDecOptions.Any">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Media.AACDecOptions.AnyAttr">
            <remarks/>
        </member>
        <member name="T:StreamCoders.Onvif.Media.AudioDecoderConfigurationOptions">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Media.AudioDecoderConfigurationOptions.AACDecOptions">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Media.AudioDecoderConfigurationOptions.G711DecOptions">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Media.AudioDecoderConfigurationOptions.G726DecOptions">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Media.AudioDecoderConfigurationOptions.Extension">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Media.AudioDecoderConfigurationOptions.AnyAttr">
            <remarks/>
        </member>
        <member name="T:StreamCoders.Onvif.Media.AudioOutputConfigurationOptions">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Media.AudioOutputConfigurationOptions.OutputTokensAvailable">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Media.AudioOutputConfigurationOptions.SendPrimacyOptions">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Media.AudioOutputConfigurationOptions.OutputLevelRange">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Media.AudioOutputConfigurationOptions.Any">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Media.AudioOutputConfigurationOptions.AnyAttr">
            <remarks/>
        </member>
        <member name="T:StreamCoders.Onvif.Media.MetadataConfigurationOptionsExtension2">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Media.MetadataConfigurationOptionsExtension2.Any">
            <remarks/>
        </member>
        <member name="T:StreamCoders.Onvif.Media.MetadataConfigurationOptionsExtension">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Media.MetadataConfigurationOptionsExtension.CompressionType">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Media.MetadataConfigurationOptionsExtension.Extension">
            <remarks/>
        </member>
        <member name="T:StreamCoders.Onvif.Media.PTZStatusFilterOptionsExtension">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Media.PTZStatusFilterOptionsExtension.Any">
            <remarks/>
        </member>
        <member name="T:StreamCoders.Onvif.Media.PTZStatusFilterOptions">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Media.PTZStatusFilterOptions.PanTiltStatusSupported">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Media.PTZStatusFilterOptions.ZoomStatusSupported">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Media.PTZStatusFilterOptions.Any">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Media.PTZStatusFilterOptions.PanTiltPositionSupported">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Media.PTZStatusFilterOptions.PanTiltPositionSupportedSpecified">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Media.PTZStatusFilterOptions.ZoomPositionSupported">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Media.PTZStatusFilterOptions.ZoomPositionSupportedSpecified">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Media.PTZStatusFilterOptions.Extension">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Media.PTZStatusFilterOptions.AnyAttr">
            <remarks/>
        </member>
        <member name="T:StreamCoders.Onvif.Media.MetadataConfigurationOptions">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Media.MetadataConfigurationOptions.PTZStatusFilterOptions">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Media.MetadataConfigurationOptions.Any">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Media.MetadataConfigurationOptions.Extension">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Media.MetadataConfigurationOptions.AnyAttr">
            <remarks/>
        </member>
        <member name="T:StreamCoders.Onvif.Media.AudioEncoderConfigurationOption">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Media.AudioEncoderConfigurationOption.Encoding">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Media.AudioEncoderConfigurationOption.BitrateList">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Media.AudioEncoderConfigurationOption.SampleRateList">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Media.AudioEncoderConfigurationOption.Any">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Media.AudioEncoderConfigurationOption.AnyAttr">
            <remarks/>
        </member>
        <member name="T:StreamCoders.Onvif.Media.AudioEncoding">
            <remarks/>
        </member>
        <member name="F:StreamCoders.Onvif.Media.AudioEncoding.G711">
            <remarks/>
        </member>
        <member name="F:StreamCoders.Onvif.Media.AudioEncoding.G726">
            <remarks/>
        </member>
        <member name="F:StreamCoders.Onvif.Media.AudioEncoding.AAC">
            <remarks/>
        </member>
        <member name="T:StreamCoders.Onvif.Media.AudioEncoderConfigurationOptions">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Media.AudioEncoderConfigurationOptions.Options">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Media.AudioEncoderConfigurationOptions.AnyAttr">
            <remarks/>
        </member>
        <member name="T:StreamCoders.Onvif.Media.AudioSourceOptionsExtension">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Media.AudioSourceOptionsExtension.Any">
            <remarks/>
        </member>
        <member name="T:StreamCoders.Onvif.Media.AudioSourceConfigurationOptions">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Media.AudioSourceConfigurationOptions.InputTokensAvailable">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Media.AudioSourceConfigurationOptions.Extension">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Media.AudioSourceConfigurationOptions.AnyAttr">
            <remarks/>
        </member>
        <member name="T:StreamCoders.Onvif.Media.VideoEncoderOptionsExtension2">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Media.VideoEncoderOptionsExtension2.Any">
            <remarks/>
        </member>
        <member name="T:StreamCoders.Onvif.Media.VideoEncoderOptionsExtension">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Media.VideoEncoderOptionsExtension.Any">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Media.VideoEncoderOptionsExtension.JPEG">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Media.VideoEncoderOptionsExtension.MPEG4">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Media.VideoEncoderOptionsExtension.H264">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Media.VideoEncoderOptionsExtension.Extension">
            <remarks/>
        </member>
        <member name="T:StreamCoders.Onvif.Media.JpegOptions2">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Media.JpegOptions2.BitrateRange">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Media.JpegOptions2.Any">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Media.JpegOptions2.AnyAttr">
            <remarks/>
        </member>
        <member name="T:StreamCoders.Onvif.Media.JpegOptions">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Media.JpegOptions.ResolutionsAvailable">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Media.JpegOptions.FrameRateRange">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Media.JpegOptions.EncodingIntervalRange">
            <remarks/>
        </member>
        <member name="T:StreamCoders.Onvif.Media.Mpeg4Options2">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Media.Mpeg4Options2.BitrateRange">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Media.Mpeg4Options2.Any">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Media.Mpeg4Options2.AnyAttr">
            <remarks/>
        </member>
        <member name="T:StreamCoders.Onvif.Media.Mpeg4Options">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Media.Mpeg4Options.ResolutionsAvailable">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Media.Mpeg4Options.GovLengthRange">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Media.Mpeg4Options.FrameRateRange">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Media.Mpeg4Options.EncodingIntervalRange">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Media.Mpeg4Options.Mpeg4ProfilesSupported">
            <remarks/>
        </member>
        <member name="T:StreamCoders.Onvif.Media.Mpeg4Profile">
            <remarks/>
        </member>
        <member name="F:StreamCoders.Onvif.Media.Mpeg4Profile.SP">
            <remarks/>
        </member>
        <member name="F:StreamCoders.Onvif.Media.Mpeg4Profile.ASP">
            <remarks/>
        </member>
        <member name="T:StreamCoders.Onvif.Media.H264Options2">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Media.H264Options2.BitrateRange">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Media.H264Options2.Any">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Media.H264Options2.AnyAttr">
            <remarks/>
        </member>
        <member name="T:StreamCoders.Onvif.Media.H264Options">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Media.H264Options.ResolutionsAvailable">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Media.H264Options.GovLengthRange">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Media.H264Options.FrameRateRange">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Media.H264Options.EncodingIntervalRange">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Media.H264Options.H264ProfilesSupported">
            <remarks/>
        </member>
        <member name="T:StreamCoders.Onvif.Media.H264Profile">
            <remarks/>
        </member>
        <member name="F:StreamCoders.Onvif.Media.H264Profile.Baseline">
            <remarks/>
        </member>
        <member name="F:StreamCoders.Onvif.Media.H264Profile.Main">
            <remarks/>
        </member>
        <member name="F:StreamCoders.Onvif.Media.H264Profile.Extended">
            <remarks/>
        </member>
        <member name="F:StreamCoders.Onvif.Media.H264Profile.High">
            <remarks/>
        </member>
        <member name="T:StreamCoders.Onvif.Media.VideoEncoderConfigurationOptions">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Media.VideoEncoderConfigurationOptions.QualityRange">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Media.VideoEncoderConfigurationOptions.JPEG">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Media.VideoEncoderConfigurationOptions.MPEG4">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Media.VideoEncoderConfigurationOptions.H264">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Media.VideoEncoderConfigurationOptions.Extension">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Media.VideoEncoderConfigurationOptions.AnyAttr">
            <remarks/>
        </member>
        <member name="T:StreamCoders.Onvif.Media.VideoSourceConfigurationOptionsExtension2">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Media.VideoSourceConfigurationOptionsExtension2.SceneOrientationMode">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Media.VideoSourceConfigurationOptionsExtension2.Any">
            <remarks/>
        </member>
        <member name="T:StreamCoders.Onvif.Media.SceneOrientationMode">
            <remarks/>
        </member>
        <member name="F:StreamCoders.Onvif.Media.SceneOrientationMode.MANUAL">
            <remarks/>
        </member>
        <member name="F:StreamCoders.Onvif.Media.SceneOrientationMode.AUTO">
            <remarks/>
        </member>
        <member name="T:StreamCoders.Onvif.Media.RotateOptionsExtension">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Media.RotateOptionsExtension.Any">
            <remarks/>
        </member>
        <member name="T:StreamCoders.Onvif.Media.RotateOptions">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Media.RotateOptions.Mode">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Media.RotateOptions.DegreeList">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Media.RotateOptions.Extension">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Media.RotateOptions.AnyAttr">
            <remarks/>
        </member>
        <member name="T:StreamCoders.Onvif.Media.RotateMode">
            <remarks/>
        </member>
        <member name="F:StreamCoders.Onvif.Media.RotateMode.OFF">
            <remarks/>
        </member>
        <member name="F:StreamCoders.Onvif.Media.RotateMode.ON">
            <remarks/>
        </member>
        <member name="F:StreamCoders.Onvif.Media.RotateMode.AUTO">
            <remarks/>
        </member>
        <member name="T:StreamCoders.Onvif.Media.VideoSourceConfigurationOptionsExtension">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Media.VideoSourceConfigurationOptionsExtension.Any">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Media.VideoSourceConfigurationOptionsExtension.Rotate">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Media.VideoSourceConfigurationOptionsExtension.Extension">
            <remarks/>
        </member>
        <member name="T:StreamCoders.Onvif.Media.IntRectangleRange">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Media.IntRectangleRange.XRange">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Media.IntRectangleRange.YRange">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Media.IntRectangleRange.WidthRange">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Media.IntRectangleRange.HeightRange">
            <remarks/>
        </member>
        <member name="T:StreamCoders.Onvif.Media.VideoSourceConfigurationOptions">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Media.VideoSourceConfigurationOptions.BoundsRange">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Media.VideoSourceConfigurationOptions.VideoSourceTokensAvailable">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Media.VideoSourceConfigurationOptions.Extension">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Media.VideoSourceConfigurationOptions.AnyAttr">
            <remarks/>
        </member>
        <member name="T:StreamCoders.Onvif.Media.ProfileExtension2">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Media.ProfileExtension2.Any">
            <remarks/>
        </member>
        <member name="T:StreamCoders.Onvif.Media.ProfileExtension">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Media.ProfileExtension.Any">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Media.ProfileExtension.AudioOutputConfiguration">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Media.ProfileExtension.AudioDecoderConfiguration">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Media.ProfileExtension.Extension">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Media.ProfileExtension.AnyAttr">
            <remarks/>
        </member>
        <member name="T:StreamCoders.Onvif.Media.AudioOutputConfiguration">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Media.AudioOutputConfiguration.OutputToken">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Media.AudioOutputConfiguration.SendPrimacy">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Media.AudioOutputConfiguration.OutputLevel">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Media.AudioOutputConfiguration.Any">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Media.AudioOutputConfiguration.AnyAttr">
            <remarks/>
        </member>
        <member name="T:StreamCoders.Onvif.Media.ConfigurationEntity">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Media.ConfigurationEntity.Name">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Media.ConfigurationEntity.UseCount">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Media.ConfigurationEntity.token">
            <remarks/>
        </member>
        <member name="T:StreamCoders.Onvif.Media.AnalyticsEngineControl">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Media.AnalyticsEngineControl.EngineToken">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Media.AnalyticsEngineControl.EngineConfigToken">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Media.AnalyticsEngineControl.InputToken">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Media.AnalyticsEngineControl.ReceiverToken">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Media.AnalyticsEngineControl.Multicast">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Media.AnalyticsEngineControl.Subscription">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Media.AnalyticsEngineControl.Mode">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Media.AnalyticsEngineControl.Any">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Media.AnalyticsEngineControl.AnyAttr">
            <remarks/>
        </member>
        <member name="T:StreamCoders.Onvif.Media.MulticastConfiguration">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Media.MulticastConfiguration.Address">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Media.MulticastConfiguration.Port">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Media.MulticastConfiguration.TTL">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Media.MulticastConfiguration.AutoStart">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Media.MulticastConfiguration.Any">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Media.MulticastConfiguration.AnyAttr">
            <remarks/>
        </member>
        <member name="T:StreamCoders.Onvif.Media.IPAddress">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Media.IPAddress.Type">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Media.IPAddress.IPv4Address">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Media.IPAddress.IPv6Address">
            <remarks/>
        </member>
        <member name="T:StreamCoders.Onvif.Media.IPType">
            <remarks/>
        </member>
        <member name="F:StreamCoders.Onvif.Media.IPType.IPv4">
            <remarks/>
        </member>
        <member name="F:StreamCoders.Onvif.Media.IPType.IPv6">
            <remarks/>
        </member>
        <member name="T:StreamCoders.Onvif.Media.Config">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Media.Config.Parameters">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Media.Config.Name">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Media.Config.Type">
            <remarks/>
        </member>
        <member name="T:StreamCoders.Onvif.Media.ItemList">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Media.ItemList.SimpleItem">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Media.ItemList.ElementItem">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Media.ItemList.Extension">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Media.ItemList.AnyAttr">
            <remarks/>
        </member>
        <member name="T:StreamCoders.Onvif.Media.ItemListSimpleItem">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Media.ItemListSimpleItem.Name">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Media.ItemListSimpleItem.Value">
            <remarks/>
        </member>
        <member name="T:StreamCoders.Onvif.Media.ItemListElementItem">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Media.ItemListElementItem.Any">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Media.ItemListElementItem.Name">
            <remarks/>
        </member>
        <member name="T:StreamCoders.Onvif.Media.ItemListExtension">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Media.ItemListExtension.Any">
            <remarks/>
        </member>
        <member name="T:StreamCoders.Onvif.Media.ModeOfOperation">
            <remarks/>
        </member>
        <member name="F:StreamCoders.Onvif.Media.ModeOfOperation.Idle">
            <remarks/>
        </member>
        <member name="F:StreamCoders.Onvif.Media.ModeOfOperation.Active">
            <remarks/>
        </member>
        <member name="F:StreamCoders.Onvif.Media.ModeOfOperation.Unknown">
            <remarks/>
        </member>
        <member name="T:StreamCoders.Onvif.Media.AnalyticsEngineInput">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Media.AnalyticsEngineInput.SourceIdentification">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Media.AnalyticsEngineInput.VideoInput">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Media.AnalyticsEngineInput.MetadataInput">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Media.AnalyticsEngineInput.Any">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Media.AnalyticsEngineInput.AnyAttr">
            <remarks/>
        </member>
        <member name="T:StreamCoders.Onvif.Media.SourceIdentification">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Media.SourceIdentification.Name">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Media.SourceIdentification.Token">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Media.SourceIdentification.Extension">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Media.SourceIdentification.AnyAttr">
            <remarks/>
        </member>
        <member name="T:StreamCoders.Onvif.Media.SourceIdentificationExtension">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Media.SourceIdentificationExtension.Any">
            <remarks/>
        </member>
        <member name="T:StreamCoders.Onvif.Media.VideoEncoderConfiguration">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Media.VideoEncoderConfiguration.Encoding">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Media.VideoEncoderConfiguration.Resolution">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Media.VideoEncoderConfiguration.Quality">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Media.VideoEncoderConfiguration.RateControl">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Media.VideoEncoderConfiguration.MPEG4">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Media.VideoEncoderConfiguration.H264">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Media.VideoEncoderConfiguration.Multicast">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Media.VideoEncoderConfiguration.SessionTimeout">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Media.VideoEncoderConfiguration.Any">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Media.VideoEncoderConfiguration.AnyAttr">
            <remarks/>
        </member>
        <member name="T:StreamCoders.Onvif.Media.VideoEncoding">
            <remarks/>
        </member>
        <member name="F:StreamCoders.Onvif.Media.VideoEncoding.JPEG">
            <remarks/>
        </member>
        <member name="F:StreamCoders.Onvif.Media.VideoEncoding.MPEG4">
            <remarks/>
        </member>
        <member name="F:StreamCoders.Onvif.Media.VideoEncoding.H264">
            <remarks/>
        </member>
        <member name="T:StreamCoders.Onvif.Media.VideoRateControl">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Media.VideoRateControl.FrameRateLimit">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Media.VideoRateControl.EncodingInterval">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Media.VideoRateControl.BitrateLimit">
            <remarks/>
        </member>
        <member name="T:StreamCoders.Onvif.Media.Mpeg4Configuration">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Media.Mpeg4Configuration.GovLength">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Media.Mpeg4Configuration.Mpeg4Profile">
            <remarks/>
        </member>
        <member name="T:StreamCoders.Onvif.Media.H264Configuration">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Media.H264Configuration.GovLength">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Media.H264Configuration.H264Profile">
            <remarks/>
        </member>
        <member name="T:StreamCoders.Onvif.Media.MetadataInput">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Media.MetadataInput.MetadataConfig">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Media.MetadataInput.Extension">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Media.MetadataInput.AnyAttr">
            <remarks/>
        </member>
        <member name="T:StreamCoders.Onvif.Media.MetadataInputExtension">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Media.MetadataInputExtension.Any">
            <remarks/>
        </member>
        <member name="T:StreamCoders.Onvif.Media.AnalyticsEngine">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Media.AnalyticsEngine.AnalyticsEngineConfiguration">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Media.AnalyticsEngine.Any">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Media.AnalyticsEngine.AnyAttr">
            <remarks/>
        </member>
        <member name="T:StreamCoders.Onvif.Media.AnalyticsDeviceEngineConfiguration">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Media.AnalyticsDeviceEngineConfiguration.EngineConfiguration">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Media.AnalyticsDeviceEngineConfiguration.Extension">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Media.AnalyticsDeviceEngineConfiguration.AnyAttr">
            <remarks/>
        </member>
        <member name="T:StreamCoders.Onvif.Media.EngineConfiguration">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Media.EngineConfiguration.VideoAnalyticsConfiguration">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Media.EngineConfiguration.AnalyticsEngineInputInfo">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Media.EngineConfiguration.Any">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Media.EngineConfiguration.AnyAttr">
            <remarks/>
        </member>
        <member name="T:StreamCoders.Onvif.Media.VideoAnalyticsConfiguration">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Media.VideoAnalyticsConfiguration.AnalyticsEngineConfiguration">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Media.VideoAnalyticsConfiguration.RuleEngineConfiguration">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Media.VideoAnalyticsConfiguration.Any">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Media.VideoAnalyticsConfiguration.AnyAttr">
            <remarks/>
        </member>
        <member name="T:StreamCoders.Onvif.Media.AnalyticsEngineConfiguration">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Media.AnalyticsEngineConfiguration.AnalyticsModule">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Media.AnalyticsEngineConfiguration.Extension">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Media.AnalyticsEngineConfiguration.AnyAttr">
            <remarks/>
        </member>
        <member name="T:StreamCoders.Onvif.Media.AnalyticsEngineConfigurationExtension">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Media.AnalyticsEngineConfigurationExtension.Any">
            <remarks/>
        </member>
        <member name="T:StreamCoders.Onvif.Media.RuleEngineConfiguration">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Media.RuleEngineConfiguration.Rule">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Media.RuleEngineConfiguration.Extension">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Media.RuleEngineConfiguration.AnyAttr">
            <remarks/>
        </member>
        <member name="T:StreamCoders.Onvif.Media.RuleEngineConfigurationExtension">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Media.RuleEngineConfigurationExtension.Any">
            <remarks/>
        </member>
        <member name="T:StreamCoders.Onvif.Media.AnalyticsEngineInputInfo">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Media.AnalyticsEngineInputInfo.InputInfo">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Media.AnalyticsEngineInputInfo.Extension">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Media.AnalyticsEngineInputInfo.AnyAttr">
            <remarks/>
        </member>
        <member name="T:StreamCoders.Onvif.Media.AnalyticsEngineInputInfoExtension">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Media.AnalyticsEngineInputInfoExtension.Any">
            <remarks/>
        </member>
        <member name="T:StreamCoders.Onvif.Media.AnalyticsDeviceEngineConfigurationExtension">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Media.AnalyticsDeviceEngineConfigurationExtension.Any">
            <remarks/>
        </member>
        <member name="T:StreamCoders.Onvif.Media.PTZConfiguration">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Media.PTZConfiguration.NodeToken">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Media.PTZConfiguration.DefaultAbsolutePantTiltPositionSpace">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Media.PTZConfiguration.DefaultAbsoluteZoomPositionSpace">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Media.PTZConfiguration.DefaultRelativePanTiltTranslationSpace">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Media.PTZConfiguration.DefaultRelativeZoomTranslationSpace">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Media.PTZConfiguration.DefaultContinuousPanTiltVelocitySpace">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Media.PTZConfiguration.DefaultContinuousZoomVelocitySpace">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Media.PTZConfiguration.DefaultPTZSpeed">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Media.PTZConfiguration.DefaultPTZTimeout">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Media.PTZConfiguration.PanTiltLimits">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Media.PTZConfiguration.ZoomLimits">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Media.PTZConfiguration.Extension">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Media.PTZConfiguration.MoveRamp">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Media.PTZConfiguration.MoveRampSpecified">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Media.PTZConfiguration.PresetRamp">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Media.PTZConfiguration.PresetRampSpecified">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Media.PTZConfiguration.PresetTourRamp">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Media.PTZConfiguration.PresetTourRampSpecified">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Media.PTZConfiguration.AnyAttr">
            <remarks/>
        </member>
        <member name="T:StreamCoders.Onvif.Media.PTZSpeed">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Media.PTZSpeed.PanTilt">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Media.PTZSpeed.Zoom">
            <remarks/>
        </member>
        <member name="T:StreamCoders.Onvif.Media.Vector2D">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Media.Vector2D.x">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Media.Vector2D.y">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Media.Vector2D.space">
            <remarks/>
        </member>
        <member name="T:StreamCoders.Onvif.Media.Vector1D">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Media.Vector1D.x">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Media.Vector1D.space">
            <remarks/>
        </member>
        <member name="T:StreamCoders.Onvif.Media.PanTiltLimits">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Media.PanTiltLimits.Range">
            <remarks/>
        </member>
        <member name="T:StreamCoders.Onvif.Media.Space2DDescription">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Media.Space2DDescription.URI">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Media.Space2DDescription.XRange">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Media.Space2DDescription.YRange">
            <remarks/>
        </member>
        <member name="T:StreamCoders.Onvif.Media.ZoomLimits">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Media.ZoomLimits.Range">
            <remarks/>
        </member>
        <member name="T:StreamCoders.Onvif.Media.Space1DDescription">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Media.Space1DDescription.URI">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Media.Space1DDescription.XRange">
            <remarks/>
        </member>
        <member name="T:StreamCoders.Onvif.Media.PTZConfigurationExtension">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Media.PTZConfigurationExtension.Any">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Media.PTZConfigurationExtension.PTControlDirection">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Media.PTZConfigurationExtension.Extension">
            <remarks/>
        </member>
        <member name="T:StreamCoders.Onvif.Media.PTControlDirection">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Media.PTControlDirection.EFlip">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Media.PTControlDirection.Reverse">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Media.PTControlDirection.Extension">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Media.PTControlDirection.AnyAttr">
            <remarks/>
        </member>
        <member name="T:StreamCoders.Onvif.Media.EFlip">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Media.EFlip.Mode">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Media.EFlip.Any">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Media.EFlip.AnyAttr">
            <remarks/>
        </member>
        <member name="T:StreamCoders.Onvif.Media.EFlipMode">
            <remarks/>
        </member>
        <member name="F:StreamCoders.Onvif.Media.EFlipMode.OFF">
            <remarks/>
        </member>
        <member name="F:StreamCoders.Onvif.Media.EFlipMode.ON">
            <remarks/>
        </member>
        <member name="F:StreamCoders.Onvif.Media.EFlipMode.Extended">
            <remarks/>
        </member>
        <member name="T:StreamCoders.Onvif.Media.Reverse">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Media.Reverse.Mode">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Media.Reverse.Any">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Media.Reverse.AnyAttr">
            <remarks/>
        </member>
        <member name="T:StreamCoders.Onvif.Media.ReverseMode">
            <remarks/>
        </member>
        <member name="F:StreamCoders.Onvif.Media.ReverseMode.OFF">
            <remarks/>
        </member>
        <member name="F:StreamCoders.Onvif.Media.ReverseMode.ON">
            <remarks/>
        </member>
        <member name="F:StreamCoders.Onvif.Media.ReverseMode.AUTO">
            <remarks/>
        </member>
        <member name="F:StreamCoders.Onvif.Media.ReverseMode.Extended">
            <remarks/>
        </member>
        <member name="T:StreamCoders.Onvif.Media.PTControlDirectionExtension">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Media.PTControlDirectionExtension.Any">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Media.PTControlDirectionExtension.AnyAttr">
            <remarks/>
        </member>
        <member name="T:StreamCoders.Onvif.Media.PTZConfigurationExtension2">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Media.PTZConfigurationExtension2.Any">
            <remarks/>
        </member>
        <member name="T:StreamCoders.Onvif.Media.AudioDecoderConfiguration">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Media.AudioDecoderConfiguration.Any">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Media.AudioDecoderConfiguration.AnyAttr">
            <remarks/>
        </member>
        <member name="T:StreamCoders.Onvif.Media.VideoOutputConfiguration">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Media.VideoOutputConfiguration.OutputToken">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Media.VideoOutputConfiguration.Any">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Media.VideoOutputConfiguration.AnyAttr">
            <remarks/>
        </member>
        <member name="T:StreamCoders.Onvif.Media.MetadataConfiguration">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Media.MetadataConfiguration.PTZStatus">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Media.MetadataConfiguration.Events">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Media.MetadataConfiguration.Analytics">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Media.MetadataConfiguration.AnalyticsSpecified">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Media.MetadataConfiguration.Multicast">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Media.MetadataConfiguration.SessionTimeout">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Media.MetadataConfiguration.Any">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Media.MetadataConfiguration.AnalyticsEngineConfiguration">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Media.MetadataConfiguration.Extension">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Media.MetadataConfiguration.CompressionType">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Media.MetadataConfiguration.AnyAttr">
            <remarks/>
        </member>
        <member name="T:StreamCoders.Onvif.Media.PTZFilter">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Media.PTZFilter.Status">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Media.PTZFilter.Position">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Media.PTZFilter.AnyAttr">
            <remarks/>
        </member>
        <member name="T:StreamCoders.Onvif.Media.EventSubscription">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Media.EventSubscription.Filter">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Media.EventSubscription.SubscriptionPolicy">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Media.EventSubscription.Any">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Media.EventSubscription.AnyAttr">
            <remarks/>
        </member>
        <member name="T:StreamCoders.Onvif.Media.FilterType">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Media.FilterType.Any">
            <remarks/>
        </member>
        <member name="T:StreamCoders.Onvif.Media.EventFilter">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Media.EventFilter.AnyAttr">
            <remarks/>
        </member>
        <member name="T:StreamCoders.Onvif.Media.EventSubscriptionSubscriptionPolicy">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Media.EventSubscriptionSubscriptionPolicy.Any">
            <remarks/>
        </member>
        <member name="T:StreamCoders.Onvif.Media.MetadataConfigurationExtension">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Media.MetadataConfigurationExtension.Any">
            <remarks/>
        </member>
        <member name="T:StreamCoders.Onvif.Media.AudioEncoder2Configuration">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Media.AudioEncoder2Configuration.Encoding">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Media.AudioEncoder2Configuration.Multicast">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Media.AudioEncoder2Configuration.Bitrate">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Media.AudioEncoder2Configuration.SampleRate">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Media.AudioEncoder2Configuration.Any">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Media.AudioEncoder2Configuration.AnyAttr">
            <remarks/>
        </member>
        <member name="T:StreamCoders.Onvif.Media.AudioEncoderConfiguration">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Media.AudioEncoderConfiguration.Encoding">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Media.AudioEncoderConfiguration.Bitrate">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Media.AudioEncoderConfiguration.SampleRate">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Media.AudioEncoderConfiguration.Multicast">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Media.AudioEncoderConfiguration.SessionTimeout">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Media.AudioEncoderConfiguration.Any">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Media.AudioEncoderConfiguration.AnyAttr">
            <remarks/>
        </member>
        <member name="T:StreamCoders.Onvif.Media.AudioSourceConfiguration">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Media.AudioSourceConfiguration.SourceToken">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Media.AudioSourceConfiguration.Any">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Media.AudioSourceConfiguration.AnyAttr">
            <remarks/>
        </member>
        <member name="T:StreamCoders.Onvif.Media.VideoEncoder2Configuration">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Media.VideoEncoder2Configuration.Encoding">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Media.VideoEncoder2Configuration.Resolution">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Media.VideoEncoder2Configuration.RateControl">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Media.VideoEncoder2Configuration.Multicast">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Media.VideoEncoder2Configuration.Quality">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Media.VideoEncoder2Configuration.Any">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Media.VideoEncoder2Configuration.GovLength">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Media.VideoEncoder2Configuration.GovLengthSpecified">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Media.VideoEncoder2Configuration.Profile">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Media.VideoEncoder2Configuration.AnyAttr">
            <remarks/>
        </member>
        <member name="T:StreamCoders.Onvif.Media.VideoResolution2">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Media.VideoResolution2.Width">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Media.VideoResolution2.Height">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Media.VideoResolution2.Any">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Media.VideoResolution2.AnyAttr">
            <remarks/>
        </member>
        <member name="T:StreamCoders.Onvif.Media.VideoRateControl2">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Media.VideoRateControl2.FrameRateLimit">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Media.VideoRateControl2.BitrateLimit">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Media.VideoRateControl2.Any">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Media.VideoRateControl2.ConstantBitRate">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Media.VideoRateControl2.ConstantBitRateSpecified">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Media.VideoRateControl2.AnyAttr">
            <remarks/>
        </member>
        <member name="T:StreamCoders.Onvif.Media.VideoSourceConfiguration">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Media.VideoSourceConfiguration.SourceToken">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Media.VideoSourceConfiguration.Bounds">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Media.VideoSourceConfiguration.Any">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Media.VideoSourceConfiguration.Extension">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Media.VideoSourceConfiguration.AnyAttr">
            <remarks/>
        </member>
        <member name="T:StreamCoders.Onvif.Media.IntRectangle">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Media.IntRectangle.x">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Media.IntRectangle.y">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Media.IntRectangle.width">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Media.IntRectangle.height">
            <remarks/>
        </member>
        <member name="T:StreamCoders.Onvif.Media.VideoSourceConfigurationExtension">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Media.VideoSourceConfigurationExtension.Rotate">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Media.VideoSourceConfigurationExtension.Extension">
            <remarks/>
        </member>
        <member name="T:StreamCoders.Onvif.Media.Rotate">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Media.Rotate.Mode">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Media.Rotate.Degree">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Media.Rotate.DegreeSpecified">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Media.Rotate.Extension">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Media.Rotate.AnyAttr">
            <remarks/>
        </member>
        <member name="T:StreamCoders.Onvif.Media.RotateExtension">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Media.RotateExtension.Any">
            <remarks/>
        </member>
        <member name="T:StreamCoders.Onvif.Media.VideoSourceConfigurationExtension2">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Media.VideoSourceConfigurationExtension2.LensDescription">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Media.VideoSourceConfigurationExtension2.SceneOrientation">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Media.VideoSourceConfigurationExtension2.Any">
            <remarks/>
        </member>
        <member name="T:StreamCoders.Onvif.Media.LensDescription">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Media.LensDescription.Offset">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Media.LensDescription.Projection">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Media.LensDescription.XFactor">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Media.LensDescription.Any">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Media.LensDescription.FocalLength">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Media.LensDescription.FocalLengthSpecified">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Media.LensDescription.AnyAttr">
            <remarks/>
        </member>
        <member name="T:StreamCoders.Onvif.Media.LensOffset">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Media.LensOffset.x">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Media.LensOffset.xSpecified">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Media.LensOffset.y">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Media.LensOffset.ySpecified">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Media.LensOffset.AnyAttr">
            <remarks/>
        </member>
        <member name="T:StreamCoders.Onvif.Media.LensProjection">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Media.LensProjection.Angle">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Media.LensProjection.Radius">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Media.LensProjection.Transmittance">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Media.LensProjection.TransmittanceSpecified">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Media.LensProjection.Any">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Media.LensProjection.AnyAttr">
            <remarks/>
        </member>
        <member name="T:StreamCoders.Onvif.Media.SceneOrientation">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Media.SceneOrientation.Mode">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Media.SceneOrientation.Orientation">
            <remarks/>
        </member>
        <member name="T:StreamCoders.Onvif.Media.Profile">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Media.Profile.Name">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Media.Profile.VideoSourceConfiguration">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Media.Profile.AudioSourceConfiguration">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Media.Profile.VideoEncoderConfiguration">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Media.Profile.AudioEncoderConfiguration">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Media.Profile.VideoAnalyticsConfiguration">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Media.Profile.PTZConfiguration">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Media.Profile.MetadataConfiguration">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Media.Profile.Extension">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Media.Profile.token">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Media.Profile.fixed">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Media.Profile.fixedSpecified">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Media.Profile.AnyAttr">
            <remarks/>
        </member>
        <member name="T:StreamCoders.Onvif.Media.OSDConfigurationExtension">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Media.OSDConfigurationExtension.Any">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Media.OSDConfigurationExtension.AnyAttr">
            <remarks/>
        </member>
        <member name="T:StreamCoders.Onvif.Media.OSDImgConfigurationExtension">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Media.OSDImgConfigurationExtension.Any">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Media.OSDImgConfigurationExtension.AnyAttr">
            <remarks/>
        </member>
        <member name="T:StreamCoders.Onvif.Media.OSDImgConfiguration">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Media.OSDImgConfiguration.ImgPath">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Media.OSDImgConfiguration.Extension">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Media.OSDImgConfiguration.AnyAttr">
            <remarks/>
        </member>
        <member name="T:StreamCoders.Onvif.Media.OSDTextConfigurationExtension">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Media.OSDTextConfigurationExtension.Any">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Media.OSDTextConfigurationExtension.AnyAttr">
            <remarks/>
        </member>
        <member name="T:StreamCoders.Onvif.Media.OSDColor">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Media.OSDColor.Color">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Media.OSDColor.Transparent">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Media.OSDColor.TransparentSpecified">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Media.OSDColor.AnyAttr">
            <remarks/>
        </member>
        <member name="T:StreamCoders.Onvif.Media.OSDTextConfiguration">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Media.OSDTextConfiguration.Type">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Media.OSDTextConfiguration.DateFormat">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Media.OSDTextConfiguration.TimeFormat">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Media.OSDTextConfiguration.FontSize">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Media.OSDTextConfiguration.FontSizeSpecified">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Media.OSDTextConfiguration.FontColor">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Media.OSDTextConfiguration.BackgroundColor">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Media.OSDTextConfiguration.PlainText">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Media.OSDTextConfiguration.Extension">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Media.OSDTextConfiguration.AnyAttr">
            <remarks/>
        </member>
        <member name="T:StreamCoders.Onvif.Media.OSDPosConfigurationExtension">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Media.OSDPosConfigurationExtension.Any">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Media.OSDPosConfigurationExtension.AnyAttr">
            <remarks/>
        </member>
        <member name="T:StreamCoders.Onvif.Media.Vector">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Media.Vector.x">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Media.Vector.xSpecified">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Media.Vector.y">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Media.Vector.ySpecified">
            <remarks/>
        </member>
        <member name="T:StreamCoders.Onvif.Media.OSDPosConfiguration">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Media.OSDPosConfiguration.Type">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Media.OSDPosConfiguration.Pos">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Media.OSDPosConfiguration.Extension">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Media.OSDPosConfiguration.AnyAttr">
            <remarks/>
        </member>
        <member name="T:StreamCoders.Onvif.Media.OSDReference">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Media.OSDReference.AnyAttr">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Media.OSDReference.Value">
            <remarks/>
        </member>
        <member name="T:StreamCoders.Onvif.Media.PTZNodeExtension2">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Media.PTZNodeExtension2.Any">
            <remarks/>
        </member>
        <member name="T:StreamCoders.Onvif.Media.PTZPresetTourSupportedExtension">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Media.PTZPresetTourSupportedExtension.Any">
            <remarks/>
        </member>
        <member name="T:StreamCoders.Onvif.Media.PTZPresetTourSupported">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Media.PTZPresetTourSupported.MaximumNumberOfPresetTours">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Media.PTZPresetTourSupported.PTZPresetTourOperation">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Media.PTZPresetTourSupported.Extension">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Media.PTZPresetTourSupported.AnyAttr">
            <remarks/>
        </member>
        <member name="T:StreamCoders.Onvif.Media.PTZPresetTourOperation">
            <remarks/>
        </member>
        <member name="F:StreamCoders.Onvif.Media.PTZPresetTourOperation.Start">
            <remarks/>
        </member>
        <member name="F:StreamCoders.Onvif.Media.PTZPresetTourOperation.Stop">
            <remarks/>
        </member>
        <member name="F:StreamCoders.Onvif.Media.PTZPresetTourOperation.Pause">
            <remarks/>
        </member>
        <member name="F:StreamCoders.Onvif.Media.PTZPresetTourOperation.Extended">
            <remarks/>
        </member>
        <member name="T:StreamCoders.Onvif.Media.PTZNodeExtension">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Media.PTZNodeExtension.Any">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Media.PTZNodeExtension.SupportedPresetTour">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Media.PTZNodeExtension.Extension">
            <remarks/>
        </member>
        <member name="T:StreamCoders.Onvif.Media.PTZSpacesExtension">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Media.PTZSpacesExtension.Any">
            <remarks/>
        </member>
        <member name="T:StreamCoders.Onvif.Media.PTZSpaces">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Media.PTZSpaces.AbsolutePanTiltPositionSpace">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Media.PTZSpaces.AbsoluteZoomPositionSpace">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Media.PTZSpaces.RelativePanTiltTranslationSpace">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Media.PTZSpaces.RelativeZoomTranslationSpace">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Media.PTZSpaces.ContinuousPanTiltVelocitySpace">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Media.PTZSpaces.ContinuousZoomVelocitySpace">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Media.PTZSpaces.PanTiltSpeedSpace">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Media.PTZSpaces.ZoomSpeedSpace">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Media.PTZSpaces.Extension">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Media.PTZSpaces.AnyAttr">
            <remarks/>
        </member>
        <member name="T:StreamCoders.Onvif.Media.RelayOutputSettings">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Media.RelayOutputSettings.Mode">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Media.RelayOutputSettings.DelayTime">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Media.RelayOutputSettings.IdleState">
            <remarks/>
        </member>
        <member name="T:StreamCoders.Onvif.Media.RelayMode">
            <remarks/>
        </member>
        <member name="F:StreamCoders.Onvif.Media.RelayMode.Monostable">
            <remarks/>
        </member>
        <member name="F:StreamCoders.Onvif.Media.RelayMode.Bistable">
            <remarks/>
        </member>
        <member name="T:StreamCoders.Onvif.Media.RelayIdleState">
            <remarks/>
        </member>
        <member name="F:StreamCoders.Onvif.Media.RelayIdleState.closed">
            <remarks/>
        </member>
        <member name="F:StreamCoders.Onvif.Media.RelayIdleState.open">
            <remarks/>
        </member>
        <member name="T:StreamCoders.Onvif.Media.NetworkInterfaceExtension2">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Media.NetworkInterfaceExtension2.Any">
            <remarks/>
        </member>
        <member name="T:StreamCoders.Onvif.Media.Dot11SecurityConfigurationExtension">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Media.Dot11SecurityConfigurationExtension.Any">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Media.Dot11SecurityConfigurationExtension.AnyAttr">
            <remarks/>
        </member>
        <member name="T:StreamCoders.Onvif.Media.Dot11PSKSetExtension">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Media.Dot11PSKSetExtension.Any">
            <remarks/>
        </member>
        <member name="T:StreamCoders.Onvif.Media.Dot11PSKSet">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Media.Dot11PSKSet.Key">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Media.Dot11PSKSet.Passphrase">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Media.Dot11PSKSet.Extension">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Media.Dot11PSKSet.AnyAttr">
            <remarks/>
        </member>
        <member name="T:StreamCoders.Onvif.Media.Dot11SecurityConfiguration">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Media.Dot11SecurityConfiguration.Mode">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Media.Dot11SecurityConfiguration.Algorithm">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Media.Dot11SecurityConfiguration.AlgorithmSpecified">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Media.Dot11SecurityConfiguration.PSK">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Media.Dot11SecurityConfiguration.Dot1X">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Media.Dot11SecurityConfiguration.Extension">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Media.Dot11SecurityConfiguration.AnyAttr">
            <remarks/>
        </member>
        <member name="T:StreamCoders.Onvif.Media.Dot11SecurityMode">
            <remarks/>
        </member>
        <member name="F:StreamCoders.Onvif.Media.Dot11SecurityMode.None">
            <remarks/>
        </member>
        <member name="F:StreamCoders.Onvif.Media.Dot11SecurityMode.WEP">
            <remarks/>
        </member>
        <member name="F:StreamCoders.Onvif.Media.Dot11SecurityMode.PSK">
            <remarks/>
        </member>
        <member name="F:StreamCoders.Onvif.Media.Dot11SecurityMode.Dot1X">
            <remarks/>
        </member>
        <member name="F:StreamCoders.Onvif.Media.Dot11SecurityMode.Extended">
            <remarks/>
        </member>
        <member name="T:StreamCoders.Onvif.Media.Dot11Cipher">
            <remarks/>
        </member>
        <member name="F:StreamCoders.Onvif.Media.Dot11Cipher.CCMP">
            <remarks/>
        </member>
        <member name="F:StreamCoders.Onvif.Media.Dot11Cipher.TKIP">
            <remarks/>
        </member>
        <member name="F:StreamCoders.Onvif.Media.Dot11Cipher.Any">
            <remarks/>
        </member>
        <member name="F:StreamCoders.Onvif.Media.Dot11Cipher.Extended">
            <remarks/>
        </member>
        <member name="T:StreamCoders.Onvif.Media.Dot11Configuration">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Media.Dot11Configuration.SSID">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Media.Dot11Configuration.Mode">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Media.Dot11Configuration.Alias">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Media.Dot11Configuration.Priority">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Media.Dot11Configuration.Security">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Media.Dot11Configuration.Any">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Media.Dot11Configuration.AnyAttr">
            <remarks/>
        </member>
        <member name="T:StreamCoders.Onvif.Media.Dot11StationMode">
            <remarks/>
        </member>
        <member name="F:StreamCoders.Onvif.Media.Dot11StationMode.Adhoc">
            <remarks/>
        </member>
        <member name="F:StreamCoders.Onvif.Media.Dot11StationMode.Infrastructure">
            <remarks/>
        </member>
        <member name="F:StreamCoders.Onvif.Media.Dot11StationMode.Extended">
            <remarks/>
        </member>
        <member name="T:StreamCoders.Onvif.Media.Dot3Configuration">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Media.Dot3Configuration.Any">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Media.Dot3Configuration.AnyAttr">
            <remarks/>
        </member>
        <member name="T:StreamCoders.Onvif.Media.NetworkInterfaceExtension">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Media.NetworkInterfaceExtension.Any">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Media.NetworkInterfaceExtension.InterfaceType">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Media.NetworkInterfaceExtension.Dot3">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Media.NetworkInterfaceExtension.Dot11">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Media.NetworkInterfaceExtension.Extension">
            <remarks/>
        </member>
        <member name="T:StreamCoders.Onvif.Media.IPv6ConfigurationExtension">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Media.IPv6ConfigurationExtension.Any">
            <remarks/>
        </member>
        <member name="T:StreamCoders.Onvif.Media.PrefixedIPv6Address">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Media.PrefixedIPv6Address.Address">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Media.PrefixedIPv6Address.PrefixLength">
            <remarks/>
        </member>
        <member name="T:StreamCoders.Onvif.Media.IPv6Configuration">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Media.IPv6Configuration.AcceptRouterAdvert">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Media.IPv6Configuration.AcceptRouterAdvertSpecified">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Media.IPv6Configuration.DHCP">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Media.IPv6Configuration.Manual">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Media.IPv6Configuration.LinkLocal">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Media.IPv6Configuration.FromDHCP">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Media.IPv6Configuration.FromRA">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Media.IPv6Configuration.Extension">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Media.IPv6Configuration.AnyAttr">
            <remarks/>
        </member>
        <member name="T:StreamCoders.Onvif.Media.IPv6DHCPConfiguration">
            <remarks/>
        </member>
        <member name="F:StreamCoders.Onvif.Media.IPv6DHCPConfiguration.Auto">
            <remarks/>
        </member>
        <member name="F:StreamCoders.Onvif.Media.IPv6DHCPConfiguration.Stateful">
            <remarks/>
        </member>
        <member name="F:StreamCoders.Onvif.Media.IPv6DHCPConfiguration.Stateless">
            <remarks/>
        </member>
        <member name="F:StreamCoders.Onvif.Media.IPv6DHCPConfiguration.Off">
            <remarks/>
        </member>
        <member name="T:StreamCoders.Onvif.Media.IPv6NetworkInterface">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Media.IPv6NetworkInterface.Enabled">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Media.IPv6NetworkInterface.Config">
            <remarks/>
        </member>
        <member name="T:StreamCoders.Onvif.Media.PrefixedIPv4Address">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Media.PrefixedIPv4Address.Address">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Media.PrefixedIPv4Address.PrefixLength">
            <remarks/>
        </member>
        <member name="T:StreamCoders.Onvif.Media.IPv4Configuration">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Media.IPv4Configuration.Manual">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Media.IPv4Configuration.LinkLocal">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Media.IPv4Configuration.FromDHCP">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Media.IPv4Configuration.DHCP">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Media.IPv4Configuration.Any">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Media.IPv4Configuration.AnyAttr">
            <remarks/>
        </member>
        <member name="T:StreamCoders.Onvif.Media.IPv4NetworkInterface">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Media.IPv4NetworkInterface.Enabled">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Media.IPv4NetworkInterface.Config">
            <remarks/>
        </member>
        <member name="T:StreamCoders.Onvif.Media.NetworkInterfaceConnectionSetting">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Media.NetworkInterfaceConnectionSetting.AutoNegotiation">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Media.NetworkInterfaceConnectionSetting.Speed">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Media.NetworkInterfaceConnectionSetting.Duplex">
            <remarks/>
        </member>
        <member name="T:StreamCoders.Onvif.Media.Duplex">
            <remarks/>
        </member>
        <member name="F:StreamCoders.Onvif.Media.Duplex.Full">
            <remarks/>
        </member>
        <member name="F:StreamCoders.Onvif.Media.Duplex.Half">
            <remarks/>
        </member>
        <member name="T:StreamCoders.Onvif.Media.NetworkInterfaceLink">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Media.NetworkInterfaceLink.AdminSettings">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Media.NetworkInterfaceLink.OperSettings">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Media.NetworkInterfaceLink.InterfaceType">
            <remarks/>
        </member>
        <member name="T:StreamCoders.Onvif.Media.NetworkInterfaceInfo">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Media.NetworkInterfaceInfo.Name">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Media.NetworkInterfaceInfo.HwAddress">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Media.NetworkInterfaceInfo.MTU">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Media.NetworkInterfaceInfo.MTUSpecified">
            <remarks/>
        </member>
        <member name="T:StreamCoders.Onvif.Media.VideoOutputExtension">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Media.VideoOutputExtension.Any">
            <remarks/>
        </member>
        <member name="T:StreamCoders.Onvif.Media.LayoutExtension">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Media.LayoutExtension.Any">
            <remarks/>
        </member>
        <member name="T:StreamCoders.Onvif.Media.PaneLayout">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Media.PaneLayout.Pane">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Media.PaneLayout.Area">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Media.PaneLayout.Any">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Media.PaneLayout.AnyAttr">
            <remarks/>
        </member>
        <member name="T:StreamCoders.Onvif.Media.Rectangle">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Media.Rectangle.bottom">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Media.Rectangle.bottomSpecified">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Media.Rectangle.top">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Media.Rectangle.topSpecified">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Media.Rectangle.right">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Media.Rectangle.rightSpecified">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Media.Rectangle.left">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Media.Rectangle.leftSpecified">
            <remarks/>
        </member>
        <member name="T:StreamCoders.Onvif.Media.Layout">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Media.Layout.PaneLayout">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Media.Layout.Extension">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Media.Layout.AnyAttr">
            <remarks/>
        </member>
        <member name="T:StreamCoders.Onvif.Media.VideoSourceExtension2">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Media.VideoSourceExtension2.Any">
            <remarks/>
        </member>
        <member name="T:StreamCoders.Onvif.Media.ImagingSettingsExtension204">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Media.ImagingSettingsExtension204.Any">
            <remarks/>
        </member>
        <member name="T:StreamCoders.Onvif.Media.NoiseReduction">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Media.NoiseReduction.Level">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Media.NoiseReduction.Any">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Media.NoiseReduction.AnyAttr">
            <remarks/>
        </member>
        <member name="T:StreamCoders.Onvif.Media.DefoggingExtension">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Media.DefoggingExtension.Any">
            <remarks/>
        </member>
        <member name="T:StreamCoders.Onvif.Media.Defogging">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Media.Defogging.Mode">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Media.Defogging.Level">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Media.Defogging.LevelSpecified">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Media.Defogging.Extension">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Media.Defogging.AnyAttr">
            <remarks/>
        </member>
        <member name="T:StreamCoders.Onvif.Media.ToneCompensationExtension">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Media.ToneCompensationExtension.Any">
            <remarks/>
        </member>
        <member name="T:StreamCoders.Onvif.Media.ToneCompensation">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Media.ToneCompensation.Mode">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Media.ToneCompensation.Level">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Media.ToneCompensation.LevelSpecified">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Media.ToneCompensation.Extension">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Media.ToneCompensation.AnyAttr">
            <remarks/>
        </member>
        <member name="T:StreamCoders.Onvif.Media.ImagingSettingsExtension203">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Media.ImagingSettingsExtension203.ToneCompensation">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Media.ImagingSettingsExtension203.Defogging">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Media.ImagingSettingsExtension203.NoiseReduction">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Media.ImagingSettingsExtension203.Extension">
            <remarks/>
        </member>
        <member name="T:StreamCoders.Onvif.Media.IrCutFilterAutoAdjustmentExtension">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Media.IrCutFilterAutoAdjustmentExtension.Any">
            <remarks/>
        </member>
        <member name="T:StreamCoders.Onvif.Media.IrCutFilterAutoAdjustment">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Media.IrCutFilterAutoAdjustment.BoundaryType">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Media.IrCutFilterAutoAdjustment.BoundaryOffset">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Media.IrCutFilterAutoAdjustment.BoundaryOffsetSpecified">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Media.IrCutFilterAutoAdjustment.ResponseTime">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Media.IrCutFilterAutoAdjustment.Extension">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Media.IrCutFilterAutoAdjustment.AnyAttr">
            <remarks/>
        </member>
        <member name="T:StreamCoders.Onvif.Media.ImagingSettingsExtension202">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Media.ImagingSettingsExtension202.IrCutFilterAutoAdjustment">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Media.ImagingSettingsExtension202.Extension">
            <remarks/>
        </member>
        <member name="T:StreamCoders.Onvif.Media.ImageStabilizationExtension">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Media.ImageStabilizationExtension.Any">
            <remarks/>
        </member>
        <member name="T:StreamCoders.Onvif.Media.ImageStabilization">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Media.ImageStabilization.Mode">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Media.ImageStabilization.Level">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Media.ImageStabilization.LevelSpecified">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Media.ImageStabilization.Extension">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Media.ImageStabilization.AnyAttr">
            <remarks/>
        </member>
        <member name="T:StreamCoders.Onvif.Media.ImageStabilizationMode">
            <remarks/>
        </member>
        <member name="F:StreamCoders.Onvif.Media.ImageStabilizationMode.OFF">
            <remarks/>
        </member>
        <member name="F:StreamCoders.Onvif.Media.ImageStabilizationMode.ON">
            <remarks/>
        </member>
        <member name="F:StreamCoders.Onvif.Media.ImageStabilizationMode.AUTO">
            <remarks/>
        </member>
        <member name="F:StreamCoders.Onvif.Media.ImageStabilizationMode.Extended">
            <remarks/>
        </member>
        <member name="T:StreamCoders.Onvif.Media.ImagingSettingsExtension20">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Media.ImagingSettingsExtension20.Any">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Media.ImagingSettingsExtension20.ImageStabilization">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Media.ImagingSettingsExtension20.Extension">
            <remarks/>
        </member>
        <member name="T:StreamCoders.Onvif.Media.WhiteBalance20Extension">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Media.WhiteBalance20Extension.Any">
            <remarks/>
        </member>
        <member name="T:StreamCoders.Onvif.Media.WhiteBalance20">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Media.WhiteBalance20.Mode">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Media.WhiteBalance20.CrGain">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Media.WhiteBalance20.CrGainSpecified">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Media.WhiteBalance20.CbGain">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Media.WhiteBalance20.CbGainSpecified">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Media.WhiteBalance20.Extension">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Media.WhiteBalance20.AnyAttr">
            <remarks/>
        </member>
        <member name="T:StreamCoders.Onvif.Media.WhiteBalanceMode">
            <remarks/>
        </member>
        <member name="F:StreamCoders.Onvif.Media.WhiteBalanceMode.AUTO">
            <remarks/>
        </member>
        <member name="F:StreamCoders.Onvif.Media.WhiteBalanceMode.MANUAL">
            <remarks/>
        </member>
        <member name="T:StreamCoders.Onvif.Media.WideDynamicRange20">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Media.WideDynamicRange20.Mode">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Media.WideDynamicRange20.Level">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Media.WideDynamicRange20.LevelSpecified">
            <remarks/>
        </member>
        <member name="T:StreamCoders.Onvif.Media.WideDynamicMode">
            <remarks/>
        </member>
        <member name="F:StreamCoders.Onvif.Media.WideDynamicMode.OFF">
            <remarks/>
        </member>
        <member name="F:StreamCoders.Onvif.Media.WideDynamicMode.ON">
            <remarks/>
        </member>
        <member name="T:StreamCoders.Onvif.Media.FocusConfiguration20Extension">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Media.FocusConfiguration20Extension.Any">
            <remarks/>
        </member>
        <member name="T:StreamCoders.Onvif.Media.FocusConfiguration20">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Media.FocusConfiguration20.AutoFocusMode">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Media.FocusConfiguration20.DefaultSpeed">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Media.FocusConfiguration20.DefaultSpeedSpecified">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Media.FocusConfiguration20.NearLimit">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Media.FocusConfiguration20.NearLimitSpecified">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Media.FocusConfiguration20.FarLimit">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Media.FocusConfiguration20.FarLimitSpecified">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Media.FocusConfiguration20.Extension">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Media.FocusConfiguration20.AnyAttr">
            <remarks/>
        </member>
        <member name="T:StreamCoders.Onvif.Media.AutoFocusMode">
            <remarks/>
        </member>
        <member name="F:StreamCoders.Onvif.Media.AutoFocusMode.AUTO">
            <remarks/>
        </member>
        <member name="F:StreamCoders.Onvif.Media.AutoFocusMode.MANUAL">
            <remarks/>
        </member>
        <member name="T:StreamCoders.Onvif.Media.Exposure20">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Media.Exposure20.Mode">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Media.Exposure20.Priority">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Media.Exposure20.PrioritySpecified">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Media.Exposure20.Window">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Media.Exposure20.MinExposureTime">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Media.Exposure20.MinExposureTimeSpecified">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Media.Exposure20.MaxExposureTime">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Media.Exposure20.MaxExposureTimeSpecified">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Media.Exposure20.MinGain">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Media.Exposure20.MinGainSpecified">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Media.Exposure20.MaxGain">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Media.Exposure20.MaxGainSpecified">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Media.Exposure20.MinIris">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Media.Exposure20.MinIrisSpecified">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Media.Exposure20.MaxIris">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Media.Exposure20.MaxIrisSpecified">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Media.Exposure20.ExposureTime">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Media.Exposure20.ExposureTimeSpecified">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Media.Exposure20.Gain">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Media.Exposure20.GainSpecified">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Media.Exposure20.Iris">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Media.Exposure20.IrisSpecified">
            <remarks/>
        </member>
        <member name="T:StreamCoders.Onvif.Media.ExposureMode">
            <remarks/>
        </member>
        <member name="F:StreamCoders.Onvif.Media.ExposureMode.AUTO">
            <remarks/>
        </member>
        <member name="F:StreamCoders.Onvif.Media.ExposureMode.MANUAL">
            <remarks/>
        </member>
        <member name="T:StreamCoders.Onvif.Media.ExposurePriority">
            <remarks/>
        </member>
        <member name="F:StreamCoders.Onvif.Media.ExposurePriority.LowNoise">
            <remarks/>
        </member>
        <member name="F:StreamCoders.Onvif.Media.ExposurePriority.FrameRate">
            <remarks/>
        </member>
        <member name="T:StreamCoders.Onvif.Media.BacklightCompensation20">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Media.BacklightCompensation20.Mode">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Media.BacklightCompensation20.Level">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Media.BacklightCompensation20.LevelSpecified">
            <remarks/>
        </member>
        <member name="T:StreamCoders.Onvif.Media.BacklightCompensationMode">
            <remarks/>
        </member>
        <member name="F:StreamCoders.Onvif.Media.BacklightCompensationMode.OFF">
            <remarks/>
        </member>
        <member name="F:StreamCoders.Onvif.Media.BacklightCompensationMode.ON">
            <remarks/>
        </member>
        <member name="T:StreamCoders.Onvif.Media.ImagingSettings20">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Media.ImagingSettings20.BacklightCompensation">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Media.ImagingSettings20.Brightness">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Media.ImagingSettings20.BrightnessSpecified">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Media.ImagingSettings20.ColorSaturation">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Media.ImagingSettings20.ColorSaturationSpecified">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Media.ImagingSettings20.Contrast">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Media.ImagingSettings20.ContrastSpecified">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Media.ImagingSettings20.Exposure">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Media.ImagingSettings20.Focus">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Media.ImagingSettings20.IrCutFilter">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Media.ImagingSettings20.IrCutFilterSpecified">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Media.ImagingSettings20.Sharpness">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Media.ImagingSettings20.SharpnessSpecified">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Media.ImagingSettings20.WideDynamicRange">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Media.ImagingSettings20.WhiteBalance">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Media.ImagingSettings20.Extension">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Media.ImagingSettings20.AnyAttr">
            <remarks/>
        </member>
        <member name="T:StreamCoders.Onvif.Media.IrCutFilterMode">
            <remarks/>
        </member>
        <member name="F:StreamCoders.Onvif.Media.IrCutFilterMode.ON">
            <remarks/>
        </member>
        <member name="F:StreamCoders.Onvif.Media.IrCutFilterMode.OFF">
            <remarks/>
        </member>
        <member name="F:StreamCoders.Onvif.Media.IrCutFilterMode.AUTO">
            <remarks/>
        </member>
        <member name="T:StreamCoders.Onvif.Media.VideoSourceExtension">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Media.VideoSourceExtension.Any">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Media.VideoSourceExtension.Imaging">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Media.VideoSourceExtension.Extension">
            <remarks/>
        </member>
        <member name="T:StreamCoders.Onvif.Media.ImagingSettingsExtension">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Media.ImagingSettingsExtension.Any">
            <remarks/>
        </member>
        <member name="T:StreamCoders.Onvif.Media.WhiteBalance">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Media.WhiteBalance.Mode">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Media.WhiteBalance.CrGain">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Media.WhiteBalance.CbGain">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Media.WhiteBalance.Any">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Media.WhiteBalance.AnyAttr">
            <remarks/>
        </member>
        <member name="T:StreamCoders.Onvif.Media.WideDynamicRange">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Media.WideDynamicRange.Mode">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Media.WideDynamicRange.Level">
            <remarks/>
        </member>
        <member name="T:StreamCoders.Onvif.Media.FocusConfiguration">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Media.FocusConfiguration.AutoFocusMode">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Media.FocusConfiguration.DefaultSpeed">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Media.FocusConfiguration.NearLimit">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Media.FocusConfiguration.FarLimit">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Media.FocusConfiguration.Any">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Media.FocusConfiguration.AnyAttr">
            <remarks/>
        </member>
        <member name="T:StreamCoders.Onvif.Media.Exposure">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Media.Exposure.Mode">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Media.Exposure.Priority">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Media.Exposure.Window">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Media.Exposure.MinExposureTime">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Media.Exposure.MaxExposureTime">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Media.Exposure.MinGain">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Media.Exposure.MaxGain">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Media.Exposure.MinIris">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Media.Exposure.MaxIris">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Media.Exposure.ExposureTime">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Media.Exposure.Gain">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Media.Exposure.Iris">
            <remarks/>
        </member>
        <member name="T:StreamCoders.Onvif.Media.BacklightCompensation">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Media.BacklightCompensation.Mode">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Media.BacklightCompensation.Level">
            <remarks/>
        </member>
        <member name="T:StreamCoders.Onvif.Media.ImagingSettings">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Media.ImagingSettings.BacklightCompensation">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Media.ImagingSettings.Brightness">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Media.ImagingSettings.BrightnessSpecified">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Media.ImagingSettings.ColorSaturation">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Media.ImagingSettings.ColorSaturationSpecified">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Media.ImagingSettings.Contrast">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Media.ImagingSettings.ContrastSpecified">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Media.ImagingSettings.Exposure">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Media.ImagingSettings.Focus">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Media.ImagingSettings.IrCutFilter">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Media.ImagingSettings.IrCutFilterSpecified">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Media.ImagingSettings.Sharpness">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Media.ImagingSettings.SharpnessSpecified">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Media.ImagingSettings.WideDynamicRange">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Media.ImagingSettings.WhiteBalance">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Media.ImagingSettings.Extension">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Media.ImagingSettings.AnyAttr">
            <remarks/>
        </member>
        <member name="T:StreamCoders.Onvif.Media.DeviceEntity">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Media.DeviceEntity.token">
            <remarks/>
        </member>
        <member name="T:StreamCoders.Onvif.Media.OSDConfiguration">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Media.OSDConfiguration.VideoSourceConfigurationToken">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Media.OSDConfiguration.Type">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Media.OSDConfiguration.Position">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Media.OSDConfiguration.TextString">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Media.OSDConfiguration.Image">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Media.OSDConfiguration.Extension">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Media.OSDConfiguration.AnyAttr">
            <remarks/>
        </member>
        <member name="T:StreamCoders.Onvif.Media.PTZNode">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Media.PTZNode.Name">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Media.PTZNode.SupportedPTZSpaces">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Media.PTZNode.MaximumNumberOfPresets">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Media.PTZNode.HomeSupported">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Media.PTZNode.AuxiliaryCommands">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Media.PTZNode.Extension">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Media.PTZNode.FixedHomePosition">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Media.PTZNode.FixedHomePositionSpecified">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Media.PTZNode.AnyAttr">
            <remarks/>
        </member>
        <member name="T:StreamCoders.Onvif.Media.DigitalInput">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Media.DigitalInput.Any">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Media.DigitalInput.IdleState">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Media.DigitalInput.IdleStateSpecified">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Media.DigitalInput.AnyAttr">
            <remarks/>
        </member>
        <member name="T:StreamCoders.Onvif.Media.DigitalIdleState">
            <remarks/>
        </member>
        <member name="F:StreamCoders.Onvif.Media.DigitalIdleState.closed">
            <remarks/>
        </member>
        <member name="F:StreamCoders.Onvif.Media.DigitalIdleState.open">
            <remarks/>
        </member>
        <member name="T:StreamCoders.Onvif.Media.RelayOutput">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Media.RelayOutput.Properties">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Media.RelayOutput.Any">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Media.RelayOutput.AnyAttr">
            <remarks/>
        </member>
        <member name="T:StreamCoders.Onvif.Media.NetworkInterface">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Media.NetworkInterface.Enabled">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Media.NetworkInterface.Info">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Media.NetworkInterface.Link">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Media.NetworkInterface.IPv4">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Media.NetworkInterface.IPv6">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Media.NetworkInterface.Extension">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Media.NetworkInterface.AnyAttr">
            <remarks/>
        </member>
        <member name="T:StreamCoders.Onvif.Media.AudioOutput">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Media.AudioOutput.Any">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Media.AudioOutput.AnyAttr">
            <remarks/>
        </member>
        <member name="T:StreamCoders.Onvif.Media.VideoOutput">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Media.VideoOutput.Layout">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Media.VideoOutput.Resolution">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Media.VideoOutput.RefreshRate">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Media.VideoOutput.RefreshRateSpecified">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Media.VideoOutput.AspectRatio">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Media.VideoOutput.AspectRatioSpecified">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Media.VideoOutput.Extension">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Media.VideoOutput.AnyAttr">
            <remarks/>
        </member>
        <member name="T:StreamCoders.Onvif.Media.AudioSource">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Media.AudioSource.Channels">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Media.AudioSource.Any">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Media.AudioSource.AnyAttr">
            <remarks/>
        </member>
        <member name="T:StreamCoders.Onvif.Media.VideoSource">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Media.VideoSource.Framerate">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Media.VideoSource.Resolution">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Media.VideoSource.Imaging">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Media.VideoSource.Extension">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Media.VideoSource.AnyAttr">
            <remarks/>
        </member>
        <member name="T:StreamCoders.Onvif.Media.StreamingCapabilities">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Media.StreamingCapabilities.Any">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Media.StreamingCapabilities.RTPMulticast">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Media.StreamingCapabilities.RTPMulticastSpecified">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Media.StreamingCapabilities.RTP_TCP">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Media.StreamingCapabilities.RTP_TCPSpecified">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Media.StreamingCapabilities.RTP_RTSP_TCP">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Media.StreamingCapabilities.RTP_RTSP_TCPSpecified">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Media.StreamingCapabilities.NonAggregateControl">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Media.StreamingCapabilities.NonAggregateControlSpecified">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Media.StreamingCapabilities.NoRTSPStreaming">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Media.StreamingCapabilities.NoRTSPStreamingSpecified">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Media.StreamingCapabilities.AnyAttr">
            <remarks/>
        </member>
        <member name="T:StreamCoders.Onvif.Provisioning.Capabilities">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Provisioning.Capabilities.DefaultTimeout">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Provisioning.Capabilities.Source">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Provisioning.Capabilities.Any">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Provisioning.Capabilities.AnyAttr">
            <remarks/>
        </member>
        <member name="T:StreamCoders.Onvif.Provisioning.SourceCapabilities">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Provisioning.SourceCapabilities.Any">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Provisioning.SourceCapabilities.VideoSourceToken">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Provisioning.SourceCapabilities.MaximumPanMoves">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Provisioning.SourceCapabilities.MaximumTiltMoves">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Provisioning.SourceCapabilities.MaximumZoomMoves">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Provisioning.SourceCapabilities.MaximumRollMoves">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Provisioning.SourceCapabilities.AutoLevel">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Provisioning.SourceCapabilities.AutoLevelSpecified">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Provisioning.SourceCapabilities.MaximumFocusMoves">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Provisioning.SourceCapabilities.AutoFocus">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Provisioning.SourceCapabilities.AutoFocusSpecified">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Provisioning.SourceCapabilities.AnyAttr">
            <remarks/>
        </member>
        <member name="T:StreamCoders.Onvif.Provisioning.Usage">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Provisioning.Usage.Pan">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Provisioning.Usage.Tilt">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Provisioning.Usage.Zoom">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Provisioning.Usage.Roll">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Provisioning.Usage.Focus">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Provisioning.Usage.Any">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Provisioning.Usage.AnyAttr">
            <remarks/>
        </member>
        <member name="T:StreamCoders.Onvif.Provisioning.PanDirection">
            <remarks/>
        </member>
        <member name="F:StreamCoders.Onvif.Provisioning.PanDirection.Left">
            <remarks/>
        </member>
        <member name="F:StreamCoders.Onvif.Provisioning.PanDirection.Right">
            <remarks/>
        </member>
        <member name="T:StreamCoders.Onvif.Provisioning.TiltDirection">
            <remarks/>
        </member>
        <member name="F:StreamCoders.Onvif.Provisioning.TiltDirection.Up">
            <remarks/>
        </member>
        <member name="F:StreamCoders.Onvif.Provisioning.TiltDirection.Down">
            <remarks/>
        </member>
        <member name="T:StreamCoders.Onvif.Provisioning.ZoomDirection">
            <remarks/>
        </member>
        <member name="F:StreamCoders.Onvif.Provisioning.ZoomDirection.Wide">
            <remarks/>
        </member>
        <member name="F:StreamCoders.Onvif.Provisioning.ZoomDirection.Telephoto">
            <remarks/>
        </member>
        <member name="T:StreamCoders.Onvif.Provisioning.RollDirection">
            <remarks/>
        </member>
        <member name="F:StreamCoders.Onvif.Provisioning.RollDirection.Clockwise">
            <remarks/>
        </member>
        <member name="F:StreamCoders.Onvif.Provisioning.RollDirection.Counterclockwise">
            <remarks/>
        </member>
        <member name="F:StreamCoders.Onvif.Provisioning.RollDirection.Auto">
            <remarks/>
        </member>
        <member name="T:StreamCoders.Onvif.Provisioning.FocusDirection">
            <remarks/>
        </member>
        <member name="F:StreamCoders.Onvif.Provisioning.FocusDirection.Near">
            <remarks/>
        </member>
        <member name="F:StreamCoders.Onvif.Provisioning.FocusDirection.Far">
            <remarks/>
        </member>
        <member name="F:StreamCoders.Onvif.Provisioning.FocusDirection.Auto">
            <remarks/>
        </member>
        <member name="T:StreamCoders.Onvif.Ptz.Capabilities">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Ptz.Capabilities.Any">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Ptz.Capabilities.EFlip">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Ptz.Capabilities.EFlipSpecified">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Ptz.Capabilities.Reverse">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Ptz.Capabilities.ReverseSpecified">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Ptz.Capabilities.GetCompatibleConfigurations">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Ptz.Capabilities.GetCompatibleConfigurationsSpecified">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Ptz.Capabilities.MoveStatus">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Ptz.Capabilities.MoveStatusSpecified">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Ptz.Capabilities.StatusPosition">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Ptz.Capabilities.StatusPositionSpecified">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Ptz.Capabilities.AnyAttr">
            <remarks/>
        </member>
        <member name="T:StreamCoders.Onvif.Ptz.PTZPresetTourPresetDetailOptionsExtension">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Ptz.PTZPresetTourPresetDetailOptionsExtension.Any">
            <remarks/>
        </member>
        <member name="T:StreamCoders.Onvif.Ptz.PTZPresetTourPresetDetailOptions">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Ptz.PTZPresetTourPresetDetailOptions.PresetToken">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Ptz.PTZPresetTourPresetDetailOptions.Home">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Ptz.PTZPresetTourPresetDetailOptions.HomeSpecified">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Ptz.PTZPresetTourPresetDetailOptions.PanTiltPositionSpace">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Ptz.PTZPresetTourPresetDetailOptions.ZoomPositionSpace">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Ptz.PTZPresetTourPresetDetailOptions.Extension">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Ptz.PTZPresetTourPresetDetailOptions.AnyAttr">
            <remarks/>
        </member>
        <member name="T:StreamCoders.Onvif.Ptz.Space2DDescription">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Ptz.Space2DDescription.URI">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Ptz.Space2DDescription.XRange">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Ptz.Space2DDescription.YRange">
            <remarks/>
        </member>
        <member name="T:StreamCoders.Onvif.Ptz.FloatRange">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Ptz.FloatRange.Min">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Ptz.FloatRange.Max">
            <remarks/>
        </member>
        <member name="T:StreamCoders.Onvif.Ptz.Space1DDescription">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Ptz.Space1DDescription.URI">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Ptz.Space1DDescription.XRange">
            <remarks/>
        </member>
        <member name="T:StreamCoders.Onvif.Ptz.PTZPresetTourSpotOptions">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Ptz.PTZPresetTourSpotOptions.PresetDetail">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Ptz.PTZPresetTourSpotOptions.StayTime">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Ptz.PTZPresetTourSpotOptions.Any">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Ptz.PTZPresetTourSpotOptions.AnyAttr">
            <remarks/>
        </member>
        <member name="T:StreamCoders.Onvif.Ptz.DurationRange">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Ptz.DurationRange.Min">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Ptz.DurationRange.Max">
            <remarks/>
        </member>
        <member name="T:StreamCoders.Onvif.Ptz.PTZPresetTourStartingConditionOptionsExtension">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Ptz.PTZPresetTourStartingConditionOptionsExtension.Any">
            <remarks/>
        </member>
        <member name="T:StreamCoders.Onvif.Ptz.IntRange">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Ptz.IntRange.Min">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Ptz.IntRange.Max">
            <remarks/>
        </member>
        <member name="T:StreamCoders.Onvif.Ptz.PTZPresetTourStartingConditionOptions">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Ptz.PTZPresetTourStartingConditionOptions.RecurringTime">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Ptz.PTZPresetTourStartingConditionOptions.RecurringDuration">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Ptz.PTZPresetTourStartingConditionOptions.Direction">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Ptz.PTZPresetTourStartingConditionOptions.Extension">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Ptz.PTZPresetTourStartingConditionOptions.AnyAttr">
            <remarks/>
        </member>
        <member name="T:StreamCoders.Onvif.Ptz.PTZPresetTourDirection">
            <remarks/>
        </member>
        <member name="F:StreamCoders.Onvif.Ptz.PTZPresetTourDirection.Forward">
            <remarks/>
        </member>
        <member name="F:StreamCoders.Onvif.Ptz.PTZPresetTourDirection.Backward">
            <remarks/>
        </member>
        <member name="F:StreamCoders.Onvif.Ptz.PTZPresetTourDirection.Extended">
            <remarks/>
        </member>
        <member name="T:StreamCoders.Onvif.Ptz.PTZPresetTourOptions">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Ptz.PTZPresetTourOptions.AutoStart">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Ptz.PTZPresetTourOptions.StartingCondition">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Ptz.PTZPresetTourOptions.TourSpot">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Ptz.PTZPresetTourOptions.Any">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Ptz.PTZPresetTourOptions.AnyAttr">
            <remarks/>
        </member>
        <member name="T:StreamCoders.Onvif.Ptz.PTZPresetTourExtension">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Ptz.PTZPresetTourExtension.Any">
            <remarks/>
        </member>
        <member name="T:StreamCoders.Onvif.Ptz.PTZPresetTourStartingConditionExtension">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Ptz.PTZPresetTourStartingConditionExtension.Any">
            <remarks/>
        </member>
        <member name="T:StreamCoders.Onvif.Ptz.PTZPresetTourStartingCondition">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Ptz.PTZPresetTourStartingCondition.RecurringTime">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Ptz.PTZPresetTourStartingCondition.RecurringTimeSpecified">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Ptz.PTZPresetTourStartingCondition.RecurringDuration">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Ptz.PTZPresetTourStartingCondition.Direction">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Ptz.PTZPresetTourStartingCondition.DirectionSpecified">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Ptz.PTZPresetTourStartingCondition.Extension">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Ptz.PTZPresetTourStartingCondition.RandomPresetOrder">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Ptz.PTZPresetTourStartingCondition.RandomPresetOrderSpecified">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Ptz.PTZPresetTourStartingCondition.AnyAttr">
            <remarks/>
        </member>
        <member name="T:StreamCoders.Onvif.Ptz.PTZPresetTourStatusExtension">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Ptz.PTZPresetTourStatusExtension.Any">
            <remarks/>
        </member>
        <member name="T:StreamCoders.Onvif.Ptz.PTZPresetTourSpotExtension">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Ptz.PTZPresetTourSpotExtension.Any">
            <remarks/>
        </member>
        <member name="T:StreamCoders.Onvif.Ptz.PTZPresetTourTypeExtension">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Ptz.PTZPresetTourTypeExtension.Any">
            <remarks/>
        </member>
        <member name="T:StreamCoders.Onvif.Ptz.PTZPresetTourPresetDetail">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Ptz.PTZPresetTourPresetDetail.Item">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Ptz.PTZPresetTourPresetDetail.Any">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Ptz.PTZPresetTourPresetDetail.AnyAttr">
            <remarks/>
        </member>
        <member name="T:StreamCoders.Onvif.Ptz.PTZVector">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Ptz.PTZVector.PanTilt">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Ptz.PTZVector.Zoom">
            <remarks/>
        </member>
        <member name="T:StreamCoders.Onvif.Ptz.Vector2D">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Ptz.Vector2D.x">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Ptz.Vector2D.y">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Ptz.Vector2D.space">
            <remarks/>
        </member>
        <member name="T:StreamCoders.Onvif.Ptz.Vector1D">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Ptz.Vector1D.x">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Ptz.Vector1D.space">
            <remarks/>
        </member>
        <member name="T:StreamCoders.Onvif.Ptz.PTZPresetTourSpot">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Ptz.PTZPresetTourSpot.PresetDetail">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Ptz.PTZPresetTourSpot.Speed">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Ptz.PTZPresetTourSpot.StayTime">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Ptz.PTZPresetTourSpot.Extension">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Ptz.PTZPresetTourSpot.AnyAttr">
            <remarks/>
        </member>
        <member name="T:StreamCoders.Onvif.Ptz.PTZSpeed">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Ptz.PTZSpeed.PanTilt">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Ptz.PTZSpeed.Zoom">
            <remarks/>
        </member>
        <member name="T:StreamCoders.Onvif.Ptz.PTZPresetTourStatus">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Ptz.PTZPresetTourStatus.State">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Ptz.PTZPresetTourStatus.CurrentTourSpot">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Ptz.PTZPresetTourStatus.Extension">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Ptz.PTZPresetTourStatus.AnyAttr">
            <remarks/>
        </member>
        <member name="T:StreamCoders.Onvif.Ptz.PTZPresetTourState">
            <remarks/>
        </member>
        <member name="F:StreamCoders.Onvif.Ptz.PTZPresetTourState.Idle">
            <remarks/>
        </member>
        <member name="F:StreamCoders.Onvif.Ptz.PTZPresetTourState.Touring">
            <remarks/>
        </member>
        <member name="F:StreamCoders.Onvif.Ptz.PTZPresetTourState.Paused">
            <remarks/>
        </member>
        <member name="F:StreamCoders.Onvif.Ptz.PTZPresetTourState.Extended">
            <remarks/>
        </member>
        <member name="T:StreamCoders.Onvif.Ptz.PresetTour">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Ptz.PresetTour.Name">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Ptz.PresetTour.Status">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Ptz.PresetTour.AutoStart">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Ptz.PresetTour.StartingCondition">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Ptz.PresetTour.TourSpot">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Ptz.PresetTour.Extension">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Ptz.PresetTour.token">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Ptz.PresetTour.AnyAttr">
            <remarks/>
        </member>
        <member name="T:StreamCoders.Onvif.Ptz.PTZMoveStatus">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Ptz.PTZMoveStatus.PanTilt">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Ptz.PTZMoveStatus.PanTiltSpecified">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Ptz.PTZMoveStatus.Zoom">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Ptz.PTZMoveStatus.ZoomSpecified">
            <remarks/>
        </member>
        <member name="T:StreamCoders.Onvif.Ptz.MoveStatus">
            <remarks/>
        </member>
        <member name="F:StreamCoders.Onvif.Ptz.MoveStatus.IDLE">
            <remarks/>
        </member>
        <member name="F:StreamCoders.Onvif.Ptz.MoveStatus.MOVING">
            <remarks/>
        </member>
        <member name="F:StreamCoders.Onvif.Ptz.MoveStatus.UNKNOWN">
            <remarks/>
        </member>
        <member name="T:StreamCoders.Onvif.Ptz.PTZStatus">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Ptz.PTZStatus.Position">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Ptz.PTZStatus.MoveStatus">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Ptz.PTZStatus.Error">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Ptz.PTZStatus.UtcTime">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Ptz.PTZStatus.Any">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Ptz.PTZStatus.AnyAttr">
            <remarks/>
        </member>
        <member name="T:StreamCoders.Onvif.Ptz.PTZPreset">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Ptz.PTZPreset.Name">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Ptz.PTZPreset.PTZPosition">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Ptz.PTZPreset.token">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Ptz.PTZPreset.AnyAttr">
            <remarks/>
        </member>
        <member name="T:StreamCoders.Onvif.Ptz.PTZConfigurationOptions2">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Ptz.PTZConfigurationOptions2.Any">
            <remarks/>
        </member>
        <member name="T:StreamCoders.Onvif.Ptz.PTControlDirectionOptionsExtension">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Ptz.PTControlDirectionOptionsExtension.Any">
            <remarks/>
        </member>
        <member name="T:StreamCoders.Onvif.Ptz.ReverseOptionsExtension">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Ptz.ReverseOptionsExtension.Any">
            <remarks/>
        </member>
        <member name="T:StreamCoders.Onvif.Ptz.ReverseOptions">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Ptz.ReverseOptions.Mode">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Ptz.ReverseOptions.Extension">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Ptz.ReverseOptions.AnyAttr">
            <remarks/>
        </member>
        <member name="T:StreamCoders.Onvif.Ptz.ReverseMode">
            <remarks/>
        </member>
        <member name="F:StreamCoders.Onvif.Ptz.ReverseMode.OFF">
            <remarks/>
        </member>
        <member name="F:StreamCoders.Onvif.Ptz.ReverseMode.ON">
            <remarks/>
        </member>
        <member name="F:StreamCoders.Onvif.Ptz.ReverseMode.AUTO">
            <remarks/>
        </member>
        <member name="F:StreamCoders.Onvif.Ptz.ReverseMode.Extended">
            <remarks/>
        </member>
        <member name="T:StreamCoders.Onvif.Ptz.EFlipOptionsExtension">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Ptz.EFlipOptionsExtension.Any">
            <remarks/>
        </member>
        <member name="T:StreamCoders.Onvif.Ptz.EFlipOptions">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Ptz.EFlipOptions.Mode">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Ptz.EFlipOptions.Extension">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Ptz.EFlipOptions.AnyAttr">
            <remarks/>
        </member>
        <member name="T:StreamCoders.Onvif.Ptz.EFlipMode">
            <remarks/>
        </member>
        <member name="F:StreamCoders.Onvif.Ptz.EFlipMode.OFF">
            <remarks/>
        </member>
        <member name="F:StreamCoders.Onvif.Ptz.EFlipMode.ON">
            <remarks/>
        </member>
        <member name="F:StreamCoders.Onvif.Ptz.EFlipMode.Extended">
            <remarks/>
        </member>
        <member name="T:StreamCoders.Onvif.Ptz.PTControlDirectionOptions">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Ptz.PTControlDirectionOptions.EFlip">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Ptz.PTControlDirectionOptions.Reverse">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Ptz.PTControlDirectionOptions.Extension">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Ptz.PTControlDirectionOptions.AnyAttr">
            <remarks/>
        </member>
        <member name="T:StreamCoders.Onvif.Ptz.PTZConfigurationOptions">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Ptz.PTZConfigurationOptions.Spaces">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Ptz.PTZConfigurationOptions.PTZTimeout">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Ptz.PTZConfigurationOptions.Any">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Ptz.PTZConfigurationOptions.PTControlDirection">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Ptz.PTZConfigurationOptions.Extension">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Ptz.PTZConfigurationOptions.PTZRamps">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Ptz.PTZConfigurationOptions.AnyAttr">
            <remarks/>
        </member>
        <member name="T:StreamCoders.Onvif.Ptz.PTZSpaces">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Ptz.PTZSpaces.AbsolutePanTiltPositionSpace">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Ptz.PTZSpaces.AbsoluteZoomPositionSpace">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Ptz.PTZSpaces.RelativePanTiltTranslationSpace">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Ptz.PTZSpaces.RelativeZoomTranslationSpace">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Ptz.PTZSpaces.ContinuousPanTiltVelocitySpace">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Ptz.PTZSpaces.ContinuousZoomVelocitySpace">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Ptz.PTZSpaces.PanTiltSpeedSpace">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Ptz.PTZSpaces.ZoomSpeedSpace">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Ptz.PTZSpaces.Extension">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Ptz.PTZSpaces.AnyAttr">
            <remarks/>
        </member>
        <member name="T:StreamCoders.Onvif.Ptz.PTZSpacesExtension">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Ptz.PTZSpacesExtension.Any">
            <remarks/>
        </member>
        <member name="T:StreamCoders.Onvif.Ptz.MetadataInputExtension">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Ptz.MetadataInputExtension.Any">
            <remarks/>
        </member>
        <member name="T:StreamCoders.Onvif.Ptz.MetadataInput">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Ptz.MetadataInput.MetadataConfig">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Ptz.MetadataInput.Extension">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Ptz.MetadataInput.AnyAttr">
            <remarks/>
        </member>
        <member name="T:StreamCoders.Onvif.Ptz.Config">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Ptz.Config.Parameters">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Ptz.Config.Name">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Ptz.Config.Type">
            <remarks/>
        </member>
        <member name="T:StreamCoders.Onvif.Ptz.ItemList">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Ptz.ItemList.SimpleItem">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Ptz.ItemList.ElementItem">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Ptz.ItemList.Extension">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Ptz.ItemList.AnyAttr">
            <remarks/>
        </member>
        <member name="T:StreamCoders.Onvif.Ptz.ItemListSimpleItem">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Ptz.ItemListSimpleItem.Name">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Ptz.ItemListSimpleItem.Value">
            <remarks/>
        </member>
        <member name="T:StreamCoders.Onvif.Ptz.ItemListElementItem">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Ptz.ItemListElementItem.Any">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Ptz.ItemListElementItem.Name">
            <remarks/>
        </member>
        <member name="T:StreamCoders.Onvif.Ptz.ItemListExtension">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Ptz.ItemListExtension.Any">
            <remarks/>
        </member>
        <member name="T:StreamCoders.Onvif.Ptz.SourceIdentificationExtension">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Ptz.SourceIdentificationExtension.Any">
            <remarks/>
        </member>
        <member name="T:StreamCoders.Onvif.Ptz.SourceIdentification">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Ptz.SourceIdentification.Name">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Ptz.SourceIdentification.Token">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Ptz.SourceIdentification.Extension">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Ptz.SourceIdentification.AnyAttr">
            <remarks/>
        </member>
        <member name="T:StreamCoders.Onvif.Ptz.AnalyticsDeviceEngineConfigurationExtension">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Ptz.AnalyticsDeviceEngineConfigurationExtension.Any">
            <remarks/>
        </member>
        <member name="T:StreamCoders.Onvif.Ptz.AnalyticsEngineInputInfoExtension">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Ptz.AnalyticsEngineInputInfoExtension.Any">
            <remarks/>
        </member>
        <member name="T:StreamCoders.Onvif.Ptz.AnalyticsEngineInputInfo">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Ptz.AnalyticsEngineInputInfo.InputInfo">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Ptz.AnalyticsEngineInputInfo.Extension">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Ptz.AnalyticsEngineInputInfo.AnyAttr">
            <remarks/>
        </member>
        <member name="T:StreamCoders.Onvif.Ptz.EngineConfiguration">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Ptz.EngineConfiguration.VideoAnalyticsConfiguration">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Ptz.EngineConfiguration.AnalyticsEngineInputInfo">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Ptz.EngineConfiguration.Any">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Ptz.EngineConfiguration.AnyAttr">
            <remarks/>
        </member>
        <member name="T:StreamCoders.Onvif.Ptz.VideoAnalyticsConfiguration">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Ptz.VideoAnalyticsConfiguration.AnalyticsEngineConfiguration">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Ptz.VideoAnalyticsConfiguration.RuleEngineConfiguration">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Ptz.VideoAnalyticsConfiguration.Any">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Ptz.VideoAnalyticsConfiguration.AnyAttr">
            <remarks/>
        </member>
        <member name="T:StreamCoders.Onvif.Ptz.AnalyticsEngineConfiguration">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Ptz.AnalyticsEngineConfiguration.AnalyticsModule">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Ptz.AnalyticsEngineConfiguration.Extension">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Ptz.AnalyticsEngineConfiguration.AnyAttr">
            <remarks/>
        </member>
        <member name="T:StreamCoders.Onvif.Ptz.AnalyticsEngineConfigurationExtension">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Ptz.AnalyticsEngineConfigurationExtension.Any">
            <remarks/>
        </member>
        <member name="T:StreamCoders.Onvif.Ptz.RuleEngineConfiguration">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Ptz.RuleEngineConfiguration.Rule">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Ptz.RuleEngineConfiguration.Extension">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Ptz.RuleEngineConfiguration.AnyAttr">
            <remarks/>
        </member>
        <member name="T:StreamCoders.Onvif.Ptz.RuleEngineConfigurationExtension">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Ptz.RuleEngineConfigurationExtension.Any">
            <remarks/>
        </member>
        <member name="T:StreamCoders.Onvif.Ptz.ConfigurationEntity">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Ptz.ConfigurationEntity.Name">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Ptz.ConfigurationEntity.UseCount">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Ptz.ConfigurationEntity.token">
            <remarks/>
        </member>
        <member name="T:StreamCoders.Onvif.Ptz.AnalyticsEngineControl">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Ptz.AnalyticsEngineControl.EngineToken">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Ptz.AnalyticsEngineControl.EngineConfigToken">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Ptz.AnalyticsEngineControl.InputToken">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Ptz.AnalyticsEngineControl.ReceiverToken">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Ptz.AnalyticsEngineControl.Multicast">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Ptz.AnalyticsEngineControl.Subscription">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Ptz.AnalyticsEngineControl.Mode">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Ptz.AnalyticsEngineControl.Any">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Ptz.AnalyticsEngineControl.AnyAttr">
            <remarks/>
        </member>
        <member name="T:StreamCoders.Onvif.Ptz.MulticastConfiguration">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Ptz.MulticastConfiguration.Address">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Ptz.MulticastConfiguration.Port">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Ptz.MulticastConfiguration.TTL">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Ptz.MulticastConfiguration.AutoStart">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Ptz.MulticastConfiguration.Any">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Ptz.MulticastConfiguration.AnyAttr">
            <remarks/>
        </member>
        <member name="T:StreamCoders.Onvif.Ptz.IPAddress">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Ptz.IPAddress.Type">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Ptz.IPAddress.IPv4Address">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Ptz.IPAddress.IPv6Address">
            <remarks/>
        </member>
        <member name="T:StreamCoders.Onvif.Ptz.IPType">
            <remarks/>
        </member>
        <member name="F:StreamCoders.Onvif.Ptz.IPType.IPv4">
            <remarks/>
        </member>
        <member name="F:StreamCoders.Onvif.Ptz.IPType.IPv6">
            <remarks/>
        </member>
        <member name="T:StreamCoders.Onvif.Ptz.ModeOfOperation">
            <remarks/>
        </member>
        <member name="F:StreamCoders.Onvif.Ptz.ModeOfOperation.Idle">
            <remarks/>
        </member>
        <member name="F:StreamCoders.Onvif.Ptz.ModeOfOperation.Active">
            <remarks/>
        </member>
        <member name="F:StreamCoders.Onvif.Ptz.ModeOfOperation.Unknown">
            <remarks/>
        </member>
        <member name="T:StreamCoders.Onvif.Ptz.AnalyticsEngineInput">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Ptz.AnalyticsEngineInput.SourceIdentification">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Ptz.AnalyticsEngineInput.VideoInput">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Ptz.AnalyticsEngineInput.MetadataInput">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Ptz.AnalyticsEngineInput.Any">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Ptz.AnalyticsEngineInput.AnyAttr">
            <remarks/>
        </member>
        <member name="T:StreamCoders.Onvif.Ptz.VideoEncoderConfiguration">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Ptz.VideoEncoderConfiguration.Encoding">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Ptz.VideoEncoderConfiguration.Resolution">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Ptz.VideoEncoderConfiguration.Quality">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Ptz.VideoEncoderConfiguration.RateControl">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Ptz.VideoEncoderConfiguration.MPEG4">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Ptz.VideoEncoderConfiguration.H264">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Ptz.VideoEncoderConfiguration.Multicast">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Ptz.VideoEncoderConfiguration.SessionTimeout">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Ptz.VideoEncoderConfiguration.Any">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Ptz.VideoEncoderConfiguration.AnyAttr">
            <remarks/>
        </member>
        <member name="T:StreamCoders.Onvif.Ptz.VideoEncoding">
            <remarks/>
        </member>
        <member name="F:StreamCoders.Onvif.Ptz.VideoEncoding.JPEG">
            <remarks/>
        </member>
        <member name="F:StreamCoders.Onvif.Ptz.VideoEncoding.MPEG4">
            <remarks/>
        </member>
        <member name="F:StreamCoders.Onvif.Ptz.VideoEncoding.H264">
            <remarks/>
        </member>
        <member name="T:StreamCoders.Onvif.Ptz.VideoResolution">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Ptz.VideoResolution.Width">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Ptz.VideoResolution.Height">
            <remarks/>
        </member>
        <member name="T:StreamCoders.Onvif.Ptz.VideoRateControl">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Ptz.VideoRateControl.FrameRateLimit">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Ptz.VideoRateControl.EncodingInterval">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Ptz.VideoRateControl.BitrateLimit">
            <remarks/>
        </member>
        <member name="T:StreamCoders.Onvif.Ptz.Mpeg4Configuration">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Ptz.Mpeg4Configuration.GovLength">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Ptz.Mpeg4Configuration.Mpeg4Profile">
            <remarks/>
        </member>
        <member name="T:StreamCoders.Onvif.Ptz.Mpeg4Profile">
            <remarks/>
        </member>
        <member name="F:StreamCoders.Onvif.Ptz.Mpeg4Profile.SP">
            <remarks/>
        </member>
        <member name="F:StreamCoders.Onvif.Ptz.Mpeg4Profile.ASP">
            <remarks/>
        </member>
        <member name="T:StreamCoders.Onvif.Ptz.H264Configuration">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Ptz.H264Configuration.GovLength">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Ptz.H264Configuration.H264Profile">
            <remarks/>
        </member>
        <member name="T:StreamCoders.Onvif.Ptz.H264Profile">
            <remarks/>
        </member>
        <member name="F:StreamCoders.Onvif.Ptz.H264Profile.Baseline">
            <remarks/>
        </member>
        <member name="F:StreamCoders.Onvif.Ptz.H264Profile.Main">
            <remarks/>
        </member>
        <member name="F:StreamCoders.Onvif.Ptz.H264Profile.Extended">
            <remarks/>
        </member>
        <member name="F:StreamCoders.Onvif.Ptz.H264Profile.High">
            <remarks/>
        </member>
        <member name="T:StreamCoders.Onvif.Ptz.AnalyticsEngine">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Ptz.AnalyticsEngine.AnalyticsEngineConfiguration">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Ptz.AnalyticsEngine.Any">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Ptz.AnalyticsEngine.AnyAttr">
            <remarks/>
        </member>
        <member name="T:StreamCoders.Onvif.Ptz.AnalyticsDeviceEngineConfiguration">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Ptz.AnalyticsDeviceEngineConfiguration.EngineConfiguration">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Ptz.AnalyticsDeviceEngineConfiguration.Extension">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Ptz.AnalyticsDeviceEngineConfiguration.AnyAttr">
            <remarks/>
        </member>
        <member name="T:StreamCoders.Onvif.Ptz.PTZConfiguration">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Ptz.PTZConfiguration.NodeToken">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Ptz.PTZConfiguration.DefaultAbsolutePantTiltPositionSpace">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Ptz.PTZConfiguration.DefaultAbsoluteZoomPositionSpace">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Ptz.PTZConfiguration.DefaultRelativePanTiltTranslationSpace">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Ptz.PTZConfiguration.DefaultRelativeZoomTranslationSpace">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Ptz.PTZConfiguration.DefaultContinuousPanTiltVelocitySpace">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Ptz.PTZConfiguration.DefaultContinuousZoomVelocitySpace">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Ptz.PTZConfiguration.DefaultPTZSpeed">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Ptz.PTZConfiguration.DefaultPTZTimeout">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Ptz.PTZConfiguration.PanTiltLimits">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Ptz.PTZConfiguration.ZoomLimits">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Ptz.PTZConfiguration.Extension">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Ptz.PTZConfiguration.MoveRamp">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Ptz.PTZConfiguration.MoveRampSpecified">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Ptz.PTZConfiguration.PresetRamp">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Ptz.PTZConfiguration.PresetRampSpecified">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Ptz.PTZConfiguration.PresetTourRamp">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Ptz.PTZConfiguration.PresetTourRampSpecified">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Ptz.PTZConfiguration.AnyAttr">
            <remarks/>
        </member>
        <member name="T:StreamCoders.Onvif.Ptz.PanTiltLimits">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Ptz.PanTiltLimits.Range">
            <remarks/>
        </member>
        <member name="T:StreamCoders.Onvif.Ptz.ZoomLimits">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Ptz.ZoomLimits.Range">
            <remarks/>
        </member>
        <member name="T:StreamCoders.Onvif.Ptz.PTZConfigurationExtension">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Ptz.PTZConfigurationExtension.Any">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Ptz.PTZConfigurationExtension.PTControlDirection">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Ptz.PTZConfigurationExtension.Extension">
            <remarks/>
        </member>
        <member name="T:StreamCoders.Onvif.Ptz.PTControlDirection">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Ptz.PTControlDirection.EFlip">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Ptz.PTControlDirection.Reverse">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Ptz.PTControlDirection.Extension">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Ptz.PTControlDirection.AnyAttr">
            <remarks/>
        </member>
        <member name="T:StreamCoders.Onvif.Ptz.EFlip">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Ptz.EFlip.Mode">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Ptz.EFlip.Any">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Ptz.EFlip.AnyAttr">
            <remarks/>
        </member>
        <member name="T:StreamCoders.Onvif.Ptz.Reverse">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Ptz.Reverse.Mode">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Ptz.Reverse.Any">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Ptz.Reverse.AnyAttr">
            <remarks/>
        </member>
        <member name="T:StreamCoders.Onvif.Ptz.PTControlDirectionExtension">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Ptz.PTControlDirectionExtension.Any">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Ptz.PTControlDirectionExtension.AnyAttr">
            <remarks/>
        </member>
        <member name="T:StreamCoders.Onvif.Ptz.PTZConfigurationExtension2">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Ptz.PTZConfigurationExtension2.Any">
            <remarks/>
        </member>
        <member name="T:StreamCoders.Onvif.Ptz.AudioDecoderConfiguration">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Ptz.AudioDecoderConfiguration.Any">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Ptz.AudioDecoderConfiguration.AnyAttr">
            <remarks/>
        </member>
        <member name="T:StreamCoders.Onvif.Ptz.AudioOutputConfiguration">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Ptz.AudioOutputConfiguration.OutputToken">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Ptz.AudioOutputConfiguration.SendPrimacy">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Ptz.AudioOutputConfiguration.OutputLevel">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Ptz.AudioOutputConfiguration.Any">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Ptz.AudioOutputConfiguration.AnyAttr">
            <remarks/>
        </member>
        <member name="T:StreamCoders.Onvif.Ptz.VideoOutputConfiguration">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Ptz.VideoOutputConfiguration.OutputToken">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Ptz.VideoOutputConfiguration.Any">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Ptz.VideoOutputConfiguration.AnyAttr">
            <remarks/>
        </member>
        <member name="T:StreamCoders.Onvif.Ptz.MetadataConfiguration">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Ptz.MetadataConfiguration.PTZStatus">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Ptz.MetadataConfiguration.Events">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Ptz.MetadataConfiguration.Analytics">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Ptz.MetadataConfiguration.AnalyticsSpecified">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Ptz.MetadataConfiguration.Multicast">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Ptz.MetadataConfiguration.SessionTimeout">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Ptz.MetadataConfiguration.Any">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Ptz.MetadataConfiguration.AnalyticsEngineConfiguration">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Ptz.MetadataConfiguration.Extension">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Ptz.MetadataConfiguration.CompressionType">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Ptz.MetadataConfiguration.AnyAttr">
            <remarks/>
        </member>
        <member name="T:StreamCoders.Onvif.Ptz.PTZFilter">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Ptz.PTZFilter.Status">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Ptz.PTZFilter.Position">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Ptz.PTZFilter.AnyAttr">
            <remarks/>
        </member>
        <member name="T:StreamCoders.Onvif.Ptz.EventSubscription">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Ptz.EventSubscription.Filter">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Ptz.EventSubscription.SubscriptionPolicy">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Ptz.EventSubscription.Any">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Ptz.EventSubscription.AnyAttr">
            <remarks/>
        </member>
        <member name="T:StreamCoders.Onvif.Ptz.FilterType">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Ptz.FilterType.Any">
            <remarks/>
        </member>
        <member name="T:StreamCoders.Onvif.Ptz.EventFilter">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Ptz.EventFilter.AnyAttr">
            <remarks/>
        </member>
        <member name="T:StreamCoders.Onvif.Ptz.EventSubscriptionSubscriptionPolicy">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Ptz.EventSubscriptionSubscriptionPolicy.Any">
            <remarks/>
        </member>
        <member name="T:StreamCoders.Onvif.Ptz.MetadataConfigurationExtension">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Ptz.MetadataConfigurationExtension.Any">
            <remarks/>
        </member>
        <member name="T:StreamCoders.Onvif.Ptz.AudioEncoder2Configuration">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Ptz.AudioEncoder2Configuration.Encoding">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Ptz.AudioEncoder2Configuration.Multicast">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Ptz.AudioEncoder2Configuration.Bitrate">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Ptz.AudioEncoder2Configuration.SampleRate">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Ptz.AudioEncoder2Configuration.Any">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Ptz.AudioEncoder2Configuration.AnyAttr">
            <remarks/>
        </member>
        <member name="T:StreamCoders.Onvif.Ptz.AudioEncoderConfiguration">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Ptz.AudioEncoderConfiguration.Encoding">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Ptz.AudioEncoderConfiguration.Bitrate">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Ptz.AudioEncoderConfiguration.SampleRate">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Ptz.AudioEncoderConfiguration.Multicast">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Ptz.AudioEncoderConfiguration.SessionTimeout">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Ptz.AudioEncoderConfiguration.Any">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Ptz.AudioEncoderConfiguration.AnyAttr">
            <remarks/>
        </member>
        <member name="T:StreamCoders.Onvif.Ptz.AudioEncoding">
            <remarks/>
        </member>
        <member name="F:StreamCoders.Onvif.Ptz.AudioEncoding.G711">
            <remarks/>
        </member>
        <member name="F:StreamCoders.Onvif.Ptz.AudioEncoding.G726">
            <remarks/>
        </member>
        <member name="F:StreamCoders.Onvif.Ptz.AudioEncoding.AAC">
            <remarks/>
        </member>
        <member name="T:StreamCoders.Onvif.Ptz.AudioSourceConfiguration">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Ptz.AudioSourceConfiguration.SourceToken">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Ptz.AudioSourceConfiguration.Any">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Ptz.AudioSourceConfiguration.AnyAttr">
            <remarks/>
        </member>
        <member name="T:StreamCoders.Onvif.Ptz.VideoEncoder2Configuration">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Ptz.VideoEncoder2Configuration.Encoding">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Ptz.VideoEncoder2Configuration.Resolution">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Ptz.VideoEncoder2Configuration.RateControl">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Ptz.VideoEncoder2Configuration.Multicast">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Ptz.VideoEncoder2Configuration.Quality">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Ptz.VideoEncoder2Configuration.Any">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Ptz.VideoEncoder2Configuration.GovLength">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Ptz.VideoEncoder2Configuration.GovLengthSpecified">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Ptz.VideoEncoder2Configuration.Profile">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Ptz.VideoEncoder2Configuration.AnyAttr">
            <remarks/>
        </member>
        <member name="T:StreamCoders.Onvif.Ptz.VideoResolution2">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Ptz.VideoResolution2.Width">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Ptz.VideoResolution2.Height">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Ptz.VideoResolution2.Any">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Ptz.VideoResolution2.AnyAttr">
            <remarks/>
        </member>
        <member name="T:StreamCoders.Onvif.Ptz.VideoRateControl2">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Ptz.VideoRateControl2.FrameRateLimit">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Ptz.VideoRateControl2.BitrateLimit">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Ptz.VideoRateControl2.Any">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Ptz.VideoRateControl2.ConstantBitRate">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Ptz.VideoRateControl2.ConstantBitRateSpecified">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Ptz.VideoRateControl2.AnyAttr">
            <remarks/>
        </member>
        <member name="T:StreamCoders.Onvif.Ptz.VideoSourceConfiguration">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Ptz.VideoSourceConfiguration.SourceToken">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Ptz.VideoSourceConfiguration.Bounds">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Ptz.VideoSourceConfiguration.Any">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Ptz.VideoSourceConfiguration.Extension">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Ptz.VideoSourceConfiguration.AnyAttr">
            <remarks/>
        </member>
        <member name="T:StreamCoders.Onvif.Ptz.IntRectangle">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Ptz.IntRectangle.x">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Ptz.IntRectangle.y">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Ptz.IntRectangle.width">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Ptz.IntRectangle.height">
            <remarks/>
        </member>
        <member name="T:StreamCoders.Onvif.Ptz.VideoSourceConfigurationExtension">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Ptz.VideoSourceConfigurationExtension.Rotate">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Ptz.VideoSourceConfigurationExtension.Extension">
            <remarks/>
        </member>
        <member name="T:StreamCoders.Onvif.Ptz.Rotate">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Ptz.Rotate.Mode">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Ptz.Rotate.Degree">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Ptz.Rotate.DegreeSpecified">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Ptz.Rotate.Extension">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Ptz.Rotate.AnyAttr">
            <remarks/>
        </member>
        <member name="T:StreamCoders.Onvif.Ptz.RotateMode">
            <remarks/>
        </member>
        <member name="F:StreamCoders.Onvif.Ptz.RotateMode.OFF">
            <remarks/>
        </member>
        <member name="F:StreamCoders.Onvif.Ptz.RotateMode.ON">
            <remarks/>
        </member>
        <member name="F:StreamCoders.Onvif.Ptz.RotateMode.AUTO">
            <remarks/>
        </member>
        <member name="T:StreamCoders.Onvif.Ptz.RotateExtension">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Ptz.RotateExtension.Any">
            <remarks/>
        </member>
        <member name="T:StreamCoders.Onvif.Ptz.VideoSourceConfigurationExtension2">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Ptz.VideoSourceConfigurationExtension2.LensDescription">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Ptz.VideoSourceConfigurationExtension2.SceneOrientation">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Ptz.VideoSourceConfigurationExtension2.Any">
            <remarks/>
        </member>
        <member name="T:StreamCoders.Onvif.Ptz.LensDescription">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Ptz.LensDescription.Offset">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Ptz.LensDescription.Projection">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Ptz.LensDescription.XFactor">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Ptz.LensDescription.Any">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Ptz.LensDescription.FocalLength">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Ptz.LensDescription.FocalLengthSpecified">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Ptz.LensDescription.AnyAttr">
            <remarks/>
        </member>
        <member name="T:StreamCoders.Onvif.Ptz.LensOffset">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Ptz.LensOffset.x">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Ptz.LensOffset.xSpecified">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Ptz.LensOffset.y">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Ptz.LensOffset.ySpecified">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Ptz.LensOffset.AnyAttr">
            <remarks/>
        </member>
        <member name="T:StreamCoders.Onvif.Ptz.LensProjection">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Ptz.LensProjection.Angle">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Ptz.LensProjection.Radius">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Ptz.LensProjection.Transmittance">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Ptz.LensProjection.TransmittanceSpecified">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Ptz.LensProjection.Any">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Ptz.LensProjection.AnyAttr">
            <remarks/>
        </member>
        <member name="T:StreamCoders.Onvif.Ptz.SceneOrientation">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Ptz.SceneOrientation.Mode">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Ptz.SceneOrientation.Orientation">
            <remarks/>
        </member>
        <member name="T:StreamCoders.Onvif.Ptz.SceneOrientationMode">
            <remarks/>
        </member>
        <member name="F:StreamCoders.Onvif.Ptz.SceneOrientationMode.MANUAL">
            <remarks/>
        </member>
        <member name="F:StreamCoders.Onvif.Ptz.SceneOrientationMode.AUTO">
            <remarks/>
        </member>
        <member name="T:StreamCoders.Onvif.Ptz.OSDConfigurationExtension">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Ptz.OSDConfigurationExtension.Any">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Ptz.OSDConfigurationExtension.AnyAttr">
            <remarks/>
        </member>
        <member name="T:StreamCoders.Onvif.Ptz.OSDImgConfigurationExtension">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Ptz.OSDImgConfigurationExtension.Any">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Ptz.OSDImgConfigurationExtension.AnyAttr">
            <remarks/>
        </member>
        <member name="T:StreamCoders.Onvif.Ptz.OSDImgConfiguration">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Ptz.OSDImgConfiguration.ImgPath">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Ptz.OSDImgConfiguration.Extension">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Ptz.OSDImgConfiguration.AnyAttr">
            <remarks/>
        </member>
        <member name="T:StreamCoders.Onvif.Ptz.OSDTextConfigurationExtension">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Ptz.OSDTextConfigurationExtension.Any">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Ptz.OSDTextConfigurationExtension.AnyAttr">
            <remarks/>
        </member>
        <member name="T:StreamCoders.Onvif.Ptz.Color">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Ptz.Color.X">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Ptz.Color.Y">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Ptz.Color.Z">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Ptz.Color.Colorspace">
            <remarks/>
        </member>
        <member name="T:StreamCoders.Onvif.Ptz.OSDColor">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Ptz.OSDColor.Color">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Ptz.OSDColor.Transparent">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Ptz.OSDColor.TransparentSpecified">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Ptz.OSDColor.AnyAttr">
            <remarks/>
        </member>
        <member name="T:StreamCoders.Onvif.Ptz.OSDTextConfiguration">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Ptz.OSDTextConfiguration.Type">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Ptz.OSDTextConfiguration.DateFormat">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Ptz.OSDTextConfiguration.TimeFormat">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Ptz.OSDTextConfiguration.FontSize">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Ptz.OSDTextConfiguration.FontSizeSpecified">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Ptz.OSDTextConfiguration.FontColor">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Ptz.OSDTextConfiguration.BackgroundColor">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Ptz.OSDTextConfiguration.PlainText">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Ptz.OSDTextConfiguration.Extension">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Ptz.OSDTextConfiguration.AnyAttr">
            <remarks/>
        </member>
        <member name="T:StreamCoders.Onvif.Ptz.OSDPosConfigurationExtension">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Ptz.OSDPosConfigurationExtension.Any">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Ptz.OSDPosConfigurationExtension.AnyAttr">
            <remarks/>
        </member>
        <member name="T:StreamCoders.Onvif.Ptz.Vector">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Ptz.Vector.x">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Ptz.Vector.xSpecified">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Ptz.Vector.y">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Ptz.Vector.ySpecified">
            <remarks/>
        </member>
        <member name="T:StreamCoders.Onvif.Ptz.OSDPosConfiguration">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Ptz.OSDPosConfiguration.Type">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Ptz.OSDPosConfiguration.Pos">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Ptz.OSDPosConfiguration.Extension">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Ptz.OSDPosConfiguration.AnyAttr">
            <remarks/>
        </member>
        <member name="T:StreamCoders.Onvif.Ptz.OSDReference">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Ptz.OSDReference.AnyAttr">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Ptz.OSDReference.Value">
            <remarks/>
        </member>
        <member name="T:StreamCoders.Onvif.Ptz.PTZNodeExtension2">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Ptz.PTZNodeExtension2.Any">
            <remarks/>
        </member>
        <member name="T:StreamCoders.Onvif.Ptz.PTZPresetTourSupportedExtension">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Ptz.PTZPresetTourSupportedExtension.Any">
            <remarks/>
        </member>
        <member name="T:StreamCoders.Onvif.Ptz.PTZPresetTourSupported">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Ptz.PTZPresetTourSupported.MaximumNumberOfPresetTours">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Ptz.PTZPresetTourSupported.PTZPresetTourOperation">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Ptz.PTZPresetTourSupported.Extension">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Ptz.PTZPresetTourSupported.AnyAttr">
            <remarks/>
        </member>
        <member name="T:StreamCoders.Onvif.Ptz.PTZPresetTourOperation">
            <remarks/>
        </member>
        <member name="F:StreamCoders.Onvif.Ptz.PTZPresetTourOperation.Start">
            <remarks/>
        </member>
        <member name="F:StreamCoders.Onvif.Ptz.PTZPresetTourOperation.Stop">
            <remarks/>
        </member>
        <member name="F:StreamCoders.Onvif.Ptz.PTZPresetTourOperation.Pause">
            <remarks/>
        </member>
        <member name="F:StreamCoders.Onvif.Ptz.PTZPresetTourOperation.Extended">
            <remarks/>
        </member>
        <member name="T:StreamCoders.Onvif.Ptz.PTZNodeExtension">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Ptz.PTZNodeExtension.Any">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Ptz.PTZNodeExtension.SupportedPresetTour">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Ptz.PTZNodeExtension.Extension">
            <remarks/>
        </member>
        <member name="T:StreamCoders.Onvif.Ptz.RelayOutputSettings">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Ptz.RelayOutputSettings.Mode">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Ptz.RelayOutputSettings.DelayTime">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Ptz.RelayOutputSettings.IdleState">
            <remarks/>
        </member>
        <member name="T:StreamCoders.Onvif.Ptz.RelayMode">
            <remarks/>
        </member>
        <member name="F:StreamCoders.Onvif.Ptz.RelayMode.Monostable">
            <remarks/>
        </member>
        <member name="F:StreamCoders.Onvif.Ptz.RelayMode.Bistable">
            <remarks/>
        </member>
        <member name="T:StreamCoders.Onvif.Ptz.RelayIdleState">
            <remarks/>
        </member>
        <member name="F:StreamCoders.Onvif.Ptz.RelayIdleState.closed">
            <remarks/>
        </member>
        <member name="F:StreamCoders.Onvif.Ptz.RelayIdleState.open">
            <remarks/>
        </member>
        <member name="T:StreamCoders.Onvif.Ptz.NetworkInterfaceExtension2">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Ptz.NetworkInterfaceExtension2.Any">
            <remarks/>
        </member>
        <member name="T:StreamCoders.Onvif.Ptz.Dot11SecurityConfigurationExtension">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Ptz.Dot11SecurityConfigurationExtension.Any">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Ptz.Dot11SecurityConfigurationExtension.AnyAttr">
            <remarks/>
        </member>
        <member name="T:StreamCoders.Onvif.Ptz.Dot11PSKSetExtension">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Ptz.Dot11PSKSetExtension.Any">
            <remarks/>
        </member>
        <member name="T:StreamCoders.Onvif.Ptz.Dot11PSKSet">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Ptz.Dot11PSKSet.Key">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Ptz.Dot11PSKSet.Passphrase">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Ptz.Dot11PSKSet.Extension">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Ptz.Dot11PSKSet.AnyAttr">
            <remarks/>
        </member>
        <member name="T:StreamCoders.Onvif.Ptz.Dot11SecurityConfiguration">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Ptz.Dot11SecurityConfiguration.Mode">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Ptz.Dot11SecurityConfiguration.Algorithm">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Ptz.Dot11SecurityConfiguration.AlgorithmSpecified">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Ptz.Dot11SecurityConfiguration.PSK">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Ptz.Dot11SecurityConfiguration.Dot1X">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Ptz.Dot11SecurityConfiguration.Extension">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Ptz.Dot11SecurityConfiguration.AnyAttr">
            <remarks/>
        </member>
        <member name="T:StreamCoders.Onvif.Ptz.Dot11SecurityMode">
            <remarks/>
        </member>
        <member name="F:StreamCoders.Onvif.Ptz.Dot11SecurityMode.None">
            <remarks/>
        </member>
        <member name="F:StreamCoders.Onvif.Ptz.Dot11SecurityMode.WEP">
            <remarks/>
        </member>
        <member name="F:StreamCoders.Onvif.Ptz.Dot11SecurityMode.PSK">
            <remarks/>
        </member>
        <member name="F:StreamCoders.Onvif.Ptz.Dot11SecurityMode.Dot1X">
            <remarks/>
        </member>
        <member name="F:StreamCoders.Onvif.Ptz.Dot11SecurityMode.Extended">
            <remarks/>
        </member>
        <member name="T:StreamCoders.Onvif.Ptz.Dot11Cipher">
            <remarks/>
        </member>
        <member name="F:StreamCoders.Onvif.Ptz.Dot11Cipher.CCMP">
            <remarks/>
        </member>
        <member name="F:StreamCoders.Onvif.Ptz.Dot11Cipher.TKIP">
            <remarks/>
        </member>
        <member name="F:StreamCoders.Onvif.Ptz.Dot11Cipher.Any">
            <remarks/>
        </member>
        <member name="F:StreamCoders.Onvif.Ptz.Dot11Cipher.Extended">
            <remarks/>
        </member>
        <member name="T:StreamCoders.Onvif.Ptz.Dot11Configuration">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Ptz.Dot11Configuration.SSID">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Ptz.Dot11Configuration.Mode">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Ptz.Dot11Configuration.Alias">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Ptz.Dot11Configuration.Priority">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Ptz.Dot11Configuration.Security">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Ptz.Dot11Configuration.Any">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Ptz.Dot11Configuration.AnyAttr">
            <remarks/>
        </member>
        <member name="T:StreamCoders.Onvif.Ptz.Dot11StationMode">
            <remarks/>
        </member>
        <member name="F:StreamCoders.Onvif.Ptz.Dot11StationMode.Adhoc">
            <remarks/>
        </member>
        <member name="F:StreamCoders.Onvif.Ptz.Dot11StationMode.Infrastructure">
            <remarks/>
        </member>
        <member name="F:StreamCoders.Onvif.Ptz.Dot11StationMode.Extended">
            <remarks/>
        </member>
        <member name="T:StreamCoders.Onvif.Ptz.Dot3Configuration">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Ptz.Dot3Configuration.Any">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Ptz.Dot3Configuration.AnyAttr">
            <remarks/>
        </member>
        <member name="T:StreamCoders.Onvif.Ptz.NetworkInterfaceExtension">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Ptz.NetworkInterfaceExtension.Any">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Ptz.NetworkInterfaceExtension.InterfaceType">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Ptz.NetworkInterfaceExtension.Dot3">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Ptz.NetworkInterfaceExtension.Dot11">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Ptz.NetworkInterfaceExtension.Extension">
            <remarks/>
        </member>
        <member name="T:StreamCoders.Onvif.Ptz.IPv6ConfigurationExtension">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Ptz.IPv6ConfigurationExtension.Any">
            <remarks/>
        </member>
        <member name="T:StreamCoders.Onvif.Ptz.PrefixedIPv6Address">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Ptz.PrefixedIPv6Address.Address">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Ptz.PrefixedIPv6Address.PrefixLength">
            <remarks/>
        </member>
        <member name="T:StreamCoders.Onvif.Ptz.IPv6Configuration">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Ptz.IPv6Configuration.AcceptRouterAdvert">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Ptz.IPv6Configuration.AcceptRouterAdvertSpecified">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Ptz.IPv6Configuration.DHCP">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Ptz.IPv6Configuration.Manual">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Ptz.IPv6Configuration.LinkLocal">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Ptz.IPv6Configuration.FromDHCP">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Ptz.IPv6Configuration.FromRA">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Ptz.IPv6Configuration.Extension">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Ptz.IPv6Configuration.AnyAttr">
            <remarks/>
        </member>
        <member name="T:StreamCoders.Onvif.Ptz.IPv6DHCPConfiguration">
            <remarks/>
        </member>
        <member name="F:StreamCoders.Onvif.Ptz.IPv6DHCPConfiguration.Auto">
            <remarks/>
        </member>
        <member name="F:StreamCoders.Onvif.Ptz.IPv6DHCPConfiguration.Stateful">
            <remarks/>
        </member>
        <member name="F:StreamCoders.Onvif.Ptz.IPv6DHCPConfiguration.Stateless">
            <remarks/>
        </member>
        <member name="F:StreamCoders.Onvif.Ptz.IPv6DHCPConfiguration.Off">
            <remarks/>
        </member>
        <member name="T:StreamCoders.Onvif.Ptz.IPv6NetworkInterface">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Ptz.IPv6NetworkInterface.Enabled">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Ptz.IPv6NetworkInterface.Config">
            <remarks/>
        </member>
        <member name="T:StreamCoders.Onvif.Ptz.PrefixedIPv4Address">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Ptz.PrefixedIPv4Address.Address">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Ptz.PrefixedIPv4Address.PrefixLength">
            <remarks/>
        </member>
        <member name="T:StreamCoders.Onvif.Ptz.IPv4Configuration">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Ptz.IPv4Configuration.Manual">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Ptz.IPv4Configuration.LinkLocal">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Ptz.IPv4Configuration.FromDHCP">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Ptz.IPv4Configuration.DHCP">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Ptz.IPv4Configuration.Any">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Ptz.IPv4Configuration.AnyAttr">
            <remarks/>
        </member>
        <member name="T:StreamCoders.Onvif.Ptz.IPv4NetworkInterface">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Ptz.IPv4NetworkInterface.Enabled">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Ptz.IPv4NetworkInterface.Config">
            <remarks/>
        </member>
        <member name="T:StreamCoders.Onvif.Ptz.NetworkInterfaceConnectionSetting">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Ptz.NetworkInterfaceConnectionSetting.AutoNegotiation">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Ptz.NetworkInterfaceConnectionSetting.Speed">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Ptz.NetworkInterfaceConnectionSetting.Duplex">
            <remarks/>
        </member>
        <member name="T:StreamCoders.Onvif.Ptz.Duplex">
            <remarks/>
        </member>
        <member name="F:StreamCoders.Onvif.Ptz.Duplex.Full">
            <remarks/>
        </member>
        <member name="F:StreamCoders.Onvif.Ptz.Duplex.Half">
            <remarks/>
        </member>
        <member name="T:StreamCoders.Onvif.Ptz.NetworkInterfaceLink">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Ptz.NetworkInterfaceLink.AdminSettings">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Ptz.NetworkInterfaceLink.OperSettings">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Ptz.NetworkInterfaceLink.InterfaceType">
            <remarks/>
        </member>
        <member name="T:StreamCoders.Onvif.Ptz.NetworkInterfaceInfo">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Ptz.NetworkInterfaceInfo.Name">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Ptz.NetworkInterfaceInfo.HwAddress">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Ptz.NetworkInterfaceInfo.MTU">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Ptz.NetworkInterfaceInfo.MTUSpecified">
            <remarks/>
        </member>
        <member name="T:StreamCoders.Onvif.Ptz.VideoOutputExtension">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Ptz.VideoOutputExtension.Any">
            <remarks/>
        </member>
        <member name="T:StreamCoders.Onvif.Ptz.LayoutExtension">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Ptz.LayoutExtension.Any">
            <remarks/>
        </member>
        <member name="T:StreamCoders.Onvif.Ptz.PaneLayout">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Ptz.PaneLayout.Pane">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Ptz.PaneLayout.Area">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Ptz.PaneLayout.Any">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Ptz.PaneLayout.AnyAttr">
            <remarks/>
        </member>
        <member name="T:StreamCoders.Onvif.Ptz.Rectangle">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Ptz.Rectangle.bottom">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Ptz.Rectangle.bottomSpecified">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Ptz.Rectangle.top">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Ptz.Rectangle.topSpecified">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Ptz.Rectangle.right">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Ptz.Rectangle.rightSpecified">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Ptz.Rectangle.left">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Ptz.Rectangle.leftSpecified">
            <remarks/>
        </member>
        <member name="T:StreamCoders.Onvif.Ptz.Layout">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Ptz.Layout.PaneLayout">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Ptz.Layout.Extension">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Ptz.Layout.AnyAttr">
            <remarks/>
        </member>
        <member name="T:StreamCoders.Onvif.Ptz.VideoSourceExtension2">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Ptz.VideoSourceExtension2.Any">
            <remarks/>
        </member>
        <member name="T:StreamCoders.Onvif.Ptz.ImagingSettingsExtension204">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Ptz.ImagingSettingsExtension204.Any">
            <remarks/>
        </member>
        <member name="T:StreamCoders.Onvif.Ptz.NoiseReduction">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Ptz.NoiseReduction.Level">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Ptz.NoiseReduction.Any">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Ptz.NoiseReduction.AnyAttr">
            <remarks/>
        </member>
        <member name="T:StreamCoders.Onvif.Ptz.DefoggingExtension">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Ptz.DefoggingExtension.Any">
            <remarks/>
        </member>
        <member name="T:StreamCoders.Onvif.Ptz.Defogging">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Ptz.Defogging.Mode">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Ptz.Defogging.Level">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Ptz.Defogging.LevelSpecified">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Ptz.Defogging.Extension">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Ptz.Defogging.AnyAttr">
            <remarks/>
        </member>
        <member name="T:StreamCoders.Onvif.Ptz.ToneCompensationExtension">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Ptz.ToneCompensationExtension.Any">
            <remarks/>
        </member>
        <member name="T:StreamCoders.Onvif.Ptz.ToneCompensation">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Ptz.ToneCompensation.Mode">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Ptz.ToneCompensation.Level">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Ptz.ToneCompensation.LevelSpecified">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Ptz.ToneCompensation.Extension">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Ptz.ToneCompensation.AnyAttr">
            <remarks/>
        </member>
        <member name="T:StreamCoders.Onvif.Ptz.ImagingSettingsExtension203">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Ptz.ImagingSettingsExtension203.ToneCompensation">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Ptz.ImagingSettingsExtension203.Defogging">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Ptz.ImagingSettingsExtension203.NoiseReduction">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Ptz.ImagingSettingsExtension203.Extension">
            <remarks/>
        </member>
        <member name="T:StreamCoders.Onvif.Ptz.IrCutFilterAutoAdjustmentExtension">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Ptz.IrCutFilterAutoAdjustmentExtension.Any">
            <remarks/>
        </member>
        <member name="T:StreamCoders.Onvif.Ptz.IrCutFilterAutoAdjustment">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Ptz.IrCutFilterAutoAdjustment.BoundaryType">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Ptz.IrCutFilterAutoAdjustment.BoundaryOffset">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Ptz.IrCutFilterAutoAdjustment.BoundaryOffsetSpecified">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Ptz.IrCutFilterAutoAdjustment.ResponseTime">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Ptz.IrCutFilterAutoAdjustment.Extension">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Ptz.IrCutFilterAutoAdjustment.AnyAttr">
            <remarks/>
        </member>
        <member name="T:StreamCoders.Onvif.Ptz.ImagingSettingsExtension202">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Ptz.ImagingSettingsExtension202.IrCutFilterAutoAdjustment">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Ptz.ImagingSettingsExtension202.Extension">
            <remarks/>
        </member>
        <member name="T:StreamCoders.Onvif.Ptz.ImageStabilizationExtension">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Ptz.ImageStabilizationExtension.Any">
            <remarks/>
        </member>
        <member name="T:StreamCoders.Onvif.Ptz.ImageStabilization">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Ptz.ImageStabilization.Mode">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Ptz.ImageStabilization.Level">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Ptz.ImageStabilization.LevelSpecified">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Ptz.ImageStabilization.Extension">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Ptz.ImageStabilization.AnyAttr">
            <remarks/>
        </member>
        <member name="T:StreamCoders.Onvif.Ptz.ImageStabilizationMode">
            <remarks/>
        </member>
        <member name="F:StreamCoders.Onvif.Ptz.ImageStabilizationMode.OFF">
            <remarks/>
        </member>
        <member name="F:StreamCoders.Onvif.Ptz.ImageStabilizationMode.ON">
            <remarks/>
        </member>
        <member name="F:StreamCoders.Onvif.Ptz.ImageStabilizationMode.AUTO">
            <remarks/>
        </member>
        <member name="F:StreamCoders.Onvif.Ptz.ImageStabilizationMode.Extended">
            <remarks/>
        </member>
        <member name="T:StreamCoders.Onvif.Ptz.ImagingSettingsExtension20">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Ptz.ImagingSettingsExtension20.Any">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Ptz.ImagingSettingsExtension20.ImageStabilization">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Ptz.ImagingSettingsExtension20.Extension">
            <remarks/>
        </member>
        <member name="T:StreamCoders.Onvif.Ptz.WhiteBalance20Extension">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Ptz.WhiteBalance20Extension.Any">
            <remarks/>
        </member>
        <member name="T:StreamCoders.Onvif.Ptz.WhiteBalance20">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Ptz.WhiteBalance20.Mode">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Ptz.WhiteBalance20.CrGain">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Ptz.WhiteBalance20.CrGainSpecified">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Ptz.WhiteBalance20.CbGain">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Ptz.WhiteBalance20.CbGainSpecified">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Ptz.WhiteBalance20.Extension">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Ptz.WhiteBalance20.AnyAttr">
            <remarks/>
        </member>
        <member name="T:StreamCoders.Onvif.Ptz.WhiteBalanceMode">
            <remarks/>
        </member>
        <member name="F:StreamCoders.Onvif.Ptz.WhiteBalanceMode.AUTO">
            <remarks/>
        </member>
        <member name="F:StreamCoders.Onvif.Ptz.WhiteBalanceMode.MANUAL">
            <remarks/>
        </member>
        <member name="T:StreamCoders.Onvif.Ptz.WideDynamicRange20">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Ptz.WideDynamicRange20.Mode">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Ptz.WideDynamicRange20.Level">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Ptz.WideDynamicRange20.LevelSpecified">
            <remarks/>
        </member>
        <member name="T:StreamCoders.Onvif.Ptz.WideDynamicMode">
            <remarks/>
        </member>
        <member name="F:StreamCoders.Onvif.Ptz.WideDynamicMode.OFF">
            <remarks/>
        </member>
        <member name="F:StreamCoders.Onvif.Ptz.WideDynamicMode.ON">
            <remarks/>
        </member>
        <member name="T:StreamCoders.Onvif.Ptz.FocusConfiguration20Extension">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Ptz.FocusConfiguration20Extension.Any">
            <remarks/>
        </member>
        <member name="T:StreamCoders.Onvif.Ptz.FocusConfiguration20">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Ptz.FocusConfiguration20.AutoFocusMode">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Ptz.FocusConfiguration20.DefaultSpeed">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Ptz.FocusConfiguration20.DefaultSpeedSpecified">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Ptz.FocusConfiguration20.NearLimit">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Ptz.FocusConfiguration20.NearLimitSpecified">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Ptz.FocusConfiguration20.FarLimit">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Ptz.FocusConfiguration20.FarLimitSpecified">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Ptz.FocusConfiguration20.Extension">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Ptz.FocusConfiguration20.AnyAttr">
            <remarks/>
        </member>
        <member name="T:StreamCoders.Onvif.Ptz.AutoFocusMode">
            <remarks/>
        </member>
        <member name="F:StreamCoders.Onvif.Ptz.AutoFocusMode.AUTO">
            <remarks/>
        </member>
        <member name="F:StreamCoders.Onvif.Ptz.AutoFocusMode.MANUAL">
            <remarks/>
        </member>
        <member name="T:StreamCoders.Onvif.Ptz.Exposure20">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Ptz.Exposure20.Mode">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Ptz.Exposure20.Priority">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Ptz.Exposure20.PrioritySpecified">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Ptz.Exposure20.Window">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Ptz.Exposure20.MinExposureTime">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Ptz.Exposure20.MinExposureTimeSpecified">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Ptz.Exposure20.MaxExposureTime">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Ptz.Exposure20.MaxExposureTimeSpecified">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Ptz.Exposure20.MinGain">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Ptz.Exposure20.MinGainSpecified">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Ptz.Exposure20.MaxGain">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Ptz.Exposure20.MaxGainSpecified">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Ptz.Exposure20.MinIris">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Ptz.Exposure20.MinIrisSpecified">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Ptz.Exposure20.MaxIris">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Ptz.Exposure20.MaxIrisSpecified">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Ptz.Exposure20.ExposureTime">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Ptz.Exposure20.ExposureTimeSpecified">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Ptz.Exposure20.Gain">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Ptz.Exposure20.GainSpecified">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Ptz.Exposure20.Iris">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Ptz.Exposure20.IrisSpecified">
            <remarks/>
        </member>
        <member name="T:StreamCoders.Onvif.Ptz.ExposureMode">
            <remarks/>
        </member>
        <member name="F:StreamCoders.Onvif.Ptz.ExposureMode.AUTO">
            <remarks/>
        </member>
        <member name="F:StreamCoders.Onvif.Ptz.ExposureMode.MANUAL">
            <remarks/>
        </member>
        <member name="T:StreamCoders.Onvif.Ptz.ExposurePriority">
            <remarks/>
        </member>
        <member name="F:StreamCoders.Onvif.Ptz.ExposurePriority.LowNoise">
            <remarks/>
        </member>
        <member name="F:StreamCoders.Onvif.Ptz.ExposurePriority.FrameRate">
            <remarks/>
        </member>
        <member name="T:StreamCoders.Onvif.Ptz.BacklightCompensation20">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Ptz.BacklightCompensation20.Mode">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Ptz.BacklightCompensation20.Level">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Ptz.BacklightCompensation20.LevelSpecified">
            <remarks/>
        </member>
        <member name="T:StreamCoders.Onvif.Ptz.BacklightCompensationMode">
            <remarks/>
        </member>
        <member name="F:StreamCoders.Onvif.Ptz.BacklightCompensationMode.OFF">
            <remarks/>
        </member>
        <member name="F:StreamCoders.Onvif.Ptz.BacklightCompensationMode.ON">
            <remarks/>
        </member>
        <member name="T:StreamCoders.Onvif.Ptz.ImagingSettings20">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Ptz.ImagingSettings20.BacklightCompensation">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Ptz.ImagingSettings20.Brightness">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Ptz.ImagingSettings20.BrightnessSpecified">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Ptz.ImagingSettings20.ColorSaturation">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Ptz.ImagingSettings20.ColorSaturationSpecified">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Ptz.ImagingSettings20.Contrast">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Ptz.ImagingSettings20.ContrastSpecified">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Ptz.ImagingSettings20.Exposure">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Ptz.ImagingSettings20.Focus">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Ptz.ImagingSettings20.IrCutFilter">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Ptz.ImagingSettings20.IrCutFilterSpecified">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Ptz.ImagingSettings20.Sharpness">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Ptz.ImagingSettings20.SharpnessSpecified">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Ptz.ImagingSettings20.WideDynamicRange">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Ptz.ImagingSettings20.WhiteBalance">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Ptz.ImagingSettings20.Extension">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Ptz.ImagingSettings20.AnyAttr">
            <remarks/>
        </member>
        <member name="T:StreamCoders.Onvif.Ptz.IrCutFilterMode">
            <remarks/>
        </member>
        <member name="F:StreamCoders.Onvif.Ptz.IrCutFilterMode.ON">
            <remarks/>
        </member>
        <member name="F:StreamCoders.Onvif.Ptz.IrCutFilterMode.OFF">
            <remarks/>
        </member>
        <member name="F:StreamCoders.Onvif.Ptz.IrCutFilterMode.AUTO">
            <remarks/>
        </member>
        <member name="T:StreamCoders.Onvif.Ptz.VideoSourceExtension">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Ptz.VideoSourceExtension.Any">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Ptz.VideoSourceExtension.Imaging">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Ptz.VideoSourceExtension.Extension">
            <remarks/>
        </member>
        <member name="T:StreamCoders.Onvif.Ptz.ImagingSettingsExtension">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Ptz.ImagingSettingsExtension.Any">
            <remarks/>
        </member>
        <member name="T:StreamCoders.Onvif.Ptz.WhiteBalance">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Ptz.WhiteBalance.Mode">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Ptz.WhiteBalance.CrGain">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Ptz.WhiteBalance.CbGain">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Ptz.WhiteBalance.Any">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Ptz.WhiteBalance.AnyAttr">
            <remarks/>
        </member>
        <member name="T:StreamCoders.Onvif.Ptz.WideDynamicRange">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Ptz.WideDynamicRange.Mode">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Ptz.WideDynamicRange.Level">
            <remarks/>
        </member>
        <member name="T:StreamCoders.Onvif.Ptz.FocusConfiguration">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Ptz.FocusConfiguration.AutoFocusMode">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Ptz.FocusConfiguration.DefaultSpeed">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Ptz.FocusConfiguration.NearLimit">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Ptz.FocusConfiguration.FarLimit">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Ptz.FocusConfiguration.Any">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Ptz.FocusConfiguration.AnyAttr">
            <remarks/>
        </member>
        <member name="T:StreamCoders.Onvif.Ptz.Exposure">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Ptz.Exposure.Mode">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Ptz.Exposure.Priority">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Ptz.Exposure.Window">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Ptz.Exposure.MinExposureTime">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Ptz.Exposure.MaxExposureTime">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Ptz.Exposure.MinGain">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Ptz.Exposure.MaxGain">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Ptz.Exposure.MinIris">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Ptz.Exposure.MaxIris">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Ptz.Exposure.ExposureTime">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Ptz.Exposure.Gain">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Ptz.Exposure.Iris">
            <remarks/>
        </member>
        <member name="T:StreamCoders.Onvif.Ptz.BacklightCompensation">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Ptz.BacklightCompensation.Mode">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Ptz.BacklightCompensation.Level">
            <remarks/>
        </member>
        <member name="T:StreamCoders.Onvif.Ptz.ImagingSettings">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Ptz.ImagingSettings.BacklightCompensation">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Ptz.ImagingSettings.Brightness">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Ptz.ImagingSettings.BrightnessSpecified">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Ptz.ImagingSettings.ColorSaturation">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Ptz.ImagingSettings.ColorSaturationSpecified">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Ptz.ImagingSettings.Contrast">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Ptz.ImagingSettings.ContrastSpecified">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Ptz.ImagingSettings.Exposure">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Ptz.ImagingSettings.Focus">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Ptz.ImagingSettings.IrCutFilter">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Ptz.ImagingSettings.IrCutFilterSpecified">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Ptz.ImagingSettings.Sharpness">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Ptz.ImagingSettings.SharpnessSpecified">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Ptz.ImagingSettings.WideDynamicRange">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Ptz.ImagingSettings.WhiteBalance">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Ptz.ImagingSettings.Extension">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Ptz.ImagingSettings.AnyAttr">
            <remarks/>
        </member>
        <member name="T:StreamCoders.Onvif.Ptz.DeviceEntity">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Ptz.DeviceEntity.token">
            <remarks/>
        </member>
        <member name="T:StreamCoders.Onvif.Ptz.OSDConfiguration">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Ptz.OSDConfiguration.VideoSourceConfigurationToken">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Ptz.OSDConfiguration.Type">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Ptz.OSDConfiguration.Position">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Ptz.OSDConfiguration.TextString">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Ptz.OSDConfiguration.Image">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Ptz.OSDConfiguration.Extension">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Ptz.OSDConfiguration.AnyAttr">
            <remarks/>
        </member>
        <member name="T:StreamCoders.Onvif.Ptz.OSDType">
            <remarks/>
        </member>
        <member name="F:StreamCoders.Onvif.Ptz.OSDType.Text">
            <remarks/>
        </member>
        <member name="F:StreamCoders.Onvif.Ptz.OSDType.Image">
            <remarks/>
        </member>
        <member name="F:StreamCoders.Onvif.Ptz.OSDType.Extended">
            <remarks/>
        </member>
        <member name="T:StreamCoders.Onvif.Ptz.PTZNode">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Ptz.PTZNode.Name">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Ptz.PTZNode.SupportedPTZSpaces">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Ptz.PTZNode.MaximumNumberOfPresets">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Ptz.PTZNode.HomeSupported">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Ptz.PTZNode.AuxiliaryCommands">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Ptz.PTZNode.Extension">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Ptz.PTZNode.FixedHomePosition">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Ptz.PTZNode.FixedHomePositionSpecified">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Ptz.PTZNode.AnyAttr">
            <remarks/>
        </member>
        <member name="T:StreamCoders.Onvif.Ptz.DigitalInput">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Ptz.DigitalInput.Any">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Ptz.DigitalInput.IdleState">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Ptz.DigitalInput.IdleStateSpecified">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Ptz.DigitalInput.AnyAttr">
            <remarks/>
        </member>
        <member name="T:StreamCoders.Onvif.Ptz.DigitalIdleState">
            <remarks/>
        </member>
        <member name="F:StreamCoders.Onvif.Ptz.DigitalIdleState.closed">
            <remarks/>
        </member>
        <member name="F:StreamCoders.Onvif.Ptz.DigitalIdleState.open">
            <remarks/>
        </member>
        <member name="T:StreamCoders.Onvif.Ptz.RelayOutput">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Ptz.RelayOutput.Properties">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Ptz.RelayOutput.Any">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Ptz.RelayOutput.AnyAttr">
            <remarks/>
        </member>
        <member name="T:StreamCoders.Onvif.Ptz.NetworkInterface">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Ptz.NetworkInterface.Enabled">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Ptz.NetworkInterface.Info">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Ptz.NetworkInterface.Link">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Ptz.NetworkInterface.IPv4">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Ptz.NetworkInterface.IPv6">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Ptz.NetworkInterface.Extension">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Ptz.NetworkInterface.AnyAttr">
            <remarks/>
        </member>
        <member name="T:StreamCoders.Onvif.Ptz.AudioOutput">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Ptz.AudioOutput.Any">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Ptz.AudioOutput.AnyAttr">
            <remarks/>
        </member>
        <member name="T:StreamCoders.Onvif.Ptz.VideoOutput">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Ptz.VideoOutput.Layout">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Ptz.VideoOutput.Resolution">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Ptz.VideoOutput.RefreshRate">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Ptz.VideoOutput.RefreshRateSpecified">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Ptz.VideoOutput.AspectRatio">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Ptz.VideoOutput.AspectRatioSpecified">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Ptz.VideoOutput.Extension">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Ptz.VideoOutput.AnyAttr">
            <remarks/>
        </member>
        <member name="T:StreamCoders.Onvif.Ptz.AudioSource">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Ptz.AudioSource.Channels">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Ptz.AudioSource.Any">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Ptz.AudioSource.AnyAttr">
            <remarks/>
        </member>
        <member name="T:StreamCoders.Onvif.Ptz.VideoSource">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Ptz.VideoSource.Framerate">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Ptz.VideoSource.Resolution">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Ptz.VideoSource.Imaging">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Ptz.VideoSource.Extension">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Ptz.VideoSource.AnyAttr">
            <remarks/>
        </member>
        <member name="T:StreamCoders.Onvif.Receiver.Capabilities">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Receiver.Capabilities.Any">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Receiver.Capabilities.RTP_Multicast">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Receiver.Capabilities.RTP_MulticastSpecified">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Receiver.Capabilities.RTP_TCP">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Receiver.Capabilities.RTP_TCPSpecified">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Receiver.Capabilities.RTP_RTSP_TCP">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Receiver.Capabilities.RTP_RTSP_TCPSpecified">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Receiver.Capabilities.SupportedReceivers">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Receiver.Capabilities.MaximumRTSPURILength">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Receiver.Capabilities.MaximumRTSPURILengthSpecified">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Receiver.Capabilities.AnyAttr">
            <remarks/>
        </member>
        <member name="T:StreamCoders.Onvif.Receiver.ReceiverStateInformation">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Receiver.ReceiverStateInformation.State">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Receiver.ReceiverStateInformation.AutoCreated">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Receiver.ReceiverStateInformation.Any">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Receiver.ReceiverStateInformation.AnyAttr">
            <remarks/>
        </member>
        <member name="T:StreamCoders.Onvif.Receiver.ReceiverState">
            <remarks/>
        </member>
        <member name="F:StreamCoders.Onvif.Receiver.ReceiverState.NotConnected">
            <remarks/>
        </member>
        <member name="F:StreamCoders.Onvif.Receiver.ReceiverState.Connecting">
            <remarks/>
        </member>
        <member name="F:StreamCoders.Onvif.Receiver.ReceiverState.Connected">
            <remarks/>
        </member>
        <member name="F:StreamCoders.Onvif.Receiver.ReceiverState.Unknown">
            <remarks/>
        </member>
        <member name="T:StreamCoders.Onvif.Receiver.Transport">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Receiver.Transport.Protocol">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Receiver.Transport.Tunnel">
            <remarks/>
        </member>
        <member name="T:StreamCoders.Onvif.Receiver.TransportProtocol">
            <remarks/>
        </member>
        <member name="F:StreamCoders.Onvif.Receiver.TransportProtocol.UDP">
            <remarks/>
        </member>
        <member name="F:StreamCoders.Onvif.Receiver.TransportProtocol.TCP">
            <remarks/>
        </member>
        <member name="F:StreamCoders.Onvif.Receiver.TransportProtocol.RTSP">
            <remarks/>
        </member>
        <member name="F:StreamCoders.Onvif.Receiver.TransportProtocol.HTTP">
            <remarks/>
        </member>
        <member name="T:StreamCoders.Onvif.Receiver.StreamSetup">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Receiver.StreamSetup.Stream">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Receiver.StreamSetup.Transport">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Receiver.StreamSetup.Any">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Receiver.StreamSetup.AnyAttr">
            <remarks/>
        </member>
        <member name="T:StreamCoders.Onvif.Receiver.StreamType">
            <remarks/>
        </member>
        <member name="F:StreamCoders.Onvif.Receiver.StreamType.RTPUnicast">
            <remarks/>
        </member>
        <member name="F:StreamCoders.Onvif.Receiver.StreamType.RTPMulticast">
            <remarks/>
        </member>
        <member name="T:StreamCoders.Onvif.Receiver.ReceiverConfiguration">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Receiver.ReceiverConfiguration.Mode">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Receiver.ReceiverConfiguration.MediaUri">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Receiver.ReceiverConfiguration.StreamSetup">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Receiver.ReceiverConfiguration.Any">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Receiver.ReceiverConfiguration.AnyAttr">
            <remarks/>
        </member>
        <member name="T:StreamCoders.Onvif.Receiver.ReceiverMode">
            <remarks/>
        </member>
        <member name="F:StreamCoders.Onvif.Receiver.ReceiverMode.AutoConnect">
            <remarks/>
        </member>
        <member name="F:StreamCoders.Onvif.Receiver.ReceiverMode.AlwaysConnect">
            <remarks/>
        </member>
        <member name="F:StreamCoders.Onvif.Receiver.ReceiverMode.NeverConnect">
            <remarks/>
        </member>
        <member name="F:StreamCoders.Onvif.Receiver.ReceiverMode.Unknown">
            <remarks/>
        </member>
        <member name="T:StreamCoders.Onvif.Receiver.Receiver">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Receiver.Receiver.Token">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Receiver.Receiver.Configuration">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Receiver.Receiver.Any">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Receiver.Receiver.AnyAttr">
            <remarks/>
        </member>
        <member name="T:StreamCoders.Onvif.Recording.Capabilities">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Recording.Capabilities.Any">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Recording.Capabilities.DynamicRecordings">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Recording.Capabilities.DynamicRecordingsSpecified">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Recording.Capabilities.DynamicTracks">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Recording.Capabilities.DynamicTracksSpecified">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Recording.Capabilities.Encoding">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Recording.Capabilities.MaxRate">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Recording.Capabilities.MaxRateSpecified">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Recording.Capabilities.MaxTotalRate">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Recording.Capabilities.MaxTotalRateSpecified">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Recording.Capabilities.MaxRecordings">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Recording.Capabilities.MaxRecordingsSpecified">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Recording.Capabilities.MaxRecordingJobs">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Recording.Capabilities.MaxRecordingJobsSpecified">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Recording.Capabilities.Options">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Recording.Capabilities.OptionsSpecified">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Recording.Capabilities.MetadataRecording">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Recording.Capabilities.MetadataRecordingSpecified">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Recording.Capabilities.SupportedExportFileFormats">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Recording.Capabilities.AnyAttr">
            <remarks/>
        </member>
        <member name="T:StreamCoders.Onvif.Recording.ArrayOfFileProgressExtension">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Recording.ArrayOfFileProgressExtension.Any">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Recording.ArrayOfFileProgressExtension.AnyAttr">
            <remarks/>
        </member>
        <member name="T:StreamCoders.Onvif.Recording.FileProgress">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Recording.FileProgress.FileName">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Recording.FileProgress.Progress">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Recording.FileProgress.Any">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Recording.FileProgress.AnyAttr">
            <remarks/>
        </member>
        <member name="T:StreamCoders.Onvif.Recording.ArrayOfFileProgress">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Recording.ArrayOfFileProgress.FileProgress">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Recording.ArrayOfFileProgress.Extension">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Recording.ArrayOfFileProgress.AnyAttr">
            <remarks/>
        </member>
        <member name="T:StreamCoders.Onvif.Recording.StorageReferencePathExtension">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Recording.StorageReferencePathExtension.Any">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Recording.StorageReferencePathExtension.AnyAttr">
            <remarks/>
        </member>
        <member name="T:StreamCoders.Onvif.Recording.StorageReferencePath">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Recording.StorageReferencePath.StorageToken">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Recording.StorageReferencePath.RelativePath">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Recording.StorageReferencePath.Extension">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Recording.StorageReferencePath.AnyAttr">
            <remarks/>
        </member>
        <member name="T:StreamCoders.Onvif.Recording.SearchScopeExtension">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Recording.SearchScopeExtension.Any">
            <remarks/>
        </member>
        <member name="T:StreamCoders.Onvif.Recording.SearchScope">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Recording.SearchScope.IncludedSources">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Recording.SearchScope.IncludedRecordings">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Recording.SearchScope.RecordingInformationFilter">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Recording.SearchScope.Extension">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Recording.SearchScope.AnyAttr">
            <remarks/>
        </member>
        <member name="T:StreamCoders.Onvif.Recording.SourceReference">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Recording.SourceReference.Token">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Recording.SourceReference.Any">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Recording.SourceReference.Type">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Recording.SourceReference.AnyAttr">
            <remarks/>
        </member>
        <member name="T:StreamCoders.Onvif.Recording.RecordingJobStateInformationExtension">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Recording.RecordingJobStateInformationExtension.Any">
            <remarks/>
        </member>
        <member name="T:StreamCoders.Onvif.Recording.RecordingJobStateTrack">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Recording.RecordingJobStateTrack.SourceTag">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Recording.RecordingJobStateTrack.Destination">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Recording.RecordingJobStateTrack.Error">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Recording.RecordingJobStateTrack.State">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Recording.RecordingJobStateTrack.Any">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Recording.RecordingJobStateTrack.AnyAttr">
            <remarks/>
        </member>
        <member name="T:StreamCoders.Onvif.Recording.RecordingJobStateTracks">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Recording.RecordingJobStateTracks.Track">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Recording.RecordingJobStateTracks.AnyAttr">
            <remarks/>
        </member>
        <member name="T:StreamCoders.Onvif.Recording.RecordingJobStateSource">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Recording.RecordingJobStateSource.SourceToken">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Recording.RecordingJobStateSource.State">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Recording.RecordingJobStateSource.Tracks">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Recording.RecordingJobStateSource.Any">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Recording.RecordingJobStateSource.AnyAttr">
            <remarks/>
        </member>
        <member name="T:StreamCoders.Onvif.Recording.RecordingJobStateInformation">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Recording.RecordingJobStateInformation.RecordingToken">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Recording.RecordingJobStateInformation.State">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Recording.RecordingJobStateInformation.Sources">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Recording.RecordingJobStateInformation.Extension">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Recording.RecordingJobStateInformation.AnyAttr">
            <remarks/>
        </member>
        <member name="T:StreamCoders.Onvif.Recording.GetRecordingJobsResponseItem">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Recording.GetRecordingJobsResponseItem.JobToken">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Recording.GetRecordingJobsResponseItem.JobConfiguration">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Recording.GetRecordingJobsResponseItem.Any">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Recording.GetRecordingJobsResponseItem.AnyAttr">
            <remarks/>
        </member>
        <member name="T:StreamCoders.Onvif.Recording.RecordingJobConfiguration">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Recording.RecordingJobConfiguration.RecordingToken">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Recording.RecordingJobConfiguration.Mode">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Recording.RecordingJobConfiguration.Priority">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Recording.RecordingJobConfiguration.Source">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Recording.RecordingJobConfiguration.Extension">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Recording.RecordingJobConfiguration.AnyAttr">
            <remarks/>
        </member>
        <member name="T:StreamCoders.Onvif.Recording.RecordingJobSource">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Recording.RecordingJobSource.SourceToken">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Recording.RecordingJobSource.AutoCreateReceiver">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Recording.RecordingJobSource.AutoCreateReceiverSpecified">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Recording.RecordingJobSource.Tracks">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Recording.RecordingJobSource.Extension">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Recording.RecordingJobSource.AnyAttr">
            <remarks/>
        </member>
        <member name="T:StreamCoders.Onvif.Recording.RecordingJobTrack">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Recording.RecordingJobTrack.SourceTag">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Recording.RecordingJobTrack.Destination">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Recording.RecordingJobTrack.Any">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Recording.RecordingJobTrack.AnyAttr">
            <remarks/>
        </member>
        <member name="T:StreamCoders.Onvif.Recording.RecordingJobSourceExtension">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Recording.RecordingJobSourceExtension.Any">
            <remarks/>
        </member>
        <member name="T:StreamCoders.Onvif.Recording.RecordingJobConfigurationExtension">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Recording.RecordingJobConfigurationExtension.Any">
            <remarks/>
        </member>
        <member name="T:StreamCoders.Onvif.Recording.TrackOptions">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Recording.TrackOptions.SpareTotal">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Recording.TrackOptions.SpareTotalSpecified">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Recording.TrackOptions.SpareVideo">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Recording.TrackOptions.SpareVideoSpecified">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Recording.TrackOptions.SpareAudio">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Recording.TrackOptions.SpareAudioSpecified">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Recording.TrackOptions.SpareMetadata">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Recording.TrackOptions.SpareMetadataSpecified">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Recording.TrackOptions.AnyAttr">
            <remarks/>
        </member>
        <member name="T:StreamCoders.Onvif.Recording.JobOptions">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Recording.JobOptions.Spare">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Recording.JobOptions.SpareSpecified">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Recording.JobOptions.CompatibleSources">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Recording.JobOptions.AnyAttr">
            <remarks/>
        </member>
        <member name="T:StreamCoders.Onvif.Recording.RecordingOptions">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Recording.RecordingOptions.Job">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Recording.RecordingOptions.Track">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Recording.RecordingOptions.Any">
            <remarks/>
        </member>
        <member name="T:StreamCoders.Onvif.Recording.TrackConfiguration">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Recording.TrackConfiguration.TrackType">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Recording.TrackConfiguration.Description">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Recording.TrackConfiguration.Any">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Recording.TrackConfiguration.AnyAttr">
            <remarks/>
        </member>
        <member name="T:StreamCoders.Onvif.Recording.TrackType">
            <remarks/>
        </member>
        <member name="F:StreamCoders.Onvif.Recording.TrackType.Video">
            <remarks/>
        </member>
        <member name="F:StreamCoders.Onvif.Recording.TrackType.Audio">
            <remarks/>
        </member>
        <member name="F:StreamCoders.Onvif.Recording.TrackType.Metadata">
            <remarks/>
        </member>
        <member name="F:StreamCoders.Onvif.Recording.TrackType.Extended">
            <remarks/>
        </member>
        <member name="T:StreamCoders.Onvif.Recording.GetTracksResponseItem">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Recording.GetTracksResponseItem.TrackToken">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Recording.GetTracksResponseItem.Configuration">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Recording.GetTracksResponseItem.Any">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Recording.GetTracksResponseItem.AnyAttr">
            <remarks/>
        </member>
        <member name="T:StreamCoders.Onvif.Recording.GetTracksResponseList">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Recording.GetTracksResponseList.Track">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Recording.GetTracksResponseList.AnyAttr">
            <remarks/>
        </member>
        <member name="T:StreamCoders.Onvif.Recording.GetRecordingsResponseItem">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Recording.GetRecordingsResponseItem.RecordingToken">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Recording.GetRecordingsResponseItem.Configuration">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Recording.GetRecordingsResponseItem.Tracks">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Recording.GetRecordingsResponseItem.Any">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Recording.GetRecordingsResponseItem.AnyAttr">
            <remarks/>
        </member>
        <member name="T:StreamCoders.Onvif.Recording.RecordingConfiguration">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Recording.RecordingConfiguration.Source">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Recording.RecordingConfiguration.Content">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Recording.RecordingConfiguration.MaximumRetentionTime">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Recording.RecordingConfiguration.Any">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Recording.RecordingConfiguration.AnyAttr">
            <remarks/>
        </member>
        <member name="T:StreamCoders.Onvif.Recording.RecordingSourceInformation">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Recording.RecordingSourceInformation.SourceId">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Recording.RecordingSourceInformation.Name">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Recording.RecordingSourceInformation.Location">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Recording.RecordingSourceInformation.Description">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Recording.RecordingSourceInformation.Address">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Recording.RecordingSourceInformation.Any">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Recording.RecordingSourceInformation.AnyAttr">
            <remarks/>
        </member>
        <member name="T:StreamCoders.Onvif.Replay.Capabilities">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Replay.Capabilities.Any">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Replay.Capabilities.ReversePlayback">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Replay.Capabilities.SessionTimeoutRange">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Replay.Capabilities.RTP_RTSP_TCP">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Replay.Capabilities.RTP_RTSP_TCPSpecified">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Replay.Capabilities.AnyAttr">
            <remarks/>
        </member>
        <member name="T:StreamCoders.Onvif.Replay.ReplayConfiguration">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Replay.ReplayConfiguration.SessionTimeout">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Replay.ReplayConfiguration.Any">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Replay.ReplayConfiguration.AnyAttr">
            <remarks/>
        </member>
        <member name="T:StreamCoders.Onvif.Replay.Transport">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Replay.Transport.Protocol">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Replay.Transport.Tunnel">
            <remarks/>
        </member>
        <member name="T:StreamCoders.Onvif.Replay.TransportProtocol">
            <remarks/>
        </member>
        <member name="F:StreamCoders.Onvif.Replay.TransportProtocol.UDP">
            <remarks/>
        </member>
        <member name="F:StreamCoders.Onvif.Replay.TransportProtocol.TCP">
            <remarks/>
        </member>
        <member name="F:StreamCoders.Onvif.Replay.TransportProtocol.RTSP">
            <remarks/>
        </member>
        <member name="F:StreamCoders.Onvif.Replay.TransportProtocol.HTTP">
            <remarks/>
        </member>
        <member name="T:StreamCoders.Onvif.Replay.StreamSetup">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Replay.StreamSetup.Stream">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Replay.StreamSetup.Transport">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Replay.StreamSetup.Any">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Replay.StreamSetup.AnyAttr">
            <remarks/>
        </member>
        <member name="T:StreamCoders.Onvif.Replay.StreamType">
            <remarks/>
        </member>
        <member name="F:StreamCoders.Onvif.Replay.StreamType.RTPUnicast">
            <remarks/>
        </member>
        <member name="F:StreamCoders.Onvif.Replay.StreamType.RTPMulticast">
            <remarks/>
        </member>
        <member name="T:StreamCoders.Onvif.Schedule.ServiceCapabilities">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Schedule.ServiceCapabilities.Any">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Schedule.ServiceCapabilities.MaxLimit">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Schedule.ServiceCapabilities.MaxSchedules">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Schedule.ServiceCapabilities.MaxTimePeriodsPerDay">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Schedule.ServiceCapabilities.MaxSpecialDayGroups">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Schedule.ServiceCapabilities.MaxDaysInSpecialDayGroup">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Schedule.ServiceCapabilities.MaxSpecialDaysSchedules">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Schedule.ServiceCapabilities.ExtendedRecurrenceSupported">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Schedule.ServiceCapabilities.SpecialDaysSupported">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Schedule.ServiceCapabilities.StateReportingSupported">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Schedule.ServiceCapabilities.AnyAttr">
            <remarks/>
        </member>
        <member name="T:StreamCoders.Onvif.Schedule.SpecialDayGroupExtension">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Schedule.SpecialDayGroupExtension.Any">
            <remarks/>
        </member>
        <member name="T:StreamCoders.Onvif.Schedule.ScheduleExtension">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Schedule.ScheduleExtension.Any">
            <remarks/>
        </member>
        <member name="T:StreamCoders.Onvif.Schedule.SpecialDaysScheduleExtension">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Schedule.SpecialDaysScheduleExtension.Any">
            <remarks/>
        </member>
        <member name="T:StreamCoders.Onvif.Schedule.TimePeriodExtension">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Schedule.TimePeriodExtension.Any">
            <remarks/>
        </member>
        <member name="T:StreamCoders.Onvif.Schedule.TimePeriod">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Schedule.TimePeriod.From">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Schedule.TimePeriod.Until">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Schedule.TimePeriod.UntilSpecified">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Schedule.TimePeriod.Extension">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Schedule.TimePeriod.AnyAttr">
            <remarks/>
        </member>
        <member name="T:StreamCoders.Onvif.Schedule.SpecialDaysSchedule">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Schedule.SpecialDaysSchedule.GroupToken">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Schedule.SpecialDaysSchedule.TimeRange">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Schedule.SpecialDaysSchedule.Extension">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Schedule.SpecialDaysSchedule.AnyAttr">
            <remarks/>
        </member>
        <member name="T:StreamCoders.Onvif.Schedule.DataEntity">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Schedule.DataEntity.token">
            <remarks/>
        </member>
        <member name="T:StreamCoders.Onvif.Schedule.SpecialDayGroupInfo">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Schedule.SpecialDayGroupInfo.Name">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Schedule.SpecialDayGroupInfo.Description">
            <remarks/>
        </member>
        <member name="T:StreamCoders.Onvif.Schedule.SpecialDayGroup">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Schedule.SpecialDayGroup.Days">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Schedule.SpecialDayGroup.Extension">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Schedule.SpecialDayGroup.AnyAttr">
            <remarks/>
        </member>
        <member name="T:StreamCoders.Onvif.Schedule.ScheduleInfo">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Schedule.ScheduleInfo.Name">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Schedule.ScheduleInfo.Description">
            <remarks/>
        </member>
        <member name="T:StreamCoders.Onvif.Schedule.Schedule">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Schedule.Schedule.Standard">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Schedule.Schedule.SpecialDays">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Schedule.Schedule.Extension">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Schedule.Schedule.AnyAttr">
            <remarks/>
        </member>
        <member name="T:StreamCoders.Onvif.Schedule.ScheduleStateExtension">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Schedule.ScheduleStateExtension.Any">
            <remarks/>
        </member>
        <member name="T:StreamCoders.Onvif.Schedule.ScheduleState">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Schedule.ScheduleState.Active">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Schedule.ScheduleState.SpecialDay">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Schedule.ScheduleState.SpecialDaySpecified">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Schedule.ScheduleState.Extension">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Schedule.ScheduleState.AnyAttr">
            <remarks/>
        </member>
        <member name="T:StreamCoders.Onvif.Search.Capabilities">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Search.Capabilities.Any">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Search.Capabilities.MetadataSearch">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Search.Capabilities.MetadataSearchSpecified">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Search.Capabilities.GeneralStartEvents">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Search.Capabilities.GeneralStartEventsSpecified">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Search.Capabilities.AnyAttr">
            <remarks/>
        </member>
        <member name="T:StreamCoders.Onvif.Search.FindMetadataResult">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Search.FindMetadataResult.RecordingToken">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Search.FindMetadataResult.TrackToken">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Search.FindMetadataResult.Time">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Search.FindMetadataResult.Any">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Search.FindMetadataResult.AnyAttr">
            <remarks/>
        </member>
        <member name="T:StreamCoders.Onvif.Search.FindMetadataResultList">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Search.FindMetadataResultList.SearchState">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Search.FindMetadataResultList.Result">
            <remarks/>
        </member>
        <member name="T:StreamCoders.Onvif.Search.SearchState">
            <remarks/>
        </member>
        <member name="F:StreamCoders.Onvif.Search.SearchState.Queued">
            <remarks/>
        </member>
        <member name="F:StreamCoders.Onvif.Search.SearchState.Searching">
            <remarks/>
        </member>
        <member name="F:StreamCoders.Onvif.Search.SearchState.Completed">
            <remarks/>
        </member>
        <member name="F:StreamCoders.Onvif.Search.SearchState.Unknown">
            <remarks/>
        </member>
        <member name="T:StreamCoders.Onvif.Search.MetadataFilter">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Search.MetadataFilter.MetadataStreamFilter">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Search.MetadataFilter.Any">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Search.MetadataFilter.AnyAttr">
            <remarks/>
        </member>
        <member name="T:StreamCoders.Onvif.Search.FindPTZPositionResult">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Search.FindPTZPositionResult.RecordingToken">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Search.FindPTZPositionResult.TrackToken">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Search.FindPTZPositionResult.Time">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Search.FindPTZPositionResult.Position">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Search.FindPTZPositionResult.Any">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Search.FindPTZPositionResult.AnyAttr">
            <remarks/>
        </member>
        <member name="T:StreamCoders.Onvif.Search.PTZVector">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Search.PTZVector.PanTilt">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Search.PTZVector.Zoom">
            <remarks/>
        </member>
        <member name="T:StreamCoders.Onvif.Search.Vector2D">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Search.Vector2D.x">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Search.Vector2D.y">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Search.Vector2D.space">
            <remarks/>
        </member>
        <member name="T:StreamCoders.Onvif.Search.Vector1D">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Search.Vector1D.x">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Search.Vector1D.space">
            <remarks/>
        </member>
        <member name="T:StreamCoders.Onvif.Search.FindPTZPositionResultList">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Search.FindPTZPositionResultList.SearchState">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Search.FindPTZPositionResultList.Result">
            <remarks/>
        </member>
        <member name="T:StreamCoders.Onvif.Search.PTZPositionFilter">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Search.PTZPositionFilter.MinPosition">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Search.PTZPositionFilter.MaxPosition">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Search.PTZPositionFilter.EnterOrExit">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Search.PTZPositionFilter.Any">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Search.PTZPositionFilter.AnyAttr">
            <remarks/>
        </member>
        <member name="T:StreamCoders.Onvif.Search.TopicExpressionType">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Search.TopicExpressionType.Any">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Search.TopicExpressionType.Dialect">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Search.TopicExpressionType.AnyAttr">
            <remarks/>
        </member>
        <member name="T:StreamCoders.Onvif.Search.MetadataType">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Search.MetadataType.Any">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Search.MetadataType.AnyAttr">
            <remarks/>
        </member>
        <member name="T:StreamCoders.Onvif.Search.ReferenceParametersType">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Search.ReferenceParametersType.Any">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Search.ReferenceParametersType.AnyAttr">
            <remarks/>
        </member>
        <member name="T:StreamCoders.Onvif.Search.AttributedURIType">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Search.AttributedURIType.AnyAttr">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Search.AttributedURIType.Value">
            <remarks/>
        </member>
        <member name="T:StreamCoders.Onvif.Search.EndpointReferenceType">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Search.EndpointReferenceType.Address">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Search.EndpointReferenceType.ReferenceParameters">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Search.EndpointReferenceType.Metadata">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Search.EndpointReferenceType.Any">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Search.EndpointReferenceType.AnyAttr">
            <remarks/>
        </member>
        <member name="T:StreamCoders.Onvif.Search.NotificationMessageHolderType">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Search.NotificationMessageHolderType.SubscriptionReference">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Search.NotificationMessageHolderType.Topic">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Search.NotificationMessageHolderType.ProducerReference">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Search.NotificationMessageHolderType.Message">
            <remarks/>
        </member>
        <member name="T:StreamCoders.Onvif.Search.FindEventResult">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Search.FindEventResult.RecordingToken">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Search.FindEventResult.TrackToken">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Search.FindEventResult.Time">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Search.FindEventResult.Event">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Search.FindEventResult.StartStateEvent">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Search.FindEventResult.Any">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Search.FindEventResult.AnyAttr">
            <remarks/>
        </member>
        <member name="T:StreamCoders.Onvif.Search.FindEventResultList">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Search.FindEventResultList.SearchState">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Search.FindEventResultList.Result">
            <remarks/>
        </member>
        <member name="T:StreamCoders.Onvif.Search.FilterType">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Search.FilterType.Any">
            <remarks/>
        </member>
        <member name="T:StreamCoders.Onvif.Search.EventFilter">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Search.EventFilter.AnyAttr">
            <remarks/>
        </member>
        <member name="T:StreamCoders.Onvif.Search.FindRecordingResultList">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Search.FindRecordingResultList.SearchState">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Search.FindRecordingResultList.RecordingInformation">
            <remarks/>
        </member>
        <member name="T:StreamCoders.Onvif.Search.RecordingInformation">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Search.RecordingInformation.RecordingToken">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Search.RecordingInformation.Source">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Search.RecordingInformation.EarliestRecording">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Search.RecordingInformation.EarliestRecordingSpecified">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Search.RecordingInformation.LatestRecording">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Search.RecordingInformation.LatestRecordingSpecified">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Search.RecordingInformation.Content">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Search.RecordingInformation.Track">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Search.RecordingInformation.RecordingStatus">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Search.RecordingInformation.Any">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Search.RecordingInformation.AnyAttr">
            <remarks/>
        </member>
        <member name="T:StreamCoders.Onvif.Search.RecordingSourceInformation">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Search.RecordingSourceInformation.SourceId">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Search.RecordingSourceInformation.Name">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Search.RecordingSourceInformation.Location">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Search.RecordingSourceInformation.Description">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Search.RecordingSourceInformation.Address">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Search.RecordingSourceInformation.Any">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Search.RecordingSourceInformation.AnyAttr">
            <remarks/>
        </member>
        <member name="T:StreamCoders.Onvif.Search.TrackInformation">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Search.TrackInformation.TrackToken">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Search.TrackInformation.TrackType">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Search.TrackInformation.Description">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Search.TrackInformation.DataFrom">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Search.TrackInformation.DataTo">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Search.TrackInformation.Any">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Search.TrackInformation.AnyAttr">
            <remarks/>
        </member>
        <member name="T:StreamCoders.Onvif.Search.TrackType">
            <remarks/>
        </member>
        <member name="F:StreamCoders.Onvif.Search.TrackType.Video">
            <remarks/>
        </member>
        <member name="F:StreamCoders.Onvif.Search.TrackType.Audio">
            <remarks/>
        </member>
        <member name="F:StreamCoders.Onvif.Search.TrackType.Metadata">
            <remarks/>
        </member>
        <member name="F:StreamCoders.Onvif.Search.TrackType.Extended">
            <remarks/>
        </member>
        <member name="T:StreamCoders.Onvif.Search.RecordingStatus">
            <remarks/>
        </member>
        <member name="F:StreamCoders.Onvif.Search.RecordingStatus.Initiated">
            <remarks/>
        </member>
        <member name="F:StreamCoders.Onvif.Search.RecordingStatus.Recording">
            <remarks/>
        </member>
        <member name="F:StreamCoders.Onvif.Search.RecordingStatus.Stopped">
            <remarks/>
        </member>
        <member name="F:StreamCoders.Onvif.Search.RecordingStatus.Removing">
            <remarks/>
        </member>
        <member name="F:StreamCoders.Onvif.Search.RecordingStatus.Removed">
            <remarks/>
        </member>
        <member name="F:StreamCoders.Onvif.Search.RecordingStatus.Unknown">
            <remarks/>
        </member>
        <member name="T:StreamCoders.Onvif.Search.SearchScopeExtension">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Search.SearchScopeExtension.Any">
            <remarks/>
        </member>
        <member name="T:StreamCoders.Onvif.Search.SourceReference">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Search.SourceReference.Token">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Search.SourceReference.Any">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Search.SourceReference.Type">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Search.SourceReference.AnyAttr">
            <remarks/>
        </member>
        <member name="T:StreamCoders.Onvif.Search.SearchScope">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Search.SearchScope.IncludedSources">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Search.SearchScope.IncludedRecordings">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Search.SearchScope.RecordingInformationFilter">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Search.SearchScope.Extension">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Search.SearchScope.AnyAttr">
            <remarks/>
        </member>
        <member name="T:StreamCoders.Onvif.Search.TrackAttributesExtension">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Search.TrackAttributesExtension.Any">
            <remarks/>
        </member>
        <member name="T:StreamCoders.Onvif.Search.MetadataAttributes">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Search.MetadataAttributes.CanContainPTZ">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Search.MetadataAttributes.CanContainAnalytics">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Search.MetadataAttributes.CanContainNotifications">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Search.MetadataAttributes.Any">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Search.MetadataAttributes.PtzSpaces">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Search.MetadataAttributes.AnyAttr">
            <remarks/>
        </member>
        <member name="T:StreamCoders.Onvif.Search.AudioAttributes">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Search.AudioAttributes.Bitrate">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Search.AudioAttributes.BitrateSpecified">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Search.AudioAttributes.Encoding">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Search.AudioAttributes.Samplerate">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Search.AudioAttributes.Any">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Search.AudioAttributes.AnyAttr">
            <remarks/>
        </member>
        <member name="T:StreamCoders.Onvif.Search.VideoAttributes">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Search.VideoAttributes.Bitrate">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Search.VideoAttributes.BitrateSpecified">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Search.VideoAttributes.Width">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Search.VideoAttributes.Height">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Search.VideoAttributes.Encoding">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Search.VideoAttributes.Framerate">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Search.VideoAttributes.Any">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Search.VideoAttributes.AnyAttr">
            <remarks/>
        </member>
        <member name="T:StreamCoders.Onvif.Search.TrackAttributes">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Search.TrackAttributes.TrackInformation">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Search.TrackAttributes.VideoAttributes">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Search.TrackAttributes.AudioAttributes">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Search.TrackAttributes.MetadataAttributes">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Search.TrackAttributes.Extension">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Search.TrackAttributes.AnyAttr">
            <remarks/>
        </member>
        <member name="T:StreamCoders.Onvif.Search.MediaAttributes">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Search.MediaAttributes.RecordingToken">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Search.MediaAttributes.TrackAttributes">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Search.MediaAttributes.From">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Search.MediaAttributes.Until">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Search.MediaAttributes.Any">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Search.MediaAttributes.AnyAttr">
            <remarks/>
        </member>
        <member name="T:StreamCoders.Onvif.Search.RecordingSummary">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Search.RecordingSummary.DataFrom">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Search.RecordingSummary.DataUntil">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Search.RecordingSummary.NumberRecordings">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Search.RecordingSummary.Any">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Search.RecordingSummary.AnyAttr">
            <remarks/>
        </member>
        <member name="T:StreamCoders.Onvif.Thermal.Capabilities">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Thermal.Capabilities.Any">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Thermal.Capabilities.Radiometry">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Thermal.Capabilities.RadiometrySpecified">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Thermal.Capabilities.AnyAttr">
            <remarks/>
        </member>
        <member name="T:StreamCoders.Onvif.Thermal.RadiometryGlobalParameters">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Thermal.RadiometryGlobalParameters.ReflectedAmbientTemperature">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Thermal.RadiometryGlobalParameters.Emissivity">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Thermal.RadiometryGlobalParameters.DistanceToObject">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Thermal.RadiometryGlobalParameters.RelativeHumidity">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Thermal.RadiometryGlobalParameters.RelativeHumiditySpecified">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Thermal.RadiometryGlobalParameters.AtmosphericTemperature">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Thermal.RadiometryGlobalParameters.AtmosphericTemperatureSpecified">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Thermal.RadiometryGlobalParameters.AtmosphericTransmittance">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Thermal.RadiometryGlobalParameters.AtmosphericTransmittanceSpecified">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Thermal.RadiometryGlobalParameters.ExtOpticsTemperature">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Thermal.RadiometryGlobalParameters.ExtOpticsTemperatureSpecified">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Thermal.RadiometryGlobalParameters.ExtOpticsTransmittance">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Thermal.RadiometryGlobalParameters.ExtOpticsTransmittanceSpecified">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Thermal.RadiometryGlobalParameters.Any">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Thermal.RadiometryGlobalParameters.AnyAttr">
            <remarks/>
        </member>
        <member name="T:StreamCoders.Onvif.Thermal.RadiometryConfiguration">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Thermal.RadiometryConfiguration.RadiometryGlobalParameters">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Thermal.RadiometryConfiguration.Any">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Thermal.RadiometryConfiguration.AnyAttr">
            <remarks/>
        </member>
        <member name="T:StreamCoders.Onvif.Thermal.FloatRange">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Thermal.FloatRange.Min">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Thermal.FloatRange.Max">
            <remarks/>
        </member>
        <member name="T:StreamCoders.Onvif.Thermal.RadiometryGlobalParameterOptions">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Thermal.RadiometryGlobalParameterOptions.ReflectedAmbientTemperature">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Thermal.RadiometryGlobalParameterOptions.Emissivity">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Thermal.RadiometryGlobalParameterOptions.DistanceToObject">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Thermal.RadiometryGlobalParameterOptions.RelativeHumidity">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Thermal.RadiometryGlobalParameterOptions.AtmosphericTemperature">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Thermal.RadiometryGlobalParameterOptions.AtmosphericTransmittance">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Thermal.RadiometryGlobalParameterOptions.ExtOpticsTemperature">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Thermal.RadiometryGlobalParameterOptions.ExtOpticsTransmittance">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Thermal.RadiometryGlobalParameterOptions.Any">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Thermal.RadiometryGlobalParameterOptions.AnyAttr">
            <remarks/>
        </member>
        <member name="T:StreamCoders.Onvif.Thermal.RadiometryConfigurationOptions">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Thermal.RadiometryConfigurationOptions.RadiometryGlobalParameterOptions">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Thermal.RadiometryConfigurationOptions.Any">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Thermal.RadiometryConfigurationOptions.AnyAttr">
            <remarks/>
        </member>
        <member name="T:StreamCoders.Onvif.Thermal.Configurations">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Thermal.Configurations.Configuration">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Thermal.Configurations.Any">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Thermal.Configurations.token">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Thermal.Configurations.AnyAttr">
            <remarks/>
        </member>
        <member name="T:StreamCoders.Onvif.Thermal.Configuration">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Thermal.Configuration.ColorPalette">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Thermal.Configuration.Polarity">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Thermal.Configuration.NUCTable">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Thermal.Configuration.Cooler">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Thermal.Configuration.Any">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Thermal.Configuration.AnyAttr">
            <remarks/>
        </member>
        <member name="T:StreamCoders.Onvif.Thermal.ColorPalette">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Thermal.ColorPalette.Name">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Thermal.ColorPalette.Any">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Thermal.ColorPalette.token">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Thermal.ColorPalette.Type">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Thermal.ColorPalette.AnyAttr">
            <remarks/>
        </member>
        <member name="T:StreamCoders.Onvif.Thermal.Polarity">
            <remarks/>
        </member>
        <member name="F:StreamCoders.Onvif.Thermal.Polarity.WhiteHot">
            <remarks/>
        </member>
        <member name="F:StreamCoders.Onvif.Thermal.Polarity.BlackHot">
            <remarks/>
        </member>
        <member name="T:StreamCoders.Onvif.Thermal.NUCTable">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Thermal.NUCTable.Name">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Thermal.NUCTable.Any">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Thermal.NUCTable.token">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Thermal.NUCTable.LowTemperature">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Thermal.NUCTable.LowTemperatureSpecified">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Thermal.NUCTable.HighTemperature">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Thermal.NUCTable.HighTemperatureSpecified">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Thermal.NUCTable.AnyAttr">
            <remarks/>
        </member>
        <member name="T:StreamCoders.Onvif.Thermal.Cooler">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Thermal.Cooler.Enabled">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Thermal.Cooler.RunTime">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Thermal.Cooler.RunTimeSpecified">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Thermal.Cooler.Any">
            <remarks/>
        </member>
        <member name="T:StreamCoders.Onvif.Thermal.CoolerOptions">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Thermal.CoolerOptions.Enabled">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Thermal.CoolerOptions.EnabledSpecified">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Thermal.CoolerOptions.Any">
            <remarks/>
        </member>
        <member name="T:StreamCoders.Onvif.Thermal.ConfigurationOptions">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Thermal.ConfigurationOptions.ColorPalette">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Thermal.ConfigurationOptions.NUCTable">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Thermal.ConfigurationOptions.CoolerOptions">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Thermal.ConfigurationOptions.Any">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Onvif.Thermal.ConfigurationOptions.AnyAttr">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Helpers.ExceptionHandlingConfiguration.CatchUnhandledExceptions">
            -------------------------------------------------------------------------------------------------
            <summary>
                Gets or sets a value indicating whether to catch unhandled exceptions.
            </summary>
            -------------------------------------------------------------------------------------------------
        </member>
        <member name="P:StreamCoders.Helpers.ExceptionHandlingConfiguration.WriteMiniDump">
            -------------------------------------------------------------------------------------------------
            <summary>
                Gets or sets a value indicating whether to write a minidump file when an unhandled
                exception is caught.
            </summary>
            <value>
                true if write mini dump, false if not.
            </value>
            -------------------------------------------------------------------------------------------------
        </member>
        <member name="P:StreamCoders.Helpers.ExceptionHandlingConfiguration.WriteSummaryFile">
            -------------------------------------------------------------------------------------------------
            <summary>
                Gets or sets a value indicating whether a summary file should be written when an
                unhandled exception occurs.
            </summary>
            <value>
                true if write summary file, false if not.
            </value>
            -------------------------------------------------------------------------------------------------
        </member>
        <member name="T:StreamCoders.Helpers.MiniDump">
            -------------------------------------------------------------------------------------------------
            <summary>
                Creates minidumps of the current process.
            </summary>
            -------------------------------------------------------------------------------------------------
        </member>
        <member name="M:StreamCoders.Helpers.ArrayExtensions.IsSequenceEqual(System.Byte[],System.Byte[])">
            -------------------------------------------------------------------------------------------------
            <summary>
                Compares two byte arrays. Both arrays must have the same length and content.
            </summary>
            <param name="bufferA">
                The array to compare to.
            </param>
            <param name="bufferB">
                The array to compare to.
            </param>
            <returns>
                Returns true if equal, otherwise false.
            </returns>
            -------------------------------------------------------------------------------------------------
        </member>
        <member name="M:StreamCoders.Helpers.ArrayExtensions.ToHexString(System.Byte[])">
            -------------------------------------------------------------------------------------------------
            <summary>
                Converts a byte array to a hex string.
            </summary>
            <param name="buffer">
                The byte array to convert.
            </param>
            <returns>
                A concatenation of hex values in a string.
            </returns>
            -------------------------------------------------------------------------------------------------
        </member>
        <member name="M:StreamCoders.Helpers.ArrayExtensions.ToHexString(System.Byte[],System.Int32,System.Int32)">
            -------------------------------------------------------------------------------------------------
            <summary>
                Converts a byte array to a hex string.
            </summary>
            <param name="buffer">
                The byte array to convert.
            </param>
            <param name="offset">
                The offset.
            </param>
            <param name="count">
                Number of significant bytes.
            </param>
            <returns>
                A concatenation of hex values in a string.
            </returns>
            -------------------------------------------------------------------------------------------------
        </member>
        <member name="M:StreamCoders.Helpers.ArrayExtensions.ToHexString(StreamCoders.OffsetBuffer{System.Byte})">
            -------------------------------------------------------------------------------------------------
            <summary>
                Converts an OffsetBuffer to a hex string.
            </summary>
            <param name="buffer">
                The byte array to convert.
            </param>
            <returns>
                A concatenation of hex values in a string.
            </returns>
            -------------------------------------------------------------------------------------------------
        </member>
        <member name="M:StreamCoders.Helpers.ArrayExtensions.ToHexString(StreamCoders.OffsetBuffer{System.Byte},System.Int32)">
            <summary>
                Converts an OffsetBuffer to a hex string.
            </summary>
            <param name="buffer">The byte array to convert.</param>
            <param name="byteCount">The number of bytes to use in the conversion</param>
            <returns>A concatenation of hex values in a string.</returns>
            -------------------------------------------------------------------------------------------------
            -------------------------------------------------------------------------------------------------
        </member>
        <member name="M:StreamCoders.Helpers.ArrayExtensions.ToOffsetBuffer(System.IO.Stream)">
            -------------------------------------------------------------------------------------------------
            <summary>
                Creates an OffsetBuffer from a inputStream.
            </summary>
            <param name="stream">
                The stream to act on.
            </param>
            <returns>
                Returns a new instance of an OffsetBuffer.
            </returns>
            -------------------------------------------------------------------------------------------------
        </member>
        <member name="M:StreamCoders.Helpers.ArrayExtensions.ToShortArray(System.Byte[],System.Int32,System.Int32)">
            -------------------------------------------------------------------------------------------------
            <summary>
                Converts a byte array to a short array.
            </summary>
            <param name="inputBuffer">
                The inputBuffer to act on.
            </param>
            <param name="offset">
                The offset.
            </param>
            <param name="count">
                Number of bytes to use.
            </param>
            <returns>
                The given data converted to a short[].
            </returns>
            -------------------------------------------------------------------------------------------------
        </member>
        <member name="M:StreamCoders.Helpers.ArrayExtensions.ToByteArray(System.Int16[],System.Int32,System.Int32)">
            -------------------------------------------------------------------------------------------------
            <summary>
                Converts a short array to a byte array.
            </summary>
            <param name="inputBuffer">
                The inputBuffer to act on.
            </param>
            <param name="offset">
                The offset.
            </param>
            <param name="count">
                Number of bytes to use.
            </param>
            <returns>
                The given data converted to a byte[].
            </returns>
            -------------------------------------------------------------------------------------------------
        </member>
        <member name="M:StreamCoders.Helpers.ArrayExtensions.ToFloatArrayNormalized(System.Int16[],System.Int32,System.Int32)">
            -------------------------------------------------------------------------------------------------
            <summary>
                Converts a short array normalized to "unit" float 0.0..1.0f
            </summary>
            <param name="inputBuffer">
                The inputBuffer to act on.
            </param>
            <param name="offset">
                The offset.
            </param>
            <param name="count">
                Number of significant bytes.
            </param>
            <returns>
                The given data converted to a float[].
            </returns>
            -------------------------------------------------------------------------------------------------
        </member>
        <member name="M:StreamCoders.Helpers.ArrayExtensions.ToFloatArray(System.Int16[],System.Int32,System.Int32)">
            -------------------------------------------------------------------------------------------------
            <summary>
                Converts a float array to a float array.
            </summary>
            <param name="inputBuffer">
                The inputBuffer to act on.
            </param>
            <param name="offset">
                The offset.
            </param>
            <param name="count">
                Number of significant bytes.
            </param>
            <returns>
                The given data converted to a float[].
            </returns>
            -------------------------------------------------------------------------------------------------
        </member>
        <member name="M:StreamCoders.Helpers.ArrayExtensions.ToIntMask(System.Boolean[])">
            <summary>
                Takes in a bool array of maximum 32 entries and returns an int bitmask.
            </summary>
            <param name="bitArray">An array of booleans</param>
            <returns>Returns an integer bitmask</returns>
        </member>
        <member name="T:StreamCoders.Helpers.CodecCapability">
            -------------------------------------------------------------------------------------------------
            <summary>
                Contains capability information of codecs.
            </summary>
            -------------------------------------------------------------------------------------------------
        </member>
        <member name="P:StreamCoders.Helpers.CodecCapability.Codec">
            -------------------------------------------------------------------------------------------------
            <summary>
                Gets the codec.
            </summary>
            <value>
                The codec.
            </value>
            -------------------------------------------------------------------------------------------------
        </member>
        <member name="P:StreamCoders.Helpers.CodecCapability.FrameworkSupport">
            -------------------------------------------------------------------------------------------------
            <summary>
                Indiciates whether the codec is currently supported in this version of the framework.
            </summary>
            <value>
                true if framework support, false if not.
            </value>
            -------------------------------------------------------------------------------------------------
        </member>
        <member name="T:StreamCoders.Helpers.SpeechCodecCapability">
            -------------------------------------------------------------------------------------------------
            <summary>
                Contains capability information for speech codecs.
            </summary>
            <seealso cref="T:StreamCoders.Helpers.CodecCapability" />
            -------------------------------------------------------------------------------------------------
        </member>
        <member name="F:StreamCoders.Helpers.SpeechCodecCapability.Bitrates">
            -------------------------------------------------------------------------------------------------
            <summary>
                Supported bitrates by the codec.
            </summary>
            -------------------------------------------------------------------------------------------------
        </member>
        <member name="F:StreamCoders.Helpers.SpeechCodecCapability.SampleFrequencies">
            -------------------------------------------------------------------------------------------------
            <summary>
                Supported sample frequencies by the codec.
            </summary>
            -------------------------------------------------------------------------------------------------
        </member>
        <member name="P:StreamCoders.Helpers.SpeechCodecCapability.PacketDuration">
            -------------------------------------------------------------------------------------------------
            <summary>
                The packet duration used by this codec.
            </summary>
            <value>
                The packet duration.
            </value>
            -------------------------------------------------------------------------------------------------
        </member>
        <member name="T:StreamCoders.Helpers.VideoCodecCapability">
            -------------------------------------------------------------------------------------------------
            <summary>
                Contains capability information for video codecs.
            </summary>
            <seealso cref="T:StreamCoders.Helpers.CodecCapability" />
            -------------------------------------------------------------------------------------------------
        </member>
        <member name="T:StreamCoders.Helpers.AudioCodecCapability">
            -------------------------------------------------------------------------------------------------
            <summary>
                Contains capability information for audio codecs.
            </summary>
            <seealso cref="T:StreamCoders.Helpers.CodecCapability" />
            -------------------------------------------------------------------------------------------------
        </member>
        <member name="M:StreamCoders.Helpers.IpAddressHelper.IsMulticastAddress(System.Net.IPAddress)">
            <summary>
                Determines whether an IP address is a multicast address. This method works with IPv4 and IPv6.
            </summary>
            <param name="ip">IPAddress instance to check.</param>
            <returns></returns>
        </member>
        <member name="M:StreamCoders.Helpers.NumberExtensions.IsInRange(System.Int32,System.Int32,System.Int32)">
            -------------------------------------------------------------------------------------------------
            <summary>
                Checks whether a value is in an interval that is inclusive.
            </summary>
            <param name="value">
                The value to act on.
            </param>
            <param name="lowerBound">
                The lower bound.
            </param>
            <param name="upperBound">
                The upper bound.
            </param>
            <returns>
                true if in range, false if not.
            </returns>
            -------------------------------------------------------------------------------------------------
        </member>
        <member name="M:StreamCoders.Helpers.NumberExtensions.SecondsToTicks(System.Double)">
            -------------------------------------------------------------------------------------------------
            <summary>
                Extension method converting seconds to (TimeSpan) ticks.
            </summary>
            <param name="seconds">
                Seconds.
            </param>
            <returns>
                Returns seconds converted to ticks.
            </returns>
            -------------------------------------------------------------------------------------------------
        </member>
        <member name="M:StreamCoders.Helpers.NumberExtensions.SecondsToTimeSpanAccurate(System.Double)">
            -------------------------------------------------------------------------------------------------
            <summary>
                Extension method converting seconds to TimeSpan accurately (1/10^7).
            </summary>
            <param name="seconds">
                Seconds.
            </param>
            <returns>
                Returns seconds converted to TimeSpan.
            </returns>
            -------------------------------------------------------------------------------------------------
        </member>
        <member name="M:StreamCoders.Helpers.NumberExtensions.ToIntSafeTrunc(System.Double)">
            -------------------------------------------------------------------------------------------------
            <summary>
                Safely truncates a double to int.
            </summary>
            <remarks>
                Depending on the processor architecture, double to int conversion does not always provide
                the expected results when the floating point value to be converted is greater than
                int.MaxValue and SSE2 instruction set is used (see CVTTSD2SI).
            </remarks>
            <param name="value">
                The value to act on.
            </param>
            <returns>
                value as an int.
            </returns>
            -------------------------------------------------------------------------------------------------
        </member>
        <member name="M:StreamCoders.Helpers.NumberExtensions.GreatestCommonDivisor(System.Int32,System.Int32)">
            <summary>
                Greatests the common divisor.
            </summary>
            <param name="a">Factor A</param>
            <param name="b">Factor B</param>
            <returns>Returns the GCD</returns>
        </member>
        <member name="M:StreamCoders.Helpers.OffsetBufferExtensions.ReadByte(StreamCoders.OffsetBuffer{System.Byte})">
            -------------------------------------------------------------------------------------------------
            <summary>
                Reads a byte value from an OffsetBuffer and increments OffsetBuffer.Offset while
                decrementing OffsetBuffer.Count.
            </summary>
            <param name="buffer">
                The buffer to read from.
            </param>
            <returns>
                The read byte value.
            </returns>
            -------------------------------------------------------------------------------------------------
        </member>
        <member name="M:StreamCoders.Helpers.OffsetBufferExtensions.ReadShort(StreamCoders.OffsetBuffer{System.Byte})">
            -------------------------------------------------------------------------------------------------
            <summary>
                Reads a short value from an OffsetBuffer and increments OffsetBuffer.Offset while
                decrementing OffsetBuffer.Count.
            </summary>
            <param name="buffer">
                The buffer to read from.
            </param>
            <returns>
                The read short value.
            </returns>
            -------------------------------------------------------------------------------------------------
        </member>
        <member name="M:StreamCoders.Helpers.OffsetBufferExtensions.ReadInt24(StreamCoders.OffsetBuffer{System.Byte})">
            -------------------------------------------------------------------------------------------------
            <summary>
                Reads a 24-bit int value from an OffsetBuffer and increments OffsetBuffer.Offset while
                decrementing OffsetBuffer.Count.
            </summary>
            <param name="buffer">
                The buffer to read from.
            </param>
            <returns>
                The 24-bit int value.
            </returns>
            -------------------------------------------------------------------------------------------------
        </member>
        <member name="M:StreamCoders.Helpers.OffsetBufferExtensions.ReadInt32(StreamCoders.OffsetBuffer{System.Byte})">
            -------------------------------------------------------------------------------------------------
            <summary>
                Reads a 32-bit int value from an OffsetBuffer and increments OffsetBuffer.Offset while
                decrementing OffsetBuffer.Count.
            </summary>
            <param name="buffer">
                The buffer to read from.
            </param>
            <returns>
                The 32-bit int value.
            </returns>
            -------------------------------------------------------------------------------------------------
        </member>
        <member name="M:StreamCoders.Helpers.OffsetBufferExtensions.ReadInt64(StreamCoders.OffsetBuffer{System.Byte})">
            -------------------------------------------------------------------------------------------------
            <summary>
                Reads a 64-bit int value from an OffsetBuffer and increments OffsetBuffer.Offset while
                decrementing OffsetBuffer.Count.
            </summary>
            <param name="buffer">
                The buffer to read from.
            </param>
            <returns>
                The 64-bit int value.
            </returns>
            -------------------------------------------------------------------------------------------------
        </member>
        <member name="M:StreamCoders.Helpers.OffsetBufferExtensions.ReadBuffer(StreamCoders.OffsetBuffer{System.Byte},System.Int32)">
            -------------------------------------------------------------------------------------------------
            <summary>
                Reads a buffer from an OffsetBuffer and increments OffsetBuffer.Offset while
                decrementing OffsetBuffer.Count.
            </summary>
            <param name="buffer">
                The buffer to read from.
            </param>
            <returns>
                The extracted buffer.
            </returns>
            -------------------------------------------------------------------------------------------------
        </member>
        <member name="M:StreamCoders.Helpers.OffsetBufferExtensions.Append(StreamCoders.OffsetBuffer{System.Byte},StreamCoders.OffsetBuffer{System.Byte})">
            -------------------------------------------------------------------------------------------------
            <summary>
                Appends two OffsetBuffers. A new instance is created.
            </summary>
            <param name="buffer1">
                The initial buffer to act on.
            </param>
            <param name="buffer2">
                The second buffer to append.
            </param>
            <returns>
                An OffsetBuffer&lt;byte&gt;
            </returns>
            -------------------------------------------------------------------------------------------------
        </member>
        <member name="M:StreamCoders.Helpers.OffsetBufferExtensions.Append(StreamCoders.OffsetBuffer{System.Byte},System.Byte[])">
            -------------------------------------------------------------------------------------------------
            <summary>
                Appends a byte array to an OffsetBuffer. A new instance is created.
            </summary>
            <param name="buffer1">
                The initial buffer to act on.
            </param>
            <param name="buffer2">
                The second buffer to append.
            </param>
            <returns>
                An OffsetBuffer&lt;byte&gt;
            </returns>
            -------------------------------------------------------------------------------------------------
        </member>
        <member name="T:StreamCoders.Helpers.RgbColor">
            <summary>
                Represents a 24-bit RGB color value.
            </summary>
        </member>
        <member name="P:StreamCoders.Helpers.RgbColor.R">
            <summary>
                Red component
            </summary>
        </member>
        <member name="P:StreamCoders.Helpers.RgbColor.G">
            <summary>
                Green component
            </summary>
        </member>
        <member name="P:StreamCoders.Helpers.RgbColor.B">
            <summary>
                Blue component
            </summary>
        </member>
        <member name="M:StreamCoders.Helpers.PictureMediaBufferExtensions.CopyToAndUnlock(StreamCoders.PictureMediaBuffer,System.Windows.Media.Imaging.WriteableBitmap@,System.Boolean)">
            <summary>
                Copies a PictureMediaBuffer to a WriteableBitmap and unlocks the input buffer.
            </summary>
            <param name="inputPictureMediaBuffer">The PictureMediaBuffer to be copied from.</param>
            <param name="outputWriteableBitmap">The WriteableBitmap to copy to.</param>
            <param name="setDirty">Indicates whether the WriteableBitmap should be set dirty.</param>
            <returns></returns>
        </member>
        <member name="M:StreamCoders.Helpers.PictureMediaBufferExtensions.CopyTo(StreamCoders.PictureMediaBuffer,System.Windows.Media.Imaging.WriteableBitmap@,System.Boolean)">
            <summary>
                Copies a PictureMediaBuffer to a WriteableBitmap.
            </summary>
            <param name="inputPictureMediaBuffer">The PictureMediaBuffer to be copied from.</param>
            <param name="outputWriteableBitmap">The WriteableBitmap to copy to.</param>
            <param name="setDirty">Indicates whether the WriteableBitmap should be set dirty.</param>
            <returns></returns>
        </member>
        <member name="M:StreamCoders.Helpers.PictureMediaBufferExtensions.DrawRectangle(StreamCoders.ChannelPictureMediaBuffer,StreamCoders.Imaging.Rectangle,StreamCoders.Helpers.RgbColor)">
            <summary>
                Draws a Rectangle within a ChannelPictureMediaBuffer
            </summary>
            <param name="buffer">Buffer to draw rectangle into.</param>
            <param name="rectangle">Rectangle dimensions</param>
            <param name="color">Color of the rectangle</param>
        </member>
        <member name="M:StreamCoders.Helpers.PictureMediaBufferExtensions.DrawRectangle(StreamCoders.PictureMediaBuffer,StreamCoders.Imaging.Rectangle,StreamCoders.Helpers.RgbColor)">
            <summary>
                Draws a Rectangle within a PictureMediaBuffer
            </summary>
            <param name="buffer">Buffer to draw rectangle into.</param>
            <param name="rectangle">Rectangle dimensions</param>
            <param name="color">Color of the rectangle</param>
        </member>
        <member name="M:StreamCoders.Helpers.PictureMediaBufferExtensions.DrawPoint(StreamCoders.ChannelPictureMediaBuffer,StreamCoders.Imaging.Point,StreamCoders.Helpers.RgbColor)">
            <summary>
                Draws a point within a PictureMediaBuffer
            </summary>
            <param name="buffer">PictureMediaBuffer to draw into</param>
            <param name="point">Point offset</param>
            <param name="color">Color of the point</param>
        </member>
        <member name="M:StreamCoders.Helpers.PictureMediaBufferExtensions.DrawPoint(StreamCoders.PictureMediaBuffer,StreamCoders.Imaging.Point,StreamCoders.Helpers.RgbColor)">
            <summary>
                Draws a point within a PictureMediaBuffer
            </summary>
            <param name="buffer">PictureMediaBuffer to draw into</param>
            <param name="point">Point offset</param>
            <param name="color">Color of the point</param>
        </member>
        <member name="M:StreamCoders.Helpers.PictureMediaBufferExtensions.DrawLine(StreamCoders.ChannelPictureMediaBuffer,StreamCoders.Imaging.Line,StreamCoders.Helpers.RgbColor)">
            <summary>
                Draws a line within a ChannelPictureMediaBuffer
            </summary>
            <param name="buffer">PictureMediaBuffer to draw into</param>
            <param name="line">Line structure</param>
            <param name="color">Color of the line</param>
        </member>
        <member name="M:StreamCoders.Helpers.PictureMediaBufferExtensions.DrawLine(StreamCoders.PictureMediaBuffer,StreamCoders.Imaging.Line,StreamCoders.Helpers.RgbColor)">
            <summary>
                Draws a line within a PictureMediaBuffer
            </summary>
            <param name="buffer">PictureMediaBuffer to draw into</param>
            <param name="line">Line structure</param>
            <param name="color">Color of the line</param>
        </member>
        <member name="T:StreamCoders.Helpers.NumberParity">
            <summary>
                Number parity type
            </summary>
        </member>
        <member name="F:StreamCoders.Helpers.NumberParity.Odd">
            <summary>
                Odd numbers
            </summary>
        </member>
        <member name="F:StreamCoders.Helpers.NumberParity.Even">
            <summary>
                Even numbers
            </summary>
        </member>
        <member name="F:StreamCoders.Helpers.NumberParity.Both">
            <summary>
                Any numbers
            </summary>
        </member>
        <member name="M:StreamCoders.Helpers.PortFinder.FindAvailablePort(System.Net.Sockets.ProtocolType,System.Int32,System.Int32,StreamCoders.Helpers.NumberParity,System.Int32)">
            <summary>
                Attempts to find a contiguous range of free local ports.
            </summary>
            <param name="protocolType">Choose either <c>Udp</c> or <c>Tcp</c></param>
            <param name="lowerBound">Lower bound of port range to search.</param>
            <param name="upperBound">Upper bound of port range to search.</param>
            <param name="parity">The number parity</param>
            <param name="lookahead">Number of ports to look ahead which must also be free.</param>
            <returns>Returns a port number that matches the critera, otherwise -1.</returns>
            <remarks>
                The method will attempt to find a port range within 20 iterations.
            </remarks>
        </member>
        <member name="M:StreamCoders.Helpers.PortFinder.IsLocalPortAvailable(System.Int32,System.Net.Sockets.ProtocolType)">
            <summary>
                Checks whether a particular local port is free.
            </summary>
            <param name="portNumber">Port number</param>
            <param name="protocolType">Choose either <c>Udp</c> or <c>Tcp</c></param>
            <returns>Returns true if the given port is free, otherwise false.</returns>
        </member>
        <member name="T:StreamCoders.Helpers.StringExtensions">
            <summary>
                Extension methods for string handling
            </summary>
        </member>
        <member name="M:StreamCoders.Helpers.StringExtensions.ToLittleEndian(System.String)">
            -------------------------------------------------------------------------------------------------
            <summary>
                <para>
                    Converts a string of characters from Big Endian byte order to Little Endian byte order.
                </para>
                <para>
                    Assumptions this makes about the string. Every two characters make up the smallest data
                    unit (analogous to byte). The entire string is the size of the systems natural unit of
                    data (analogous to a word).
                </para>
            </summary>
            <remarks>
                This function was designed to take in a Big Endian string of hexadecimal digits.
            </remarks>
            <exception cref="T:System.NullReferenceException">
                Thrown when a value was unexpectedly null.
            </exception>
            <param name="value">
                A string in Big Endian Byte order.
            </param>
            <returns>
                A string in Little Endian Byte order.
            </returns>
            <example>
                input:
                DEADBEEF
                output:
                EFBEADDE
            </example>
            -------------------------------------------------------------------------------------------------
        </member>
        <member name="M:StreamCoders.Helpers.StringExtensions.HexStringToByteArray(System.String)">
            -------------------------------------------------------------------------------------------------
            <summary>
                Hex string to byte array.
            </summary>
            <param name="hex">
                input string.
            </param>
            <returns>
                hex as a byte[].
            </returns>
            -------------------------------------------------------------------------------------------------
        </member>
        <member name="M:StreamCoders.Helpers.StringExtensions.ToIPEndPoint(System.String)">
            -------------------------------------------------------------------------------------------------
            <summary>
                A string extension method that parses an ip:port pair to IPEndpoint. The method handles
                both IPv4 and IPv6.
            </summary>
            <exception cref="T:System.FormatException">
                Thrown when the format of the parameter is incorrect.
            </exception>
            <param name="endPoint">
                The endpoint to parse. This can be either IPv4 or IPv6.
            </param>
            <returns>
                An IPEndPoint instance.
            </returns>
            -------------------------------------------------------------------------------------------------
        </member>
        <member name="M:StreamCoders.Helpers.StringExtensions.ToDeterministicGuid(System.String)">
            <summary>
                Creates a determinstic Windows GUID from a string.
            </summary>
            <param name="input">String to hash</param>
            <returns>Returns new Guid Object</returns>
        </member>
        <member name="T:StreamCoders.Helpers.LanguageCode">
            <summary>
                Represents a single language. Languages are stored in different ways to conveniently support various
                specifications.
            </summary>
        </member>
        <member name="F:StreamCoders.Helpers.LanguageCode.Code15Bit">
            -------------------------------------------------------------------------------------------------
            <summary>
                15-bit code. This is useful for ISO 14496 language codes.
            </summary>
            -------------------------------------------------------------------------------------------------
        </member>
        <member name="F:StreamCoders.Helpers.LanguageCode.Code2">
            -------------------------------------------------------------------------------------------------
            <summary>
                Two letter ISO 639-1 code.
            </summary>
            -------------------------------------------------------------------------------------------------
        </member>
        <member name="F:StreamCoders.Helpers.LanguageCode.Code3">
            -------------------------------------------------------------------------------------------------
            <summary>
                Three letter ISO 639-2/T.
            </summary>
            -------------------------------------------------------------------------------------------------
        </member>
        <member name="F:StreamCoders.Helpers.LanguageCode.EnglishName">
            -------------------------------------------------------------------------------------------------
            <summary>
                Language name in English.
            </summary>
            -------------------------------------------------------------------------------------------------
        </member>
        <member name="F:StreamCoders.Helpers.LanguageCode.Language">
            -------------------------------------------------------------------------------------------------
            <summary>
                Typed Language.
            </summary>
            -------------------------------------------------------------------------------------------------
        </member>
        <member name="M:StreamCoders.Helpers.LanguageCode.#ctor(System.String,System.String,System.String,StreamCoders.Helpers.Language)">
            -------------------------------------------------------------------------------------------------
            <summary>
                Constructor.
            </summary>
            <param name="code2">        The second code. </param>
            <param name="code3">        The third code. </param>
            <param name="englishName">  Name of the english. </param>
            <param name="language">     The language. </param>
            -------------------------------------------------------------------------------------------------
        </member>
        <member name="T:StreamCoders.Helpers.LanguageCodes">
            <summary>
                Contains all available language codes based on ISO 639-2/T specification.
                The class is searchable for enumeration, 3-letter (T) codes and 15-bit representation.
            </summary>
        </member>
        <member name="M:StreamCoders.Helpers.LanguageCodes.Find(StreamCoders.Helpers.Language)">
            <summary>
                Finds language code.
            </summary>
            <param name="language">Language code enumeration.</param>
            <returns>Returns the language code.</returns>
        </member>
        <member name="M:StreamCoders.Helpers.LanguageCodes.FindByCode3(System.String)">
            <summary>
                Attempts to find language code based on 3-letter code. (ISO 936-2/T)
            </summary>
            <param name="code">3-letter code.</param>
            <returns>Returns language code object, otherwise null.</returns>
        </member>
        <member name="M:StreamCoders.Helpers.LanguageCodes.FindByCode15Bit(System.UInt16)">
            <summary>
                Attempts to find language code based on 15-bit representation of the 3-letter code (ISO 14496-12)
            </summary>
            <param name="code">15-bit language code.</param>
            <returns>Returns language code object, otherwise null.</returns>
        </member>
        <member name="T:StreamCoders.Helpers.Precondition">
            -------------------------------------------------------------------------------------------------
            <summary>
                Evaluates function preconditions and throws or raises an event of the condition evaluates
                to false.
            </summary>
            -------------------------------------------------------------------------------------------------
        </member>
        <member name="P:StreamCoders.Helpers.Precondition.IgnoreFailures">
            -------------------------------------------------------------------------------------------------
            <summary>
                If true all false evaluations will be ignored.
            </summary>
            <value>
                true if ignore failures, false if not.
            </value>
            -------------------------------------------------------------------------------------------------
        </member>
        <member name="M:StreamCoders.Helpers.Precondition.Evaluate(System.Boolean,System.String)">
            -------------------------------------------------------------------------------------------------
            <summary>
                Evaluates a condition.
            </summary>
            <param name="condition">
                true to condition.
            </param>
            <param name="message">
                (optional) the message to be contained in the exception.
            </param>
            -------------------------------------------------------------------------------------------------
        </member>
        <member name="M:StreamCoders.Helpers.Precondition.Evaluate``1(System.Boolean,System.String)">
            -------------------------------------------------------------------------------------------------
            <summary>
                Evaluates a condition.
            </summary>
            <typeparam name="T">
                Generic type parameter.
            </typeparam>
            <param name="condition">
                true to condition.
            </param>
            <param name="message">
                (optional) the message to be contained in the exception.
            </param>
            -------------------------------------------------------------------------------------------------
        </member>
        <member name="T:StreamCoders.Helpers.PreconditionFailedException">
            -------------------------------------------------------------------------------------------------
            <summary>
                Exception for signaling precondition failed errors.
            </summary>
            <seealso cref="T:System.Exception" />
            -------------------------------------------------------------------------------------------------
        </member>
        <member name="T:StreamCoders.Helpers.Singleton`1">
            <summary>
                Implements generic Singleton pattern.
            </summary>
            <typeparam name="T">Type of class to instantiate.</typeparam>
            <remarks>
                The classes used together with Singleton must have a default constructor.
            </remarks>
        </member>
        <member name="P:StreamCoders.Helpers.Singleton`1.Instance">
            <summary>
                Gets an instance of type T.
            </summary>
        </member>
        <member name="T:StreamCoders.Helpers.TypeFactory`2">
            -------------------------------------------------------------------------------------------------
            <summary>
                Provides a single argument (A) type factory for type (T) using efficient lambda expression compile.
            </summary>
            <typeparam name="T">
                Type of Object to create.
            </typeparam>
            <typeparam name="A">
                Type of constructor argument 1.
            </typeparam>
            -------------------------------------------------------------------------------------------------
        </member>
        <member name="T:StreamCoders.Helpers.TypeFactory`3">
            -------------------------------------------------------------------------------------------------
            <summary>
                Provides a single argument (A) type factory for type (T) using efficient lambda expression compile.
            </summary>
            <typeparam name="T">
                Type of Object to create.
            </typeparam>
            <typeparam name="A">
                Type of constructor argument a.
            </typeparam>
            <typeparam name="B">
                Type of constructor argument b.
            </typeparam>
            -------------------------------------------------------------------------------------------------
        </member>
        <member name="M:StreamCoders.Helpers.TypeFactory`3.Create(`1,`2)">
            -------------------------------------------------------------------------------------------------
            <summary>
                Creates and instance of type T.
            </summary>
            <param name="a">
                Parameter a of type A.
            </param>
            <param name="b">
                Parameter b of type B.
            </param>
            <returns>
                A new instance of type T.
            </returns>
            -------------------------------------------------------------------------------------------------
        </member>
        <member name="T:StreamCoders.Helpers.Values.HighResTimer">
            <summary>
                Provides a High resolution elapsed timer
            </summary>
        </member>
        <member name="T:StreamCoders.Helpers.Values.HighResWatch">
            <summary>
                Provides a simple way to query elapsed time since creation of object using HighResTimer.
            </summary>
        </member>
        <member name="T:StreamCoders.Helpers.Randomizer">
            -------------------------------------------------------------------------------------------------
            <summary>
                A convenience class providing random numbers seeded from the local clock.
            </summary>
            -------------------------------------------------------------------------------------------------
        </member>
        <member name="P:StreamCoders.Helpers.Randomizer.NextInt">
            -------------------------------------------------------------------------------------------------
            <summary>
                Produces random number for type int.
            </summary>
            -------------------------------------------------------------------------------------------------
        </member>
        <member name="P:StreamCoders.Helpers.Randomizer.NextUInt">
            -------------------------------------------------------------------------------------------------
            <summary>
                Produces random number for type uint.
            </summary>
            -------------------------------------------------------------------------------------------------
        </member>
        <member name="P:StreamCoders.Helpers.Randomizer.NextDouble">
            -------------------------------------------------------------------------------------------------
            <summary>
                Produces random number for type double.
            </summary>
            -------------------------------------------------------------------------------------------------
        </member>
        <member name="T:StreamCoders.Helpers.WindowsVersion">
            -------------------------------------------------------------------------------------------------
            <summary>
                Contains helper functions dealing with the version of windows.
            </summary>
            -------------------------------------------------------------------------------------------------
        </member>
        <member name="P:StreamCoders.Helpers.WindowsVersion.Version">
            -------------------------------------------------------------------------------------------------
            <summary>
                Gets the current operating system version.
            </summary>
            <value>
                The operating system version.
            </value>
            -------------------------------------------------------------------------------------------------
        </member>
        <member name="P:StreamCoders.Helpers.WindowsVersion.IsServer">
            -------------------------------------------------------------------------------------------------
            <summary>
                Indicates whether the current operating system is a server instead of workstation.
            </summary>
            <value>
                true if this OS is a server. If false then the OS is a workstation edition.
            </value>
            -------------------------------------------------------------------------------------------------
        </member>
        <member name="T:StreamCoders.Properties.Resources">
            <summary>
              Eine stark typisierte Ressourcenklasse zum Suchen von lokalisierten Zeichenfolgen usw.
            </summary>
        </member>
        <member name="P:StreamCoders.Properties.Resources.ResourceManager">
            <summary>
              Gibt die zwischengespeicherte ResourceManager-Instanz zurück, die von dieser Klasse verwendet wird.
            </summary>
        </member>
        <member name="P:StreamCoders.Properties.Resources.Culture">
            <summary>
              Überschreibt die CurrentUICulture-Eigenschaft des aktuellen Threads für alle
              Ressourcenzuordnungen, die diese stark typisierte Ressourcenklasse verwenden.
            </summary>
        </member>
        <member name="T:StreamCoders.Devices.Chromecast.ChromecastTransaction">
            -------------------------------------------------------------------------------------------------
            <summary>
                A transaction forming a request/response pair, given a request ID.
            </summary>
            -------------------------------------------------------------------------------------------------
        </member>
        <member name="M:StreamCoders.Devices.Chromecast.WebHelper.GetHttpStreamAsync(System.Uri)">
            -------------------------------------------------------------------------------------------------
            <summary>
                Gets HTTP stream.
            </summary>
            <param name="url">
                URL of the resource.
            </param>
            <returns>
                A response stream or null if failed.
            </returns>
            -------------------------------------------------------------------------------------------------
        </member>
        <member name="M:StreamCoders.Devices.Chromecast.WebHelper.GetHttpStream(System.String)">
            -------------------------------------------------------------------------------------------------
            <summary>
                Gets HTTP stream.
            </summary>
            <param name="url">
                URL of the resource.
            </param>
            <returns>
                A response stream or null if failed.
            </returns>
            -------------------------------------------------------------------------------------------------
        </member>
        <member name="P:StreamCoders.Devices.Chromecast.ChromecastDeviceDescription.EndPoint">
            -------------------------------------------------------------------------------------------------
            <summary>
                Parses the v1 response from a chromecast device
            </summary>
            <param name="response">
                The response.
            </param>
            -------------------------------------------------------------------------------------------------
        </member>
        <member name="T:StreamCoders.Devices.Chromecast.ConnectRequest">
            -------------------------------------------------------------------------------------------------
            <summary>
                Connects to a virtual device.
            </summary>
            -------------------------------------------------------------------------------------------------
        </member>
        <member name="F:StreamCoders.Devices.Chromecast.DiscoveryConstants.SsdpInvocationDelay">
            -------------------------------------------------------------------------------------------------
            <summary>
                The delay used for SSDP discovery when no mDNS devices where found.
            </summary>
            -------------------------------------------------------------------------------------------------
        </member>
        <member name="F:StreamCoders.Devices.Chromecast.DeviceType.Generic">
            <summary>
                Indicates a generic media receiver
            </summary>
        </member>
        <member name="F:StreamCoders.Devices.Chromecast.DeviceType.Chromecast">
            <summary>
                Indicates a Chromecast device
            </summary>
        </member>
        <member name="F:StreamCoders.Devices.Chromecast.DeviceType.Television">
            <summary>
                Indicates a television media receiver (for future use)
            </summary>
        </member>
        <member name="T:StreamCoders.Devices.Chromecast.GetAppAvailabilityRequest">
            -------------------------------------------------------------------------------------------------
            <summary>
                Get application availability request.
            </summary>
            -------------------------------------------------------------------------------------------------
        </member>
        <member name="T:StreamCoders.Devices.Chromecast.GetMediaStatusRequest">
            -------------------------------------------------------------------------------------------------
            <summary>
                Retrieves the media status. The Chromecast device will answer with a MEDIA_STATUS response.
            </summary>
            -------------------------------------------------------------------------------------------------
        </member>
        <member name="T:StreamCoders.Devices.Chromecast.GetStatusRequest">
            -------------------------------------------------------------------------------------------------
            <summary>
                Retrieves the media status.
            </summary>
            -------------------------------------------------------------------------------------------------
        </member>
        <member name="T:StreamCoders.Devices.Chromecast.LaunchRequest">
            -------------------------------------------------------------------------------------------------
            <summary>
                Launches an application on the virtual device.
            </summary>
            -------------------------------------------------------------------------------------------------
        </member>
        <member name="T:StreamCoders.Devices.Chromecast.LoadRequest">
            -------------------------------------------------------------------------------------------------
            <summary>
                Loads new content into the media player.
            </summary>
            -------------------------------------------------------------------------------------------------
        </member>
        <member name="T:StreamCoders.Devices.Chromecast.MediaRequest">
            <summary>
                MediaRequest class represents the base type for all request made towards the media namespace.
            </summary>
        </member>
        <member name="T:StreamCoders.Devices.Chromecast.MediaRequestWithMediaSessionId">
            <summary>
                Represents all media requests that contain a media session id.
            </summary>
        </member>
        <member name="P:StreamCoders.Devices.Chromecast.MediaInformation.StreamType">
            -------------------------------------------------------------------------------------------------
            <summary>
                Gets or sets the type of the stream. This can be BUFFERED, LIVE or NONE
            </summary>
            <value>
                The type of the stream.
            </value>
            -------------------------------------------------------------------------------------------------
        </member>
        <member name="T:StreamCoders.Devices.Chromecast.PlayRequest">
            -------------------------------------------------------------------------------------------------
            <summary>
                Begins playback of the content that was loaded with the load call, playback is continued
                from the current time position.
            </summary>
            -------------------------------------------------------------------------------------------------
        </member>
        <member name="T:StreamCoders.Devices.Chromecast.SeekRequest">
            -------------------------------------------------------------------------------------------------
            <summary>
                Sets the current position in the stream. Triggers a STATUS event notification to all
                sender applications. If the position provided is outside the range of valid positions for
                the current content, then the player should pick a valid position as close to the
                requested position as possible.
            </summary>
            -------------------------------------------------------------------------------------------------
        </member>
        <member name="F:StreamCoders.Devices.Chromecast.SeekRequest.currentTime">
            -------------------------------------------------------------------------------------------------
            <summary>
                Seconds since beginning of content. If the content is live content, and position is not specifed, the stream will
                start at the live position
            </summary>
            -------------------------------------------------------------------------------------------------
        </member>
        <member name="F:StreamCoders.Devices.Chromecast.SeekRequest.resumeState">
            -------------------------------------------------------------------------------------------------
            <summary>
                If this is not set, playback status will not change; the following values apply "PLAYBACK_START" or
                "PLAYBACK_PAUSE"
            </summary>
            -------------------------------------------------------------------------------------------------
        </member>
        <member name="T:StreamCoders.Devices.Chromecast.SetVolumeRequest">
            -------------------------------------------------------------------------------------------------
            <summary>
                Sets the stream volume. A change in stream volume will not trigger any UI on the receiver.
            </summary>
            -------------------------------------------------------------------------------------------------
        </member>
        <member name="T:StreamCoders.Devices.Chromecast.StopRequest">
            -------------------------------------------------------------------------------------------------
            <summary>
                Stops playback of the current content. Triggers a STATUS event notification to all sender
                applications. After this command the content will no longer be loaded and the
                mediaSessionId is invalidated.
            </summary>
            -------------------------------------------------------------------------------------------------
        </member>
        <member name="T:StreamCoders.Devices.Chromecast.ChromecastDeviceDiscovery">
            -------------------------------------------------------------------------------------------------
            <summary>
                Chromecast device discovery class.
            </summary>
            <remarks>
                Instantiate, Subscribe to event and call start to receive
                <c>IDeviceDiscoveryReportItem</c> objects.
            </remarks>
            -------------------------------------------------------------------------------------------------
        </member>
        <member name="P:StreamCoders.Devices.Chromecast.ChromecastDeviceDiscovery.CancelSsdpDiscoveryOnMDns">
            -------------------------------------------------------------------------------------------------
            <summary>
                Gets or sets a value indicating whether to cancel the SSDP discovery on mDNS.
            </summary>
            <remarks>
                If false then <c>DiscoveryConstants.SsdpInvocationDelay</c> is in effect.
                If true then SSDP discovery is canceled as soon as the first mDNS packet arrives.
            </remarks>
            -------------------------------------------------------------------------------------------------
        </member>
        <member name="M:StreamCoders.Devices.Chromecast.ChromecastDeviceDiscovery.Start">
            -------------------------------------------------------------------------------------------------
            <summary>
                Starts discovery of Chromecast dongles in local subnet. Subscribe to <c>DeviceDiscovered</c> to
                receive device information.
            </summary>
            -------------------------------------------------------------------------------------------------
        </member>
        <member name="T:StreamCoders.Devices.Chromecast.ChromecastDeviceDiscoveryReportItem">
            -------------------------------------------------------------------------------------------------
            <summary>
                Device discovery report item specific to Chromecast.
            </summary>
            -------------------------------------------------------------------------------------------------
        </member>
        <member name="T:StreamCoders.Devices.Chromecast.DeviceDiscovery">
            -------------------------------------------------------------------------------------------------
            <summary>
                Abstract class representing the discovery process of playback devices.
            </summary>
            -------------------------------------------------------------------------------------------------
        </member>
        <member name="T:StreamCoders.Devices.Chromecast.DeviceDiscoveryEventArgs">
            -------------------------------------------------------------------------------------------------
            <summary>
                Passed as event argument for devices discovered via <c>DeviceDiscovery</c> instance.
            </summary>
            -------------------------------------------------------------------------------------------------
        </member>
        <member name="T:StreamCoders.Devices.Chromecast.DeviceDiscoveryReportItem">
            -------------------------------------------------------------------------------------------------
            <summary>
                Interface for device discovery report.
            </summary>
            -------------------------------------------------------------------------------------------------
        </member>
        <member name="M:StreamCoders.Devices.Chromecast.DeviceDiscoveryReportItem.ToDeviceDescription">
            -------------------------------------------------------------------------------------------------
            <summary>
                Creates a <c>Device</c> instance from a <c>DeviceDiscoveryReport</c>
            </summary>
            <returns>
                This Report as an <c>IDevice</c>.
            </returns>
            -------------------------------------------------------------------------------------------------
        </member>
        <member name="T:StreamCoders.Devices.Chromecast.SSDPDiscovery">
            -------------------------------------------------------------------------------------------------
            <summary>
                Internal class representing the discovery process of SSDP devices on the 239.255.255.250 multicast address
            </summary>
            -------------------------------------------------------------------------------------------------
        </member>
        <member name="T:StreamCoders.Devices.Chromecast.SSDPResponse">
            -------------------------------------------------------------------------------------------------
            <summary>
                SSDP response from SSDP discovery via <c>SSDPDiscovery></c>.
            </summary>
            -------------------------------------------------------------------------------------------------
        </member>
        <member name="M:StreamCoders.Devices.Chromecast.StreamExtensions.DeSerializeJson``1(System.IO.Stream)">
            -------------------------------------------------------------------------------------------------
            <summary>
                Deserializes a <c>inputStream</c> containing JSON to type T
            </summary>
            <typeparam name="T">
                Generic type parameter.
            </typeparam>
            <param name="stream">
                The stream to act on.
            </param>
            <returns>
                Deserialized type instance.
            </returns>
            -------------------------------------------------------------------------------------------------
        </member>
        <member name="M:StreamCoders.Devices.Chromecast.CastV2.ChromecastClient.WriteConnectionAsync(StreamCoders.Devices.Chromecast.Request,System.String)">
            -------------------------------------------------------------------------------------------------
            <summary>
                Writes to the connection namespace
            </summary>
            <param name="request">
                The request to write.
            </param>
            <param name="destinationId">
                Identifier for the destination.
            </param>
            <returns>
                A Task.
            </returns>
            -------------------------------------------------------------------------------------------------
        </member>
        <member name="M:StreamCoders.Devices.Chromecast.CastV2.ChromecastClient.WriteReceiverAsync(StreamCoders.Devices.Chromecast.RequestWithId)">
            -------------------------------------------------------------------------------------------------
            <summary>
                Writes to the receiver namespace
            </summary>
            <param name="request">
                The request to write
            </param>
            <returns>
                A Task.
            </returns>
            -------------------------------------------------------------------------------------------------
        </member>
        <member name="M:StreamCoders.Devices.Chromecast.CastV2.ChromecastClient.WriteMediaAsync(StreamCoders.Devices.Chromecast.MediaRequest)">
            -------------------------------------------------------------------------------------------------
            <summary>
                Writes to the media namespace.
            </summary>
            <param name="request">
                The request to write.
            </param>
            <returns>
                A Task.
            </returns>
            -------------------------------------------------------------------------------------------------
        </member>
        <member name="F:StreamCoders.Devices.Chromecast.CastV2.ChromecastClientResponseReceivedEventArgs.OriginalRequest">
            -------------------------------------------------------------------------------------------------
            <summary>
                Contains the original request sent, if the request had a request ID. Otherwise null.
            </summary>
            -------------------------------------------------------------------------------------------------
        </member>
        <member name="T:StreamCoders.Devices.ProtoCamConnectEventArgs">
            -------------------------------------------------------------------------------------------------
            <summary>
                Event data passed when <c>ProtoCam.OnConnected</c> is raised.
            </summary>
            -------------------------------------------------------------------------------------------------
        </member>
        <member name="P:StreamCoders.Devices.ProtoCamConnectEventArgs.Width">
            -------------------------------------------------------------------------------------------------
            <summary>
                Gets  the configurated display width of the device.
            </summary>
            <value>
                The width.
            </value>
            -------------------------------------------------------------------------------------------------
        </member>
        <member name="P:StreamCoders.Devices.ProtoCamConnectEventArgs.Height">
            -------------------------------------------------------------------------------------------------
            <summary>
                Gets the configurated display height of the device.
            </summary>
            <value>
                The height.
            </value>
            -------------------------------------------------------------------------------------------------
        </member>
        <member name="P:StreamCoders.Devices.ProtoCamConnectEventArgs.FramesPerSecond">
            -------------------------------------------------------------------------------------------------
            <summary>
                Gets the configurated frames per second of the device.
            </summary>
            <value>
                The frames per second.
            </value>
            -------------------------------------------------------------------------------------------------
        </member>
        <member name="P:StreamCoders.Devices.ProtoCamConnectEventArgs.ColorDepth">
            -------------------------------------------------------------------------------------------------
            <summary>
                Gets the configured color depth in bits.
            </summary>
            <value>
                The depth of the color.
            </value>
            -------------------------------------------------------------------------------------------------
        </member>
        <member name="P:StreamCoders.Devices.ProtoCamConnectEventArgs.ParentProcessName">
            -------------------------------------------------------------------------------------------------
            <summary>
                Gets the name of the parent process that instantiated ProtoCam.
            </summary>
            <value>
                The name of the parent process.
            </value>
            -------------------------------------------------------------------------------------------------
        </member>
        <member name="P:StreamCoders.Devices.ProtoCamConnectEventArgs.MajorVersion">
            -------------------------------------------------------------------------------------------------
            <summary>
                Gets the major version of the ProtoCam virtual capture device.
            </summary>
            <value>
                The major version.
            </value>
            -------------------------------------------------------------------------------------------------
        </member>
        <member name="P:StreamCoders.Devices.ProtoCamConnectEventArgs.MinorVersion">
            -------------------------------------------------------------------------------------------------
            <summary>
                Gets the minor version of the ProtoCam virtual capture device.
            </summary>
            <value>
                The minor version.
            </value>
            -------------------------------------------------------------------------------------------------
        </member>
        <member name="T:StreamCoders.Devices.ProtoCamClient">
            -------------------------------------------------------------------------------------------------
            <summary>
                ProtoCamClient connects to the ProtoCam virtual capture device.
                When the client is active regular connection attempts are made to connect to the virtual device.
            </summary>
            -------------------------------------------------------------------------------------------------
        </member>
        <member name="P:StreamCoders.Devices.ProtoCamClient.PollInterval">
            -------------------------------------------------------------------------------------------------
            <summary>
                The poll interval is how often the client tries to connect to the ProtoCam device.
            </summary>
            -------------------------------------------------------------------------------------------------
        </member>
        <member name="M:StreamCoders.Devices.ProtoCamClient.Start">
            -------------------------------------------------------------------------------------------------
            <summary>
                Starts this ProtoCamClient polling loop.
            </summary>
            <remarks>
                Events <c>OnConnected</c> and <c>OnDisconnected</c> must be hooked up
                before calling this method.
            </remarks>
            -------------------------------------------------------------------------------------------------
        </member>
        <member name="M:StreamCoders.Devices.ProtoCamClient.Stop">
            -------------------------------------------------------------------------------------------------
            <summary>
                Stops the ProtoCamClient by stopping the polling loop. Start may be called again to reactive the polling loop.
            </summary>
            -------------------------------------------------------------------------------------------------
        </member>
        <member name="M:StreamCoders.Devices.ProtoCamClient.SendNextFrame(StreamCoders.PictureMediaBuffer)">
            -------------------------------------------------------------------------------------------------
            <summary>
                Sends a frame to ProtoCam for immediate display. This function can only be called after the OnConnected event was
                raised.
            </summary>
            <param name="inputBuffer">
                Buffer for input data.
            </param>
            -------------------------------------------------------------------------------------------------
        </member>
        <member name="M:StreamCoders.Devices.ProtoCamClient.CompressDeflate(System.Byte[])">
            <summary>
                Compresses the data using zlib. However the native Zlib deflator requires a checksum and header, so we have to do
                some additional processing.
                See https://tlzprgmr.wordpress.com/2010/03/17/net-deflatestreamzlib-compatibility/
            </summary>
            <param name="input">The input.</param>
            <returns>System.Byte[].</returns>
        </member>
        <member name="M:StreamCoders.Devices.ProtoCamClient.Adler32(System.Byte[])">
            <summary>
                adler-32 checksum
            </summary>
            <param name="bytes">The bytes.</param>
            <returns>System.Int32.</returns>
        </member>
        <member name="T:StreamCoders.Devices.CaptureDeviceMulticastProvider">
            <summary>
                WebcamMulticastProvider allows the reuse of capture devices by buffering retrieved frames
                for the duration of a picture. For clients to receive frames each
                CaptureDeviceMulticastProviderClient instance must add itself to the provider.
            </summary>
            <example>
                <code title="Example" description="" lang="CS">
            static void Main(string[] args)
                    {
                        CamCapture cam = new CamCapture();
                        var devices = cam.GetDeviceList();
             
                        var metrics = cam.SelectDevice(devices[0]);
             
                        cam.SelectMetrics(metrics[1]);
             
                        Debug.Assert(cam.Start());
             
                        CaptureDeviceMulticastProvider provider = new CaptureDeviceMulticastProvider(cam, metrics[1]);
             
                        Debug.Assert(provider.Start());
             
                        List&lt;CaptureDeviceMulticastProviderClient&gt; clients = new List&lt;CaptureDeviceMulticastProviderClient&gt;();
                        clients.Add(provider.AddClient(new CaptureDeviceMulticastProviderClient()
                            {
                                Width = 1024,
                                Height = 768
                            }));
                        clients.Add(provider.AddClient(new CaptureDeviceMulticastProviderClient()
                        {
                            Width = 352,
                            Height = 288
                        }));
                        clients.Add(provider.AddClient(new CaptureDeviceMulticastProviderClient()
                        {
                            Width = 176,
                            Height = 144
                        }));
             
                        while (true)
                        {
                            foreach (var client in clients)
                            {
                                var pic = client.GetFrame();
             
                                if (pic == null)
                                {
                                    Console.WriteLine("picture is null");
                                }
                                else
                                    Console.WriteLine("{0}, {1}x{2}, SizeIncludingHeader: {3}, Start: {4}, End {5}", client.Id, client.Width, client.Height, pic.Buffer.Count, pic.StartTime, pic.EndTime);
                            }
             
                            Thread.Sleep(1000);
                        }
             
                    }</code>
            </example>
        </member>
        <member name="M:StreamCoders.Devices.CaptureDeviceMulticastProvider.#ctor(StreamCoders.Devices.ICaptureDevice,StreamCoders.Devices.VideoCaptureDeviceFormat,StreamCoders.TransformDelegate)">
            -------------------------------------------------------------------------------------------------
            <summary>
                Constructs instance of a provider. Multiple instances of CaptureDeviceMulticastProvider
                with the same capture device are not permitted.
            </summary>
            <param name="CaptureDevice">
                The ICaptureDevice object (e.g. CamCapture) must be ready to go with device and metrics
                selected. Start must already have been called successfully.
            </param>
            <param name="selectedMetrics">
                The selected metrics. It is recommended to use the highest possible resolution in order
                satisfy all scenarios.
            </param>
            <param name="transformFunction">
                Optional function to handle transformations. (e.g. resizing, 16->24-bit conversion)
            </param>
            -------------------------------------------------------------------------------------------------
        </member>
        <member name="P:StreamCoders.Devices.CaptureDeviceMulticastProvider.CaptureDevice">
            -------------------------------------------------------------------------------------------------
            <summary>
                Gets the capture device used in this instance of the multicast provider.
            </summary>
            <value>
                The currently used capture device.
            </value>
            -------------------------------------------------------------------------------------------------
        </member>
        <member name="M:StreamCoders.Devices.CaptureDeviceMulticastProvider.Start">
            -------------------------------------------------------------------------------------------------
            <summary>
                Starts this CaptureDeviceMulticastProvider.
            </summary>
            <returns>
                true if it succeeds, false if it fails.
            </returns>
            -------------------------------------------------------------------------------------------------
        </member>
        <member name="M:StreamCoders.Devices.CaptureDeviceMulticastProvider.Stop">
            -------------------------------------------------------------------------------------------------
            <summary>
                Stops this CaptureDeviceMulticastProvider.
            </summary>
            -------------------------------------------------------------------------------------------------
        </member>
        <member name="M:StreamCoders.Devices.CaptureDeviceMulticastProvider.AddClient(StreamCoders.Devices.CaptureDeviceMulticastProviderClient)">
            -------------------------------------------------------------------------------------------------
            <summary>
                Adds a client to the provider.
            </summary>
            <param name="client">
                The participant.
            </param>
            -------------------------------------------------------------------------------------------------
        </member>
        <member name="M:StreamCoders.Devices.CaptureDeviceMulticastProvider.RemoveClient(StreamCoders.Devices.CaptureDeviceMulticastProviderClient)">
            -------------------------------------------------------------------------------------------------
            <summary>
                Removes a client from the provider.
            </summary>
            <param name="client">
                The participant.
            </param>
            -------------------------------------------------------------------------------------------------
        </member>
        <member name="P:StreamCoders.Devices.CaptureDeviceMulticastProviderClient.Width">
            -------------------------------------------------------------------------------------------------
            <summary>
                Gets or sets the desired width of the output pictures.
            </summary>
            <value>
                The desired width of the output pictures
            </value>
            -------------------------------------------------------------------------------------------------
        </member>
        <member name="P:StreamCoders.Devices.CaptureDeviceMulticastProviderClient.Height">
            -------------------------------------------------------------------------------------------------
            <summary>
                Gets or sets the desired height of the output pictures.
            </summary>
            <value>
                The desired height of the output pictures
            </value>
            -------------------------------------------------------------------------------------------------
        </member>
        <member name="P:StreamCoders.Devices.CaptureDeviceMulticastProviderClient.Id">
            -------------------------------------------------------------------------------------------------
            <summary>
                A unique ID for client.
            </summary>
            <value>
                A unique ID for client.
            </value>
            -------------------------------------------------------------------------------------------------
        </member>
        <member name="P:StreamCoders.Devices.CaptureDeviceMulticastProviderClient.TimeRelativeToSelf">
            -------------------------------------------------------------------------------------------------
            <summary>
                Set to true if the StartTime/EndTime pairs should be recalculated relative to the
                WebcamProxyParticipants start time.
            </summary>
            <value>
                true if time relative to self, false if not.
            </value>
            -------------------------------------------------------------------------------------------------
        </member>
        <member name="P:StreamCoders.Devices.CaptureDeviceMulticastProviderClient.FramesReceived">
            -------------------------------------------------------------------------------------------------
            <summary>
                The number of times GetFrame was called with a successful return value.
            </summary>
            <value>
                The frames received.
            </value>
            -------------------------------------------------------------------------------------------------
        </member>
        <member name="M:StreamCoders.Devices.CaptureDeviceMulticastProviderClient.GetFrame">
            -----------------------------------------------------------------------------------------------
            <summary>
                Retrieves the time aligned frame from the WebcamMulticastProvider. If necessary, the picture will be
                resized to the configured resolution.
            </summary>
            <exception cref="T:System.ArgumentNullException">
                Thrown when object was wrongly initialized.
            </exception>
            <returns>
                A picture frame.
            </returns>
            -------------------------------------------------------------------------------------------------
        </member>
        <member name="M:StreamCoders.Devices.ICaptureDevice.GetFrame">
            <summary>
             Attempts to retrieve the next frame from a capture device
            </summary>
        </member>
        <member name="P:StreamCoders.Devices.CaptureDevice.SelectedDevice">
            <summary>
            Returns the currently selected capture device
            </summary>
        </member>
        <member name="P:StreamCoders.Devices.CaptureDevice.SelectedFormat">
            <summary>
            Returns the currently selected capture device format
            </summary>
        </member>
        <member name="M:StreamCoders.Devices.CaptureDevice.GetFrame">
            <summary>
             Attempts to retrieve the next frame from a capture device
            </summary>
        </member>
        <member name="T:StreamCoders.Devices.ICaptureDeviceFormat">
            <summary>
            Contains information about the format provided by a capture device
            </summary>
        </member>
        <member name="T:StreamCoders.Devices.ICaptureDeviceInformation">
            <summary>
            Provides information about capture devices. It is used by all other capture
            device classes.
            </summary>
        </member>
        <member name="F:StreamCoders.Devices.ScreenBoundType.WholeScreen">
            <summary>
                Indicates the whole screen including the task bar.
            </summary>
        </member>
        <member name="F:StreamCoders.Devices.ScreenBoundType.WorkArea">
            <summary>
                Indicates the whole screen minus the task bar.
            </summary>
        </member>
        <member name="T:StreamCoders.Devices.VideoCaptureDeviceFormat">
            -------------------------------------------------------------------------------------------------
            <summary>
                Represents Resolution, Framerate, color-depth and internal ID of a capture device.
            </summary>
            -------------------------------------------------------------------------------------------------
        </member>
        <member name="P:StreamCoders.Devices.VideoCaptureDeviceFormat.BitCount">
            -------------------------------------------------------------------------------------------------
            <summary>
                Bits per Pixel.
            </summary>
            -------------------------------------------------------------------------------------------------
        </member>
        <member name="P:StreamCoders.Devices.VideoCaptureDeviceFormat.ColorPlanes">
            -------------------------------------------------------------------------------------------------
            <summary>
                Color planes per picture.
            </summary>
            -------------------------------------------------------------------------------------------------
        </member>
        <member name="P:StreamCoders.Devices.VideoCaptureDeviceFormat.Framerate">
            -------------------------------------------------------------------------------------------------
            <summary>
                Frames per second.
            </summary>
            -------------------------------------------------------------------------------------------------
        </member>
        <member name="P:StreamCoders.Devices.VideoCaptureDeviceFormat.BitRate">
            -------------------------------------------------------------------------------------------------
            <summary>
                Bit-rate per second.
            </summary>
            -------------------------------------------------------------------------------------------------
        </member>
        <member name="P:StreamCoders.Devices.VideoCaptureDeviceFormat.IsImageBottomUp">
            -------------------------------------------------------------------------------------------------
            <summary>
                Indicates the the image is a bottom-up DIB and its origin is the lower-left corner.
            </summary>
            <value>
                true if the image bottom up, false if not. CamCapture will automatically flip the image
                to its original top-bottom position. If this is not desired then this property should be
                overridden and set to false.
            </value>
            -------------------------------------------------------------------------------------------------
        </member>
        <member name="P:StreamCoders.Devices.VideoCaptureDeviceFormat.ID">
            -------------------------------------------------------------------------------------------------
            <summary>
                Internal ID of the device.
            </summary>
            -------------------------------------------------------------------------------------------------
        </member>
        <member name="P:StreamCoders.Devices.VideoCaptureDeviceFormat.Width">
            -------------------------------------------------------------------------------------------------
            <summary>
                X-Resolution of the video data coming from device.
            </summary>
            -------------------------------------------------------------------------------------------------
        </member>
        <member name="P:StreamCoders.Devices.VideoCaptureDeviceFormat.Height">
            -------------------------------------------------------------------------------------------------
            <summary>
                Y-Resolution of the video data coming from device.
            </summary>
            -------------------------------------------------------------------------------------------------
        </member>
        <member name="T:StreamCoders.Devices.VideoCaptureDeviceInformation">
            -------------------------------------------------------------------------------------------------
            <summary>
                Capture device information containing name and path of the capture device.
            </summary>
            -------------------------------------------------------------------------------------------------
        </member>
        <member name="P:StreamCoders.Devices.VideoCaptureDeviceInformation.Name">
            -------------------------------------------------------------------------------------------------
            <summary>
                Contains the friendly device name.
            </summary>
            -------------------------------------------------------------------------------------------------
        </member>
        <member name="P:StreamCoders.Devices.VideoCaptureDeviceInformation.DevicePath">
            -------------------------------------------------------------------------------------------------
            <summary>
                Contains the full path of the capture device.
            </summary>
            -------------------------------------------------------------------------------------------------
        </member>
        <member name="T:StreamCoders.MediaSuite">
            <summary>
                Contains version information of MediaSuite
            </summary>
        </member>
        <member name="P:StreamCoders.MediaSuite.MajorVersion">
            <summary>
                Returns major version part.
            </summary>
        </member>
        <member name="P:StreamCoders.MediaSuite.MinorVersion">
            <summary>
                Returns minor version part.
            </summary>
        </member>
        <member name="P:StreamCoders.MediaSuite.Notes">
            <summary>
                Returns optional notes of release.
            </summary>
        </member>
        <member name="P:StreamCoders.MediaSuite.Build">
            <summary>
                Returns build number part.
            </summary>
        </member>
        <member name="P:StreamCoders.MediaSuite.Revision">
            <summary>
                Returns revision number part.
            </summary>
        </member>
        <member name="P:StreamCoders.MediaSuite.Version">
            <summary>
                Returns version string.
            </summary>
        </member>
        <member name="T:StreamCoders.TimeInterval">
            -------------------------------------------------------------------------------------------------
            <summary>
                Represents an interval of time (inclusive). Having a <b>Start</b> and <b>End</b> time.
            </summary>
            -------------------------------------------------------------------------------------------------
        </member>
        <member name="M:StreamCoders.TimeInterval.#ctor">
            -------------------------------------------------------------------------------------------------
            <summary>
                Default constructor.
            </summary>
            -------------------------------------------------------------------------------------------------
        </member>
        <member name="M:StreamCoders.TimeInterval.#ctor(System.TimeSpan,System.TimeSpan)">
            -------------------------------------------------------------------------------------------------
            <summary>
                Constructor.
            </summary>
            <param name="start">    The start. </param>
            <param name="end">      The end. </param>
            -------------------------------------------------------------------------------------------------
        </member>
        <member name="M:StreamCoders.TimeInterval.#ctor(System.Double,System.Double)">
            -------------------------------------------------------------------------------------------------
            <summary>
                Constructor.
            </summary>
            <param name="startTimeInSeconds">   The start time in seconds. </param>
            <param name="endTimeInSeconds">     The end time in seconds. </param>
            -------------------------------------------------------------------------------------------------
        </member>
        <member name="P:StreamCoders.TimeInterval.Start">
            -------------------------------------------------------------------------------------------------
            <summary>
                Start of interval.
            </summary>
            <value>
                The start.
            </value>
            -------------------------------------------------------------------------------------------------
        </member>
        <member name="P:StreamCoders.TimeInterval.End">
            -------------------------------------------------------------------------------------------------
            <summary>
                End of interval.
            </summary>
            <value>
                The end.
            </value>
            -------------------------------------------------------------------------------------------------
        </member>
        <member name="P:StreamCoders.TimeInterval.Duration">
            -------------------------------------------------------------------------------------------------
            <summary>
                Duration of time interval. Defined as Duration = End - Start. Conversely when set, End =
                Start + Duration.
            </summary>
            <value>
                The duration.
            </value>
            -------------------------------------------------------------------------------------------------
        </member>
        <member name="M:StreamCoders.TimeInterval.Compare(System.TimeSpan,System.TimeSpan,System.TimeSpan)">
            -------------------------------------------------------------------------------------------------
            <summary>
                Compares interval to relative time (compareTo) with a lower bound and upper bound
                threshold.
            </summary>
            <param name="compareTo">        relative time to compare interval to. </param>
            <param name="lowerBoundDelta">  Lower bound delta. </param>
            <param name="upperBoundDelta">  Upper bound delta. </param>
            <returns>
                <para>
                    Returns 0 if time interval is within lower and upper bounds (inclusive) when
                    compared to relative time.
                </para>
                <para>Returns -1 if time interval is smaller than lower bounds.</para>
                <para>Returns 1 if time interval is greater than upper bounds.</para>
            </returns>
            -------------------------------------------------------------------------------------------------
        </member>
        <member name="T:StreamCoders.Decoder.BitStreamReader">
            -------------------------------------------------------------------------------------------------
            <summary>
                Big Endian bit-stream reader.
            </summary>
            -------------------------------------------------------------------------------------------------
        </member>
        <member name="M:StreamCoders.Decoder.BitStreamReader.NextBits(System.Int32)">
            -------------------------------------------------------------------------------------------------
            <summary>
                Reads next number of bits from input stream. The maximum number of bits is 64.
            </summary>
            <param name="n">
                The number of bits to read out.
            </param>
            <returns>
                A value.
            </returns>
            -------------------------------------------------------------------------------------------------
        </member>
        <member name="T:StreamCoders.Decoder.BitStreamWriter">
            -------------------------------------------------------------------------------------------------
            <summary>
                Big Endian bit-stream streamWriter.
            </summary>
            -------------------------------------------------------------------------------------------------
        </member>
        <member name="T:StreamCoders.Decoder.H264Metrics">
            -------------------------------------------------------------------------------------------------
            <summary>
                Contains the metrics of an H.264 Parameter set.
            </summary>
            -------------------------------------------------------------------------------------------------
        </member>
        <member name="F:StreamCoders.Decoder.H264Metrics.CropBottom">
            -------------------------------------------------------------------------------------------------
            <summary>
                Bottom side crop of pictures in pixels.
            </summary>
            -------------------------------------------------------------------------------------------------
        </member>
        <member name="F:StreamCoders.Decoder.H264Metrics.CropLeft">
            -------------------------------------------------------------------------------------------------
            <summary>
                Left side crop of pictures in pixels.
            </summary>
            -------------------------------------------------------------------------------------------------
        </member>
        <member name="F:StreamCoders.Decoder.H264Metrics.CropRight">
            -------------------------------------------------------------------------------------------------
            <summary>
                Right side crop of pictures in pixels.
            </summary>
            -------------------------------------------------------------------------------------------------
        </member>
        <member name="F:StreamCoders.Decoder.H264Metrics.CropTop">
            -------------------------------------------------------------------------------------------------
            <summary>
                Top side crop of pictures in pixels.
            </summary>
            -------------------------------------------------------------------------------------------------
        </member>
        <member name="F:StreamCoders.Decoder.H264Metrics.PixelHeight">
            -------------------------------------------------------------------------------------------------
            <summary>
                Height in pixels of the H.264 stream.
            </summary>
            -------------------------------------------------------------------------------------------------
        </member>
        <member name="F:StreamCoders.Decoder.H264Metrics.PixelWidth">
            -------------------------------------------------------------------------------------------------
            <summary>
                Width in Pixels of the H.264 stream.
            </summary>
            -------------------------------------------------------------------------------------------------
        </member>
        <member name="F:StreamCoders.Decoder.H264Metrics.Profile">
            -------------------------------------------------------------------------------------------------
            <summary>
                Profile Indication of H.264 stream.
            </summary>
            -------------------------------------------------------------------------------------------------
        </member>
        <member name="P:StreamCoders.Decoder.H264Metrics.Level">
            -------------------------------------------------------------------------------------------------
            <summary>
                Level indication of H.264 stream.
            </summary>
            -------------------------------------------------------------------------------------------------
        </member>
        <member name="M:StreamCoders.Decoder.H264Metrics.ToString">
            -------------------------------------------------------------------------------------------------
            <summary>
                Convert this instance into a string representation.
            </summary>
            <returns>
                This instance as a string.
            </returns>
            -------------------------------------------------------------------------------------------------
        </member>
        <member name="T:StreamCoders.Decoder.H264ParameterSet">
            -------------------------------------------------------------------------------------------------
            <summary>
                H.264 Parameter-set parser to retrieve information about a stream.
            </summary>
            -------------------------------------------------------------------------------------------------
        </member>
        <member name="F:StreamCoders.Decoder.H264ParameterSet.Height">
            -------------------------------------------------------------------------------------------------
            <summary>
                The height in pixels.
            </summary>
            -------------------------------------------------------------------------------------------------
        </member>
        <member name="F:StreamCoders.Decoder.H264ParameterSet.Level">
            -------------------------------------------------------------------------------------------------
            <summary>
                The level indication.
            </summary>
            -------------------------------------------------------------------------------------------------
        </member>
        <member name="F:StreamCoders.Decoder.H264ParameterSet.Profile">
            -------------------------------------------------------------------------------------------------
            <summary>
                The profile indication.
            </summary>
            -------------------------------------------------------------------------------------------------
        </member>
        <member name="F:StreamCoders.Decoder.H264ParameterSet.Width">
            -------------------------------------------------------------------------------------------------
            <summary>
                The width in pixels.
            </summary>
            -------------------------------------------------------------------------------------------------
        </member>
        <member name="M:StreamCoders.Decoder.H264ParameterSet.#ctor(System.String)">
            -------------------------------------------------------------------------------------------------
            <summary>
                Initializes a new Instance of StreamCoders.Decoder.H264ParameterSet. Pass sprop-parameter-
                set contained within SDP of session initiation.
            </summary>
            <param name="spspps">   SPS/PPS base64 encoded. </param>
            -------------------------------------------------------------------------------------------------
        </member>
        <member name="P:StreamCoders.Decoder.H264ParameterSet.NormalizedParameterSet">
            -------------------------------------------------------------------------------------------------
            <summary>
                Gets SPS/PPS as byte array.
            </summary>
            <value>
                The parameter-set is escaped with startcode and NAL Unit type.
            </value>
            -------------------------------------------------------------------------------------------------
        </member>
        <member name="P:StreamCoders.Decoder.H264ParameterSet.NormalizedParameterSetString">
            -------------------------------------------------------------------------------------------------
            <summary>
                Gets SPS/PPS as string.
            </summary>
            <value>
                The parameter-set is escaped with startcode and NAL Unit type.
            </value>
            -------------------------------------------------------------------------------------------------
        </member>
        <member name="M:StreamCoders.Decoder.H264ParameterSet.GetMetrics">
            -------------------------------------------------------------------------------------------------
            <summary>
                Calculates the metrics contained in the H.264 parameter-set.
            </summary>
            <returns>
                Returns object of type H264Metrics, otherwise null.
            </returns>
            -------------------------------------------------------------------------------------------------
        </member>
        <member name="M:StreamCoders.Decoder.H264ParameterSet.Write(System.IO.Stream)">
            -------------------------------------------------------------------------------------------------
            <summary>
                Writes NALU parameter set to a stream.
            </summary>
            <param name="stream">   The stream to write the parameter set to. </param>
            <returns>
                Returns the number of bytes written to the stream.
            </returns>
            -------------------------------------------------------------------------------------------------
        </member>
        <member name="T:StreamCoders.Decoder.H265ParameterSet">
            -------------------------------------------------------------------------------------------------
            <summary>
                H.265 Parameter-set parser to retrieve information about a stream.
            </summary>
            -------------------------------------------------------------------------------------------------
        </member>
        <member name="M:StreamCoders.Decoder.H265ParameterSet.#ctor(StreamCoders.OffsetBuffer{System.Byte})">
            -------------------------------------------------------------------------------------------------
            <summary>
                Initializes a new Instance of StreamCoders.Decoder.H265ParameterSet from binary parameter-set.
            </summary>
            <param name="spspps">  The buffer containing the parameter set. The parameter-sets must be escaped with start-codes</param>
            -------------------------------------------------------------------------------------------------
        </member>
        <member name="M:StreamCoders.Decoder.H265ParameterSet.#ctor(System.Collections.Generic.List{StreamCoders.Container.MP4.H265NalUnit})">
            <summary>
                Initializes a new Instance of StreamCoders.Decoder.H265ParameterSet from binary parameter-set.
            </summary>
            <param name="nals">A list of buffers each containing a single parameter set.</param>
        </member>
        <member name="M:StreamCoders.Decoder.H265ParameterSet.#ctor(System.String,System.String,System.String)">
            <summary>
                Construction from value fields of sprop_vps, sprop_pps and sprop_sps
            </summary>
            <param name="vps">VPS from SDP. Bas64 encoded.</param>
            <param name="sps">SPS from SDP. Bas64 encoded.</param>
            <param name="pps">PPS from SDP. Bas64 encoded.</param>
        </member>
        <member name="M:StreamCoders.Decoder.H265ParameterSet.GetMetrics">
            -------------------------------------------------------------------------------------------------
            <summary>
                Calculates the metrics contained in the H.264 parameter-set.
            </summary>
            <returns>
                Returns object of type H264Metrics, otherwise null.
            </returns>
            -------------------------------------------------------------------------------------------------
        </member>
        <member name="T:StreamCoders.Decoder.HevcDecoderConfigurationRecord">
            -------------------------------------------------------------------------------------------------
            <summary>
                HEVCDecoderConfiguration record is used to transmit decoder configuration. It contains
                VPS/SPS/PPS.
            </summary>
            -------------------------------------------------------------------------------------------------
        </member>
        <member name="P:StreamCoders.Decoder.HevcDecoderConfigurationRecord.NalGroups">
            -------------------------------------------------------------------------------------------------
            <summary>
                List containing all NAL groups contained in HEVCDecoderConfigurationRecord.
            </summary>
            -------------------------------------------------------------------------------------------------
        </member>
        <member name="M:StreamCoders.Decoder.HevcDecoderConfigurationRecord.Create(System.Byte[])">
            -------------------------------------------------------------------------------------------------
            <summary>
                Creates and parses a HEVCDecoderConfigurationRecord from a buffer.
            </summary>
            <param name="inputBuffer">
                Buffer for input data.
            </param>
            <returns>
                A HevcDecoderConfigurationRecord.
            </returns>
            -------------------------------------------------------------------------------------------------
        </member>
        <member name="M:StreamCoders.Decoder.HevcDecoderConfigurationRecord.Create(StreamCoders.OffsetBuffer{System.Byte})">
            -------------------------------------------------------------------------------------------------
            <summary>
                Creates and parses a HEVCDecoderConfigurationRecord from a buffer.
            </summary>
            <param name="inputBuffer">
                Buffer for input data.
            </param>
            <returns>
                A HevcDecoderConfigurationRecord.
            </returns>
            -------------------------------------------------------------------------------------------------
        </member>
        <member name="M:StreamCoders.Decoder.HevcDecoderConfigurationRecord.WriteTo(System.IO.Stream)">
            -------------------------------------------------------------------------------------------------
            <summary>
                Write the HEVCDecoderConfigurationRecord to a stream.
            </summary>
            <param name="outputStream">
                inputStream to write data to.
            </param>
            <returns>
                true if it succeeds, false if it fails.
            </returns>
            -------------------------------------------------------------------------------------------------
        </member>
        <member name="M:StreamCoders.Decoder.HevcDecoderConfigurationRecord.ToOffsetBuffer">
            -------------------------------------------------------------------------------------------------
            <summary>
                Serializes the HevcDecoderConfigurationRecord to a new OffsetBuffer.
            </summary>
            <returns>
                true if it succeeds, false if it fails.
            </returns>
            -------------------------------------------------------------------------------------------------
        </member>
        <member name="T:StreamCoders.Decoder.HevcNalType">
            -------------------------------------------------------------------------------------------------
            <summary>
                HEVC / H.265 NAL unit types.
            </summary>
            -------------------------------------------------------------------------------------------------
        </member>
        <member name="T:StreamCoders.Decoder.AacSbrPriority">
            -------------------------------------------------------------------------------------------------
            <summary>
                Values that represent the quality of SBR decoding.
            </summary>
            -------------------------------------------------------------------------------------------------
        </member>
        <member name="F:StreamCoders.Decoder.AacSbrPriority.Quality">
            <summary>
                Prefer quality over performance
            </summary>
        </member>
        <member name="F:StreamCoders.Decoder.AacSbrPriority.Performance">
            <summary>
                Prefer performance over quality
            </summary>
        </member>
        <member name="T:StreamCoders.Decoder.AacSbrTool">
            -------------------------------------------------------------------------------------------------
            <summary>
                SBR Configuration.
            </summary>
            -------------------------------------------------------------------------------------------------
        </member>
        <member name="M:StreamCoders.Decoder.AacSbrTool.#ctor">
            -------------------------------------------------------------------------------------------------
            <summary>
                Default constructor.
            </summary>
            -------------------------------------------------------------------------------------------------
        </member>
        <member name="P:StreamCoders.Decoder.AacSbrTool.Enabled">
            -------------------------------------------------------------------------------------------------
            <summary>
                Enables SBR tool.
            </summary>
            <value>
                true if enabled, false if not.
            </value>
            -------------------------------------------------------------------------------------------------
        </member>
        <member name="P:StreamCoders.Decoder.AacSbrTool.Priority">
            -------------------------------------------------------------------------------------------------
            <summary>
                Gets the priority of the SBR tool.
            </summary>
            <value>
                The priority.
            </value>
            -------------------------------------------------------------------------------------------------
        </member>
        <member name="P:StreamCoders.Decoder.AacSbrTool.Upsample">
            -------------------------------------------------------------------------------------------------
            <summary>
                If set to true the decoded data will be upsampled (2 x Frequency).
            </summary>
            <value>
                true if upsample, false if not.
            </value>
            -------------------------------------------------------------------------------------------------
        </member>
        <member name="T:StreamCoders.Decoder.AacPsTool">
            -------------------------------------------------------------------------------------------------
            <summary>
                Parametric Sound Configuration.
            </summary>
            -------------------------------------------------------------------------------------------------
        </member>
        <member name="M:StreamCoders.Decoder.AacPsTool.#ctor">
            -------------------------------------------------------------------------------------------------
            <summary>
                Default constructor.
            </summary>
            -------------------------------------------------------------------------------------------------
        </member>
        <member name="P:StreamCoders.Decoder.AacPsTool.Enabled">
            -------------------------------------------------------------------------------------------------
            <summary>
                Enables the Parametric-Sound tool.
            </summary>
            <value>
                true if enabled, false if not.
            </value>
            -------------------------------------------------------------------------------------------------
        </member>
        <member name="T:StreamCoders.Decoder.AacTools">
            -------------------------------------------------------------------------------------------------
            <summary>
                AAC Tools Configuration.
            </summary>
            -------------------------------------------------------------------------------------------------
        </member>
        <member name="M:StreamCoders.Decoder.AacTools.#ctor">
            -------------------------------------------------------------------------------------------------
            <summary>
                Default constructor.
            </summary>
            -------------------------------------------------------------------------------------------------
        </member>
        <member name="P:StreamCoders.Decoder.AacTools.Sbr">
            -------------------------------------------------------------------------------------------------
            <summary>
                Settings for the SBR (Spectral Band Replication)
            </summary>
            <value>
                Spectral Band Replication.
            </value>
            -------------------------------------------------------------------------------------------------
        </member>
        <member name="P:StreamCoders.Decoder.AacTools.Ps">
            -------------------------------------------------------------------------------------------------
            <summary>
                Settings for PS (Parametric-Sound)
            </summary>
            <value>
                Parametric-Sound.
            </value>
            -------------------------------------------------------------------------------------------------
        </member>
        <member name="T:StreamCoders.Decoder.AacAudioDecoderConfiguration">
            -------------------------------------------------------------------------------------------------
            <summary>
                AAC audio decoder configuration.
            </summary>
            <seealso cref="T:StreamCoders.Decoder.AudioDecoderConfiguration" />
            -------------------------------------------------------------------------------------------------
        </member>
        <member name="T:StreamCoders.Decoder.Ac3AudioDecoderConfiguration">
            -------------------------------------------------------------------------------------------------
            <summary>
                AC-3 audio decoder configuration.
            </summary>
            <seealso cref="T:StreamCoders.Decoder.AudioDecoderConfiguration" />
            -------------------------------------------------------------------------------------------------
        </member>
        <member name="T:StreamCoders.Decoder.IAudioDecoderBase">
            -------------------------------------------------------------------------------------------------
            <summary>   Interface for all audio decoders. </summary>
            <seealso cref="T:System.IDisposable" />
            -------------------------------------------------------------------------------------------------
        </member>
        <member name="M:StreamCoders.Decoder.IAudioDecoderBase.Init(StreamCoders.Decoder.AudioDecoderConfiguration)">
            -------------------------------------------------------------------------------------------------
            <summary>   Initialises this instance. </summary>
            <returns>   true if it succeeds, false if it fails. </returns>
            -------------------------------------------------------------------------------------------------
        </member>
        <member name="T:StreamCoders.Decoder.AAudioDecoderBase">
            -------------------------------------------------------------------------------------------------
            <summary>
                Abstract base class for all audio decoders.
            </summary>
            <seealso cref="T:StreamCoders.Decoder.IAudioDecoderBase" />
            -------------------------------------------------------------------------------------------------
        </member>
        <member name="M:StreamCoders.Decoder.AAudioDecoderBase.Init(StreamCoders.Decoder.AudioDecoderConfiguration)">
            -------------------------------------------------------------------------------------------------
            <summary>
                Initialises this instance.
            </summary>
            <param name="configuration">
                The configuration.
            </param>
            <returns>
                true if it succeeds, false if it fails.
            </returns>
            <seealso cref="M:StreamCoders.Decoder.IAudioDecoderBase.Init(AudioDecoderConfiguration)" />
            -------------------------------------------------------------------------------------------------
        </member>
        <member name="M:StreamCoders.Decoder.AAudioDecoderBase.Transform(StreamCoders.MediaBuffer{System.Byte})">
            -------------------------------------------------------------------------------------------------
            <summary>
                Transforms the given input buffer.
            </summary>
            <param name="inputBuffer">
                Buffer for input data.
            </param>
            <returns>
                The CodecOperationStatus.
            </returns>
            -------------------------------------------------------------------------------------------------
        </member>
        <member name="P:StreamCoders.Decoder.AAudioDecoderBase.OutputQueue">
            -------------------------------------------------------------------------------------------------
            <summary>
                Gets a queue of outputs.
            </summary>
            <value>
                A Queue of outputs.
            </value>
            -------------------------------------------------------------------------------------------------
        </member>
        <member name="M:StreamCoders.Decoder.AAudioDecoderBase.Dispose">
            -------------------------------------------------------------------------------------------------
            <summary>
                Performs application-defined tasks associated with freeing, releasing, or resetting
                unmanaged resources.
            </summary>
            -------------------------------------------------------------------------------------------------
        </member>
        <member name="T:StreamCoders.Decoder.AudioDecoderConfiguration">
            -------------------------------------------------------------------------------------------------
            <summary>
                Is used to initialize audio decoders.
            </summary>
            -------------------------------------------------------------------------------------------------
        </member>
        <member name="P:StreamCoders.Decoder.AudioDecoderConfiguration.Samplerate">
            -------------------------------------------------------------------------------------------------
            <summary>
                Gets or sets the sample-rate to be used.
            </summary>
            <value>
                The sample-rate.
            </value>
            -------------------------------------------------------------------------------------------------
        </member>
        <member name="P:StreamCoders.Decoder.AudioDecoderConfiguration.Channels">
            -------------------------------------------------------------------------------------------------
            <summary>
                Gets or sets the number channels.
            </summary>
            <value>
                The number of channels.
            </value>
            -------------------------------------------------------------------------------------------------
        </member>
        <member name="P:StreamCoders.Decoder.AudioDecoderConfiguration.BitsPerSample">
            -------------------------------------------------------------------------------------------------
            <summary>
                Gets or sets the bits per sample.
            </summary>
            <value>
                The bits per sample.
            </value>
            -------------------------------------------------------------------------------------------------
        </member>
        <member name="P:StreamCoders.Decoder.AudioDecoderConfiguration.Bitrate">
            -------------------------------------------------------------------------------------------------
            <summary>
                Gets or sets the bitrate of the audio stream.
            </summary>
            <value>
                The bitrate of the audio stream.
            </value>
            -------------------------------------------------------------------------------------------------
        </member>
        <member name="P:StreamCoders.Decoder.AudioDecoderConfiguration.DecoderSpecificData">
            -------------------------------------------------------------------------------------------------
            <summary>
                Gets or sets the decoder specific data used for initialization.
            </summary>
            <value>
                Information describing the decoder.
            </value>
            -------------------------------------------------------------------------------------------------
        </member>
        <member name="P:StreamCoders.Decoder.AudioDecoderConfiguration.InitializationStatus">
            -------------------------------------------------------------------------------------------------
            <summary>
                Contains the initialization status after calling Init on a decoder.
            </summary>
            <value>
                The initialization status.
            </value>
            -------------------------------------------------------------------------------------------------
        </member>
        <member name="T:StreamCoders.Decoder.CommonAudioDecoderConfiguration">
            -------------------------------------------------------------------------------------------------
            <summary>
                Is used with audio decoders that don't require any special fields to be initialized.
            </summary>
            <seealso cref="T:StreamCoders.Decoder.AudioDecoderConfiguration" />
            -------------------------------------------------------------------------------------------------
        </member>
        <member name="T:StreamCoders.Decoder.DtsAudioDecoderConfiguration">
            -------------------------------------------------------------------------------------------------
            <summary>
                DTS audio decoder configuration.
            </summary>
            <seealso cref="T:StreamCoders.Decoder.AudioDecoderConfiguration" />
            -------------------------------------------------------------------------------------------------
        </member>
        <member name="T:StreamCoders.Decoder.Mp3AudioDecoderConfiguration">
            <summary>MP3 audio decoder configuration.</summary>
            <seealso cref="T:StreamCoders.Decoder.AudioDecoderConfiguration"></seealso>
        </member>
        <member name="T:StreamCoders.Decoder.OpusAudioDecoderConfiguration">
            -------------------------------------------------------------------------------------------------
            <summary>
                Opus audio decoder configuration.
            </summary>
            <seealso cref="T:StreamCoders.Decoder.AudioDecoderConfiguration" />
            -------------------------------------------------------------------------------------------------
        </member>
        <member name="T:StreamCoders.Decoder.VorbisAudioDecoderConfiguration">
            -------------------------------------------------------------------------------------------------
            <summary>
                Vorbis audio decoder configuration.
            </summary>
            <seealso cref="T:StreamCoders.Decoder.AudioDecoderConfiguration" />
            -------------------------------------------------------------------------------------------------
        </member>
        <member name="T:StreamCoders.Decoder.WmaAudioDecoderConfiguration">
            -------------------------------------------------------------------------------------------------
            <summary>
                WMA and WMA-PRO audio decoder configuration.
            </summary>
            <seealso cref="T:StreamCoders.Decoder.AudioDecoderConfiguration" />
            -------------------------------------------------------------------------------------------------
        </member>
        <member name="P:StreamCoders.Decoder.WmaAudioDecoderConfiguration.BlockAlignment">
            -------------------------------------------------------------------------------------------------
            <summary>
                Gets or sets the block alignment of the audio frames.
            </summary>
            <value>
                The block alignment.
            </value>
            -------------------------------------------------------------------------------------------------
        </member>
        <member name="T:StreamCoders.Decoder.DecoderConfigurationFactory">
            -------------------------------------------------------------------------------------------------
            <summary>
                Decoder configuration factory helps create audio &amp; video configuration objects based
                on TrackInfo objects passed.
            </summary>
            -------------------------------------------------------------------------------------------------
        </member>
        <member name="M:StreamCoders.Decoder.DecoderConfigurationFactory.CreateVideoConfiguration(StreamCoders.TrackInfo)">
            -------------------------------------------------------------------------------------------------
            <summary>
                Creates video configuration based on TrackInfo.
            </summary>
            <exception cref="T:System.InvalidOperationException">
                Thrown when the requested operation is invalid.
            </exception>
            <exception cref="T:System.NotSupportedException">
                Thrown when the requested codec is not supported.
            </exception>
            <param name="track">
                The track.
            </param>
            <returns>
                The new video configuration. If the codec is unknown a <c>NotSupportedException</c> is thrown.
            </returns>
            -------------------------------------------------------------------------------------------------
        </member>
        <member name="M:StreamCoders.Decoder.DecoderConfigurationFactory.CreateAudioConfiguration(StreamCoders.TrackInfo)">
            -------------------------------------------------------------------------------------------------
            <summary>
                Creates audio configuration based on TrackInfo.
            </summary>
            <exception cref="T:System.InvalidOperationException">
                Thrown when the requested operation is invalid.
            </exception>
            <param name="track">
                The track.
            </param>
            <returns>
                The new audio configuration. If the codec is unknown a <c>CommonAudioDecoderConfiguration</c> object will be
                created.
            </returns>
            -------------------------------------------------------------------------------------------------
        </member>
        <member name="T:StreamCoders.Decoder.IDecoder">
            -------------------------------------------------------------------------------------------------
            <summary>
                Base class for VideoDecoderBase and AudioDecoderBase
            </summary>
            -------------------------------------------------------------------------------------------------
        </member>
        <member name="T:StreamCoders.Decoder.SpeechAudioDecoder">
            <summary>
                This simply encapsulates the SpeechDecoder class into a an AudioDecoder so we can use it interchangeably.
            </summary>
        </member>
        <member name="T:StreamCoders.Decoder.SpeechDecoderCodecSpecificValue">
            <summary>
            Codec specific values to further configure some of the speech codecs available in MediaSuite.
            </summary>
        </member>
        <member name="F:StreamCoders.Decoder.SpeechDecoderCodecSpecificValue.AmrOctetAligned">
            <summary>
            Sets the AMR decoder to octet-aligned decoding mode
            </summary>
        </member>
        <member name="F:StreamCoders.Decoder.SpeechDecoderCodecSpecificValue.AmrBandEfficient">
            <summary>
            Sets the AMR decoder to bandwidth-efficient decoding mode
            </summary>
        </member>
        <member name="T:StreamCoders.Decoder.StreamSources">
            -------------------------------------------------------------------------------------------------
            <summary>
                Defines the origin of audio or video frames.
            </summary>
            -------------------------------------------------------------------------------------------------
        </member>
        <member name="F:StreamCoders.Decoder.StreamSources.NETWORK_RTP">
            <summary>
                <para>
                    Indicating that frames were packetized for RTP transport.<br />
                    For H.264 this means NAL-Unit plus startcodes are expected.<br />
                    For MPEG-4.2 this means that startcodes are expected.
                </para>
            </summary>
        </member>
        <member name="F:StreamCoders.Decoder.StreamSources.NETWORK_OTHER">
            <summary>
                <para>Indicates the frames were packetized to be suitable for network transport.</para>
                <para>
                    For H.264 this means NAL-Unit plus startcodes are expected and the scraping of frames (early release from
                    deferred buffer) will be disabled.<br />
                    For MPEG-4.2 this means that startcodes are expected.
                </para>
            </summary>
        </member>
        <member name="F:StreamCoders.Decoder.StreamSources.FILE_MP4">
            <summary>
                <para>Indicates the frames originate from an MP4 container.</para>
                <para>Expected encapsulation (if any) are access units.</para>
            </summary>
        </member>
        <member name="F:StreamCoders.Decoder.StreamSources.FILE_AVI">
            <summary>
                <para>Indicates the frames originate from an AVI container.</para>
                <para>Expected encapsulation (if any) are access units.</para>
            </summary>
        </member>
        <member name="F:StreamCoders.Decoder.StreamSources.FILE_FLV">
            <summary>
                <para>Indicates the frames originate from an AVI container.</para>
                <para>Expected encapsulation (if any) are access units.</para>
            </summary>
        </member>
        <member name="F:StreamCoders.Decoder.StreamSources.FILE_OTHER">
            <summary>
                <para>Indicates the frames originate from an unknown container.</para>
                <para>Expected encapsulation (if any) are NAL-Units plus startcodes.</para>
            </summary>
        </member>
        <member name="T:StreamCoders.Decoder.Encapsulation">
            -------------------------------------------------------------------------------------------------
            <summary>
                Values that represent the type of encapsulation that audio or video frames have. It is
                important to initialize decoders with the correct type of encapsulation.
            </summary>
            -------------------------------------------------------------------------------------------------
        </member>
        <member name="F:StreamCoders.Decoder.Encapsulation.Undefined">
            <summary>
                The encapsulation is undefined. This is the default value and should not be used.
            </summary>
        </member>
        <member name="F:StreamCoders.Decoder.Encapsulation.StartCodes">
            <summary>
                The stream contains start-codes or sync words/structures.
            </summary>
        </member>
        <member name="F:StreamCoders.Decoder.Encapsulation.AccessUnit">
            <summary>
                The stream is encapsulated into MPEG-4 access units.
            </summary>
        </member>
        <member name="F:StreamCoders.Decoder.Encapsulation.Raw">
            <summary>
                The stream contains raw frames.
            </summary>
        </member>
        <member name="T:StreamCoders.Decoder.AVideoDecoderBase">
            -------------------------------------------------------------------------------------------------
            <summary>
                Abstract base class for all video decoders.
            </summary>
            <seealso cref="T:StreamCoders.Decoder.IVideoDecoderBase" />
            -------------------------------------------------------------------------------------------------
        </member>
        <member name="M:StreamCoders.Decoder.AVideoDecoderBase.SetBufferProvider(StreamCoders.LockableOffsetBufferProvider{StreamCoders.OffsetBuffer{System.Byte}})">
            -------------------------------------------------------------------------------------------------
            <summary>
                Sets buffer provider.
            </summary>
            <param name="ringBuffer">
                Buffer for ring data.
            </param>
            -------------------------------------------------------------------------------------------------
        </member>
        <member name="M:StreamCoders.Decoder.AVideoDecoderBase.Init(StreamCoders.Decoder.VideoDecoderConfiguration)">
            -------------------------------------------------------------------------------------------------
            <summary>
                Initializes the decoder.
            </summary>
            <param name="configuration">
                VideoDecoderConfiguration containing the parameters to initialize the codec.
            </param>
            <returns>
                Returns an updated instance of the VideoDecoderConfiguration object.
            </returns>
            -------------------------------------------------------------------------------------------------
        </member>
        <member name="M:StreamCoders.Decoder.AVideoDecoderBase.Transform(StreamCoders.MediaBuffer{System.Byte})">
            -------------------------------------------------------------------------------------------------
            <summary>
                Transforms the given input buffer.
            </summary>
            <param name="inputBuffer">
                Buffer for input data.
            </param>
            <returns>
                The CodecOperationStatus.
            </returns>
            -------------------------------------------------------------------------------------------------
        </member>
        <member name="M:StreamCoders.Decoder.AVideoDecoderBase.Predict(StreamCoders.MediaBuffer{System.Byte})">
            -------------------------------------------------------------------------------------------------
            <summary>
                Predicts the frame type inside given input buffer.
            </summary>
            <param name="inputBuffer">
                Buffer for input data.
            </param>
            <returns>
                A FrameType.
            </returns>
            -------------------------------------------------------------------------------------------------
        </member>
        <member name="M:StreamCoders.Decoder.AVideoDecoderBase.Dispose">
            -------------------------------------------------------------------------------------------------
            <summary>
                Performs application-defined tasks associated with freeing, releasing, or resetting
                unmanaged resources.
            </summary>
            -------------------------------------------------------------------------------------------------
        </member>
        <member name="P:StreamCoders.Decoder.AVideoDecoderBase.OutputQueue">
            -------------------------------------------------------------------------------------------------
            <summary>
                Gets a queue of outputs.
            </summary>
            <remarks>
            Note that the OutputQueue can only be used after <c>Init</c> has been called.
            </remarks>
            <value>
                A Queue of outputs.
            </value>
            -------------------------------------------------------------------------------------------------
        </member>
        <member name="M:StreamCoders.Decoder.AVideoDecoderBase.GetMediaBuffer(System.Int32,System.Boolean)">
            -------------------------------------------------------------------------------------------------
            <summary>
                Gets a media buffer.
            </summary>
            <param name="size">
                The size.
            </param>
            <param name="exactSize">
                true to exact size.
            </param>
            <returns>
                The media buffer.
            </returns>
            -------------------------------------------------------------------------------------------------
        </member>
        <member name="M:StreamCoders.Decoder.AVideoDecoderBase.GetPictureBuffer(System.Int32,System.Boolean)">
            -------------------------------------------------------------------------------------------------
            <summary>
                Gets a picture buffer.
            </summary>
            <param name="size">
                The size.
            </param>
            <param name="exactSize">
                true to exact size.
            </param>
            <returns>
                The picture buffer.
            </returns>
            -------------------------------------------------------------------------------------------------
        </member>
        <member name="T:StreamCoders.Decoder.ChannelVideoDecoderConfiguration">
            <summary>
                Video Configuration for channel based color space. (RGB16, RGB24, RGB32)
            </summary>
            <remarks>
                This configuration can be useful when dealing with decoder that take inputs from various sources, including raw
                picture sources.
            </remarks>
        </member>
        <member name="T:StreamCoders.Decoder.H263VideoDecoderConfiguration">
            -------------------------------------------------------------------------------------------------
            <summary>
                H.263 video decoder configuration.
            </summary>
            <seealso cref="T:StreamCoders.Decoder.VideoDecoderConfiguration" />
            -------------------------------------------------------------------------------------------------
        </member>
        <member name="T:StreamCoders.Decoder.H264VideoDecoderConfiguration">
            <summary>
                H.264 video decoder configuration.
            </summary>
            <remarks>DecoderData for this class can be either a string or byte array containing SPS/PPS.</remarks>
            <seealso cref="T:StreamCoders.Decoder.VideoDecoderConfiguration"></seealso>
        </member>
        <member name="P:StreamCoders.Decoder.H264VideoDecoderConfiguration.HardwareAccelerated">
            -------------------------------------------------------------------------------------------------
            <summary>
                Enables hardware acceleration on the decoder. Hardware acceleration is only available on
                Windows Vista/7/8.
            </summary>
            <value>
                true if hardware accelerated, false if not.
            </value>
            -------------------------------------------------------------------------------------------------
        </member>
        <member name="P:StreamCoders.Decoder.H264VideoDecoderConfiguration.GpuDeviceId">
            <summary>
                GPU Device ID to use if GPU acceleration is used. Set to -1 (default) to use fasted GPU in system.
            </summary>
        </member>
        <member name="P:StreamCoders.Decoder.H264VideoDecoderConfiguration.Scraping">
            <summary>
                Scrapes frames from decoder to allow for lower decode latency. This feature should only be used with Baseline
                profiles.
            </summary>
        </member>
        <member name="T:StreamCoders.Decoder.H265VideoDecoderConfiguration">
            -------------------------------------------------------------------------------------------------
            <summary>
                H.265 video decoder configuration.
            </summary>
            <remarks>
                DecoderData for this class must be a byte array containing VPS/SPS/PPS.
            </remarks>
            <seealso cref="T:StreamCoders.Decoder.VideoDecoderConfiguration" />
            -------------------------------------------------------------------------------------------------
        </member>
        <member name="P:StreamCoders.Decoder.H265VideoDecoderConfiguration.WppWorkerThreads">
            -------------------------------------------------------------------------------------------------
            <summary>
                The number of worker threads to use for parallelized decoding. The default value is the
                number of logical cores in the system. This only needs to be set for decoders not running on GPU.
            </summary>
            <value>
                The number of worker threads.
            </value>
            -------------------------------------------------------------------------------------------------
        </member>
        <member name="T:StreamCoders.Decoder.IVideoDecoderBase">
            -------------------------------------------------------------------------------------------------
            <summary>
                Base Interface for all video decoders.
            </summary>
            <seealso cref="T:IDecoder" />
            <seealso cref="T:IDisposable" />
            -------------------------------------------------------------------------------------------------
        </member>
        <member name="M:StreamCoders.Decoder.IVideoDecoderBase.SetBufferProvider(StreamCoders.LockableOffsetBufferProvider{StreamCoders.OffsetBuffer{System.Byte}})">
            -------------------------------------------------------------------------------------------------
            <summary>
                Sets buffer provider.
            </summary>
            <param name="ringBuffer">
                Buffer for ring data.
            </param>
            -------------------------------------------------------------------------------------------------
        </member>
        <member name="M:StreamCoders.Decoder.IVideoDecoderBase.Init(StreamCoders.Decoder.VideoDecoderConfiguration)">
            -------------------------------------------------------------------------------------------------
            <summary>
                Initialises this instance.
            </summary>
            <param name="configuration">
                The configuration.
            </param>
            <returns>
                A VideoDecoderConfiguration.
            </returns>
            -------------------------------------------------------------------------------------------------
        </member>
        <member name="M:StreamCoders.Decoder.IVideoDecoderBase.Predict(StreamCoders.MediaBuffer{System.Byte})">
            -------------------------------------------------------------------------------------------------
            <summary>
                Predicts the frame type of the given input buffer.
            </summary>
            <param name="inputBuffer">
                Buffer for input data.
            </param>
            <returns>
                A FrameType.
            </returns>
            -------------------------------------------------------------------------------------------------
        </member>
        <member name="T:StreamCoders.Decoder.Mpeg42VideoDecoderConfiguration">
            -------------------------------------------------------------------------------------------------
            <summary>
                MPEG-4.2 video decoder configuration.
            </summary>
            <seealso cref="T:StreamCoders.Decoder.VideoDecoderConfiguration" />
            -------------------------------------------------------------------------------------------------
        </member>
        <member name="T:StreamCoders.Decoder.NullVideoDecoder">
            <summary>
                This class implements the NULL pattern for a video decoder.
            </summary>
            <remarks>
                This implementation will take any input and immediately put it in the output queue.
            </remarks>
        </member>
        <member name="T:StreamCoders.Decoder.Vc1VideoDecoderConfiguration">
            -------------------------------------------------------------------------------------------------
            <summary>
                VC-1 video decoder configuration.
            </summary>
            <seealso cref="T:StreamCoders.Decoder.VideoDecoderConfiguration" />
            -------------------------------------------------------------------------------------------------
        </member>
        <member name="T:StreamCoders.Decoder.VideoDecoderConfiguration">
            -------------------------------------------------------------------------------------------------
            <summary>
                Is used to initialize video decoders.
            </summary>
            -------------------------------------------------------------------------------------------------
        </member>
        <member name="M:StreamCoders.Decoder.VideoDecoderConfiguration.#ctor(StreamCoders.TrackInfo)">
            -------------------------------------------------------------------------------------------------
            <summary>
                Constructor. Creates the configuration from a TrackInfo object.
            </summary>
            <param name="track">
                The track.
            </param>
            -------------------------------------------------------------------------------------------------
        </member>
        <member name="M:StreamCoders.Decoder.VideoDecoderConfiguration.#ctor(StreamCoders.Encoder.VideoEncoderConfiguration)">
            -------------------------------------------------------------------------------------------------
            <summary>
                Constructor. Creates configuration from a video encoder configuration.
            </summary>
            <param name="encoderConfiguration">
                The encoder configuration.
            </param>
            -------------------------------------------------------------------------------------------------
        </member>
        <member name="P:StreamCoders.Decoder.VideoDecoderConfiguration.DecoderSpecificData">
            -------------------------------------------------------------------------------------------------
            <summary>
                Gets or sets decoder specific initialization data.
            </summary>
            <value>
                Information necessary to initialize a decoder.
            </value>
            -------------------------------------------------------------------------------------------------
        </member>
        <member name="P:StreamCoders.Decoder.VideoDecoderConfiguration.MaximumOutputQueueLength">
            <summary>
                The maximum length of the decoder output queue, before additional frames to be added are blocked.
            </summary>
        </member>
        <member name="P:StreamCoders.Decoder.VideoDecoderConfiguration.OutputQueueCancellation">
            <summary>
                A cancellation token to abort operations on the output queue. This is useful especially when
                <c>MaximumOutputQueueLength</c> is set to a non-default value, which could potentially block the output queue.
            </summary>
        </member>
        <member name="P:StreamCoders.Decoder.VideoDecoderConfiguration.InitializationStatus">
            -------------------------------------------------------------------------------------------------
            <summary>
                Gets or sets the initialization status.
            </summary>
            <value>
                The initialization status.
            </value>
            -------------------------------------------------------------------------------------------------
        </member>
        <member name="T:StreamCoders.Decoder.Vp8VideoDecoderConfiguration">
            -------------------------------------------------------------------------------------------------
            <summary>
                Vp8 video decoder configuration.
            </summary>
            <seealso cref="T:StreamCoders.Decoder.VideoDecoderConfiguration" />
            -------------------------------------------------------------------------------------------------
        </member>
        <member name="T:StreamCoders.Decoder.Vp9VideoDecoderConfiguration">
            -------------------------------------------------------------------------------------------------
            <summary>
                VP9 video decoder configuration.
            </summary>
            <seealso cref="T:StreamCoders.Decoder.VideoDecoderConfiguration" />
            -------------------------------------------------------------------------------------------------
        </member>
        <member name="T:StreamCoders.Decoder.VpxVideoDecoderConfiguration">
            -------------------------------------------------------------------------------------------------
            <summary>
                VPX Video decoder configuration. Base class for VP8 and VP9 decoder configuration.
            </summary>
            <seealso cref="T:StreamCoders.Encoder.VideoDecoderConfiguration" />
            -------------------------------------------------------------------------------------------------
        </member>
        <member name="T:StreamCoders.Imaging.FaceDetectionResult">
            <summary>
                Is returned by FaceDetector.Detect function.
            </summary>
        </member>
        <member name="T:StreamCoders.Imaging.FaceDetectorConfiguration">
            <summary>
                Is used to configure FaceDetector
            </summary>
        </member>
        <member name="P:StreamCoders.Imaging.FaceDetectorConfiguration.FeaturePredictor">
            <summary>
                Facial Feature predictor attempts to find feature points on a face, like eyes and lips.
            </summary>
            <remarks>
                In order to use the Feature Predictor a file with trained dataset needs to exist.
            </remarks>
        </member>
        <member name="P:StreamCoders.Imaging.FaceDetectorConfiguration.PyramidUpscale">
            <summary>
                Describes how many times the picture will be scaled up before being fed to the detector.
                This should be increased for smaller pictures or distant faces.
            </summary>
        </member>
        <member name="P:StreamCoders.Imaging.FaceDetectorConfiguration.FeaturePredictorFilePath">
            <summary>
                File location of the facial feature dataset
            </summary>
        </member>
        <member name="P:StreamCoders.Imaging.FaceDetectorConfiguration.ConfidenceBias">
            <summary>
                Bias value added to detection confidence. Zero leaves the predictor neutral. Negative values increase the
                confidence.
            </summary>
        </member>
        <member name="T:StreamCoders.Imaging.FaceWithFeatures">
            <summary>
                Aggregates detected face and its features.
            </summary>
        </member>
        <member name="P:StreamCoders.Imaging.FaceWithFeatures.Location">
            <summary>
                Location of the face expressed by a rectangle.
            </summary>
        </member>
        <member name="P:StreamCoders.Imaging.FaceWithFeatures.Features">
            <summary>
                List of all facial features.
            </summary>
        </member>
        <member name="T:StreamCoders.Imaging.FacialFeature">
            <summary>
                Class representing facial features.
            </summary>
        </member>
        <member name="P:StreamCoders.Imaging.FacialFeature.Feature">
            <summary>
                Type of facial feature.
            </summary>
        </member>
        <member name="P:StreamCoders.Imaging.FacialFeature.Location">
            <summary>
                Location of facial feature.
            </summary>
        </member>
        <member name="T:StreamCoders.Imaging.FacialFeatureType">
            <summary>
                Enumeration of supported facial features
            </summary>
        </member>
        <member name="T:StreamCoders.Imaging.Line">
            <summary>
                A class that describes a line
            </summary>
        </member>
        <member name="T:StreamCoders.Imaging.Point">
            <summary>
                Describes a point
            </summary>
        </member>
        <member name="P:StreamCoders.Imaging.Point.X">
            <summary>
                X coordinate
            </summary>
        </member>
        <member name="P:StreamCoders.Imaging.Point.Y">
            <summary>
                Y coordinate
            </summary>
        </member>
        <member name="M:StreamCoders.Imaging.Point.Rescale(System.Double,System.Double)">
            <summary>
                Rescales coordinates.
            </summary>
            <param name="factorX">Factor to use for X-axis</param>
            <param name="factorY">Factor to use for Y-axis</param>
            <returns></returns>
        </member>
        <member name="T:StreamCoders.Imaging.Rectangle">
            <summary>
                A class that describes a rectangle
            </summary>
        </member>
        <member name="P:StreamCoders.Imaging.Rectangle.Top">
            <summary>
                Top-Left component
            </summary>
        </member>
        <member name="P:StreamCoders.Imaging.Rectangle.Bottom">
            <summary>
                Bottom-Right component
            </summary>
        </member>
        <member name="P:StreamCoders.Imaging.Rectangle.X">
            <summary>
                X coordinate
            </summary>
        </member>
        <member name="P:StreamCoders.Imaging.Rectangle.Y">
            <summary>
                Y coordinate
            </summary>
        </member>
        <member name="P:StreamCoders.Imaging.Rectangle.Width">
            <summary>
                Width of rectangle
            </summary>
        </member>
        <member name="P:StreamCoders.Imaging.Rectangle.Height">
            <summary>
                Height of rectangle
            </summary>
        </member>
        <member name="M:StreamCoders.Imaging.Rectangle.Rescale(System.Double,System.Double)">
            <summary>
                Rescales coordinates.
            </summary>
            <param name="factorX">Factor to use for X-axis</param>
            <param name="factorY">Factor to use for Y-axis</param>
            <returns></returns>
        </member>
        <member name="P:StreamCoders.Imaging.ObjectTrackerResult.Confidence">
            <summary>
                The confidence value how having detected the tracked object. A recommended value of good confidence
                greater-or-equal 7.
            </summary>
        </member>
        <member name="T:StreamCoders.Imaging.Blob">
            -------------------------------------------------------------------------------------------------
            <summary>
                Represents a blob and is returned as part of the results when using the <b>BlobCounter</b>
                class.
            </summary>
            -------------------------------------------------------------------------------------------------
        </member>
        <member name="P:StreamCoders.Imaging.Blob.Id">
            -------------------------------------------------------------------------------------------------
            <summary>
                Blob ID. Blobs IDs may not increase continuously, because of union operations.
            </summary>
            <value>
                The identifier.
            </value>
            -------------------------------------------------------------------------------------------------
        </member>
        <member name="P:StreamCoders.Imaging.Blob.Rectangle">
            -------------------------------------------------------------------------------------------------
            <summary>
                Rectangle describing the minimum and maximum extends of data points of this blob.
            </summary>
            <value>
                The rectangle.
            </value>
            -------------------------------------------------------------------------------------------------
        </member>
        <member name="M:StreamCoders.Imaging.Blob.GetPointList">
            -------------------------------------------------------------------------------------------------
            <summary>
                Produces all individual points that make up blob.
            </summary>
            <remarks>
                All points are calculated anew each time this function is called.
            </remarks>
            <returns>
                Returns a list of <b>Point</b> objects.
            </returns>
            -------------------------------------------------------------------------------------------------
        </member>
        <member name="T:StreamCoders.Imaging.BlobCounter">
            -------------------------------------------------------------------------------------------------
            <summary>
                Implements 8-connectivity blob counter on an 8-bit grayscale picture.
            </summary>
            -------------------------------------------------------------------------------------------------
        </member>
        <member name="P:StreamCoders.Imaging.BlobCounter.Threshold">
            -------------------------------------------------------------------------------------------------
            <summary>
                Threshold of pixel value. If a pixel value is beyond this threshold (pixel greaterThan
                threshold), then it will be part of a blob component.
            </summary>
            <value>
                The threshold.
            </value>
            -------------------------------------------------------------------------------------------------
        </member>
        <member name="M:StreamCoders.Imaging.BlobCounter.Process(StreamCoders.PictureMediaBuffer)">
            -------------------------------------------------------------------------------------------------
            <summary>
                Attempts to find blobs in a picture.
            </summary>
            <param name="data">
                Input buffer containing a gray scale picture.
            </param>
            <returns>
                Returns a list of rectangles marking the minimum and maximum extends of the collected
                data points.
            </returns>
            -------------------------------------------------------------------------------------------------
        </member>
        <member name="T:StreamCoders.Additional.Plugins.ExtensionsModuleManager`1">
            <summary>
                Handles discovery and loading of extension modules
            </summary>
            <typeparam name="T">Interface type to look for</typeparam>
        </member>
        <member name="M:StreamCoders.Additional.Plugins.ExtensionsModuleManager`1.#ctor(System.Collections.Generic.IList{System.String})">
            <summary>
                Constructs the extension module manager with a list of paths containing extensions.
            </summary>
            <param name="paths">List of paths</param>
        </member>
        <member name="M:StreamCoders.Additional.Plugins.ExtensionsModuleManager`1.#ctor(System.String)">
            <summary>
                Constructs extension module manager with a single path
            </summary>
            <param name="path">path</param>
        </member>
        <member name="M:StreamCoders.Additional.Plugins.ExtensionsModuleManager`1.#ctor">
            <summary>
                Constructs extension module manager without additional paths
            </summary>
        </member>
        <member name="P:StreamCoders.Additional.Plugins.ExtensionsModuleManager`1.Modules">
            <summary>
                Contains the modules detected
            </summary>
        </member>
        <member name="M:StreamCoders.Additional.Plugins.ExtensionsModuleManager`1.PrintExtensionInfo">
            <summary>
                Logs the extension modules information
            </summary>
        </member>
        <member name="T:StreamCoders.Additional.Plugins.IMediaSuiteModuleExtension">
            <summary>
                Base interface used by ExtensionModuleManager as constraint for plugin discovery
            </summary>
        </member>
        <member name="T:StreamCoders.Additional.Plugins.IVideoEncoderModule">
            <summary>
                Module extension implementing a video encoder
            </summary>
        </member>
        <member name="T:StreamCoders.Additional.Plugins.IVideoDecoderModule">
            <summary>
                Module extension implementing a video decoder
            </summary>
        </member>
        <member name="T:StreamCoders.TransformDelegate">
            -------------------------------------------------------------------------------------------------
            <summary>
                A delegate used for custom transformations.
            </summary>
            <param name="inputWidth">
                Width of the input.
            </param>
            <param name="inputHeight">
                Height of the input.
            </param>
            <param name="inputBuffer">
                Buffer for input data.
            </param>
            <param name="outputWidth">
                Width of the output.
            </param>
            <param name="outputHeight">
                Height of the output.
            </param>
            <returns>
                Returns a new instance of the transformed buffer.
            </returns>
            -------------------------------------------------------------------------------------------------
        </member>
        <member name="T:StreamCoders.Wave.VoiceActivityStatus">
            -------------------------------------------------------------------------------------------------
            <summary>
                Status messages emitted by VoiceActivityDetection class.
            </summary>
            -------------------------------------------------------------------------------------------------
        </member>
        <member name="F:StreamCoders.Wave.VoiceActivityStatus.Unknown">
            <summary>
                Unknown status.
            </summary>
        </member>
        <member name="F:StreamCoders.Wave.VoiceActivityStatus.Error">
            <summary>
                An error occurred during detection. Please check initialization parameters.
            </summary>
        </member>
        <member name="F:StreamCoders.Wave.VoiceActivityStatus.VoiceDetected">
            <summary>
                Voice was detected.
            </summary>
        </member>
        <member name="F:StreamCoders.Wave.VoiceActivityStatus.VoiceNotDetected">
            <summary>
                Voice was not detected.
            </summary>
        </member>
        <member name="T:StreamCoders.Wave.AudioDeinterleaver">
             <summary>
             De-interleaves an audio signal into its distinct audio channels.
             </summary>
             <remarks>
            There is no limit to the number of audio channels that can be de-interleaved.
             </remarks>
        </member>
        <member name="M:StreamCoders.Wave.AudioDeinterleaver.Deinterleave(StreamCoders.OffsetBuffer{System.Byte},System.Int32)">
            <summary>
            De-interleaves multi-channel audio signal to its distinct channels.
            </summary>
            <param name="inputBuffer">The buffer containing the multi-channel audio.</param>
            <param name="numberOfChannels">The number of channels the input signal contains</param>
            <returns>A list of buffers each containing an mono audio signal.</returns>
        </member>
        <member name="T:StreamCoders.Wave.AudioInterleaver">
            <summary>
                Interleaves multiple audio signals into a multi-channel audio signal.
            </summary>
            <remarks>
                There is no limit to the number of input signals. The input samples have to 16-bit PCM.
            </remarks>
        </member>
        <member name="M:StreamCoders.Wave.AudioInterleaver.Interleave(System.Collections.Generic.List{StreamCoders.OffsetBuffer{System.Byte}})">
            <summary>
                Interleaves multiple audio signals.
            </summary>
            <remarks>
                Ranges of individual signals are allowed to be off by multiple samples. However the correctness of the output and
                how it is handled by the audio device cannot be forseen and thus not guaranteed.
                So it is best practice to input buffers that contain the sample amount of samples.
            </remarks>
            <param name="inputBuffers">A list of buffers containing mono audio signals</param>
            <returns>
                Returns a buffer containing the interleaved signal. Timestamps will be taken from the first buffer in the
                inputBuffers list.
            </returns>
        </member>
        <member name="T:StreamCoders.AudioMediaBuffer">
            <summary>
                MediaBuffer containg audio specific information
            </summary>
        </member>
        <member name="P:StreamCoders.AudioMediaBuffer.Samplerate">
            -------------------------------------------------------------------------------------------------
            <summary>
                Gets or sets the sample-rate to be used.
            </summary>
            <value>
                The sample-rate.
            </value>
            -------------------------------------------------------------------------------------------------
        </member>
        <member name="P:StreamCoders.AudioMediaBuffer.Channels">
            -------------------------------------------------------------------------------------------------
            <summary>
                Gets or sets the number channels.
            </summary>
            <value>
                The number of channels.
            </value>
            -------------------------------------------------------------------------------------------------
        </member>
        <member name="P:StreamCoders.AudioMediaBuffer.BitsPerSample">
            -------------------------------------------------------------------------------------------------
            <summary>
                Gets or sets the bits per sample.
            </summary>
            <value>
                The bits per sample.
            </value>
            -------------------------------------------------------------------------------------------------
        </member>
        <member name="T:StreamCoders.ChannelPictureMediaBuffer">
            <summary>
            PictureMediaBuffer representing color as distinct channels. This includes RGB and grayscale images.
            </summary>
        </member>
        <member name="T:StreamCoders.Gray8PictureMediaBuffer">
            <summary>
            PictureMediaBuffer to represent gray-scale content
            </summary>
        </member>
        <member name="T:StreamCoders.ILockableBufferProvider`1">
            -------------------------------------------------------------------------------------------------
            <summary>
                Interface for lockable buffer provider.
            </summary>
            <typeparam name="T">
                Generic type parameter.
            </typeparam>
            -------------------------------------------------------------------------------------------------
        </member>
        <member name="T:StreamCoders.ILockableOperationClient">
            -------------------------------------------------------------------------------------------------
            <summary>
                Interface for lockable operation client.
            </summary>
            -------------------------------------------------------------------------------------------------
        </member>
        <member name="P:StreamCoders.ILockableOperationClient.IsLocked">
            -------------------------------------------------------------------------------------------------
            <summary>
                Gets a value indicating whether this ILockableOperationClient is locked.
            </summary>
            <value>
                true if this ILockableOperationClient is locked, false if not.
            </value>
            -------------------------------------------------------------------------------------------------
        </member>
        <member name="P:StreamCoders.ILockableOperationClient.Id">
            -------------------------------------------------------------------------------------------------
            <summary>
                Gets or sets the unique ID by which each client is identified by.
            </summary>
            <value>
                The identifier.
            </value>
            -------------------------------------------------------------------------------------------------
        </member>
        <member name="M:StreamCoders.ILockableOperationClient.Unlock">
            -------------------------------------------------------------------------------------------------
            <summary>
                Unlocks this ILockableOperationClient.
            </summary>
            -------------------------------------------------------------------------------------------------
        </member>
        <member name="M:StreamCoders.ILockableOperationClient.Lock(StreamCoders.ILockableOperationProvider)">
            -------------------------------------------------------------------------------------------------
            <summary>
                Locks the client given a locking provider.
            </summary>
            <param name="lockingProvider">
                The locking provider.
            </param>
            -------------------------------------------------------------------------------------------------
        </member>
        <member name="T:StreamCoders.ILockableOperationProvider">
            -------------------------------------------------------------------------------------------------
            <summary>
                Interface for lockable operation provider.
            </summary>
            -------------------------------------------------------------------------------------------------
        </member>
        <member name="P:StreamCoders.ILockableOperationProvider.UnlockedClientCount">
            -------------------------------------------------------------------------------------------------
            <summary>
                Gets the number of unlocked clients.
            </summary>
            <value>
                The number of unlocked clients.
            </value>
            -------------------------------------------------------------------------------------------------
        </member>
        <member name="P:StreamCoders.ILockableOperationProvider.LockedClientCount">
            -------------------------------------------------------------------------------------------------
            <summary>
                Gets the number of locked clients.
            </summary>
            <value>
                The number of locked clients.
            </value>
            -------------------------------------------------------------------------------------------------
        </member>
        <member name="M:StreamCoders.ILockableOperationProvider.LockClient(StreamCoders.ILockableOperationClient)">
            -------------------------------------------------------------------------------------------------
            <summary>
                Locks a particular client.
            </summary>
            <param name="lockable">
                The lockable client.
            </param>
            <returns>
                true if it succeeds, false if it fails.
            </returns>
            -------------------------------------------------------------------------------------------------
        </member>
        <member name="M:StreamCoders.ILockableOperationProvider.UnlockClient(StreamCoders.ILockableOperationClient)">
            -------------------------------------------------------------------------------------------------
            <summary>
                Unlocks a particular client.
            </summary>
            <param name="lockable">
                The lockable client.
            </param>
            -------------------------------------------------------------------------------------------------
        </member>
        <member name="M:StreamCoders.ILockableOperationProvider.TryUnlockClient(StreamCoders.ILockableOperationClient)">
            -------------------------------------------------------------------------------------------------
            <summary>
                Attempts to unlock a particular client.
            </summary>
            <param name="lockable">
                The lockable client.
            </param>
            -------------------------------------------------------------------------------------------------
        </member>
        <member name="M:StreamCoders.ILockableOperationProvider.IsLocked(StreamCoders.ILockableOperationClient)">
            -------------------------------------------------------------------------------------------------
            <summary>
                Checks if a particular client is locked.
            </summary>
            <param name="lockable">
                The lockable client.
            </param>
            <returns>
                true if locked, false if not.
            </returns>
            -------------------------------------------------------------------------------------------------
        </member>
        <member name="M:StreamCoders.ILockableOperationProvider.ClearAllClients">
            -------------------------------------------------------------------------------------------------
            <summary>
                Removes all clients (locked and unlocked) and unlocks all locked clients.
            </summary>
            -------------------------------------------------------------------------------------------------
        </member>
        <member name="M:StreamCoders.ILockableOperationProvider.ClearAllUnlockedClients">
            -------------------------------------------------------------------------------------------------
            <summary>
                Clears all unlocked clients by first unlocking and then removing them.
            </summary>
            -------------------------------------------------------------------------------------------------
        </member>
        <member name="M:StreamCoders.ILockableOperationProvider.UnlockAllClients">
            -------------------------------------------------------------------------------------------------
            <summary>
                Unlocks all locked clients.
            </summary>
            -------------------------------------------------------------------------------------------------
        </member>
        <member name="T:StreamCoders.IOffsetBuffer">
            -------------------------------------------------------------------------------------------------
            <summary>
                Interface for <c>OffsetBuffer</c>.
            </summary>
            -------------------------------------------------------------------------------------------------
        </member>
        <member name="T:StreamCoders.IOffsetBuffer`1">
            -------------------------------------------------------------------------------------------------
            <summary>
                Generic interface for <c>OffsetBuffer</c>
            </summary>
            <typeparam name="T">
                Generic type parameter.
            </typeparam>
        </member>
        <member name="T:StreamCoders.LockableOffsetBufferProvider`1">
            -------------------------------------------------------------------------------------------------
            <summary>
                Represents a buffer manager maintaining a locked and unlocked list of MediaBuffer
                objects. The goal is to re-use MediaBuffer objects and therefore minimize managed heap
                utilization. Using LockableRingBuffer should make the user aware, that buffers will need
                to be unlocked manually to discard them.
            </summary>
            <typeparam name="T">
                Must be an IOffsetBuffer derivative.
            </typeparam>
            -------------------------------------------------------------------------------------------------
        </member>
        <member name="M:StreamCoders.LockableOffsetBufferProvider`1.AcquireBuffer(System.Int32,System.Boolean)">
            -------------------------------------------------------------------------------------------------
            <summary>
                Finds or creates a new MediaBuffer object based on the bufferSize criteria. AllowGrow
                must be set in order to create new MediaBuffer objects.
            </summary>
            <param name="bufferSize">
                SizeIncludingHeader of the MediaBuffer to look for.
            </param>
            <param name="exactSize">
                if true, AcquireMediaBuffer will look for a buffer with the exact size provided by
                bufferSize, otherwise the condition is "greater-or-equal".
            </param>
            <returns>
                MediaBuffer object.
            </returns>
            -------------------------------------------------------------------------------------------------
        </member>
        <member name="T:StreamCoders.LockableOperationClient">
            -------------------------------------------------------------------------------------------------
            <summary>
                Implements locking operations used via <c>ILockableOperationProvider</c>.
                <c>OffsetBuffer</c> is derived from this class in order to support locking operations
                against <c>LockableOffsetBufferProvider</c>.
            </summary>
            <seealso cref="T:StreamCoders.ILockableOperationClient" />
            -------------------------------------------------------------------------------------------------
        </member>
        <member name="P:StreamCoders.LockableOperationClient.IsLocked">
            -------------------------------------------------------------------------------------------------
            <summary>
                Gets a value indicating whether this LockableOperationClient is locked.
            </summary>
            <value>
                true if this LockableOperationClient is locked, false if not.
            </value>
            -------------------------------------------------------------------------------------------------
        </member>
        <member name="M:StreamCoders.LockableOperationClient.Unlock">
            -------------------------------------------------------------------------------------------------
            <summary>
                Unlocks this object instance against the <c>ILockableOperationProvider</c> passed by <c>Lock</c>.
                This method throws an exception in case the client object is not locked.
            </summary>
            -------------------------------------------------------------------------------------------------
        </member>
        <member name="M:StreamCoders.LockableOperationClient.Lock(StreamCoders.ILockableOperationProvider)">
            -------------------------------------------------------------------------------------------------
            <summary>
                Locks this object instance against the <c>ILockableOperationProvider</c>.
            </summary>
            <remarks>
                This function also calls ResetInternals() on the <c>LockableOperationClient</c> to give it a
                chance to reset its internal structure.
            </remarks>
            <param name="lockingProvider">
                The locking provider to use to store the locked instance reference.
            </param>
            -------------------------------------------------------------------------------------------------
        </member>
        <member name="M:StreamCoders.LockableOperationClient.TryUnlock">
            <summary>
                Unlocks this object instance against the <c>ILockableOperationProvider</c> passed by <c>Lock</c>.
            </summary>
            <returns>Returns true if the object was unlocked, false if the object was not locked.</returns>
        </member>
        <member name="M:StreamCoders.LockableOperationClient.ResetInternals">
            -------------------------------------------------------------------------------------------------
            <summary>
                Resets the internals of the operations client. For example OffsetBuffer
                would reset Count
                and Offset values. This function is called when Lock() is called by the <c>ILockableOperationProvider</c>
            </summary>
            -------------------------------------------------------------------------------------------------
        </member>
        <member name="T:StreamCoders.LockableOperationProvider">
            -------------------------------------------------------------------------------------------------
            <summary>
                Maintains list of locked and unlocked <c>ILockableOperationClient</c> instances.
            </summary>
            <seealso cref="T:StreamCoders.ILockableOperationProvider" />
            -------------------------------------------------------------------------------------------------
        </member>
        <member name="M:StreamCoders.LockableOperationProvider.UnlockClient(StreamCoders.ILockableOperationClient)">
            <summary>
                Unlocks a client lock. If the operation fails an exception is thrown.
            </summary>
            <param name="lockable">Client object to unlock.</param>
        </member>
        <member name="M:StreamCoders.LockableOperationProvider.TryUnlockClient(StreamCoders.ILockableOperationClient)">
            <summary>
                Attempts to unlock a client.
            </summary>
            <param name="lockable">Client object to unlock.</param>
            <returns>Returns true if client was unlock, false if client was not locked.</returns>
        </member>
        <member name="M:StreamCoders.LockableOperationProvider.IsLocked(StreamCoders.ILockableOperationClient)">
            -------------------------------------------------------------------------------------------------
            <summary>
                Checks whether a particular <c>ILockableOperationClient</c> instance is locked.
            </summary>
            <param name="lockable">
                Instance of an object implementing <c>ILockableOperationClient</c>.
            </param>
            <returns>
                true if locked, false if not.
            </returns>
            -------------------------------------------------------------------------------------------------
        </member>
        <member name="M:StreamCoders.LockableOperationProvider.ClearAllClients">
            -------------------------------------------------------------------------------------------------
            <summary>
                Unlocks all locked clients and then removes all unlocked clients.
            </summary>
            -------------------------------------------------------------------------------------------------
        </member>
        <member name="M:StreamCoders.LockableOperationProvider.ClearAllUnlockedClients">
            -------------------------------------------------------------------------------------------------
            <summary>
                Removes all unlocked clients.
            </summary>
            -------------------------------------------------------------------------------------------------
        </member>
        <member name="M:StreamCoders.LockableOperationProvider.UnlockAllClients">
            -------------------------------------------------------------------------------------------------
            <summary>
                Unlocks all locked clients.
            </summary>
            -------------------------------------------------------------------------------------------------
        </member>
        <member name="P:StreamCoders.LockableOperationProvider.UnlockedClientCount">
            -------------------------------------------------------------------------------------------------
            <summary>
                Gets the number of unlocked clients.
            </summary>
            <value>
                The number of unlocked clients.
            </value>
            -------------------------------------------------------------------------------------------------
        </member>
        <member name="P:StreamCoders.LockableOperationProvider.LockedClientCount">
            -------------------------------------------------------------------------------------------------
            <summary>
                Gets the amount of locked clients.
            </summary>
            <value>
                The number of locked clients.
            </value>
            -------------------------------------------------------------------------------------------------
        </member>
        <member name="T:StreamCoders.MediaBuffer`1">
            -------------------------------------------------------------------------------------------------
            <summary>
                MediaBuffer class holds buffering information for various media types.
            </summary>
            <remarks>
                MediaBuffer can be derived from and used in conjunction with LockableRingBuffer.
            </remarks>
            <typeparam name="T">
                Element type.
            </typeparam>
            -------------------------------------------------------------------------------------------------
        </member>
        <member name="F:StreamCoders.MediaBuffer`1.Buffer">
            -------------------------------------------------------------------------------------------------
            <summary>
                Holds elements relevant to MediaBuffer.
            </summary>
            -------------------------------------------------------------------------------------------------
        </member>
        <member name="F:StreamCoders.MediaBuffer`1.EndTime">
            -------------------------------------------------------------------------------------------------
            <summary>
                Media time (End). In most cases this represents the presentation time + duration.
            </summary>
            -------------------------------------------------------------------------------------------------
        </member>
        <member name="F:StreamCoders.MediaBuffer`1.ExtendedInfo">
            -------------------------------------------------------------------------------------------------
            <summary>
                Is used to store additional/custom information within the buffer.
            </summary>
            -------------------------------------------------------------------------------------------------
        </member>
        <member name="F:StreamCoders.MediaBuffer`1.IsDiscontinuity">
            -------------------------------------------------------------------------------------------------
            <summary>
                Indicates that there was a discontinuity in the stream. This flag is passed to decoders.
            </summary>
            -------------------------------------------------------------------------------------------------
        </member>
        <member name="F:StreamCoders.MediaBuffer`1.IsKeyFrame">
            -------------------------------------------------------------------------------------------------
            <summary>
                true if this instance is key frame.
            </summary>
            ###
            <remarks>
                <para>
                    When used with MP4Reader, this will indicate true if the file contains a sync sample for
                    the particular sample number.
                </para>
                <para>For audio this value is always true.</para>
            </remarks>
            -------------------------------------------------------------------------------------------------
        </member>
        <member name="F:StreamCoders.MediaBuffer`1.PackageType">
            -------------------------------------------------------------------------------------------------
            <summary>
                Describes the content of this buffer.
            </summary>
            -------------------------------------------------------------------------------------------------
        </member>
        <member name="F:StreamCoders.MediaBuffer`1.StartTime">
            -------------------------------------------------------------------------------------------------
            <summary>
                Media time (Start). In most cases this represents the presentation time.
            </summary>
            -------------------------------------------------------------------------------------------------
        </member>
        <member name="M:StreamCoders.MediaBuffer`1.#ctor(StreamCoders.OffsetBuffer{`0})">
            -------------------------------------------------------------------------------------------------
            <summary>
                Constructs a MediaBuffer from an OffsetBuffer. This buffer will not be associated with a
                LockableRingBuffer.
            </summary>
            <param name="buffer">   OffsetBuffer to associate with. </param>
            -------------------------------------------------------------------------------------------------
        </member>
        <member name="M:StreamCoders.MediaBuffer`1.#ctor(StreamCoders.OffsetBuffer{`0},System.TimeSpan,System.TimeSpan)">
            -------------------------------------------------------------------------------------------------
            <summary>
                Constructs a MediaBuffer from an OffsetBuffer. This buffer will not be associated with a
                LockableRingBuffer.
            </summary>
            <param name="buffer">       OffsetBuffer to associate with. </param>
            <param name="startTime">    Start time of media. </param>
            <param name="endTime">      End time of media. </param>
            -------------------------------------------------------------------------------------------------
        </member>
        <member name="M:StreamCoders.MediaBuffer`1.#ctor(System.Int32)">
            -------------------------------------------------------------------------------------------------
            <summary>
                Creates a buffer of type T with certain size.
            </summary>
            <param name="size"> SizeIncludingHeader of buffer to create. </param>
            -------------------------------------------------------------------------------------------------
        </member>
        <member name="M:StreamCoders.MediaBuffer`1.#ctor(`0[])">
            -------------------------------------------------------------------------------------------------
            <summary>
                Creates a MediaBuffer by passing an external array. This buffer will not be associated
                with a LockableRingBuffer.
            </summary>
            <param name="array">    The array of elements to associate. </param>
            -------------------------------------------------------------------------------------------------
        </member>
        <member name="M:StreamCoders.MediaBuffer`1.#ctor(`0[],System.TimeSpan,System.TimeSpan)">
            -------------------------------------------------------------------------------------------------
            <summary>
                Creates a MediaBuffer by passing an external array. This buffer will not be associated
                with a LockableRingBuffer.
            </summary>
            <param name="array">        The array of elements to associate. </param>
            <param name="startTime">    Start time of media. </param>
            <param name="endTime">      End time of media. </param>
            -------------------------------------------------------------------------------------------------
        </member>
        <member name="M:StreamCoders.MediaBuffer`1.#ctor(`0[],System.Int32,System.Int32)">
            -------------------------------------------------------------------------------------------------
            <summary>
                Creates a MediaBuffer by passing an external array. This buffer will not be associated
                with a LockableRingBuffer.
            </summary>
            <param name="array">    The array of elements to associate. </param>
            <param name="offset">   Offset into array. </param>
            <param name="count">    Number of relevant elements. </param>
            -------------------------------------------------------------------------------------------------
        </member>
        <member name="M:StreamCoders.MediaBuffer`1.#ctor(`0[],System.Int32,System.Int32,System.Double,System.Double)">
            -------------------------------------------------------------------------------------------------
            <summary>
                Creates a MediaBuffer by passing an external array. This buffer will not be associated
                with a LockableRingBuffer.
            </summary>
            <param name="array">        The array of elements to associate. </param>
            <param name="offset">       Offset into array. </param>
            <param name="count">        Number of relevant elements. </param>
            <param name="startTime">    Start time of media. </param>
            <param name="endTime">      End time of media. </param>
            -------------------------------------------------------------------------------------------------
        </member>
        <member name="M:StreamCoders.MediaBuffer`1.#ctor(`0[],System.Int32,System.Int32,System.TimeSpan,System.TimeSpan)">
            -------------------------------------------------------------------------------------------------
            <summary>
                Creates a MediaBuffer by passing an external array. This buffer will not be associated
                with a LockableRingBuffer.
            </summary>
            <param name="array">        The array of elements to associate. </param>
            <param name="offset">       Offset into array. </param>
            <param name="count">        Number of relevant elements. </param>
            <param name="startTime">    Start time of media. </param>
            <param name="endTime">      End time of media. </param>
            -------------------------------------------------------------------------------------------------
        </member>
        <member name="P:StreamCoders.MediaBuffer`1.Duration">
            -------------------------------------------------------------------------------------------------
            <summary>
                Media time (Duration). Effectively <b>EndTime</b> - <b>StartTime</b>
            </summary>
            <value>
                The duration.
            </value>
            -------------------------------------------------------------------------------------------------
        </member>
        <member name="P:StreamCoders.MediaBuffer`1.CreationTime">
            -------------------------------------------------------------------------------------------------
            <summary>
                Time of buffer creation.
            </summary>
            <value>
                The time of the creation.
            </value>
            -------------------------------------------------------------------------------------------------
        </member>
        <member name="M:StreamCoders.MediaBuffer`1.ResetVariables">
            -------------------------------------------------------------------------------------------------
            <summary>
                Resets StartTime, EndTime, Duration, Buffer.Offset to 0.
            </summary>
            -------------------------------------------------------------------------------------------------
        </member>
        <member name="M:StreamCoders.MediaBuffer`1.ToString">
            -------------------------------------------------------------------------------------------------
            <summary>
                Convert this instance into a string representation.
            </summary>
            <returns>
                This instance as a string.
            </returns>
            -------------------------------------------------------------------------------------------------
        </member>
        <member name="M:StreamCoders.MediaBuffer`1.DeepCopy">
            -------------------------------------------------------------------------------------------------
            <summary>
                Creates a deep copy of MediaBuffer by cloning the OffsetBuffer and meta data. Exceptions
                are: ExtendedInfo and when a MediaBuffer is locked, then the lock state will remain
                unlocked (unacquired).
            </summary>
            <returns>
                Returns the deep copy of a MediaBuffer object.
            </returns>
            -------------------------------------------------------------------------------------------------
        </member>
        <member name="M:StreamCoders.MediaBuffer`1.CopyMetaDataFrom(StreamCoders.MediaBuffer{`0})">
            -------------------------------------------------------------------------------------------------
            <summary>
                Copies meta data from a source MediaBuffer. This includes: StartTime, EndTime, IsKeyframe,
                PackageType, ExtendedInfo. Not included: OffsetBuffer.
            </summary>
            <remarks>
                To make a full copy of a MediaBuffer, use <b>DeepCopy</b>
            </remarks>
            <param name="source">   Source MediaBuffer to copy meta data from. </param>
            -------------------------------------------------------------------------------------------------
        </member>
        <member name="T:StreamCoders.MediaBufferCollection`1">
            -------------------------------------------------------------------------------------------------
            <summary>
                A thread-safe collection that holds many MediaBuffer instances.
            </summary>
            <typeparam name="T">
                Generic type parameter.
            </typeparam>
            <seealso cref="T:System.Collections.Concurrent.BlockingCollection{T}" />
            -------------------------------------------------------------------------------------------------
        </member>
        <member name="T:StreamCoders.OffsetBuffer`1">
            <summary>
                <para>Generic buffer array which takes offsets into account. The buffer can be locked and pinned.</para>
                <para></para>
            </summary>
        </member>
        <member name="M:StreamCoders.OffsetBuffer`1.#ctor">
            <summary>
                Constructor
            </summary>
        </member>
        <member name="M:StreamCoders.OffsetBuffer`1.#ctor(`0[])">
            -------------------------------------------------------------------------------------------------
            <summary>
                Constructor.
            </summary>
            <param name="array">    The array. </param>
            -------------------------------------------------------------------------------------------------
        </member>
        <member name="M:StreamCoders.OffsetBuffer`1.#ctor(`0[],System.Int32,System.Int32)">
            -------------------------------------------------------------------------------------------------
            <summary>
                Constructor.
            </summary>
            <param name="array">    The array. </param>
            <param name="offset">   The offset. </param>
            <param name="count">    Number of. </param>
            -------------------------------------------------------------------------------------------------
        </member>
        <member name="M:StreamCoders.OffsetBuffer`1.#ctor(System.Int32)">
            -------------------------------------------------------------------------------------------------
            <summary>
                Constructor. Creates a new Array with a given size.
            </summary>
            <param name="size"> The size. </param>
            -------------------------------------------------------------------------------------------------
        </member>
        <member name="P:StreamCoders.OffsetBuffer`1.IsPinned">
            -------------------------------------------------------------------------------------------------
            <summary>
                Is set to true if the buffer is pinned.
            </summary>
            -------------------------------------------------------------------------------------------------
        </member>
        <member name="P:StreamCoders.OffsetBuffer`1.Offset">
            -------------------------------------------------------------------------------------------------
            <summary>
                Zero based offset into Buffer.
            </summary>
            <value>
                The offset.
            </value>
            -------------------------------------------------------------------------------------------------
        </member>
        <member name="P:StreamCoders.OffsetBuffer`1.Item(System.Int32)">
            -------------------------------------------------------------------------------------------------
            <summary>
                Indexer to access Array with respect to Offset.
            </summary>
            <value>
                The indexed item.
            </value>
            ###
            <param name="index">    Element index. </param>
            ###
            <returns>
                Element T at location this.Offset + index.
            </returns>
            -------------------------------------------------------------------------------------------------
        </member>
        <member name="M:StreamCoders.OffsetBuffer`1.Pin">
            <summary>
                <para>Pins the managed handle of Array with respect to Offset.</para>
            </summary>
            <remarks>
                OffsetBuffer can be pinned multiple times. The pinning mechanism will use reference counting to avoid memory leaks.
                For each time Pin() is called, UnPin()
                must also be called.
            </remarks>
            <returns>
                Pointer to handle.
            </returns>
        </member>
        <member name="M:StreamCoders.OffsetBuffer`1.Unpin">
            <summary>
                Unpins managed handle of Array.
            </summary>
            <remarks>
                OffsetBuffer can be pinned multiple times. The pinning mechanism will use reference counting to avoid memory leaks.
                For each time Pin() is called, UnPin()
                must also be called.
            </remarks>
        </member>
        <member name="P:StreamCoders.OffsetBuffer`1.Count">
            -------------------------------------------------------------------------------------------------
            <summary>
                Number of elements T available, taking Offset into account.
            </summary>
            <value>
                The count.
            </value>
            -------------------------------------------------------------------------------------------------
        </member>
        <member name="P:StreamCoders.OffsetBuffer`1.Array">
            -------------------------------------------------------------------------------------------------
            <summary>
                An array of type T containing elements.
            </summary>
            -------------------------------------------------------------------------------------------------
        </member>
        <member name="M:StreamCoders.OffsetBuffer`1.CopyFrom(`0[],System.Int32,System.Int32)">
            -------------------------------------------------------------------------------------------------
            <summary>
                Copies elements into local buffer.
            </summary>
            <exception cref="T:System.IndexOutOfRangeException">
                Thrown when the index is outside the required range.
            </exception>
            <param name="buffer">   The source buffer to copy from. </param>
            <param name="offset">   The offset in the source buffer. </param>
            <param name="count">    The number of elements to copy from source buffer. </param>
            -------------------------------------------------------------------------------------------------
        </member>
        <member name="M:StreamCoders.OffsetBuffer`1.ExtractArray(System.Int32,System.Int32)">
            -------------------------------------------------------------------------------------------------
            <summary>
                Extracts array from Buffer by creating a copy.
            </summary>
            <param name="offset">
                The offset.
            </param>
            <param name="count">
                Number of bytes to extract.
            </param>
            <returns>
                The extracted array.
            </returns>
            -------------------------------------------------------------------------------------------------
        </member>
        <member name="M:StreamCoders.OffsetBuffer`1.ExtractArray">
            -------------------------------------------------------------------------------------------------
            <summary>
                Extracts the underlying buffer into a new array.
            </summary>
            <returns>
                The extracted array.
            </returns>
            -------------------------------------------------------------------------------------------------
        </member>
        <member name="M:StreamCoders.OffsetBuffer`1.DeepCopy">
            -------------------------------------------------------------------------------------------------
            <summary>
                Creates a deep copy of the current object.
            </summary>
            <returns>
                Returns the deep copy.
            </returns>
            -------------------------------------------------------------------------------------------------
        </member>
        <member name="M:StreamCoders.OffsetBuffer`1.ToMemoryStream">
            -------------------------------------------------------------------------------------------------
            <summary>
                Creates a MemoryStream object from the contents of OffsetBuffer. If T is not of type byte,
                an intermediate buffer is created.
            </summary>
            <returns>
                Returns the newly created MemoryStream.
            </returns>
            -------------------------------------------------------------------------------------------------
        </member>
        <member name="M:StreamCoders.OffsetBuffer`1.SaveToFile(System.String)">
            -------------------------------------------------------------------------------------------------
            <summary>
                Saves contents of OffsetBuffer to a file.
            </summary>
            <param name="filename"> Name of file to save to. </param>
            -------------------------------------------------------------------------------------------------
        </member>
        <member name="M:StreamCoders.OffsetBuffer`1.PostOffsetIncCountDec">
            -------------------------------------------------------------------------------------------------
            <summary>
                Does a post-increment return of Offset and decrements Count by 1.
            </summary>
            <returns>
                Returns the OffsetBuffer.Offset value.
            </returns>
            -------------------------------------------------------------------------------------------------
        </member>
        <member name="M:StreamCoders.OffsetBuffer`1.PostOffsetInc">
            -------------------------------------------------------------------------------------------------
            <summary>
                Does a post-increment return of Offset.
            </summary>
            <returns>
                Returns the OffsetBuffer.Offset value.
            </returns>
            -------------------------------------------------------------------------------------------------
        </member>
        <member name="M:StreamCoders.OffsetBuffer`1.ToString">
            -------------------------------------------------------------------------------------------------
            <summary>
                Convert this instance into a string representation.
            </summary>
            <returns>
                This instance as a string.
            </returns>
            -------------------------------------------------------------------------------------------------
        </member>
        <member name="T:StreamCoders.PackageType">
            <summary>
                Indicates the type of content contained within a buffer.
            </summary>
        </member>
        <member name="F:StreamCoders.PackageType.Raw">
            <summary>
                The content has raw payload.
            </summary>
        </member>
        <member name="F:StreamCoders.PackageType.Config">
            <summary>
                The content has payload that is necessary for configuration.
            </summary>
        </member>
        <member name="T:StreamCoders.PictureFormat">
            -------------------------------------------------------------------------------------------------
            <summary>
                Enumeration of supported picture formats.
            </summary>
            -------------------------------------------------------------------------------------------------
        </member>
        <member name="F:StreamCoders.PictureFormat.NotSetOrUndefined">
            <summary>
                Default PictureFormat to indicate that a property is not set or the format is not defined/unknown.
            </summary>
        </member>
        <member name="F:StreamCoders.PictureFormat.Gray8">
            <summary>
                8-bit gray scale
            </summary>
        </member>
        <member name="F:StreamCoders.PictureFormat.Rgb16">
            <summary>
                Picture is made up of 16-bit RGB (5,6,5)
            </summary>
        </member>
        <member name="F:StreamCoders.PictureFormat.Rgb24">
            <summary>
                Picture is made up of 24-bit RGB (8,8,8)
            </summary>
        </member>
        <member name="F:StreamCoders.PictureFormat.Rgb32">
            <summary>
                Picture is made up of 32-bit Alpha + RGB (A8,8,8,8)
            </summary>
        </member>
        <member name="F:StreamCoders.PictureFormat.Yv12">
            <summary>
                Y'VU Planar format
            </summary>
        </member>
        <member name="F:StreamCoders.PictureFormat.Yuv420">
            <summary>
                Y'UV Planar format
            </summary>
        </member>
        <member name="F:StreamCoders.PictureFormat.Nv12">
            <summary>
                UV interleaved on same chroma plane
            </summary>
        </member>
        <member name="T:StreamCoders.PictureMediaBuffer">
            -------------------------------------------------------------------------------------------------
            <summary>
                Represents a <b>MediaBuffer</b> that holds a raw picture frame and data about resolution
                and format.
            </summary>
            <seealso cref="T:StreamCoders.MediaBuffer{System.Byte}" />
            -------------------------------------------------------------------------------------------------
        </member>
        <member name="F:StreamCoders.PictureMediaBuffer.Format">
            <summary>
                Format of Picture
            </summary>
        </member>
        <member name="M:StreamCoders.PictureMediaBuffer.#ctor(StreamCoders.OffsetBuffer{System.Byte})">
            -------------------------------------------------------------------------------------------------
            <summary>
                Creates a PictureMediaBuffer from an existing OffsetBuffer.
            </summary>
            ///
            <param name="inputBuffer">OffsetBuffer to use</param>
            <remarks>
                Since OffsetBuffer has no meta information, these values need to be filled manually after construction.
            </remarks>
            -------------------------------------------------------------------------------------------------
        </member>
        <member name="M:StreamCoders.PictureMediaBuffer.#ctor(StreamCoders.MediaBuffer{System.Byte})">
            <summary>
                Creates a PictureMediaBuffer from an existing MediaBuffer
            </summary>
            <param name="inputBuffer">MediaBuffer to use</param>
        </member>
        <member name="P:StreamCoders.PictureMediaBuffer.Width">
            <summary>
                Width of picture
            </summary>
        </member>
        <member name="P:StreamCoders.PictureMediaBuffer.Height">
            <summary>
                Height of picture
            </summary>
        </member>
        <member name="P:StreamCoders.PictureMediaBuffer.Stride">
            <summary>
                Stride of row
            </summary>
        </member>
        <member name="M:StreamCoders.PictureMediaBuffer.CreateFromTemplate(System.Int32,System.Int32,StreamCoders.PictureFormat)">
            -------------------------------------------------------------------------------------------------
            <summary>
                Creates a PictureMediaBuffer given resolution and format. The OffsetBuffer will also be allocated.
            </summary>
            <param name="width">
                Width of picture.
            </param>
            <param name="height">
                Height of picture.
            </param>
            <param name="format">
                Format of Picture.
            </param>
            <returns>
                Returns a new instance of PictureMediaBuffer.
            </returns>
            <remarks>
            Currently support formats are <c>Gray8</c>, <c>Rgb24</c> and <c>Rgb32</c>.
            </remarks>
            -------------------------------------------------------------------------------------------------
        </member>
        <member name="M:StreamCoders.PictureMediaBuffer.CreateFromTemplate``1(System.Int32,System.Int32)">
            <summary>
            Creates a PictureMediaBuffer specialization class. Stride and Format properties are automatically filled by the respective classes used for instantiation.
            </summary>
            <typeparam name="T">Class object to instantiate</typeparam>
            <param name="width">Width of content</param>
            <param name="height">Height of content</param>
            <returns>Returns an instance of T</returns>
        </member>
        <member name="M:StreamCoders.PictureMediaBuffer.CreateFromBuffer``1(StreamCoders.OffsetBuffer{System.Byte})">
            <summary>
            Creates a PictureMediaBuffer derived class instance with a predefined buffer.
            </summary>
            <param name="buffer"></param>
            <returns></returns>
        </member>
        <member name="M:StreamCoders.PictureMediaBuffer.CreateFromTemplate(StreamCoders.PictureMediaBuffer)">
            -------------------------------------------------------------------------------------------------
            <summary>
                Creates a PictureMediaBuffer of the same type given the meta-data from another buffer. The OffsetBuffer will not be copied, but will
                be allocated.
            </summary>
            <param name="inputBuffer">
                Template buffer to use for creation.
            </param>
            <returns>
                Returns a new instance of PictureMediaBuffer.
            </returns>
            -------------------------------------------------------------------------------------------------
        </member>
        <member name="M:StreamCoders.PictureMediaBuffer.CreateFromTemplate(StreamCoders.ChannelPictureMediaBuffer)">
            -------------------------------------------------------------------------------------------------
            <summary>
                Creates a ChannelPictureMediaBuffer given the meta-data from another buffer. The OffsetBuffer will not be copied, but will
                be allocated given resolution and format.
            </summary>
            <param name="inputBuffer">
                Template buffer to use for creation.
            </param>
            <returns>
                Returns a new instance of ChannelPictureMediaBuffer.
            </returns>
            -------------------------------------------------------------------------------------------------
        </member>
        <member name="M:StreamCoders.PictureMediaBuffer.op_GreaterThan(StreamCoders.PictureMediaBuffer,StreamCoders.PictureMediaBuffer)">
            <summary>
            Compares the dimensions of two PictureMediaBuffer instances. If picture one is larger than picture two, then the function returns true.
            </summary>
            <param name="picture1">First picture.</param>
            <param name="picture2">Picture to compare to first picture.</param>
            <returns>Returns true of picture1 is larger than picture2</returns>
        </member>
        <member name="M:StreamCoders.PictureMediaBuffer.op_LessThan(StreamCoders.PictureMediaBuffer,StreamCoders.PictureMediaBuffer)">
            <summary>
            Compares the dimensions of two PictureMediaBuffer instances. If picture one is smaller than picture two, then the function returns true.
            </summary>
            <param name="picture1">First picture.</param>
            <param name="picture2">Picture to compare to first picture.</param>
            <returns>Returns true of picture1 is smaller than picture2</returns>
        </member>
        <member name="M:StreamCoders.PictureMediaBuffer.CopyMetaDataFrom(StreamCoders.MediaBuffer{System.Byte})">
            -------------------------------------------------------------------------------------------------
            <summary>
                Copies the meta data from source to local instance. If the passed object is a up-cast
                <c>PictureMediaBuffer</c>, then <c>CopyMetaDataFrom(PictureMediaBuffer)</c> will be
                invoked.
            </summary>
            <param name="source">
                The source MediaBuffer to copy from.
            </param>
            <returns>
                Returns the local instance. (No new instance is created).
            </returns>
            -------------------------------------------------------------------------------------------------
        </member>
        <member name="M:StreamCoders.PictureMediaBuffer.CopyMetaDataFrom(StreamCoders.PictureMediaBuffer)">
            -------------------------------------------------------------------------------------------------
            <summary>
                Copies the meta data from source to local instance. The data includes all fields from
                MediaBuffer plus all fields from PictureMediaBuffer.
            </summary>
            <param name="source">
                The source PictureMediaBuffer to copy from.
            </param>
            <returns>
                Returns the local instance. (No new instance is created).
            </returns>
            -------------------------------------------------------------------------------------------------
        </member>
        <member name="M:StreamCoders.PictureMediaBuffer.CheckPreconditions">
            -------------------------------------------------------------------------------------------------
            <summary>
                Checks whether the resolution is set and the allocated buffer is big enough to hold the
                specified amount of pixels. These checks are made with preconditions, so if enabled will
                throw exceptions.
            </summary>
            <remarks>
            </remarks>
            -------------------------------------------------------------------------------------------------
        </member>
        <member name="T:StreamCoders.PresentationBuffer">
            -------------------------------------------------------------------------------------------------
            <summary>
                The PresentationBuffer helps re-ordering pictures based on their presentation time. This
                is necessary when DTS are not equal to PTS.
            </summary>
            <remarks>
                <para>
                    In scenarios with B-Frames it is necessary to re-order pictures from decode order
                    to presentation order.
                </para>
                <para>
                    PresentationBuffer automatically detects non-monotonically increasing presentation
                    times and introduces an artificial delay in the playout so that the most
                    recent decoded frames can be ordered correctly.
                </para>
                <para>
                    At best the presentation buffer introduces a delay of 1 frame, at worst it can be
                    up to 16 frames for H.264 when using B-Frames or in general with any
                    decoder, it can introduce a delay of the IPB-frame distance.
                </para>
                <para></para>
            </remarks>
            -------------------------------------------------------------------------------------------------
        </member>
        <member name="M:StreamCoders.PresentationBuffer.#ctor">
            <summary>
                Initializes a new instance of the <see cref="T:StreamCoders.PresentationBuffer" /> class. The OutputQueue with the default
                constructor does not have a <c>Count</c> limit.
            </summary>
        </member>
        <member name="M:StreamCoders.PresentationBuffer.#ctor(System.Int32)">
            <summary>
                Initializes a new instance of the <see cref="T:StreamCoders.PresentationBuffer" /> class.
            </summary>
            <param name="maximumOutputQueueLength">Maximum length of the output queue.</param>
        </member>
        <member name="P:StreamCoders.PresentationBuffer.MaximumReorderDelay">
            -------------------------------------------------------------------------------------------------
            <summary>
                The maximum delay introduced when re-ordering of pictures in the presentation is
                necessary.
            </summary>
            <value>
                The maximum reorder delay.
            </value>
            -------------------------------------------------------------------------------------------------
        </member>
        <member name="P:StreamCoders.PresentationBuffer.CurrentReorderDelay">
            -------------------------------------------------------------------------------------------------
            <summary>
                Current re-order delay of the presentation buffer.
            </summary>
            <value>
                The current reorder delay.
            </value>
            -------------------------------------------------------------------------------------------------
        </member>
        <member name="P:StreamCoders.PresentationBuffer.Count">
            -------------------------------------------------------------------------------------------------
            <summary>
                Gets the number of items current retained in the presentation buffer.
            </summary>
            <remarks>
                The number of items ready for display can be obtained by inspecting the OutputQueue.
            </remarks>
            -------------------------------------------------------------------------------------------------
        </member>
        <member name="M:StreamCoders.PresentationBuffer.AddFrame(StreamCoders.MediaBuffer{System.Byte},System.Threading.CancellationToken)">
            <summary>
                Adds a new frame to the presentation buffer.
            </summary>
            <param name="pictureMediaBuffer">A picture media buffer.</param>
            <param name="cancellationToken">
                A cancellation token to abort a blocking operation if the output queues maximum length
                is reached.
            </param>
            <returns></returns>
            <remarks>
                <para>
                    Note that all presentationTime values fed to the presentation buffer have to be unique,
                    otherwise they may be overwritten.
                </para>
                <para>
                    When a maximum output queue count was specified this method will block until the number of items in the
                    <c>OutputQueue</c> is reduced. The <c>CancellationToken</c> should be used to abort blocking operations.
                </para>
            </remarks>
        </member>
        <member name="M:StreamCoders.PresentationBuffer.AddFrame(StreamCoders.MediaBuffer{System.Byte})">
            <summary>
                Adds a frame to the presentation buffer.
            </summary>
            <param name="pictureMediaBuffer">The picture media buffer.</param>
            <returns></returns>
            <remarks>
                When a maximum output queue count was specified this method will block until the number of items in the
                <c>OutputQueue</c> is reduced.
            </remarks>
        </member>
        <member name="M:StreamCoders.PresentationBuffer.GetNextFrame">
            -------------------------------------------------------------------------------------------------
            <summary>
                Requests the next frame from the presentation buffer. for display.
            </summary>
            <returns>
                If a picture is present and the delay is sufficient, a frame will be returned, otherwise
                null.
            </returns>
            -------------------------------------------------------------------------------------------------
        </member>
        <member name="M:StreamCoders.PresentationBuffer.Clear">
            -------------------------------------------------------------------------------------------------
            <summary>
                Clears this PresentationBuffer to its blank/initial state.
            </summary>
            -------------------------------------------------------------------------------------------------
        </member>
        <member name="T:StreamCoders.Rgb24PictureMediaBuffer">
            <summary>
            PictureMediaBuffer to represent RGB-24 content
            </summary>
        </member>
        <member name="T:StreamCoders.Rgb32PictureMediaBuffer">
            <summary>
            PictureMediaBuffer to represent RGBA-32 content
            </summary>
        </member>
        <member name="T:StreamCoders.Codec">
            -------------------------------------------------------------------------------------------------
            <summary>
                An enumeration of codecs available to classes contained in the framework.
            </summary>
            -------------------------------------------------------------------------------------------------
        </member>
        <member name="F:StreamCoders.Codec.Unknown">
            <summary>
                Unknown codec
            </summary>
        </member>
        <member name="F:StreamCoders.Codec.H261">
            <summary>
                H.261 video codec
            </summary>
        </member>
        <member name="F:StreamCoders.Codec.H263">
            <summary>
                H.263 video codec (all versions)
            </summary>
        </member>
        <member name="F:StreamCoders.Codec.Mpeg1V">
            <summary>
                MPEG-1 video codec
            </summary>
        </member>
        <member name="F:StreamCoders.Codec.Mpeg2V">
            <summary>
                MPEG-2 video codec
            </summary>
        </member>
        <member name="F:StreamCoders.Codec.Mpeg4V">
            <summary>
                MPEG-4.2 video codec
            </summary>
        </member>
        <member name="F:StreamCoders.Codec.H264">
            <summary>
                H.264/AVC/MPEG-4.10 video codec
            </summary>
        </member>
        <member name="F:StreamCoders.Codec.H265">
            <summary>
                H.265/HEVC video codec
            </summary>
        </member>
        <member name="F:StreamCoders.Codec.Mjpeg">
            <summary>
                Motion JPEG video codec
            </summary>
        </member>
        <member name="F:StreamCoders.Codec.Jpeg">
            <summary>
                JPEG <br />
                Is used in streams that contain RFC 2435 - RTP payload for JPEG.
            </summary>
        </member>
        <member name="F:StreamCoders.Codec.Vc1">
            <summary>
                Microsoft VC-1 video codec
            </summary>
        </member>
        <member name="F:StreamCoders.Codec.Wmv">
            <summary>
                Microsoft WMV video codec encapsulation
            </summary>
        </member>
        <member name="F:StreamCoders.Codec.Wma">
            <summary>
                Microsoft Windows Media Audio Version 8 (Format Tag: 0x161)
            </summary>
        </member>
        <member name="F:StreamCoders.Codec.WmaPro">
            -------------------------------------------------------------------------------------------------
            <summary>
                Microsoft Windows Media Audio Version 9.2, 10 (Format Tag: 0x162)
            </summary>
            -------------------------------------------------------------------------------------------------
        </member>
        <member name="F:StreamCoders.Codec.Gray8">
            <summary>
                Grayscale 8-bit
            </summary>
        </member>
        <member name="F:StreamCoders.Codec.Yuv420">
            <summary>
                YV-12, YUV420 picture color space
            </summary>
        </member>
        <member name="F:StreamCoders.Codec.Nv12">
            <summary>
                NV-12 picture color space
            </summary>
        </member>
        <member name="F:StreamCoders.Codec.Rgb16">
            <summary>
                Rgb 5-6-5
            </summary>
        </member>
        <member name="F:StreamCoders.Codec.Rgb24">
            <summary>
                RGB 8-bit per channel
            </summary>
        </member>
        <member name="F:StreamCoders.Codec.Rgb32">
            <summary>
                RGBA
            </summary>
        </member>
        <member name="F:StreamCoders.Codec.Pcm">
            <summary>
                PCM audio
            </summary>
        </member>
        <member name="F:StreamCoders.Codec.Ac3">
            <summary>
                Dolby AC-3 audio codec
            </summary>
        </member>
        <member name="F:StreamCoders.Codec.Aac">
            <summary>
                MPEG-4 audio (all versions)
            </summary>
        </member>
        <member name="F:StreamCoders.Codec.Mp3">
            <summary>
                MPEG-1/2 L3 audio codec
            </summary>
        </member>
        <member name="F:StreamCoders.Codec.Vp6">
            <summary>
                On2 VP6 video codec
            </summary>
        </member>
        <member name="F:StreamCoders.Codec.Vp6A">
            <summary>
                On2 VP6 video codec
            </summary>
        </member>
        <member name="F:StreamCoders.Codec.Vp8">
            <summary>
                Google VP8 video codec
            </summary>
        </member>
        <member name="F:StreamCoders.Codec.Vp9">
            <summary>
                Google VP9 video codec
            </summary>
        </member>
        <member name="F:StreamCoders.Codec.ScreenVideo">
            <summary>
                On2 SV1
            </summary>
        </member>
        <member name="F:StreamCoders.Codec.ScreenVideo2">
            <summary>
                On2 SV2
            </summary>
        </member>
        <member name="F:StreamCoders.Codec.PcmLeTwo">
            <summary>
                Little Endian Twos complement
            </summary>
        </member>
        <member name="F:StreamCoders.Codec.L16">
            <summary>
                Linear 16 PCM
            </summary>
        </member>
        <member name="F:StreamCoders.Codec.Vorbis">
            <summary>
                Vorbis audio codec
            </summary>
        </member>
        <member name="F:StreamCoders.Codec.Opus">
            <summary>
                Opus audio codec
            </summary>
        </member>
        <member name="F:StreamCoders.Codec.Dts">
            <summary>
                DTS Audio
            </summary>
        </member>
        <member name="F:StreamCoders.Codec.MicrosoftFcc">
            <summary>
                Microsoft FourCC. More information is located in the decoder data, which is made up of a BITMAPINFOHEADER.
            </summary>
            <remarks>
                The private data contains the VCM structure BITMAPINFOHEADER including the extra private bytes, as defined by
                Microsoft. The data are stored in little endian format (like on IA32 machines).
            </remarks>
        </member>
        <member name="F:StreamCoders.Codec.Utf8Text">
            <summary>
                Raw text used for sub-titles in UTF-8
            </summary>
        </member>
        <member name="F:StreamCoders.Codec.Adaptive">
            <summary>
                Indicates that the used codec is defined by other means, depending on bitrate or other criteria.
            </summary>
        </member>
        <member name="F:StreamCoders.Codec.G711A">
            <summary>
                ITU-T G.711 alaw Bitrates: 64000 - Frequency: 8000 - Base Duration: 10ms
            </summary>
        </member>
        <member name="F:StreamCoders.Codec.G711U">
            <summary>
                ITU-T G.711 ulaw Bitrates: 64000 - Frequency: 8000 - Base Duration: 10ms
            </summary>
        </member>
        <member name="F:StreamCoders.Codec.G722">
            <summary>
                ITU-T G.722.1 Bitrates: 32000, 24000, 16000 - Frequency: 16000 - Base Duration: 20ms
            </summary>
        </member>
        <member name="F:StreamCoders.Codec.G722SB">
            <summary>
                ITU-T G.722.0 Bitrates: 64000, 56000, 48000 - Frequency: 16000 - Base Duration: 20ms
            </summary>
        </member>
        <member name="F:StreamCoders.Codec.G7231">
            <summary>
                ITU-T G.723.1 Bitrates: 5300, 6300 - Frequency: 8000 - Base Duration: 30ms
            </summary>
        </member>
        <member name="F:StreamCoders.Codec.G726">
            <summary>
                ITU-T G.726 Bitrates: 16000, 24000, 32000, 40000 - Frequency: 8000 - Base Duration: 10ms
            </summary>
        </member>
        <member name="F:StreamCoders.Codec.G728">
            <summary>
                ITU-T G.728 Bitrates: 9600, 12800, 16000 - Frequency: 16000 - Base Duration: 20ms
            </summary>
        </member>
        <member name="F:StreamCoders.Codec.G729A">
            <summary>
                ITU-T G.729 (A, B) Bitrates: 8000 - Frequency: 8000 - Base Duration: 10ms
            </summary>
        </member>
        <member name="F:StreamCoders.Codec.G729I">
            <summary>
                ITU-T G.729 (B, C, C+, D, E, I) Bitrates: 6400, 8000, 11800 - Frequency: 8000 - Base Duration: 20ms
            </summary>
        </member>
        <member name="F:StreamCoders.Codec.G7291">
            <summary>
                ITU-T G.729.1 Bitrates: 8000, 12000, 14000, 16000, 18000, 20000, 22000, 24000, 26000, 28000, 30000, 32000 -
                Frequency: 8000, 16000 - Base Duration: 20ms
            </summary>
        </member>
        <member name="F:StreamCoders.Codec.Amrnb">
            <summary>
                GSM 06.90-94 Bitrates: 4750, 5150, 5900, 6700, 7400, 7950, 10200, 12200 - Frequency: 8000 - Base Duration: 20ms
            </summary>
        </member>
        <member name="F:StreamCoders.Codec.Amrwb">
            <summary>
                3GPP TS 26.190-192,194 Bitrates: 6600, 8850, 12650, 14250, 15850, 18250, 19850, 23050, 23850 - Frequency: 16000 -
                Base Duration: 20ms
            </summary>
        </member>
        <member name="F:StreamCoders.Codec.Amrwbe">
            <summary>
                Additional Bitrates mono: 10400, 12000, 13600, 15200, 16800, 19200, 20800, 24000 - Frequency: Encoder: 16000,
                24000, 32000, 48000, Decoder: 8000, Base Duration: 20ms
            </summary>
        </member>
        <member name="F:StreamCoders.Codec.SpeexNb">
            <summary>
                Bitrates: 250, 2150, 3950, 5950, 8000, 11000, 15000, 18200, 24600 - Frequency: 8kHz - Base Duration: 20ms
            </summary>
        </member>
        <member name="F:StreamCoders.Codec.SpeexWb">
            <summary>
                Bitrates: 3950, 5750, 7750, 9800, 12800, 16800, 20600, 23800, 27800, 34400, 42400 - Frequency: 16kHz  - Base
                Duration: 20ms
            </summary>
        </member>
        <member name="F:StreamCoders.Codec.GsmFullrate">
            <summary>
                ETSI EN 300 961-965 Bitrates: 13000 - Frequency: 8000 - Base Duration: 20ms
            </summary>
        </member>
        <member name="T:StreamCoders.CodecOperationStatus">
            -------------------------------------------------------------------------------------------------
            <summary>
                Contains status information of common functions in encoders and decoders.
            </summary>
            -------------------------------------------------------------------------------------------------
        </member>
        <member name="F:StreamCoders.CodecOperationStatus.NotInitialized">
            <summary>
                Indicates an un-initialized state.
            </summary>
        </member>
        <member name="F:StreamCoders.CodecOperationStatus.Success">
            <summary>
                Indicates that the operation was successful.
            </summary>
        </member>
        <member name="F:StreamCoders.CodecOperationStatus.Failed">
            <summary>
                Indicates that the operation has failed.
            </summary>
        </member>
        <member name="F:StreamCoders.CodecOperationStatus.NullArgumentNotAllowed">
            <summary>
                Indicates that the argument passed was null.
            </summary>
        </member>
        <member name="F:StreamCoders.CodecOperationStatus.NeedsMoreData">
            <summary>
                Indicates that operation needs more data in order to complete.
            </summary>
        </member>
        <member name="F:StreamCoders.CodecOperationStatus.BadParameters">
            <summary>
                The passed input data object had some invalid meta data.
            </summary>
        </member>
        <member name="F:StreamCoders.CodecOperationStatus.UnableToDetermineOutputFormat">
            <summary>
                The decoder was unable to determine the correct output format or the output format is not supported.
            </summary>
        </member>
        <member name="F:StreamCoders.CodecOperationStatus.HardwareNotSupported">
            <summary>
                Hardware is not compatible with codec implementation
            </summary>
        </member>
        <member name="F:StreamCoders.CodecOperationStatus.UnknownResult">
            <summary>
                The result can not be interpreted
            </summary>
        </member>
        <member name="F:StreamCoders.CodecOperationStatus.Deferred">
            <summary>
                The result is deferred to a later time
            </summary>
        </member>
        <member name="T:StreamCoders.Encoder.AacAccessUnitTool">
            <summary>
                Handles the creation and expansion AAC access units.
            </summary>
        </member>
        <member name="F:StreamCoders.Encoder.AacAccessUnitTool.DontRetain">
            -------------------------------------------------------------------------------------------------
            <summary>
                Indicates whether to respect the MaxPacketSize threshold. If set to true each packet will
                only contain one AU. If true, it may improve real-time transmission of data, but not
                utilize the network capacity to the full extent.
            </summary>
            -------------------------------------------------------------------------------------------------
        </member>
        <member name="F:StreamCoders.Encoder.AacAccessUnitTool.MaxPacketSize">
            -------------------------------------------------------------------------------------------------
            <summary>
                Maximum size of data packet to create. Maximum size should not exceed MaxPacketSize +
                RtpPacket.HeaderSize > MTU.
            </summary>
            -------------------------------------------------------------------------------------------------
        </member>
        <member name="P:StreamCoders.Encoder.AacAccessUnitTool.SizeLength">
            -------------------------------------------------------------------------------------------------
            <summary>
                Number of bits to reserve for AU size field.
            </summary>
            -------------------------------------------------------------------------------------------------
        </member>
        <member name="P:StreamCoders.Encoder.AacAccessUnitTool.IndexLength">
            -------------------------------------------------------------------------------------------------
            <summary>
                Number of bits to reserve for AU Index or Delta field.
            </summary>
            -------------------------------------------------------------------------------------------------
        </member>
        <member name="P:StreamCoders.Encoder.AacAccessUnitTool.IndexDeltaLength">
            <summary>
                The number of bits on which the AU-Index-delta field is encoded in
                any non-first AU-header.The default value of zero indicates the
                absence of the AU-Index-delta field in each non-first AU-header.
            </summary>
            <value>The index delta length.</value>
        </member>
        <member name="M:StreamCoders.Encoder.AacAccessUnitTool.Reset">
            -------------------------------------------------------------------------------------------------
            <summary>
                Resets internal data structures and clears retained AUs.
            </summary>
            -------------------------------------------------------------------------------------------------
        </member>
        <member name="M:StreamCoders.Encoder.AacAccessUnitTool.CreateAu(StreamCoders.MediaBuffer{System.Byte})">
            <summary>
                Creates a data packet containing one or more Access Units (AUs).
            </summary>
            <param name="inputData">MediaPackage Buffer containing AAC frame</param>
            <returns>Returns data packet, otherwise null.</returns>
        </member>
        <member name="M:StreamCoders.Encoder.AacAccessUnitTool.CreateAuRtpFrame(StreamCoders.MediaBuffer{System.Byte})">
            -------------------------------------------------------------------------------------------------
            <summary>
                Creates an AU RTP frame from AAC ADIF or ADTS audio frames.
            </summary>
            <param name="inputData">
                MediaBuffer containing data and timing information. Note that
                <b>AacAccessUnitTool.NetworkConfiguration</b> must be filled out.
            </param>
            <returns>
                Returns newly created RTPFrame.
            </returns>
            <example>
                <code title="Example" description="" lang="CS">
                 MediaBuffer&lt;byte&gt; mp = GetNextFrame();
                 var tempFrame = aacTool.CreateAuRtpFrame(mp);
                 if (tempFrame != null)
                 {
                 retFrames.Add(tempFrame);
                 detail.RecentPresentationTime = mp.StartTime;
                 detail.RecentTimestamp = tempFrame.Timestamp;
                 detail.RecentSequenceNumber = tempFrame.Peek(tempFrame.PacketCount - 1).SequenceNumber;
                 }</code>
            </example>
            -------------------------------------------------------------------------------------------------
        </member>
        <member name="M:StreamCoders.Encoder.AacAccessUnitTool.GetNumberOfFramesInAu(StreamCoders.OffsetBuffer{System.Byte})">
            -------------------------------------------------------------------------------------------------
            <summary>
                Gets the number of frames contained in an AU.
            </summary>
            <param name="buffer">
                Buffer to analyse.
            </param>
            <returns>
                Returns the number of frames.
            </returns>
            <example>
                <code title="Example" description="" lang="CS">
                 RtpPacket p = GetNextPacket();
                 int auFramesCount = aacAuTool.GetNumberOfFramesInAu(p.DataPointer, 0, (int)p.DataSize);
                 double predictedDuration = (double)(auFramesCount * aacFrameSize / (double)samplerate);</code>
            </example>
            -------------------------------------------------------------------------------------------------
        </member>
        <member name="M:StreamCoders.Encoder.AacAccessUnitTool.GetNumberOfFramesInAu(System.Byte[],System.Int32,System.Int32)">
            -------------------------------------------------------------------------------------------------
            <summary>
                Gets the number of frames contained in an AU.
            </summary>
            <param name="buffer">
                Buffer to analyse.
            </param>
            <param name="offset">
                Offset into buffer.
            </param>
            <param name="count">
                Number of elements in buffer.
            </param>
            <returns>
                Returns the number of frames.
            </returns>
            -------------------------------------------------------------------------------------------------
        </member>
        <member name="M:StreamCoders.Encoder.AacAccessUnitTool.ExpandAu(StreamCoders.MediaBuffer{System.Byte},System.Int32)">
            -------------------------------------------------------------------------------------------------
            <summary>
                Expands an AU to a list of AAC partial frames.
            </summary>
            <param name="buffer">
                Buffer containing AUs. To expand correctly, the <b>MediaBuffer</b> needs to contain the
                correct StartTime and EndTime.
            </param>
            <param name="aacConstantFrameSize">
                Constant AAC frame size (1024 or 960)
            </param>
            <returns>
                Returns a list of AAC partial frames.
            </returns>
            -------------------------------------------------------------------------------------------------
        </member>
        <member name="F:StreamCoders.Encoder.AacAccessUnitToolNetworkConfiguration.SampleFrequency">
            -------------------------------------------------------------------------------------------------
            <summary>
                sample frequency of audio stream.
            </summary>
            -------------------------------------------------------------------------------------------------
        </member>
        <member name="P:StreamCoders.Encoder.AacAccessUnitToolNetworkConfiguration.ReferenceClock">
            -------------------------------------------------------------------------------------------------
            <summary>
                Reference clock for RTP stream.
            </summary>
            -------------------------------------------------------------------------------------------------
        </member>
        <member name="P:StreamCoders.Encoder.AacAccessUnitToolNetworkConfiguration.Ssrc">
            -------------------------------------------------------------------------------------------------
            <summary>
                Ssrc of RTP stream.
            </summary>
            -------------------------------------------------------------------------------------------------
        </member>
        <member name="P:StreamCoders.Encoder.AacAccessUnitToolNetworkConfiguration.SequenceNumber">
            -------------------------------------------------------------------------------------------------
            <summary>
                Initial sequence number.
            </summary>
            -------------------------------------------------------------------------------------------------
        </member>
        <member name="P:StreamCoders.Encoder.AacAccessUnitToolNetworkConfiguration.Payloadtype">
            -------------------------------------------------------------------------------------------------
            <summary>
                Payload type to be used.
            </summary>
            -------------------------------------------------------------------------------------------------
        </member>
        <member name="T:StreamCoders.Encoder.AacFormats">
            -------------------------------------------------------------------------------------------------
            <summary>
                Enumeration of AAC Formats.
            </summary>
            -------------------------------------------------------------------------------------------------
        </member>
        <member name="F:StreamCoders.Encoder.AacFormats.Adts">
            <summary>
                Audio Data Transport Stream (Streaming format)
            </summary>
        </member>
        <member name="F:StreamCoders.Encoder.AacFormats.Adif">
            <summary>
                Audio Data Interchange Format (Storage format)
            </summary>
        </member>
        <member name="T:StreamCoders.Encoder.AacProfiles">
            -------------------------------------------------------------------------------------------------
            <summary>
                Supported AAC Profiles.
            </summary>
            -------------------------------------------------------------------------------------------------
        </member>
        <member name="F:StreamCoders.Encoder.AacProfiles.Main">
            <summary>
                Main Profile / Backwards Prediction
            </summary>
        </member>
        <member name="F:StreamCoders.Encoder.AacProfiles.Lc">
            <summary>
                Low Complexity Profile
            </summary>
        </member>
        <member name="F:StreamCoders.Encoder.AacProfiles.Srs">
            <summary>
                Scalable Rate Sampling
            </summary>
        </member>
        <member name="F:StreamCoders.Encoder.AacProfiles.Ltp">
            <summary>
                Long Term Prediction / Forward Prediction
            </summary>
        </member>
        <member name="T:StreamCoders.Encoder.AacAudioEncoderConfiguration">
            <summary>
                AAC Audio Encoder Configuration
            </summary>
        </member>
        <member name="P:StreamCoders.Encoder.AacAudioEncoderConfiguration.SBR">
            <summary>
                Enable Spectral Band Replication
            </summary>
        </member>
        <member name="P:StreamCoders.Encoder.AacAudioEncoderConfiguration.Profile">
            <summary>
                Profile to use
            </summary>
        </member>
        <member name="P:StreamCoders.Encoder.AacAudioEncoderConfiguration.Format">
            <summary>
                Encapsulation format. Select ADIF for storage and ADTS for streaming.
            </summary>
        </member>
        <member name="M:StreamCoders.Encoder.AudioEncoderConfiguration.ToTrackInfo">
            -------------------------------------------------------------------------------------------------
            <summary>
                Creates a TrackInfo instance from a AudioEncoderConfiguration instance. The AudioEncoderConfiguration instance
                needs to be initialized by an Encoder.
            </summary>
            <returns>
                This VideoEncoderConfiguration as a TrackInfo.
            </returns>
            -------------------------------------------------------------------------------------------------
        </member>
        <member name="T:StreamCoders.Encoder.BitrateMode">
            -------------------------------------------------------------------------------------------------
            <summary>
                Describes the support bitrate modes for encoders.
            </summary>
            -------------------------------------------------------------------------------------------------
        </member>
        <member name="T:StreamCoders.Encoder.StereoMode">
            -------------------------------------------------------------------------------------------------
            <summary>
                Supported channel configuration modes.
            </summary>
            -------------------------------------------------------------------------------------------------
        </member>
        <member name="P:StreamCoders.Encoder.Mp3AudioEncoderConfiguration.Layer">
            -------------------------------------------------------------------------------------------------
            <summary>
                Layer selected for MPEG Audio. Default: 3 <br />
                Supported values: 1-3.
            </summary>
            <value>
                The layer.
            </value>
            -------------------------------------------------------------------------------------------------
        </member>
        <member name="P:StreamCoders.Encoder.Mp3AudioEncoderConfiguration.BitrateMode">
            -------------------------------------------------------------------------------------------------
            <summary>
                Gets or sets the Bitrate Mode of the output stream. <br />
                Constant Bitrate: A Constant number of output bits per time unit. <br />
                Variable Bitrate: May allocate more/less bitrate depending on the complexity of the input
                stream. <br />
            </summary>
            <value>
                Default: Constant.
            </value>
            -------------------------------------------------------------------------------------------------
        </member>
        <member name="P:StreamCoders.Encoder.Mp3AudioEncoderConfiguration.StereoMode">
            -------------------------------------------------------------------------------------------------
            <summary>
                Gets or sets the Stereo Mode used by the encoder.<br />
                Left/Right, Joint, Forced Mid/Side or Mono.
            </summary>
            <value>
                The stereo mode.
            </value>
            -------------------------------------------------------------------------------------------------
        </member>
        <member name="P:StreamCoders.Encoder.Mp3AudioEncoderConfiguration.Mpeg1Upsample">
            -------------------------------------------------------------------------------------------------
            <summary>
                Force MPEG1 Audio upsampling. <br />
                sample Frequencies 16000, 22050, 24000 are MPEG2 by default. <br />
                Setting MPEG1Upsample to true will force the encoder to use MPEG1.
            </summary>
            <value>
                true if mpeg 1 upsample, false if not.
            </value>
            -------------------------------------------------------------------------------------------------
        </member>
        <member name="P:StreamCoders.Encoder.Mp3AudioEncoderConfiguration.LowPassFilter">
            -------------------------------------------------------------------------------------------------
            <summary>
                Gets or sets the Low Pass Filter for MP3 Encoder.
            </summary>
            <value>
                Set to true to enable, otherwise false. Default: true.
            </value>
            -------------------------------------------------------------------------------------------------
        </member>
        <member name="P:StreamCoders.Encoder.Mp3AudioEncoderConfiguration.AdvancedNoiseShaping">
            <summary>
                Gets or sets the Advanced Noise Shaping Algorithm.
            </summary>
            <value>
                Set true to enable, otherwise false. Default: false.
            </value>
            -------------------------------------------------------------------------------------------------
        </member>
        <member name="T:StreamCoders.Encoder.OpusApplication">
            -------------------------------------------------------------------------------------------------
            <summary>
                Configures the encoder's intended application.
            </summary>
            -------------------------------------------------------------------------------------------------
        </member>
        <member name="F:StreamCoders.Encoder.OpusApplication.Voip">
            <summary>
                Process signal for improved speech intelligibility.
            </summary>
        </member>
        <member name="F:StreamCoders.Encoder.OpusApplication.Audio">
            <summary>
                Favor faithfulness to the original input.
            </summary>
        </member>
        <member name="F:StreamCoders.Encoder.OpusApplication.RestrictedLowDelay">
            <summary>
                Configure the minimum possible coding delay by disabling certain modes of operation.
            </summary>
        </member>
        <member name="T:StreamCoders.Encoder.OpusAudioEncoderConfiguration">
            -------------------------------------------------------------------------------------------------
            <summary>
                Opus audio encoder configuration.
            </summary>
            <seealso cref="T:StreamCoders.Encoder.AudioEncoderConfiguration" />
            -------------------------------------------------------------------------------------------------
        </member>
        <member name="F:StreamCoders.Encoder.OpusAudioEncoderConfiguration.Application">
            -------------------------------------------------------------------------------------------------
            <summary>
                Configures the encoder's intended application.
            </summary>
            -------------------------------------------------------------------------------------------------
        </member>
        <member name="P:StreamCoders.Encoder.OpusAudioEncoderConfiguration.BitrateMode">
            -------------------------------------------------------------------------------------------------
            <summary>
                Gets or sets the Bitrate Mode of the output stream. <br />
                Constant Bitrate: Hard CBR. This can cause noticeable quality degradation. <br />
                Variable Bitrate: VBR (default). <br />
            </summary>
            <value>
                Default: Constant.
            </value>
            -------------------------------------------------------------------------------------------------
        </member>
        <member name="T:StreamCoders.Encoder.WmaAudioEncoderConfiguration">
            -------------------------------------------------------------------------------------------------
            <summary>
                Windows Media Audio Encoder 9 Configuration
            </summary>
            -------------------------------------------------------------------------------------------------
        </member>
        <member name="P:StreamCoders.Encoder.WmaAudioEncoderConfiguration.BlockAlignment">
            -------------------------------------------------------------------------------------------------
            <summary>
                Gets or sets the block alignment of the audio frames. This will be set by the encoder.
            </summary>
            <value>
                The block alignment.
            </value>
            -------------------------------------------------------------------------------------------------
        </member>
        <member name="M:StreamCoders.Encoder.EncoderConfigurationFactory.CreateVideoConfiguration(StreamCoders.Codec)">
            -------------------------------------------------------------------------------------------------
            <summary>
                Instantiates a VideoEncoderConfiguration (derived) instance given a codec.
            </summary>
            <param name="codec">
                The codec.
            </param>
            <returns>
                Returns an instance of one of the VideoEncoderConfiguration objects.
            </returns>
            -------------------------------------------------------------------------------------------------
        </member>
        <member name="M:StreamCoders.Encoder.EncoderConfigurationFactory.CreateVideoConfiguration(StreamCoders.Codec,System.Int32,System.Int32,System.Int32,System.Int32)">
            -------------------------------------------------------------------------------------------------
            <summary>
                Instantiates a VideoEncoderConfiguration (derived) instance given a codec, known resolution and bitrate.
            </summary>
            <param name="codec">
                The codec.
            </param>
            <param name="width">
                The width.
            </param>
            <param name="height">
                The height.
            </param>
            <param name="bitrate">
                The bitrate.
            </param>
            <returns>
                Returns an instance of one of the VideoEncoderConfiguration objects.
            </returns>
            -------------------------------------------------------------------------------------------------
        </member>
        <member name="M:StreamCoders.Encoder.EncoderConfigurationFactory.CreateVideoConfiguration(StreamCoders.TrackInfo)">
            <summary>
                Creates a <c>VideoEncoderConfiguraion</c> object from a <c>TrackInfo</c>
            </summary>
            <param name="trackInfo">TrackInfo object to use</param>
            <returns>Returns a VideoEncoderConfiguration object</returns>
            <remarks>This method sets Width, Height and Bitrate only.</remarks>
        </member>
        <member name="M:StreamCoders.Encoder.EncoderConfigurationFactory.CreateVideoConfiguration(StreamCoders.Codec,StreamCoders.Devices.VideoCaptureDeviceFormat,System.Int32)">
            -------------------------------------------------------------------------------------------------
            <summary>
                Instantiates a VideoEncoderConfiguration (derived) instance given a codec and video capture device metrics.
            </summary>
            <param name="codec">
                The codec.
            </param>
            <param name="metrics">
                The metrics.
            </param>
            <returns>
                Returns an instance of one of the VideoEncoderConfiguration objects.
            </returns>
            -------------------------------------------------------------------------------------------------
        </member>
        <member name="M:StreamCoders.Encoder.EncoderConfigurationFactory.CreateAudioConfiguration(StreamCoders.Codec)">
            <summary>
                Creates an <c>AudioEncoderConfiguration</c> given a codec.
            </summary>
            <param name="codec">The codec to create a configuration object for</param>
            <returns></returns>
        </member>
        <member name="T:StreamCoders.Encoder.H264AccessUnitTool">
            -------------------------------------------------------------------------------------------------
            <summary>
                Builds StartCode + NAL from MPEG Access Unit.
            </summary>
            <remarks>
                Container writers only take StartCode + NAL payloads so it is necessary to expand data
                coming from a container reader (MP4Reader) to be expanded be it can be fed to a container streamWriter (Mp4Writer).
            </remarks>
            -------------------------------------------------------------------------------------------------
        </member>
        <member name="M:StreamCoders.Encoder.H264AccessUnitTool.#ctor(System.Byte[])">
            -------------------------------------------------------------------------------------------------
            <summary>
                Initializes access unit tool using decoder specific data.
            </summary>
            <param name="avcConfiguration">
                Decoder specific data coming from a container. This must contain the AVC Configuration structure.
                If null is passed default values for LengthSizeMinus (3) will be used, which may lead to unexpected behavior.
            </param>
            -------------------------------------------------------------------------------------------------
        </member>
        <member name="P:StreamCoders.Encoder.H264AccessUnitTool.StartCode">
            <summary>
                Start code sequence
            </summary>
        </member>
        <member name="M:StreamCoders.Encoder.H264AccessUnitTool.ExpandStorageAccessUnit(System.IO.Stream)">
            -------------------------------------------------------------------------------------------------
            <summary>
                Expands AVC access units to StartCode + NAL.
            </summary>
            <param name="input">
                Data containing access units.
            </param>
            <returns>
                Returns NALs, otherwise null when the LengthSizeMinusOne value is greater than the inputStream.Length.
            </returns>
            -------------------------------------------------------------------------------------------------
        </member>
        <member name="M:StreamCoders.Encoder.H264AccessUnitTool.ExpandStorageAccessUnit(StreamCoders.MediaBuffer{System.Byte})">
            -------------------------------------------------------------------------------------------------
            <summary>
                Expands AVC access units to StartCode + NAL.
            </summary>
            <param name="input">
                Data containing access units.
            </param>
            <returns>
                Returns NALs, otherwise null.
            </returns>
            -------------------------------------------------------------------------------------------------
        </member>
        <member name="M:StreamCoders.Encoder.H264AccessUnitTool.ExtractParameterSet(System.Byte[],System.Int32,System.Int32)">
            -------------------------------------------------------------------------------------------------
            <summary>
                Extracts SPS/PPS from an AVC Configuration Record.
            </summary>
            <param name="avcC">
                The AVC Configuration record.
            </param>
            <param name="offset">
                The offset in the array.
            </param>
            <param name="count">
                Number of relevant bytes in the array.
            </param>
            <returns>
                The extracted parameter set.
            </returns>
            -------------------------------------------------------------------------------------------------
        </member>
        <member name="T:StreamCoders.Encoder.H265AccessUnitTool">
            <summary>
            </summary>
        </member>
        <member name="M:StreamCoders.Encoder.H265AccessUnitTool.#ctor(StreamCoders.Decoder.HevcDecoderConfigurationRecord)">
            -------------------------------------------------------------------------------------------------
            <summary>
                Constructs an H265AccessUnitTool given the HEVCDecoderConfigurationRecord.
            </summary>
            <remarks>
                If the HEVCDecoderConfigurationRecord parameter is null a default LengthSize of 4 will
                be used.
            </remarks>
            <param name="hvcc">
                The hvcc.
            </param>
            -------------------------------------------------------------------------------------------------
        </member>
        <member name="P:StreamCoders.Encoder.H265AccessUnitTool.LengthSize">
            -------------------------------------------------------------------------------------------------
            <summary>
                Gets or sets the access unit length size derived from
                HEVCDecoderConfigurationRecord.LengthSizeMinusOne.
            </summary>
            <value>
                The size of the length.
            </value>
            -------------------------------------------------------------------------------------------------
        </member>
        <member name="T:StreamCoders.Encoder.H265NalOffset">
            -------------------------------------------------------------------------------------------------
            <summary>
                Contains information about H.265 NAL units. This information is returned by the
                <c>H265AccessUnitTool</c>
            </summary>
            -------------------------------------------------------------------------------------------------
        </member>
        <member name="T:StreamCoders.Encoder.ISpeechEncoder">
            -------------------------------------------------------------------------------------------------
            <summary>
                Interface for speech encoder.
            </summary>
            -------------------------------------------------------------------------------------------------
        </member>
        <member name="M:StreamCoders.Encoder.AVideoEncoderBase.SetBufferProvider(StreamCoders.LockableOffsetBufferProvider{StreamCoders.OffsetBuffer{System.Byte}})">
            -------------------------------------------------------------------------------------------------
            <summary>
                Sets an optional buffer provider to use for cached buffers using lock/unlock semantics.
            </summary>
            <param name="provider">
                The buffer provider to use.
            </param>
            -------------------------------------------------------------------------------------------------
        </member>
        <member name="M:StreamCoders.Encoder.AVideoEncoderBase.Transform(StreamCoders.MediaBuffer{System.Byte})">
            -------------------------------------------------------------------------------------------------
            <summary>
                Compresses a picture.
            </summary>
            <param name="inputBuffer">
                Buffer containing a picture.
            </param>
            <returns>
                The CodecOperationStatus that signals the transform operation status.
            </returns>
            -------------------------------------------------------------------------------------------------
        </member>
        <member name="T:StreamCoders.Encoder.H263FramingType">
            -------------------------------------------------------------------------------------------------
            <summary>
                H.263 RTP Framing Types.
            </summary>
            -------------------------------------------------------------------------------------------------
        </member>
        <member name="F:StreamCoders.Encoder.H263FramingType.Rfc2190">
            <summary>
                Generate RTP frames according to RFC 2190
            </summary>
        </member>
        <member name="F:StreamCoders.Encoder.H263FramingType.Rfc2429">
            <summary>
                Generate RTP frames according to RFC 2429/4629
            </summary>
        </member>
        <member name="F:StreamCoders.Encoder.H263RateControlType.ConstantQuality">
            <summary>
                Variable Bitrate (+/-) compensating for higher/lower complexities
            </summary>
        </member>
        <member name="F:StreamCoders.Encoder.H263RateControlType.ConstantBitrate">
            <summary>
                Constant Bitrate over time. Choose constant bitrate if you have strict requirements for your kb/s. i.e. H324M
            </summary>
        </member>
        <member name="T:StreamCoders.Encoder.H264Deblocking">
            -------------------------------------------------------------------------------------------------
            <summary>
                Types of Deblocking Modes.
            </summary>
            -------------------------------------------------------------------------------------------------
        </member>
        <member name="F:StreamCoders.Encoder.H264Deblocking.Disabled">
            <summary>
                Disables Deblocking.
            </summary>
        </member>
        <member name="F:StreamCoders.Encoder.H264Deblocking.Enabled">
            <summary>
                Enables Deblocking.
            </summary>
        </member>
        <member name="F:StreamCoders.Encoder.H264Deblocking.EnabledLocal">
            <summary>
                Enables Deblocking, but does not cross slice boundaries.
            </summary>
        </member>
        <member name="T:StreamCoders.Encoder.H264MotionEstimation">
            -------------------------------------------------------------------------------------------------
            <summary>
                Define the type of motion estimation techniques.
            </summary>
            -------------------------------------------------------------------------------------------------
        </member>
        <member name="T:StreamCoders.Encoder.H264Profile">
            -------------------------------------------------------------------------------------------------
            <summary>
                Supported H.264 profiles
            </summary>
            -------------------------------------------------------------------------------------------------
        </member>
        <member name="P:StreamCoders.Encoder.H26XRateControlBase.SkipFrames">
            <summary>
                Whether the encoder just skips frames if the rate control goal is not reached.
            </summary>
        </member>
        <member name="P:StreamCoders.Encoder.H26XRateControlBase.QuantizerI">
            <summary>
                Quality Control for I-Frames [1;31] 1=Best
            </summary>
        </member>
        <member name="P:StreamCoders.Encoder.H26XRateControlBase.QuantizerP">
            <summary>
                Quality Control for P-Frames [1;31] 1=Best
            </summary>
        </member>
        <member name="P:StreamCoders.Encoder.H26XRateControlBase.QuantizerB">
            <summary>
                Quality Control for B-Frames [1;31] 1=Best
            </summary>
        </member>
        <member name="T:StreamCoders.Encoder.H264RateControlType">
            -------------------------------------------------------------------------------------------------
            <summary>
                Define the type of rate control to use when encoding.
            </summary>
            -------------------------------------------------------------------------------------------------
        </member>
        <member name="T:StreamCoders.Encoder.H264Speed">
            -------------------------------------------------------------------------------------------------
            <summary>
                Speed levels of the H.264 encoder.
            </summary>
            -------------------------------------------------------------------------------------------------
        </member>
        <member name="F:StreamCoders.Encoder.H264Speed.HighSpeed">
            <summary>
                High Speed, Low Quality
            </summary>
        </member>
        <member name="F:StreamCoders.Encoder.H264Speed.MediumHigh">
            <summary>
                Medium High Speed, Medium Low Quality
            </summary>
        </member>
        <member name="F:StreamCoders.Encoder.H264Speed.MediumLow">
            <summary>
                Medium Low Speed, Medium High Quality
            </summary>
        </member>
        <member name="F:StreamCoders.Encoder.H264Speed.Low">
            <summary>
                Low Speed, High Quality
            </summary>
        </member>
        <member name="T:StreamCoders.Encoder.H264TransformAdaptivity">
            -------------------------------------------------------------------------------------------------
            <summary>
                Values that represent H264TransformAdaptivity.
            </summary>
            -------------------------------------------------------------------------------------------------
        </member>
        <member name="P:StreamCoders.Encoder.H264VideoEncoderConfiguration.Mode">
            <summary>
                Uses encoder parameters optimal for real time encoding.
            </summary>
        </member>
        <member name="P:StreamCoders.Encoder.H264VideoEncoderConfiguration.Profile">
            -------------------------------------------------------------------------------------------------
            <summary>
                Gets or sets the Profile.
            </summary>
            <remarks>
                If parameters to the encoder require a higher profile to be selected, the encoder will
                promote it automatically.
            </remarks>
            <value>
                Default: <c>MAIN</c>
            </value>
            -------------------------------------------------------------------------------------------------
        </member>
        <member name="P:StreamCoders.Encoder.H264VideoEncoderConfiguration.Level">
            -------------------------------------------------------------------------------------------------
            <summary>
                Gets or sets the Level.
            </summary>
            <value>
                See standard for level settings. Set Level to 0 for automatic. Default: 0.
            </value>
            -------------------------------------------------------------------------------------------------
        </member>
        <member name="P:StreamCoders.Encoder.H264VideoEncoderConfiguration.Speed">
            -------------------------------------------------------------------------------------------------
            <summary>
                Gets or sets the Speed of the H.264 encoder.
            </summary>
            <value>
                Since Speed and Quality are indirectly proportional. The Speed property allows the user
                to fine-tune the required Quality to Speed tradeoff.
            </value>
            -------------------------------------------------------------------------------------------------
        </member>
        <member name="P:StreamCoders.Encoder.H264VideoEncoderConfiguration.ReferenceFrameCount">
            -------------------------------------------------------------------------------------------------
            <summary>
                Gets or sets the number of reference frames.
            </summary>
            <value>
                The number of reference frames according to profile and level. Indicates the amount of
                frames that will be buffered by the decoder to fully satisfy frame reference dependency.
            </value>
            -------------------------------------------------------------------------------------------------
        </member>
        <member name="P:StreamCoders.Encoder.H264VideoEncoderConfiguration.BFrameCount">
            -------------------------------------------------------------------------------------------------
            <summary>
                Gets or sets the number of B-Frames.
            </summary>
            <value>
                Indicates the amount of B-Frames generated between I/P-Frames. Set to 0 to disable B-
                Frames.
            </value>
            -------------------------------------------------------------------------------------------------
        </member>
        <member name="P:StreamCoders.Encoder.H264VideoEncoderConfiguration.DeblockingFilter">
            -------------------------------------------------------------------------------------------------
            <summary>
                Gets or sets the Deblocking Filter.
            </summary>
            <value>
                Enables or disables the In-loop deblocking filter at the decoder. Deblocking can
                significantly enhance the quality of low-bitrate pictures. Default: <c>Enabled</c>
            </value>
            -------------------------------------------------------------------------------------------------
        </member>
        <member name="P:StreamCoders.Encoder.H264VideoEncoderConfiguration.TransformAdaptivity">
            -------------------------------------------------------------------------------------------------
            <summary>
                Gets or sets the Transform Adaptivity.
            </summary>
            <value>
                8x8 DCT Transform can be set for <c>HIGH</c>+ profiles. <br />
                For <c>BASELINE</c> and <c>MAIN</c> this has to be 4x4. <br />
                Default: <c>Transform_4x4</c>
            </value>
            -------------------------------------------------------------------------------------------------
        </member>
        <member name="P:StreamCoders.Encoder.H264VideoEncoderConfiguration.MotionEstimation">
            -------------------------------------------------------------------------------------------------
            <summary>
                Gets or sets the motion estimation method.
            </summary>
            <value>
                The motion estimation.
            </value>
            -------------------------------------------------------------------------------------------------
        </member>
        <member name="P:StreamCoders.Encoder.H264VideoEncoderConfiguration.RateControl">
            -------------------------------------------------------------------------------------------------
            <summary>
                Gets the rate control.
            </summary>
            <value>
                The rate control.
            </value>
            -------------------------------------------------------------------------------------------------
        </member>
        <member name="M:StreamCoders.Encoder.H264VideoEncoderConfiguration.ToAvcConfigurationRecord">
            -------------------------------------------------------------------------------------------------
            <summary>
                Converts SPS/PPS byte array from DecoderData to an avcC Configuration record.
            </summary>
            <returns>
                This H264VideoEncoderConfiguration as an AVCDecoderConfigurationRecord.
            </returns>
            -------------------------------------------------------------------------------------------------
        </member>
        <member name="T:StreamCoders.Encoder.H265VideoEncoderConfiguration">
            <summary>
            HEVC Video encoder configuration
            </summary>
        </member>
        <member name="P:StreamCoders.Encoder.H265VideoEncoderConfiguration.RateControl">
            -------------------------------------------------------------------------------------------------
            <summary>
                Gets the rate control.
            </summary>
            <value>
                The rate control.
            </value>
            -------------------------------------------------------------------------------------------------
        </member>
        <member name="T:StreamCoders.Encoder.Mpeg42VideoEncoderConfiguration">
            <summary>MPEG-4.2 video encoder configuration.</summary>
        </member>
        <member name="P:StreamCoders.Encoder.Mpeg42VideoEncoderConfiguration.BFrameCount">
            <summary>The number of successive B-Frames. When set to 0, no B-Frames are used.</summary>
        </member>
        <member name="P:StreamCoders.Encoder.Mpeg42VideoEncoderConfiguration.ReversibleVlc">
            <summary>If enabled reversible VLC coding will be used. This option requires <c>DataPartioning</c> to be enabled.</summary>
        </member>
        <member name="P:StreamCoders.Encoder.Mpeg42VideoEncoderConfiguration.DataPartitioning">
            <summary>If enabled, a data partitioned stream will be created.</summary>
        </member>
        <member name="P:StreamCoders.Encoder.Mpeg42VideoEncoderConfiguration.InsertVopHeader">
            <summary>If enabled a VOP header will be enabled periodically.</summary>
        </member>
        <member name="P:StreamCoders.Encoder.Mpeg42VideoEncoderConfiguration.InsertVolHeader">
            <summary>If enabled a VOL header will be generated periodically.</summary>
        </member>
        <member name="P:StreamCoders.Encoder.Mpeg42VideoEncoderConfiguration.RateControl">
            <summary>Rate control configuration</summary>
        </member>
        <member name="P:StreamCoders.Encoder.Mpeg42VideoEncoderConfiguration.MotionEstimation">
            <summary>Motion estimation methods to use.</summary>
        </member>
        <member name="T:StreamCoders.Encoder.Mpeg4MotionEstimation">
            -------------------------------------------------------------------------------------------------
            <summary>
                Mpeg4 motion estimation.
            </summary>
            -------------------------------------------------------------------------------------------------
        </member>
        <member name="F:StreamCoders.Encoder.Mpeg4MotionEstimation.Accuracy">
            -------------------------------------------------------------------------------------------------
            <summary>
                Gets the accuracy.
            </summary>
            <value>
                The accuracy.
            </value>
            -------------------------------------------------------------------------------------------------
        </member>
        <member name="F:StreamCoders.Encoder.Mpeg4MotionEstimation.FastSearch">
            -------------------------------------------------------------------------------------------------
            <summary>
                Gets a value indicating whether the fast search.
            </summary>
            <value>
                true if fast search, false if not.
            </value>
            -------------------------------------------------------------------------------------------------
        </member>
        <member name="F:StreamCoders.Encoder.Mpeg4MotionEstimation.Use4MotionVectors">
            -------------------------------------------------------------------------------------------------
            <summary>
                Amount of Motion Vectors per macroblock.
            </summary>
            <value>
                Set to false to use 1 Motion vector, otherwise 4.
            </value>
            -------------------------------------------------------------------------------------------------
        </member>
        <member name="M:StreamCoders.Encoder.Mpeg4MotionEstimation.#ctor">
            -------------------------------------------------------------------------------------------------
            <summary>
                Default constructor.
            </summary>
            -------------------------------------------------------------------------------------------------
        </member>
        <member name="T:StreamCoders.Encoder.Mpeg4MotionEstimationAccuracy">
            -------------------------------------------------------------------------------------------------
            <summary>
                Values that represent the various methods for motion estimation.
            </summary>
            -------------------------------------------------------------------------------------------------
        </member>
        <member name="T:StreamCoders.Encoder.Mpeg4RateControl">
            -------------------------------------------------------------------------------------------------
            <summary>
                MPEG4 rate control settings.
            </summary>
            -------------------------------------------------------------------------------------------------
        </member>
        <member name="F:StreamCoders.Encoder.Mpeg4RateControl.QuantizerB">
            -------------------------------------------------------------------------------------------------
            <summary>
                Quality Control for B-Frames [1;31] 1=Best.
            </summary>
            <value>
                The quantizer b.
            </value>
            -------------------------------------------------------------------------------------------------
        </member>
        <member name="F:StreamCoders.Encoder.Mpeg4RateControl.QuantizerI">
            -------------------------------------------------------------------------------------------------
            <summary>
                Quality Control for I-Frames [1;31] 1=Best.
            </summary>
            <value>
                The quantizer i.
            </value>
            -------------------------------------------------------------------------------------------------
        </member>
        <member name="F:StreamCoders.Encoder.Mpeg4RateControl.QuantizerP">
            -------------------------------------------------------------------------------------------------
            <summary>
                Quality Control for P-Frames [1;31] 1=Best.
            </summary>
            <value>
                The quantizer p.
            </value>
            -------------------------------------------------------------------------------------------------
        </member>
        <member name="F:StreamCoders.Encoder.Mpeg4RateControl.RateControlType">
            -------------------------------------------------------------------------------------------------
            <summary>
                Gets the type of the rate control.
            </summary>
            <value>
                The type of the rate control.
            </value>
            -------------------------------------------------------------------------------------------------
        </member>
        <member name="T:StreamCoders.Encoder.Mpeg4RateControlType">
            -------------------------------------------------------------------------------------------------
            <summary>
                Values that represent the available rate control types.
            </summary>
            -------------------------------------------------------------------------------------------------
        </member>
        <member name="F:StreamCoders.Encoder.Mpeg4RateControlType.ConstantQuality">
            <summary>
                Constant Quality. Use with MPEG4RateControl quantizer I, P and B to adjust the quality.
            </summary>
        </member>
        <member name="F:StreamCoders.Encoder.Mpeg4RateControlType.ConstantBitrate">
            <summary>
                Constant Bitrate. Use with Bitrate property of MPEG4Encoder.
            </summary>
        </member>
        <member name="T:StreamCoders.Encoder.Vc1VideoEncoderConfiguration">
            -------------------------------------------------------------------------------------------------
            <summary>
                VC1 video encoder configuration.
            </summary>
            <seealso cref="T:StreamCoders.Encoder.VideoEncoderConfiguration" />
            -------------------------------------------------------------------------------------------------
        </member>
        <member name="T:StreamCoders.Encoder.VideoEncoderConfiguration">
            -------------------------------------------------------------------------------------------------
            <summary>
                Is used to initialize video encoders. In order to use codec specific parameters, one of
                the specialized derivations of this should be used to initialize an encoder.
            </summary>
            -------------------------------------------------------------------------------------------------
        </member>
        <member name="P:StreamCoders.Encoder.VideoEncoderConfiguration.InitializationStatus">
            -------------------------------------------------------------------------------------------------
            <summary>
                Gets or sets the initialization status.
            </summary>
            <value>
                The initialization status.
            </value>
            -------------------------------------------------------------------------------------------------
        </member>
        <member name="P:StreamCoders.Encoder.VideoEncoderConfiguration.IFrameFrequency">
            -------------------------------------------------------------------------------------------------
            <summary>
                Gets or sets the I-Frame frequency. <br />
                When set to 0, the encoder will decide when it is best create an I-Frame.
            </summary>
            <value>
                The I-Frame frequency.
            </value>
            -------------------------------------------------------------------------------------------------
        </member>
        <member name="P:StreamCoders.Encoder.VideoEncoderConfiguration.InputFramerate">
            -------------------------------------------------------------------------------------------------
            <summary>
                Gets or sets the input framerate. <br />
                This value is used to calculate the target bitrate for rate control.
            </summary>
            <value>
                The input framerate.
            </value>
            -------------------------------------------------------------------------------------------------
        </member>
        <member name="P:StreamCoders.Encoder.VideoEncoderConfiguration.Bitrate">
            -------------------------------------------------------------------------------------------------
            <summary>
                Gets or sets the bitrate.
            </summary>
            <value>
                The bitrate.
            </value>
            -------------------------------------------------------------------------------------------------
        </member>
        <member name="P:StreamCoders.Encoder.VideoEncoderConfiguration.DecoderSpecificData">
            -------------------------------------------------------------------------------------------------
            <summary>
                Decoder specific data used to initialize decoders. If applicable the encoder will assign this value automatically.
            </summary>
            <value>
                Decoder specific data.
            </value>
            -------------------------------------------------------------------------------------------------
        </member>
        <member name="M:StreamCoders.Encoder.VideoEncoderConfiguration.ToTrackInfo">
            -------------------------------------------------------------------------------------------------
            <summary>
                Creates a TrackInfo instance from a VideoEncoderConfiguration instance. The VideoEncoderConfiguration instance
                needs to be initialized by an Encoder.
            </summary>
            <returns>
                This VideoEncoderConfiguration as a TrackInfo.
            </returns>
            -------------------------------------------------------------------------------------------------
        </member>
        <member name="T:StreamCoders.Encoder.Vp8VideoEncoderConfiguration">
            -------------------------------------------------------------------------------------------------
            <summary>
                VP8 Video encoder configuration.
            </summary>
            <seealso cref="T:StreamCoders.Encoder.VpxVideoEncoderConfiguration" />
            <seealso cref="T:StreamCoders.Encoder.VideoEncoderConfiguration" />
            -------------------------------------------------------------------------------------------------
        </member>
        <member name="T:StreamCoders.Encoder.Vp9VideoEncoderConfiguration">
            -------------------------------------------------------------------------------------------------
            <summary>
                VP9 Video encoder configuration.
            </summary>
            <seealso cref="T:StreamCoders.Encoder.VpxVideoEncoderConfiguration" />
            <seealso cref="T:StreamCoders.Encoder.VideoEncoderConfiguration" />
            -------------------------------------------------------------------------------------------------
        </member>
        <member name="T:StreamCoders.Encoder.VpxDeadline">
            -------------------------------------------------------------------------------------------------
            <summary>
                VP8 Deadline values for quality/latency output.
            </summary>
            -------------------------------------------------------------------------------------------------
        </member>
        <member name="F:StreamCoders.Encoder.VpxDeadline.Best">
            <summary>
                Best quality. Potential infinite encoding time.
            </summary>
        </member>
        <member name="F:StreamCoders.Encoder.VpxDeadline.Good">
            <summary>
                Good quality. Limited time.
            </summary>
        </member>
        <member name="F:StreamCoders.Encoder.VpxDeadline.Realtime">
            <summary>
                Low quality. Low latency.
            </summary>
        </member>
        <member name="T:StreamCoders.Encoder.VpxVideoEncoderConfiguration">
            -------------------------------------------------------------------------------------------------
            <summary>
                VPX Video encoder configuration. Base class for VP8 and VP9 encoder configuration.
            </summary>
            <seealso cref="T:StreamCoders.Encoder.VideoEncoderConfiguration" />
            -------------------------------------------------------------------------------------------------
        </member>
        <member name="P:StreamCoders.Encoder.VpxVideoEncoderConfiguration.Deadline">
            <summary>
                Gets or sets the deadline/quality mode of the encoding proess.
            </summary>
            <value>
                The deadline mode to use.
            </value>
        </member>
        <member name="P:StreamCoders.Encoder.VpxVideoEncoderConfiguration.LosslessMode">
            <summary>
                Gets or sets a value indicating whether the VP8 encoder is in lossless mode.
            </summary>
            <value>
                <c>true</c> if the encoder is in lossless mode; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:StreamCoders.Encoder.VpxVideoEncoderConfiguration.MinimumQuantizer">
            <summary>
                Gets or sets the minimum quantizer value. Valid values are 0-63.
            </summary>
            <value>
                The minimum quantizer value.
            </value>
        </member>
        <member name="P:StreamCoders.Encoder.VpxVideoEncoderConfiguration.MaximumQuantizer">
            <summary>
                Gets or sets the maximum quantizer value. Valid values are 0-63.
            </summary>
            <value>
                The maximum quantizer.
            </value>
        </member>
        <member name="T:StreamCoders.Logging.ILog">
            <summary>
                Simple interface that represent a logger.
            </summary>
        </member>
        <member name="M:StreamCoders.Logging.ILog.Log(StreamCoders.Logging.LogLevel,System.Func{System.String},System.Exception,System.Object[])">
            <summary>
                Log a message the specified log level.
            </summary>
            <param name="logLevel">The log level.</param>
            <param name="messageFunc">The message function.</param>
            <param name="exception">An optional exception.</param>
            <param name="formatParameters">Optional format parameters for the message generated by the messagefunc. </param>
            <returns>true if the message was logged. Otherwise false.</returns>
            <remarks>
                Note to implementers: the message func should not be called if the loglevel is not enabled
                so as not to incur performance penalties.
                To check IsEnabled call Log with only LogLevel and check the return value, no event will be written.
            </remarks>
        </member>
        <member name="T:StreamCoders.Logging.LogLevel">
            <summary>
                The log level.
            </summary>
        </member>
        <member name="T:StreamCoders.Logging.ILogProvider">
            <summary>
                Represents a way to get a <see cref="T:StreamCoders.Logging.ILog" />
            </summary>
        </member>
        <member name="M:StreamCoders.Logging.ILogProvider.GetLogger(System.String)">
            <summary>
                Gets the specified named logger.
            </summary>
            <param name="name">Name of the logger.</param>
            <returns>The logger reference.</returns>
        </member>
        <member name="M:StreamCoders.Logging.ILogProvider.OpenNestedContext(System.String)">
            <summary>
                Opens a nested diagnostics context. Not supported in EntLib logging.
            </summary>
            <param name="message">The message to add to the diagnostics context.</param>
            <returns>A disposable that when disposed removes the message from the context.</returns>
        </member>
        <member name="M:StreamCoders.Logging.ILogProvider.OpenMappedContext(System.String,System.String)">
            <summary>
                Opens a mapped diagnostics context. Not supported in EntLib logging.
            </summary>
            <param name="key">A key.</param>
            <param name="value">A value.</param>
            <returns>A disposable that when disposed removes the map from the context.</returns>
        </member>
        <member name="T:StreamCoders.Logging.LogProvider">
            <summary>
                Provides a mechanism to create instances of <see cref="T:StreamCoders.Logging.ILog" /> objects.
            </summary>
        </member>
        <member name="F:StreamCoders.Logging.LogProvider.DisableLoggingEnvironmentVariable">
            <summary>
                The disable logging environment variable. If the environment variable is set to 'true', then logging
                will be disabled.
            </summary>
        </member>
        <member name="M:StreamCoders.Logging.LogProvider.SetCurrentLogProvider(StreamCoders.Logging.ILogProvider)">
            <summary>
                Sets the current log provider.
            </summary>
            <param name="logProvider">The log provider.</param>
        </member>
        <member name="P:StreamCoders.Logging.LogProvider.IsDisabled">
            <summary>
                Gets or sets a value indicating whether this is logging is disabled.
            </summary>
            <value>
                <c>true</c> if logging is disabled; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:StreamCoders.Logging.LogProvider.OnCurrentLogProviderSet">
            <summary>
                Sets an action that is invoked when a consumer of your library has called SetCurrentLogProvider. It is
                important that hook into this if you are using child libraries (especially ilmerged ones) that are using
                LibLog (or other logging abstraction) so you adapt and delegate to them.
                <see cref="M:StreamCoders.Logging.LogProvider.SetCurrentLogProvider(StreamCoders.Logging.ILogProvider)" />
            </summary>
        </member>
        <member name="M:StreamCoders.Logging.LogProvider.For``1">
            <summary>
                Gets a logger for the specified type.
            </summary>
            <typeparam name="T">The type whose name will be used for the logger.</typeparam>
            <returns>An instance of <see cref="T:StreamCoders.Logging.ILog" /></returns>
        </member>
        <member name="M:StreamCoders.Logging.LogProvider.GetCurrentClassLogger">
            <summary>
                Gets a logger for the current class.
            </summary>
            <returns>An instance of <see cref="T:StreamCoders.Logging.ILog" /></returns>
        </member>
        <member name="M:StreamCoders.Logging.LogProvider.GetLogger(System.Type)">
            <summary>
                Gets a logger for the specified type.
            </summary>
            <param name="type">The type whose name will be used for the logger.</param>
            <returns>An instance of <see cref="T:StreamCoders.Logging.ILog" /></returns>
        </member>
        <member name="M:StreamCoders.Logging.LogProvider.GetLogger(System.String)">
            <summary>
                Gets a logger with the specified name.
            </summary>
            <param name="name">The name.</param>
            <returns>An instance of <see cref="T:StreamCoders.Logging.ILog" /></returns>
        </member>
        <member name="M:StreamCoders.Logging.LogProvider.OpenNestedContext(System.String)">
            <summary>
                Opens a nested diagnostics context.
            </summary>
            <param name="message">A message.</param>
            <returns>An <see cref="T:System.IDisposable" /> that closes context when disposed.</returns>
        </member>
        <member name="M:StreamCoders.Logging.LogProvider.OpenMappedContext(System.String,System.String)">
            <summary>
                Opens a mapped diagnostics context.
            </summary>
            <param name="key">A key.</param>
            <param name="value">A value.</param>
            <returns>An <see cref="T:System.IDisposable" /> that closes context when disposed.</returns>
        </member>
        <member name="P:StreamCoders.Logging.LogProviders.LoupeLogProvider.ProviderIsAvailableOverride">
            <summary>
                Gets or sets a value indicating whether [provider is available override]. Used in tests.
            </summary>
            <value>
                <c>true</c> if [provider is available override]; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="T:StreamCoders.Logging.LogProviders.LoupeLogProvider.WriteDelegate">
            <summary>
                The form of the Loupe Log.Write method we're using
            </summary>
        </member>
        <member name="M:StreamCoders.Logging.LogProviders.LogMessageFormatter.SimulateStructuredLogging(System.Func{System.String},System.Object[])">
            <summary>
                Some logging frameworks support structured logging, such as serilog. This will allow you to add names to structured
                data in a format string:
                For example: Log("Log message to {user}", user). This only works with serilog, but as the user of LibLog, you don't
                know if serilog is actually
                used. So, this class simulates that. it will replace any text in {curly braces} with an index number.
                "Log {message} to {user}" would turn into => "Log {0} to {1}". Then the format parameters are handled using regular
                .net string.Format.
            </summary>
            <param name="messageBuilder">The message builder.</param>
            <param name="formatParameters">The format parameters.</param>
            <returns></returns>
        </member>
        <member name="P:StreamCoders.LocalLoggingConfiguration.EnableLogging">
            <summary>
            Enables logging in MediaSuite.
            </summary>
            <remarks>
            <para>Logging will have to be done through adding one of the log providers: NLog, Log4Net, SeriLog, EntLibLog.</para>
            <para>Logging can also globally be disable by setting the enviroment variable <c>DisableMediaSuiteLogging=true</c></para>
            </remarks>
        </member>
        <member name="T:StreamCoders.MaximumInputLengthExceededException">
            <summary>
                Is thrown when the maximum expected input length is surpassed.
            </summary>
        </member>
        <member name="F:StreamCoders.Network.AsyncResultType.IoPending">
            <summary>
                Send operation will finish asynchronously
            </summary>
        </member>
        <member name="F:StreamCoders.Network.AsyncResultType.IoReturned">
            <summary>
                Send operation has completed synchronously. No event will be raised.
            </summary>
        </member>
        <member name="F:StreamCoders.Network.AsyncResultType.Error">
            <summary>
                An error occured on the socket
            </summary>
        </member>
        <member name="T:StreamCoders.Network.INetworkClient">
            -------------------------------------------------------------------------------------------------
            <summary>
                Interface for all network clients that can be used together with RTP participants.
            </summary>
            -------------------------------------------------------------------------------------------------
        </member>
        <member name="P:StreamCoders.Network.INetworkClient.RemoteEndPoint">
            -------------------------------------------------------------------------------------------------
            <summary>
                Gets or sets the remote end point.
            </summary>
            <value>
                The remote end point.
            </value>
            -------------------------------------------------------------------------------------------------
        </member>
        <member name="P:StreamCoders.Network.INetworkClient.LocalEndPoint">
            -------------------------------------------------------------------------------------------------
            <summary>
                Gets or sets the local end point.
            </summary>
            <value>
                The local end point.
            </value>
            -------------------------------------------------------------------------------------------------
        </member>
        <member name="M:StreamCoders.Network.INetworkClient.Close">
            -------------------------------------------------------------------------------------------------
            <summary>
                Closes internal socket.
            </summary>
            -------------------------------------------------------------------------------------------------
        </member>
        <member name="M:StreamCoders.Network.INetworkClient.StartInit">
            -------------------------------------------------------------------------------------------------
            <summary>
                Starts the three step initialization procedure with constructing socket and internal
                structures.
            </summary>
            <returns>
                true if it succeeds, false if it fails.
            </returns>
            -------------------------------------------------------------------------------------------------
        </member>
        <member name="M:StreamCoders.Network.INetworkClient.Bind">
            -------------------------------------------------------------------------------------------------
            <summary>
                Binds the local endpoint as the second step of the initialization procedure. This
                function must be called after StartInit().
            </summary>
            <returns>
                .
            </returns>
            -------------------------------------------------------------------------------------------------
        </member>
        <member name="M:StreamCoders.Network.INetworkClient.FinishInit(System.Boolean)">
            -------------------------------------------------------------------------------------------------
            <summary>
                Finalizes the three step initialization procedure. Must be called after StartInit and
                Bind.
            </summary>
            <param name="startReceiving">
                If true the receive chain is start, otherwise it is not. Note, that you can call
                StartReceiveChain() at a later point.
            </param>
            <returns>
                true if it succeeds, false if it fails.
            </returns>
            -------------------------------------------------------------------------------------------------
        </member>
        <member name="M:StreamCoders.Network.INetworkClient.StartReceiveChain">
            -------------------------------------------------------------------------------------------------
            <summary>
                Starts the internal receive chain. Note that the default parameter to FinishInit(= true)
            </summary>
            -------------------------------------------------------------------------------------------------
        </member>
        <member name="M:StreamCoders.Network.INetworkClient.SimpleInit">
            -------------------------------------------------------------------------------------------------
            <summary>
                This is a helper method that combines StartInit(), Bind() and FinishInit() into one call.
            </summary>
            <returns>
                true if it succeeds, false if it fails.
            </returns>
            -------------------------------------------------------------------------------------------------
        </member>
        <member name="M:StreamCoders.Network.INetworkClient.Send(System.ArraySegment{System.Byte})">
            -------------------------------------------------------------------------------------------------
            <summary>
                Send this message.
            </summary>
            <param name="buffer">   The buffer. </param>
            <returns>
                Returns IoPending if the sending was deferred or IoReturned if completed immediately.
            </returns>
            -------------------------------------------------------------------------------------------------
        </member>
        <member name="M:StreamCoders.Network.INetworkClient.Send(StreamCoders.OffsetBuffer{System.Byte})">
            -------------------------------------------------------------------------------------------------
            <summary>
                Send this message.
            </summary>
            <param name="buffer">   The buffer. </param>
            <returns>
                Returns IoPending if the sending was deferred or IoReturned if completed immediately.
            </returns>
            -------------------------------------------------------------------------------------------------
        </member>
        <member name="E:StreamCoders.Network.INetworkClient.DataSent">
            -------------------------------------------------------------------------------------------------
            <summary>
                Event for all listeners interested in OnSend events.
            </summary>
            -------------------------------------------------------------------------------------------------
        </member>
        <member name="E:StreamCoders.Network.INetworkClient.DataReceived">
            -------------------------------------------------------------------------------------------------
            <summary>
                Event for all listeners interested in OnReceive events.
            </summary>
            -------------------------------------------------------------------------------------------------
        </member>
        <member name="T:StreamCoders.Network.Mode">
            <summary>
                Type of network operation that completed
            </summary>
        </member>
        <member name="F:StreamCoders.Network.Mode.Connect">
            <summary>
                Connected to remote endpoint
            </summary>
        </member>
        <member name="F:StreamCoders.Network.Mode.Receive">
            <summary>
                Packet received from remote endpoint
            </summary>
        </member>
        <member name="F:StreamCoders.Network.Mode.Send">
            <summary>
                Packet sent to remote endpoint
            </summary>
        </member>
        <member name="F:StreamCoders.Network.Mode.Accept">
            <summary>
                An incoming connection from a remote endpoint was accepted. (Not valid under Silverlight)
            </summary>
        </member>
        <member name="T:StreamCoders.Network.MtuDiscovery">
            <summary>
                Attempts to discover the MTU of the local network.
            </summary>
        </member>
        <member name="M:StreamCoders.Network.MtuDiscovery.Discover(System.Net.IPEndPoint)">
            <summary>
                Starts discovery of the local MTU.
            </summary>
            <param name="endpoint">Endpoint to send packets to</param>
            <returns>Returns a positive integer as MTU on success, otherwise -1.</returns>
        </member>
        <member name="T:StreamCoders.Network.MulticastNetworkInterfaceResolveMethod">
            -------------------------------------------------------------------------------------------------
            <summary>
                Contains various methods on how the corresponding local network interface is determined
                for multicast.
            </summary>
            -------------------------------------------------------------------------------------------------
        </member>
        <member name="F:StreamCoders.Network.MulticastNetworkInterfaceResolveMethod.Default">
            <summary>
                Default method let's OS decide
            </summary>
        </member>
        <member name="F:StreamCoders.Network.MulticastNetworkInterfaceResolveMethod.Automatic">
            <summary>
                Automatic method tries to exclude emulators and adapters without active links
            </summary>
        </member>
        <member name="F:StreamCoders.Network.MulticastNetworkInterfaceResolveMethod.Manual">
            <summary>
                The network interface index has to be set manually
            </summary>
        </member>
        <member name="T:StreamCoders.Network.TcpTransportOperationServerAcceptEventArgs">
            -------------------------------------------------------------------------------------------------
            <summary>
                Server accept operation complete event.
            </summary>
            -------------------------------------------------------------------------------------------------
        </member>
        <member name="T:StreamCoders.Network.SocketTimeout">
            <summary>
                Handles timeout situations for async socket operations.
                It is used in <c>TcpTransportCompletionParameters</c> class.
            </summary>
        </member>
        <member name="M:StreamCoders.Network.SocketTimeout.#ctor(System.Int32,StreamCoders.Network.TimeoutEventDelegate)">
            <summary>
                Constructor.
            </summary>
            <param name="milliseconds">The timeout of an operation.</param>
            <param name="onTimeout">A callback to initiate once the timer has expired.</param>
        </member>
        <member name="M:StreamCoders.Network.SocketTimeout.Stop">
            <summary>
                Stops and disposes the internal timer object.
            </summary>
        </member>
        <member name="T:StreamCoders.Network.State">
            -------------------------------------------------------------------------------------------------
            <summary>
                State indicates of network clients (UdpNetworkClient, TcpNetworkClient, TcpNetworkServer)
            </summary>
            -------------------------------------------------------------------------------------------------
        </member>
        <member name="F:StreamCoders.Network.State.None">
            <summary>
                undefined / initial state.
            </summary>
        </member>
        <member name="F:StreamCoders.Network.State.Connected">
            <summary>
                Connected state (TCP)
            </summary>
        </member>
        <member name="F:StreamCoders.Network.State.Error">
            <summary>
                Indicates an error state and that manual intervention is necessary.
            </summary>
        </member>
        <member name="F:StreamCoders.Network.State.Disconnected">
            <summary>
                Disconnected state (TCP)
            </summary>
        </member>
        <member name="F:StreamCoders.Network.State.Listening">
            <summary>
                Socket is listening (TCP server)
            </summary>
        </member>
        <member name="T:StreamCoders.Network.TcpNetworkClient">
            -------------------------------------------------------------------------------------------------
            <summary>
                TCP client implementation.
            </summary>
            -------------------------------------------------------------------------------------------------
        </member>
        <member name="F:StreamCoders.Network.TcpNetworkClient.ConnectTimeout">
            -------------------------------------------------------------------------------------------------
            <summary>
                Timespan to wait for connection to be established when synchronous parameter is true.
            </summary>
            -------------------------------------------------------------------------------------------------
        </member>
        <member name="F:StreamCoders.Network.TcpNetworkClient.KeepAliveInterval">
            -------------------------------------------------------------------------------------------------
            <summary>
                Interval in which keep-alive messages are sent.
            </summary>
            -------------------------------------------------------------------------------------------------
        </member>
        <member name="F:StreamCoders.Network.TcpNetworkClient.KeepAliveTimeout">
            -------------------------------------------------------------------------------------------------
            <summary>
                Time until a half-closed / half-open connection is terminated. This can be the case when
                a router or cable was disconnected.
                <para>
                    To turn off keep-alive checking set KeepAliveTimeout to <c>Timespan.Zero</c>
                </para>
            </summary>
            -------------------------------------------------------------------------------------------------
        </member>
        <member name="F:StreamCoders.Network.TcpNetworkClient.SendTimeout">
            <summary>
                TimeSpan specifying how long to wait for Send operation to finish before socket is closed and <c>OnError</c> is
                invoked. Set this property to TimeSpan.Zero to disable send timeout.
                When a socket send operation times out an OnError event will be generated where
                <c>Error == SocketError.TimedOut</c>, after which appropriate action must be taken by the application.
                <br />
            </summary>
        </member>
        <member name="M:StreamCoders.Network.TcpNetworkClient.#ctor">
            -------------------------------------------------------------------------------------------------
            <summary>
                Default constructor.
            </summary>
            -------------------------------------------------------------------------------------------------
        </member>
        <member name="M:StreamCoders.Network.TcpNetworkClient.#ctor(System.Net.Sockets.AddressFamily)">
            -------------------------------------------------------------------------------------------------
            <summary>
                Constructor.
            </summary>
            <param name="family">   The family. </param>
            -------------------------------------------------------------------------------------------------
        </member>
        <member name="M:StreamCoders.Network.TcpNetworkClient.#ctor(System.Net.Sockets.AddressFamily,System.Boolean,System.Int16,System.Int32)">
            -------------------------------------------------------------------------------------------------
            <summary>
                Constructor.
            </summary>
            <param name="family">               The family. </param>
            <param name="noDelay">              true to no delay. </param>
            <param name="ttl">                  The ttl. </param>
            <param name="receiveBufferSize">    SizeIncludingHeader of the receive buffer. </param>
            -------------------------------------------------------------------------------------------------
        </member>
        <member name="M:StreamCoders.Network.TcpNetworkClient.#ctor(System.Net.Sockets.Socket,StreamCoders.Network.State)">
            -------------------------------------------------------------------------------------------------
            <summary>
                Instantiates TCPClient with a socket directly.
                <para>
                    Instantiating TCPClient with an already created socket. Calling <c>Init</c> is not
                    allowed and will result in an exception being thrown.
                </para>
            </summary>
            <param name="socket">       Socket object to pass to TCPClient. </param>
            <param name="socketState">  The state the socket is currently in. </param>
            -------------------------------------------------------------------------------------------------
        </member>
        <member name="P:StreamCoders.Network.TcpNetworkClient.IsConnected">
            -------------------------------------------------------------------------------------------------
            <summary>
                Returns true if socket is connected to endpoint, otherwise false.
            </summary>
            <value>
                true if this instance is connected, false if not.
            </value>
            -------------------------------------------------------------------------------------------------
        </member>
        <member name="P:StreamCoders.Network.TcpNetworkClient.RemoteEndpoint">
            <summary>
                Gets the underlying remote endpoint. The value is only valid when the underlying socket is connected.
            </summary>
        </member>
        <member name="M:StreamCoders.Network.TcpNetworkClient.Init(System.Net.Sockets.AddressFamily,System.Boolean,System.Int16,System.Int32)">
            -------------------------------------------------------------------------------------------------
            <summary>
                Initialises this instance.
            </summary>
            <exception cref="T:System.Exception">    Thrown when an exception error condition occurs. </exception>
            <param name="family">               The family. </param>
            <param name="noDelay">              true to no delay. </param>
            <param name="ttl">                  The ttl. </param>
            <param name="receiveBufferSize">    SizeIncludingHeader of the receive buffer. </param>
            -------------------------------------------------------------------------------------------------
        </member>
        <member name="M:StreamCoders.Network.TcpNetworkClient.Close">
            -------------------------------------------------------------------------------------------------
            <summary>
                Closes the established connection.
            </summary>
            -------------------------------------------------------------------------------------------------
        </member>
        <member name="M:StreamCoders.Network.TcpNetworkClient.Shutdown(System.Net.Sockets.SocketShutdown)">
            -------------------------------------------------------------------------------------------------
            <summary>
                Call Shutdown before Close() to ensure that data is sent/received before the socket is
                closed.
            </summary>
            <param name="how">  Define the operation that is no longer allowed. </param>
            -------------------------------------------------------------------------------------------------
        </member>
        <member name="M:StreamCoders.Network.TcpNetworkClient.Finalize">
            -------------------------------------------------------------------------------------------------
            <summary>
                Finaliser.
            </summary>
            -------------------------------------------------------------------------------------------------
        </member>
        <member name="M:StreamCoders.Network.TcpNetworkClient.Connect(System.Net.EndPoint,System.Boolean)">
            -------------------------------------------------------------------------------------------------
            <summary>
                Initiates TCP connect to remote endpoint.
            </summary>
            <param name="remoteEp">     Remote endpoint. </param>
            <param name="synchronous">
                if true the method waits for the connection to be established. Otherwise the function
                returns immediately and OnConnect event is called.
            </param>
            <returns>
                Returns true if connection is established, otherwise false.
            </returns>
            -------------------------------------------------------------------------------------------------
        </member>
        <member name="M:StreamCoders.Network.TcpNetworkClient.StartReceiveChain">
            -------------------------------------------------------------------------------------------------
            <summary>
                When packet reception is needed, this method starts the initial receive chain. This method will only have to be
                called once.
            </summary>
            -------------------------------------------------------------------------------------------------
        </member>
        <member name="M:StreamCoders.Network.TcpNetworkClient.Send(System.Byte[])">
            -------------------------------------------------------------------------------------------------
            <summary>
                Sends a buffer to the remote end of the connection.
            </summary>
            <remarks>
                Exceptions: All exceptions thrown will be passed on to the application.
            </remarks>
            <param name="buffer">   OggBuffer to be sent. </param>
            <returns>
                The result of socket.SendAsync function call.
            </returns>
            -------------------------------------------------------------------------------------------------
        </member>
        <member name="M:StreamCoders.Network.TcpNetworkClient.Send(StreamCoders.OffsetBuffer{System.Byte})">
            -------------------------------------------------------------------------------------------------
            <summary>
                Sends a buffer to the remote end of the connection.
            </summary>
            <param name="buffer">   OggBuffer to be sent. </param>
            <returns>
                The result of socket.SendAsync function call.
            </returns>
            -------------------------------------------------------------------------------------------------
        </member>
        <member name="M:StreamCoders.Network.TcpNetworkClient.Send(System.String)">
            -------------------------------------------------------------------------------------------------
            <summary>
                Send this message.
            </summary>
            <param name="message">  The message. </param>
            <returns>
                .
            </returns>
            -------------------------------------------------------------------------------------------------
        </member>
        <member name="M:StreamCoders.Network.TcpNetworkClient.Equals(StreamCoders.Network.TcpNetworkClient)">
            -------------------------------------------------------------------------------------------------
            <summary>
                Tests if this TcpNetworkClient is considered equal to another.
            </summary>
            <param name="obj">  The tcp network client to compare to this instance. </param>
            <returns>
                true if the objects are considered equal, false if they are not.
            </returns>
            -------------------------------------------------------------------------------------------------
        </member>
        <member name="E:StreamCoders.Network.TcpNetworkClient.Connected">
            -------------------------------------------------------------------------------------------------
            <summary>
                Optional. Is called when a connection is initially established.
            </summary>
            ###
            <remarks>
                This event is invoked on the UI thread.
            </remarks>
            -------------------------------------------------------------------------------------------------
        </member>
        <member name="E:StreamCoders.Network.TcpNetworkClient.DataReceived">
            -------------------------------------------------------------------------------------------------
            <summary>
                Is called when a packet has been received.
            </summary>
            ###
            <remarks>
                This event is invoked on the internal callback thread.
            </remarks>
            -------------------------------------------------------------------------------------------------
        </member>
        <member name="E:StreamCoders.Network.TcpNetworkClient.DataSent">
            -------------------------------------------------------------------------------------------------
            <summary>
                Is called after an asynchronous send operation has completed.
            </summary>
            ###
            <remarks>
                This event is invoked on the internal callback thread.
            </remarks>
            -------------------------------------------------------------------------------------------------
        </member>
        <member name="E:StreamCoders.Network.TcpNetworkClient.ErrorOccurred">
            -------------------------------------------------------------------------------------------------
            <summary>
                Is called when the underlying socket has transitioned to an error state.
            </summary>
            ###
            <remarks>
                This event is invoked on the UI thread.
            </remarks>
            -------------------------------------------------------------------------------------------------
        </member>
        <member name="E:StreamCoders.Network.TcpNetworkClient.Disconnect">
            -------------------------------------------------------------------------------------------------
            <summary>
                Will be called once on transition from Connected to Disconnected.
            </summary>
            ###
            <remarks>
                This event is invoked on the UI thread.
            </remarks>
            -------------------------------------------------------------------------------------------------
        </member>
        <member name="T:StreamCoders.Network.TcpNetworkServer">
            -------------------------------------------------------------------------------------------------
            <summary>
                Represents a TCP server.
            </summary>
            -------------------------------------------------------------------------------------------------
        </member>
        <member name="F:StreamCoders.Network.TcpNetworkServer.AddressFamily">
            -------------------------------------------------------------------------------------------------
            <summary>
                The address family of the underlying socket. (Default is InterNetwork)
            </summary>
            -------------------------------------------------------------------------------------------------
        </member>
        <member name="M:StreamCoders.Network.TcpNetworkServer.#ctor(System.Net.EndPoint)">
            -------------------------------------------------------------------------------------------------
            <summary>
                Constructor.
            </summary>
            <param name="localEndpoint">    The local endpoint. </param>
            -------------------------------------------------------------------------------------------------
        </member>
        <member name="E:StreamCoders.Network.TcpNetworkServer.Accept">
            -------------------------------------------------------------------------------------------------
            <summary>
                Completion event for new incoming connections.
            </summary>
            ###
            <remarks>
                CompletionParameters may already contain valid data in <c>OggBuffer</c> when this event
                is raised.
            </remarks>
            -------------------------------------------------------------------------------------------------
        </member>
        <member name="M:StreamCoders.Network.TcpNetworkServer.StartListening(System.Int32)">
            -------------------------------------------------------------------------------------------------
            <summary>
                Starts a listening.
            </summary>
            <param name="expectedInitialBufferSize">
                (Optional) size of the expected initial buffer. The accept method will only be called
                when the client has sent the expected amount of bytes on connect or shortly after.
            </param>
            <returns>
                true if it succeeds, false if it fails.
            </returns>
            -------------------------------------------------------------------------------------------------
        </member>
        <member name="M:StreamCoders.Network.TcpNetworkServer.Close">
            -------------------------------------------------------------------------------------------------
            <summary>
                Closes the underlying listening socket.
            </summary>
            -------------------------------------------------------------------------------------------------
        </member>
        <member name="T:StreamCoders.Network.TcpSendTransportOperationCompleteEventArgs">
            <summary>
                Tcp Send transport completion parameters.
            </summary>
        </member>
        <member name="F:StreamCoders.Network.TcpSendTransportOperationCompleteEventArgs.SocketSendTimeout">
            <summary>
                Assign SocketTimeout object to invoke event when a certain timeout is reached.
            </summary>
        </member>
        <member name="F:StreamCoders.Network.TcpTransportOperationCompleteEventArgs.Mode">
            -------------------------------------------------------------------------------------------------
            <summary>
                The method.
            </summary>
            -------------------------------------------------------------------------------------------------
        </member>
        <member name="T:StreamCoders.Network.TransportOperationCompleteEventArgs">
            <summary>
                Event generated when a network operation has completed
            </summary>
            <seealso cref="T:System.EventArgs" />
        </member>
        <member name="P:StreamCoders.Network.TransportOperationCompleteEventArgs.Buffer">
            -------------------------------------------------------------------------------------------------
            <summary>
                OggBuffer sent or received.
            </summary>
            -------------------------------------------------------------------------------------------------
        </member>
        <member name="P:StreamCoders.Network.TransportOperationCompleteEventArgs.CreationTime">
            -------------------------------------------------------------------------------------------------
            <summary>
                Time of creation.
            </summary>
            -------------------------------------------------------------------------------------------------
        </member>
        <member name="P:StreamCoders.Network.TransportOperationCompleteEventArgs.CompletionTime">
            -------------------------------------------------------------------------------------------------
            <summary>
                Time of completion.
            </summary>
            -------------------------------------------------------------------------------------------------
        </member>
        <member name="P:StreamCoders.Network.TransportOperationCompleteEventArgs.RemoteEndpoint">
            -------------------------------------------------------------------------------------------------
            <summary>
                Remote endpoint of operation if applicable.
            </summary>
            -------------------------------------------------------------------------------------------------
        </member>
        <member name="T:StreamCoders.Network.TransportOperationErrorEventArgs">
            -------------------------------------------------------------------------------------------------
            <summary>
                Transport operation error arguments.
            </summary>
        </member>
        <member name="T:StreamCoders.Network.UdpNetworkClient">
            -------------------------------------------------------------------------------------------------
            <summary>
                UDP network client. Supports both IPv4 and IPv6.
            </summary>
            <seealso cref="T:StreamCoders.Network.INetworkClient" />
            -------------------------------------------------------------------------------------------------
        </member>
        <member name="F:StreamCoders.Network.UdpNetworkClient.ReceiveBufferSize">
            -------------------------------------------------------------------------------------------------
            <summary>
                Receive buffer size
            </summary>
            -------------------------------------------------------------------------------------------------
        </member>
        <member name="F:StreamCoders.Network.UdpNetworkClient.State">
            -------------------------------------------------------------------------------------------------
            <summary>
                The state of the client.
            </summary>
            -------------------------------------------------------------------------------------------------
        </member>
        <member name="P:StreamCoders.Network.UdpNetworkClient.AllowFragmentation">
            <summary>
                Indicates whether the underlying socket will allow fragmentation of packets if they don't fit the MTU size.
                If disabled, <c>ErrorOccurred</c> will be called with MessageSize indication.
            </summary>
        </member>
        <member name="P:StreamCoders.Network.UdpNetworkClient.RemoteEndPoint">
            -------------------------------------------------------------------------------------------------
            <summary>
                Remote endpoint of the socket.
            </summary>
            <value>
                The remote end point.
            </value>
            <seealso cref="P:StreamCoders.Network.INetworkClient.RemoteEndPoint" />
            -------------------------------------------------------------------------------------------------
        </member>
        <member name="P:StreamCoders.Network.UdpNetworkClient.LocalEndPoint">
            -------------------------------------------------------------------------------------------------
            <summary>
                Local endpoint the socket will be bound to.
            </summary>
            <value>
                The local end point.
            </value>
            <seealso cref="P:StreamCoders.Network.INetworkClient.LocalEndPoint" />
            -------------------------------------------------------------------------------------------------
        </member>
        <member name="M:StreamCoders.Network.UdpNetworkClient.Close">
            -------------------------------------------------------------------------------------------------
            <summary>
                Closes underlying socket.
            </summary>
            <seealso cref="M:StreamCoders.Network.INetworkClient.Close" />
            -------------------------------------------------------------------------------------------------
        </member>
        <member name="M:StreamCoders.Network.UdpNetworkClient.Bind">
            -------------------------------------------------------------------------------------------------
            <summary>
                Associates socket with local endpoint.
            </summary>
            <returns>
                Returns the locally bound <b>EndPoint</b>.
            </returns>
            <seealso cref="M:StreamCoders.Network.INetworkClient.Bind" />
            -------------------------------------------------------------------------------------------------
        </member>
        <member name="M:StreamCoders.Network.UdpNetworkClient.StartInit">
            -------------------------------------------------------------------------------------------------
            <summary>
                Starts initialization by creating underlying socket.
            </summary>
            <returns>
                true if it succeeds, false if it fails.
            </returns>
            <seealso cref="M:StreamCoders.Network.INetworkClient.StartInit" />
            -------------------------------------------------------------------------------------------------
        </member>
        <member name="M:StreamCoders.Network.UdpNetworkClient.FinishInit(System.Boolean)">
            -------------------------------------------------------------------------------------------------
            <summary>
                Finishes initialization by starting receive chain.
            </summary>
            <param name="startReceiving">   (optional) the start receiving. </param>
            <returns>
                true if it succeeds, false if it fails.
            </returns>
            -------------------------------------------------------------------------------------------------
        </member>
        <member name="M:StreamCoders.Network.UdpNetworkClient.SimpleInit">
            -------------------------------------------------------------------------------------------------
            <summary>
                Calls <c>StartInit, Bind and FinishInit</c> in one run.
            </summary>
            <returns>
                true if it succeeds, false if it fails.
            </returns>
            <seealso cref="M:StreamCoders.Network.INetworkClient.SimpleInit" />
            -------------------------------------------------------------------------------------------------
        </member>
        <member name="M:StreamCoders.Network.UdpNetworkClient.StartReceiveChain">
            -------------------------------------------------------------------------------------------------
            <summary>
                Starts the internal receive chain. This function should only be called if
                <c>FinishInit(false)</c> was called, otherwise the receive chain is already started.
            </summary>
            <seealso cref="M:StreamCoders.Network.INetworkClient.StartReceiveChain()" />
            -------------------------------------------------------------------------------------------------
        </member>
        <member name="M:StreamCoders.Network.UdpNetworkClient.Send(System.ArraySegment{System.Byte})">
            -------------------------------------------------------------------------------------------------
            <summary>
                Sends an <c>ArraySegment</c> to the remote endpoint.
            </summary>
            <param name="buffer">   The buffer. </param>
            <returns>
                Returns <b>AsyncResult</b> instance of send operation.
            </returns>
            -------------------------------------------------------------------------------------------------
        </member>
        <member name="M:StreamCoders.Network.UdpNetworkClient.Send(StreamCoders.OffsetBuffer{System.Byte})">
            -------------------------------------------------------------------------------------------------
            <summary>
                Sends an <c>OffsetBuffer</c> to the remote endpoint.
            </summary>
            <param name="buffer">   The buffer. </param>
            <returns>
                Returns <b>AsyncResult</b> instance of send operation.
            </returns>
            -------------------------------------------------------------------------------------------------
        </member>
        <member name="E:StreamCoders.Network.UdpNetworkClient.ErrorOccurred">
            -------------------------------------------------------------------------------------------------
            <summary>
                Event for all listeners interested in OnError events.
            </summary>
            -------------------------------------------------------------------------------------------------
        </member>
        <member name="E:StreamCoders.Network.UdpNetworkClient.DataSent">
            -------------------------------------------------------------------------------------------------
            <summary>
                Event for all listeners interested in OnSend events.
            </summary>
            -------------------------------------------------------------------------------------------------
        </member>
        <member name="E:StreamCoders.Network.UdpNetworkClient.DataReceived">
            -------------------------------------------------------------------------------------------------
            <summary>
                Event for all listeners interested in DataReceived events.
            </summary>
            -------------------------------------------------------------------------------------------------
        </member>
        <member name="M:StreamCoders.Network.UdpNetworkClient.Send(System.String)">
            -------------------------------------------------------------------------------------------------
            <summary>
                Sends a string to the remote endpoint.
            </summary>
            <param name="message">  The message. </param>
            <returns>
                Returns <b>AsyncResult</b> instance of send operation.
            </returns>
            -------------------------------------------------------------------------------------------------
        </member>
        <member name="M:StreamCoders.Network.UdpNetworkClient.Send(System.Byte[])">
            -------------------------------------------------------------------------------------------------
            <summary>
                Sends a byte array to the remote endpoint.
            </summary>
            <param name="buffer">   The buffer. </param>
            <returns>
                Returns <b>AsyncResult</b> instance of send operation.
            </returns>
            -------------------------------------------------------------------------------------------------
        </member>
        <member name="T:StreamCoders.Network.UdpNetworkMulticastClient">
            -------------------------------------------------------------------------------------------------
            <summary>
                UDP multicast client.
            </summary>
            <seealso cref="T:StreamCoders.Network.INetworkClient" />
            -------------------------------------------------------------------------------------------------
        </member>
        <member name="F:StreamCoders.Network.UdpNetworkMulticastClient.currentSocketAsyncEventArgs">
            <summary>
                Holds the current SocketAsyncEventArgs created in StartReceiveChain.
                When the socket is stopped we can remove the event handler from the structure so
                the dependency is gone and this object can be collected.
            </summary>
        </member>
        <member name="F:StreamCoders.Network.UdpNetworkMulticastClient.InterfaceResolveMethod">
            -------------------------------------------------------------------------------------------------
            <summary>
                Method of resolving the correct network interface.
            </summary>
            -------------------------------------------------------------------------------------------------
        </member>
        <member name="P:StreamCoders.Network.UdpNetworkMulticastClient.ManualNetworkInterfaceIndex">
            -------------------------------------------------------------------------------------------------
            <summary>
                Network interface index to use. <c>InterfaceResolveMethod</c> has to be set to <c>Manual</c>
            </summary>
            -------------------------------------------------------------------------------------------------
        </member>
        <member name="P:StreamCoders.Network.UdpNetworkMulticastClient.ReceiveBufferSize">
            -------------------------------------------------------------------------------------------------
            <summary>
                SizeIncludingHeader of the receive buffer.
            </summary>
            -------------------------------------------------------------------------------------------------
        </member>
        <member name="P:StreamCoders.Network.UdpNetworkMulticastClient.SendBufferSize">
            -------------------------------------------------------------------------------------------------
            <summary>
                SizeIncludingHeader of the send buffer on socket level.
            </summary>
            -------------------------------------------------------------------------------------------------
        </member>
        <member name="P:StreamCoders.Network.UdpNetworkMulticastClient.TimeToLive">
            -------------------------------------------------------------------------------------------------
            <summary>
                The time to live.
            </summary>
            -------------------------------------------------------------------------------------------------
        </member>
        <member name="P:StreamCoders.Network.UdpNetworkMulticastClient.ReuseAddress">
            <summary>
                Allows the underlying socket to be bound to an address already in use
            </summary>
            <value><c>true</c> if [reuse address]; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:StreamCoders.Network.UdpNetworkMulticastClient.UseThreading">
            <summary>
                Indicates whether to use a dedicated thread for multicast packet processing. Default is false.
            </summary>
            <remarks>
                Using threading can cause vast memory consumption.
                When enabling this feature, the client application has to make sure to consume packets at the same or higher rate
                as they arrive on the network interface.
            </remarks>
        </member>
        <member name="P:StreamCoders.Network.UdpNetworkMulticastClient.RemoteEndPoint">
            -------------------------------------------------------------------------------------------------
            <summary>
                Multicast group EndPoint.
            </summary>
            <value>
                The remote end point.
            </value>
            -------------------------------------------------------------------------------------------------
        </member>
        <member name="P:StreamCoders.Network.UdpNetworkMulticastClient.LocalEndPoint">
            -------------------------------------------------------------------------------------------------
            <summary>
                Locally bound EndPoint.
            </summary>
            <value>
                The local endpoint.
            </value>
            -------------------------------------------------------------------------------------------------
        </member>
        <member name="M:StreamCoders.Network.UdpNetworkMulticastClient.Close">
            -------------------------------------------------------------------------------------------------
            <summary>
                Closes the multicast socket and stops processing packets.
            </summary>
            -------------------------------------------------------------------------------------------------
        </member>
        <member name="M:StreamCoders.Network.UdpNetworkMulticastClient.Bind">
            -------------------------------------------------------------------------------------------------
            <summary>
                Binds local endpoint to socket. This has to be called before FinishInit.
            </summary>
            <returns>
                Returns the local endpoint.
            </returns>
            -------------------------------------------------------------------------------------------------
        </member>
        <member name="M:StreamCoders.Network.UdpNetworkMulticastClient.StartInit">
            -------------------------------------------------------------------------------------------------
            <summary>
                Start the initialization of the socket.
            </summary>
            <returns>
                true if it succeeds, false if it fails.
            </returns>
            -------------------------------------------------------------------------------------------------
        </member>
        <member name="M:StreamCoders.Network.UdpNetworkMulticastClient.FinishInit(System.Boolean)">
            -------------------------------------------------------------------------------------------------
            <summary>
                Finishes the initialization of the socket.
            </summary>
            <param name="startReceiving">   (optional) the start receiving. </param>
            <returns>
                true if it succeeds, false if it fails.
            </returns>
            -------------------------------------------------------------------------------------------------
        </member>
        <member name="M:StreamCoders.Network.UdpNetworkMulticastClient.SimpleInit">
            -------------------------------------------------------------------------------------------------
            <summary>
                Initializes socket and starts receive chain.
            </summary>
            <returns>
                true if it succeeds, false if it fails.
            </returns>
            -------------------------------------------------------------------------------------------------
        </member>
        <member name="M:StreamCoders.Network.UdpNetworkMulticastClient.StartReceiveChain">
            -------------------------------------------------------------------------------------------------
            <summary>
                Starts the internal receive chain. Note that the default parameter to FinishInit(= true)
            </summary>
            -------------------------------------------------------------------------------------------------
        </member>
        <member name="M:StreamCoders.Network.UdpNetworkMulticastClient.Send(System.ArraySegment{System.Byte})">
            -------------------------------------------------------------------------------------------------
            <summary>
                Send this message.
            </summary>
            <param name="buffer">  Buffer to send as datagram </param>
            <returns>
                Returns <b>AsyncResult</b> instance of send operation.
            </returns>
            -------------------------------------------------------------------------------------------------
        </member>
        <member name="M:StreamCoders.Network.UdpNetworkMulticastClient.Send(StreamCoders.OffsetBuffer{System.Byte})">
            -------------------------------------------------------------------------------------------------
            <summary>
                Send this message.
            </summary>
            <param name="buffer">    Buffer to send as datagram </param>
            <returns>
                Returns <b>AsyncResult</b> instance of send operation.
            </returns>
            -------------------------------------------------------------------------------------------------
        </member>
        <member name="E:StreamCoders.Network.UdpNetworkMulticastClient.ErrorOccurred">
            -------------------------------------------------------------------------------------------------
            <summary>
                Event queue for all listeners interested in OnError events.
            </summary>
            -------------------------------------------------------------------------------------------------
        </member>
        <member name="E:StreamCoders.Network.UdpNetworkMulticastClient.DataSent">
            -------------------------------------------------------------------------------------------------
            <summary>
                Event queue for all listeners interested in OnSend events.
            </summary>
            -------------------------------------------------------------------------------------------------
        </member>
        <member name="E:StreamCoders.Network.UdpNetworkMulticastClient.DataReceived">
            -------------------------------------------------------------------------------------------------
            <summary>
                Event queue for all listeners interested in OnReceive events.
            </summary>
            -------------------------------------------------------------------------------------------------
        </member>
        <member name="M:StreamCoders.Network.UdpNetworkMulticastClient.Send(System.String)">
            -------------------------------------------------------------------------------------------------
            <summary>
                Send this message.
            </summary>
            <param name="message"> String to send as datagram</param>
            <returns>
                Returns <b>AsyncResult</b> instance of send operation.
            </returns>
            -------------------------------------------------------------------------------------------------
        </member>
        <member name="M:StreamCoders.Network.UdpNetworkMulticastClient.Send(System.Byte[])">
            -------------------------------------------------------------------------------------------------
            <summary>
                Send this message.
            </summary>
            <param name="buffer"> Buffer to send as datagram </param>
            <returns>
                Returns <b>AsyncResult</b> instance of send operation.
            </returns>
            -------------------------------------------------------------------------------------------------
        </member>
        <member name="T:StreamCoders.Network.UdpNetworkSourceSpecificMulticastClient">
            <summary>
                Source Specific Multicast (SSM) client.
            </summary>
        </member>
        <member name="M:StreamCoders.Network.UdpNetworkSourceSpecificMulticastClient.AddSourceGroup(System.Net.IPAddress)">
            <summary>
                Adds source membership to Group. This can be called for multiple sources.
            </summary>
            <param name="sourceIp"></param>
        </member>
        <member name="M:StreamCoders.Network.UdpNetworkSourceSpecificMulticastClient.RemoveSourceGroup(System.Net.IPAddress)">
            <summary>
                Removes source members from group.
            </summary>
            <param name="sourceIp"></param>
        </member>
        <member name="T:StreamCoders.Network.UdpTransportOperationCompleteEventArgs">
            -------------------------------------------------------------------------------------------------
            <summary>
                Udp transport completion parameters.
            </summary>
        </member>
        <member name="F:StreamCoders.Network.UdpTransportOperationCompleteEventArgs.BytesTransferred">
            -------------------------------------------------------------------------------------------------
            <summary>
                The bytes transferred.
            </summary>
            -------------------------------------------------------------------------------------------------
        </member>
        <member name="F:StreamCoders.Network.UdpTransportOperationCompleteEventArgs.Mode">
            -------------------------------------------------------------------------------------------------
            <summary>
                The method.
            </summary>
            -------------------------------------------------------------------------------------------------
        </member>
        <member name="T:StreamCoders.Network.Stun.StunInternalClient">
            <summary>
                This class implements STUN client. Defined in RFC 3489.
            </summary>
            <example>
                <code>
            // Create new socket for STUN client.
            Socket socket = new Socket(AddressFamily.InterNetwork,SocketType.Dgram,ProtocolType.Udp);
            socket.Bind(new IPEndPoint(IPAddress.Any,0));
            
            // Query STUN server
            STUN_Result result = STUN_Client.Query("stunserver.org",3478,socket);
            if(result.NetType != STUN_NetType.UdpBlocked){
                // UDP blocked or !!!! bad STUN server
            }
            else{
                IPEndPoint publicEP = result.PublicEndPoint;
                // Do your stuff
            }
            </code>
            </example>
        </member>
        <member name="M:StreamCoders.Network.Stun.StunInternalClient.Query(System.String,System.Int32,System.Net.Sockets.Socket)">
            <summary>
                Gets NAT info from STUN server.
            </summary>
            <param name="host">STUN server name or IP.</param>
            <param name="port">STUN server port. Default port is 3478.</param>
            <param name="socket">UDP socket to use.</param>
            <returns>Returns UDP netwrok info.</returns>
            <exception cref="T:System.Exception">Throws exception if unexpected error happens.</exception>
        </member>
        <member name="M:StreamCoders.Network.Stun.StunInternalClient.DoTransaction(StreamCoders.Network.Stun.StunMessage,System.Net.Sockets.Socket,System.Net.IPEndPoint)">
            <summary>
                Does STUN transaction. Returns transaction response or null if transaction failed.
            </summary>
            <param name="request">STUN message.</param>
            <param name="socket">Socket to use for send/receive.</param>
            <param name="remoteEndPoint">Remote end point.</param>
            <returns>Returns transaction response or null if transaction failed.</returns>
        </member>
        <member name="T:StreamCoders.Network.Stun.StunNetworkType">
            <summary>
                Specifies UDP network type.
            </summary>
        </member>
        <member name="F:StreamCoders.Network.Stun.StunNetworkType.UdpBlocked">
            <summary>
                UDP is always blocked.
            </summary>
        </member>
        <member name="F:StreamCoders.Network.Stun.StunNetworkType.OpenInternet">
            <summary>
                No NAT, public IP, no firewall.
            </summary>
        </member>
        <member name="F:StreamCoders.Network.Stun.StunNetworkType.SymmetricUdpFirewall">
            <summary>
                No NAT, public IP, but symmetric UDP firewall.
            </summary>
        </member>
        <member name="F:StreamCoders.Network.Stun.StunNetworkType.FullCone">
            <summary>
                A full cone NAT is one where all requests from the same internal IP address and port are
                mapped to the same external IP address and port. Furthermore, any external host can send
                a packet to the internal host, by sending a packet to the mapped external address.
            </summary>
        </member>
        <member name="F:StreamCoders.Network.Stun.StunNetworkType.RestrictedCone">
            <summary>
                A restricted cone NAT is one where all requests from the same internal IP address and
                port are mapped to the same external IP address and port. Unlike a full cone NAT, an external
                host (with IP address X) can send a packet to the internal host only if the internal host
                had previously sent a packet to IP address X.
            </summary>
        </member>
        <member name="F:StreamCoders.Network.Stun.StunNetworkType.PortRestrictedCone">
            <summary>
                A port restricted cone NAT is like a restricted cone NAT, but the restriction
                includes port numbers. Specifically, an external host can send a packet, with source IP
                address X and source port P, to the internal host only if the internal host had previously
                sent a packet to IP address X and port P.
            </summary>
        </member>
        <member name="F:StreamCoders.Network.Stun.StunNetworkType.Symmetric">
            <summary>
                A symmetric NAT is one where all requests from the same internal IP address and port,
                to a specific destination IP address and port, are mapped to the same external IP address and
                port.  If the same host sends a packet with the same source address and port, but to
                a different destination, a different mapping is used. Furthermore, only the external host that
                receives a packet can send a UDP packet back to the internal host.
            </summary>
        </member>
        <member name="T:StreamCoders.Network.Stun.StunResult">
            <summary>
                Holds result contained by <c>StunClient.Query()</c>
            </summary>
        </member>
        <member name="M:StreamCoders.Network.Stun.StunResult.#ctor(StreamCoders.Network.Stun.StunNetworkType,System.Net.IPEndPoint)">
            <summary>
                Default constructor.
            </summary>
            <param name="networkType">Specifies UDP network type.</param>
            <param name="localPublicEndPoint">Public IP end point.</param>
        </member>
        <member name="P:StreamCoders.Network.Stun.StunResult.NetworkType">
            <summary>
                Gets UDP network type.
            </summary>
        </member>
        <member name="P:StreamCoders.Network.Stun.StunResult.LocalPublicEndPoint">
            <summary>
                Gets local public IP endpoint. This value is null if failed to get network type.
            </summary>
        </member>
        <member name="T:StreamCoders.Network.Stun.StunChangeRequest">
            <summary>
                This class implements STUN CHANGE-REQUEST attribute. Defined in RFC 3489 11.2.4.
            </summary>
        </member>
        <member name="M:StreamCoders.Network.Stun.StunChangeRequest.#ctor">
            <summary>
                Default constructor.
            </summary>
        </member>
        <member name="M:StreamCoders.Network.Stun.StunChangeRequest.#ctor(System.Boolean,System.Boolean)">
            <summary>
                Default constructor.
            </summary>
            <param name="changeIP">Specifies if STUN server must send response to different IP than request was received.</param>
            <param name="changePort">Specifies if STUN server must send response to different port than request was received.</param>
        </member>
        <member name="P:StreamCoders.Network.Stun.StunChangeRequest.ChangeIP">
            <summary>
                Gets or sets if STUN server must send response to different IP than request was received.
            </summary>
        </member>
        <member name="P:StreamCoders.Network.Stun.StunChangeRequest.ChangePort">
            <summary>
                Gets or sets if STUN server must send response to different port than request was received.
            </summary>
        </member>
        <member name="T:StreamCoders.Network.Stun.StunErrorCode">
            <summary>
                This class implements STUN ERROR-CODE. Defined in RFC 3489 11.2.9.
            </summary>
        </member>
        <member name="M:StreamCoders.Network.Stun.StunErrorCode.#ctor(System.Int32,System.String)">
            <summary>
                Default constructor.
            </summary>
            <param name="code">Error code.</param>
            <param name="reasonText">Reason text.</param>
        </member>
        <member name="P:StreamCoders.Network.Stun.StunErrorCode.Code">
            <summary>
                Gets or sets error code.
            </summary>
        </member>
        <member name="P:StreamCoders.Network.Stun.StunErrorCode.ReasonText">
            <summary>
                Gets reason text.
            </summary>
        </member>
        <member name="T:StreamCoders.Network.Stun.StunMessage">
            <summary>
                Implements STUN message. Defined in RFC 3489.
            </summary>
        </member>
        <member name="M:StreamCoders.Network.Stun.StunMessage.#ctor">
            <summary>
                Default constructor.
            </summary>
        </member>
        <member name="M:StreamCoders.Network.Stun.StunMessage.Parse(System.Byte[])">
            <summary>
                Parses STUN message from raw data packet.
            </summary>
            <param name="data">Raw STUN message.</param>
        </member>
        <member name="M:StreamCoders.Network.Stun.StunMessage.ToByteData">
            <summary>
                Converts this to raw STUN packet.
            </summary>
            <returns>Returns raw STUN packet.</returns>
        </member>
        <member name="M:StreamCoders.Network.Stun.StunMessage.ParseAttribute(System.Byte[],System.Int32@)">
            <summary>
                Parses attribute from data.
            </summary>
            <param name="data">SIP message data.</param>
            <param name="offset">Offset in data.</param>
        </member>
        <member name="M:StreamCoders.Network.Stun.StunMessage.ParseEndPoint(System.Byte[],System.Int32@)">
            <summary>
                Pasrses IP endpoint attribute.
            </summary>
            <param name="data">STUN message data.</param>
            <param name="offset">Offset in data.</param>
            <returns>Returns parsed IP end point.</returns>
        </member>
        <member name="M:StreamCoders.Network.Stun.StunMessage.StoreEndPoint(StreamCoders.Network.Stun.StunMessage.AttributeType,System.Net.IPEndPoint,System.Byte[],System.Int32@)">
            <summary>
                Stores ip end point attribute to buffer.
            </summary>
            <param name="type">Attribute type.</param>
            <param name="endPoint">IP end point.</param>
            <param name="message">Buffer where to store.</param>
            <param name="offset">Offset in buffer.</param>
        </member>
        <member name="T:StreamCoders.Network.Stun.StunMessage.AttributeType">
            <summary>
                Specifies STUN attribute type.
            </summary>
        </member>
        <member name="T:StreamCoders.Network.Stun.StunMessage.IPFamily">
            <summary>
                Specifies IP address family.
            </summary>
        </member>
        <member name="P:StreamCoders.Network.Stun.StunMessage.Type">
            <summary>
                Gets STUN message type.
            </summary>
        </member>
        <member name="P:StreamCoders.Network.Stun.StunMessage.TransactionID">
            <summary>
                Gets transaction ID.
            </summary>
        </member>
        <member name="P:StreamCoders.Network.Stun.StunMessage.MappedAddress">
            <summary>
                Gets or sets IP end point what was actually connected to STUN server. Returns null if not specified.
            </summary>
        </member>
        <member name="P:StreamCoders.Network.Stun.StunMessage.ResponseAddress">
            <summary>
                Gets or sets IP end point where to STUN client likes to receive response.
                Value null means not specified.
            </summary>
        </member>
        <member name="P:StreamCoders.Network.Stun.StunMessage.ChangeRequest">
            <summary>
                Gets or sets how and where STUN server must send response back to STUN client.
                Value null means not specified.
            </summary>
        </member>
        <member name="P:StreamCoders.Network.Stun.StunMessage.SourceAddress">
            <summary>
                Gets or sets STUN server IP end point what sent response to STUN client. Value null
                means not specified.
            </summary>
        </member>
        <member name="P:StreamCoders.Network.Stun.StunMessage.ChangedAddress">
            <summary>
                Gets or sets IP end point where STUN server will send response back to STUN client
                if the "change IP" and "change port" flags had been set in the ChangeRequest.
            </summary>
        </member>
        <member name="P:StreamCoders.Network.Stun.StunMessage.UserName">
            <summary>
                Gets or sets user name. Value null means not specified.
            </summary>
        </member>
        <member name="P:StreamCoders.Network.Stun.StunMessage.Password">
            <summary>
                Gets or sets password. Value null means not specified.
            </summary>
        </member>
        <member name="P:StreamCoders.Network.Stun.StunMessage.ErrorCode">
            <summary>
                Gets or sets error info. Returns null if not specified.
            </summary>
        </member>
        <member name="P:StreamCoders.Network.Stun.StunMessage.ReflectedFrom">
            <summary>
                Gets or sets IP endpoint from which IP end point STUN server got STUN client request.
                Value null means not specified.
            </summary>
        </member>
        <member name="P:StreamCoders.Network.Stun.StunMessage.ServerName">
            <summary>
                Gets or sets server name.
            </summary>
        </member>
        <member name="T:StreamCoders.Network.Stun.StunMessageType">
            <summary>
                This enum specifies STUN message type.
            </summary>
        </member>
        <member name="F:StreamCoders.Network.Stun.StunMessageType.BindingRequest">
            <summary>
                STUN message is binding request.
            </summary>
        </member>
        <member name="F:StreamCoders.Network.Stun.StunMessageType.BindingResponse">
            <summary>
                STUN message is binding request response.
            </summary>
        </member>
        <member name="F:StreamCoders.Network.Stun.StunMessageType.BindingErrorResponse">
            <summary>
                STUN message is binding requesr error response.
            </summary>
        </member>
        <member name="F:StreamCoders.Network.Stun.StunMessageType.SharedSecretRequest">
            <summary>
                STUN message is "shared secret" request.
            </summary>
        </member>
        <member name="F:StreamCoders.Network.Stun.StunMessageType.SharedSecretResponse">
            <summary>
                STUN message is "shared secret" request response.
            </summary>
        </member>
        <member name="F:StreamCoders.Network.Stun.StunMessageType.SharedSecretErrorResponse">
            <summary>
                STUN message is "shared secret" request error response.
            </summary>
        </member>
        <member name="T:StreamCoders.Network.StunClient">
            -------------------------------------------------------------------------------------------------
            <summary>
                STUN client (RFC 3489)
            </summary>
            -------------------------------------------------------------------------------------------------
        </member>
        <member name="M:StreamCoders.Network.StunClient.#ctor(System.Net.DnsEndPoint)">
            <summary>
                Constructor
            </summary>
            <param name="stunEndpoint">Endpoint containing host name and port of the STUN server</param>
        </member>
        <member name="M:StreamCoders.Network.StunClient.Query">
            <summary>
                Queries the configured STUN server.
            </summary>
            <returns></returns>
        </member>
        <member name="T:StreamCoders.Network.UPnpMappingOperation">
            <summary>
                Represents a UPnP port mapping operation.
            </summary>
        </member>
        <member name="F:StreamCoders.Network.UPnpMappingOperation.ExternalPort">
            <summary>
                External port to map from.
            </summary>
        </member>
        <member name="F:StreamCoders.Network.UPnpMappingOperation.InternalAddress">
            <summary>
                Internal address to map to.
            </summary>
        </member>
        <member name="F:StreamCoders.Network.UPnpMappingOperation.InternalPort">
            <summary>
                Internal port to map to.
            </summary>
        </member>
        <member name="F:StreamCoders.Network.UPnpMappingOperation.MetaDescription">
            <summary>
                Meta Description committed to router.
            </summary>
        </member>
        <member name="F:StreamCoders.Network.UPnpMappingOperation.Protocol">
            <summary>
                Protocol to use. (default: Udp)
            </summary>
        </member>
        <member name="P:StreamCoders.Network.UPnpMappingOperation.ServiceEndpoint">
            <summary>
                Service endpoint to use.
            </summary>
        </member>
        <member name="T:StreamCoders.Network.UPnpPortMap">
            <summary>
                A UPnP port mapping client. It allows client applications to open up a NAT port on a NAT
                and UPnP capable router.
            </summary>
            <remarks>UPnP operations require a UPnP capable router with the UPnP port mapping feature enabled.</remarks>
        </member>
        <member name="M:StreamCoders.Network.UPnpPortMap.#ctor">
            -------------------------------------------------------------------------------------------------
            <summary>
                Default constructor.
            </summary>
            -------------------------------------------------------------------------------------------------
        </member>
        <member name="P:StreamCoders.Network.UPnpPortMap.ServiceHostExclusionList">
            -------------------------------------------------------------------------------------------------
            <summary>
                A list containing the host IP addresses of endpoints that must not be queried. By default
                this includes the local NICs IP address(es).
            </summary>
            -------------------------------------------------------------------------------------------------
        </member>
        <member name="M:StreamCoders.Network.UPnpPortMap.GetExternalAddress(StreamCoders.Network.UPnpServiceEndpoint)">
            -------------------------------------------------------------------------------------------------
            <summary>
                Retrieves the routers external IP address.
            </summary>
            <param name="sep">  Service endpoint to query. </param>
            <returns>
                Returns IP address.
            </returns>
            -------------------------------------------------------------------------------------------------
        </member>
        <member name="M:StreamCoders.Network.UPnpPortMap.GetServiceEndpoints">
            -------------------------------------------------------------------------------------------------
            <summary>
                Retrieves service endpoints in the local network that represent an internet routing device.
            </summary>
            <remarks>
                Note that this function may throw a first chance <b>WebException</b>, which can safely be
                ignored.
            </remarks>
            <returns>
                Returns a list of service endpoints.
            </returns>
            -------------------------------------------------------------------------------------------------
        </member>
        <member name="M:StreamCoders.Network.UPnpPortMap.GetServiceEndpointsAsync">
            -------------------------------------------------------------------------------------------------
            <summary>
                Retrieves service endpoints in the local network that represent an internet routing device.
            </summary>
            <remarks>
                Note that this function may throw a first chance <b>WebException</b>, which can safely be
                ignored.
            </remarks>
            <returns>
                Returns a list of service endpoints.
            </returns>
            -------------------------------------------------------------------------------------------------
        </member>
        <member name="M:StreamCoders.Network.UPnpPortMap.GetServiceLocations">
            -------------------------------------------------------------------------------------------------
            <summary>
                Retrieves service locations in local network freely configurable through
                <c>DiscoveryDeviceFilter</c> and <c>DiscoveryMessage</c>.
            </summary>
            <returns>
                The service locations.
            </returns>
            -------------------------------------------------------------------------------------------------
        </member>
        <member name="M:StreamCoders.Network.UPnpPortMap.Map(StreamCoders.Network.UPnpMappingOperation)">
            -------------------------------------------------------------------------------------------------
            <summary>
                Maps an ExternalIP:port to a internal LAN IP:port mapping operation.
            </summary>
            <param name="op">   Mapping information. </param>
            -------------------------------------------------------------------------------------------------
        </member>
        <member name="M:StreamCoders.Network.UPnpPortMap.UnMap(StreamCoders.Network.UPnpMappingOperation)">
            -------------------------------------------------------------------------------------------------
            <summary>
                Unmaps a previously mapped port forwarding operation.
            </summary>
            <param name="op">   Mapping information. </param>
            -------------------------------------------------------------------------------------------------
        </member>
        <member name="T:StreamCoders.Network.UPnpServiceEndpoint">
            -------------------------------------------------------------------------------------------------
            <summary>
                Represents a service endpoint of a UPnP capable device.
            </summary>
            -------------------------------------------------------------------------------------------------
        </member>
        <member name="P:StreamCoders.Network.UPnpServiceEndpoint.Uri">
            -------------------------------------------------------------------------------------------------
            <summary>
                Service URL.
            </summary>
            <value>
                The uri.
            </value>
            -------------------------------------------------------------------------------------------------
        </member>
        <member name="P:StreamCoders.Network.UPnpServiceEndpoint.Id">
            -------------------------------------------------------------------------------------------------
            <summary>
                Unique ID.
            </summary>
            <value>
                The identifier.
            </value>
            -------------------------------------------------------------------------------------------------
        </member>
        <member name="M:StreamCoders.Network.UPnpServiceEndpoint.ToString">
            -------------------------------------------------------------------------------------------------
            <summary>
                Convert this instance into a string representation.
            </summary>
            <returns>
                This instance as a string.
            </returns>
            -------------------------------------------------------------------------------------------------
        </member>
        <member name="T:StreamCoders.Network.UPnpServiceLocation">
            -------------------------------------------------------------------------------------------------
            <summary>
                UPNP service location.
            </summary>
            -------------------------------------------------------------------------------------------------
        </member>
        <member name="T:StreamCoders.Adaptive.Common.AdaptiveSample">
            -------------------------------------------------------------------------------------------------
            <summary>
                Provides both information about a sample and the track it belongs to.
            </summary>
            -------------------------------------------------------------------------------------------------
        </member>
        <member name="P:StreamCoders.Adaptive.Common.AdaptiveSample.FragmentStart">
            -------------------------------------------------------------------------------------------------
            <summary>
                Gets or sets the fragment start time of the fragment (chunk) this sample belongs.
            </summary>
            <value>
                The fragment start time.
            </value>
            -------------------------------------------------------------------------------------------------
        </member>
        <member name="P:StreamCoders.Adaptive.Common.AdaptiveSample.FragmenEnd">
            -------------------------------------------------------------------------------------------------
            <summary>
                Gets or sets the fragment end time of the fragment (chunk) this sample belongs.
            </summary>
            <value>
                The fragment end time.
            </value>
            -------------------------------------------------------------------------------------------------
        </member>
        <member name="P:StreamCoders.Adaptive.Common.AdaptiveSample.Track">
            -------------------------------------------------------------------------------------------------
            <summary>
                Gets or sets the track this sample belongs to.
            </summary>
            <value>
                The track that this sample belongs to.
            </value>
            -------------------------------------------------------------------------------------------------
        </member>
        <member name="P:StreamCoders.Adaptive.Common.AdaptiveSample.Sample">
            -------------------------------------------------------------------------------------------------
            <summary>
                The sample.
            </summary>
            -------------------------------------------------------------------------------------------------
        </member>
        <member name="P:StreamCoders.Adaptive.Common.AdaptiveSample.ContainsNewBitrate">
            -------------------------------------------------------------------------------------------------
            <summary>
                Indicates whether this sample is the first after the bitrate of the stream was switched.
                This can be useful if a decoder needs discontinuity information.
            </summary>
            <value>
                true if contains new bitrate, false if not.
            </value>
            -------------------------------------------------------------------------------------------------
        </member>
        <member name="M:StreamCoders.Adaptive.Common.AdaptiveSample.Decode">
            -------------------------------------------------------------------------------------------------
            <summary>
                Decodes the sample using the decoder provided along with the Track object.
            </summary>
            <returns>
                Returns decoded sample, otherwise null.
            </returns>
            -------------------------------------------------------------------------------------------------
        </member>
        <member name="T:StreamCoders.Adaptive.Common.AdaptiveTrackInfo">
            -------------------------------------------------------------------------------------------------
            <summary>
                AdaptiveTrackInfo is an abstract class that extends TrackInfo to support multiple decoder
                configurations (adaptations). It also inherits from <c>IAdjustableBitrate</c> so that
                adaptations can be selected and activated. This class forms the basis for adaptive
                streaming technologies such as multi-bitrate webM/MKV or Microsoft Smooth Streaming.
            </summary>
            <seealso cref="T:StreamCoders.Adaptive.Common.ExtendedTrackInfo" />
            <seealso cref="T:StreamCoders.Adaptive.Common.IAdjustableBitrate" />
            -------------------------------------------------------------------------------------------------
        </member>
        <member name="F:StreamCoders.Adaptive.Common.AdaptiveTrackInfo.Adaptations">
            -------------------------------------------------------------------------------------------------
            <summary>
                A list of adaptations containing pertaining to a track.
            </summary>
            -------------------------------------------------------------------------------------------------
        </member>
        <member name="M:StreamCoders.Adaptive.Common.AdaptiveTrackInfo.GetBitrates">
            -------------------------------------------------------------------------------------------------
            <summary>
                Retrieves all supported bitrates.
            </summary>
            <returns>
                An enumerator of all bitrates.
            </returns>
            <seealso cref="M:StreamCoders.Adaptive.Common.IAdjustableBitrate.GetBitrates()" />
            -------------------------------------------------------------------------------------------------
        </member>
        <member name="M:StreamCoders.Adaptive.Common.AdaptiveTrackInfo.SelectBitrate(System.UInt32)">
            -------------------------------------------------------------------------------------------------
            <summary>
                Selects the next bitrate to be used.
            </summary>
            <param name="bitrate">
                A valid bitrate.
            </param>
            <seealso cref="M:StreamCoders.Adaptive.Common.IAdjustableBitrate.SelectBitrate(uint)" />
            -------------------------------------------------------------------------------------------------
        </member>
        <member name="P:StreamCoders.Adaptive.Common.AdaptiveTrackInfo.AverageBitrate">
            -------------------------------------------------------------------------------------------------
            <summary>
                Gets the average (measured) bitrate of the current stream.
            </summary>
            <value>
                The average bitrate.
            </value>
            <seealso cref="P:StreamCoders.Adaptive.Common.IAdjustableBitrate.AverageBitrate" />
            -------------------------------------------------------------------------------------------------
        </member>
        <member name="M:StreamCoders.Adaptive.Common.AdaptiveTrackInfo.GetNextSample">
            -------------------------------------------------------------------------------------------------
            <summary>
                Retrieves the next adaptive sample from this track.
            </summary>
            <returns>
                The next sample.
            </returns>
            -------------------------------------------------------------------------------------------------
        </member>
        <member name="M:StreamCoders.Adaptive.Common.AdaptiveTrackInfo.ClearSamples">
            -------------------------------------------------------------------------------------------------
            <summary>
                Clears all buffered samples.
            </summary>
            -------------------------------------------------------------------------------------------------
        </member>
        <member name="T:StreamCoders.Adaptive.Common.MeasuredHttpDownloader">
            -------------------------------------------------------------------------------------------------
            <summary>
                Measured HTTP downloader is the default downloader for adaptive streaming clients.
            </summary>
            <remarks>
                Calculates the average byterate using weighed 16th of each measured value after the initial value.
            </remarks>
            <seealso cref="T:StreamCoders.Adaptive.Common.IMeasuredDownloader" />
            -------------------------------------------------------------------------------------------------
        </member>
        <member name="M:StreamCoders.Adaptive.Common.MeasuredHttpDownloader.Download(System.String)">
            -------------------------------------------------------------------------------------------------
            <summary>
                Downloads HTTP resource and updates average byterate.
            </summary>
            <param name="url">
                URL of the document.
            </param>
            <returns>
                .
            </returns>
            <seealso cref="M:StreamCoders.Adaptive.Common.IMeasuredDownloader.Download(string)" />
            -------------------------------------------------------------------------------------------------
        </member>
        <member name="T:StreamCoders.Adaptive.Common.ExtendedTrackInfo">
            -------------------------------------------------------------------------------------------------
            <summary>
                ExtendedTrackInfo helps simplify access to Bitrate and DecoderSpecificData.
            </summary>
            <seealso cref="T:StreamCoders.TrackInfo" />
            -------------------------------------------------------------------------------------------------
        </member>
        <member name="P:StreamCoders.Adaptive.Common.ExtendedTrackInfo.Bitrate">
            -------------------------------------------------------------------------------------------------
            <summary>
                Get bitrate of track by pulling value out of Video or Audio class depending on TrackCategory.
            </summary>
            <value>
                The bitrate of this stream.
            </value>
            -------------------------------------------------------------------------------------------------
        </member>
        <member name="P:StreamCoders.Adaptive.Common.ExtendedTrackInfo.DecoderSpecificData">
            -------------------------------------------------------------------------------------------------
            <summary>
                Get decoder data of track by pulling value out of Video or Audio class depending on TrackCategory.
            </summary>
            <value>
                Information necessary to initialize decoders.
            </value>
            -------------------------------------------------------------------------------------------------
        </member>
        <member name="T:StreamCoders.Adaptive.Common.IAdjustableBitrate">
            -------------------------------------------------------------------------------------------------
            <summary>
                Interface for adjustable bitrate class.
            </summary>
            -------------------------------------------------------------------------------------------------
        </member>
        <member name="P:StreamCoders.Adaptive.Common.IAdjustableBitrate.AverageBitrate">
            -------------------------------------------------------------------------------------------------
            <summary>
                Gets the average (measured) bitrate of the current stream.
            </summary>
            <value>
                The average bitrate.
            </value>
            -------------------------------------------------------------------------------------------------
        </member>
        <member name="M:StreamCoders.Adaptive.Common.IAdjustableBitrate.GetBitrates">
            -------------------------------------------------------------------------------------------------
            <summary>
                Retrieves all supported bitrates.
            </summary>
            <returns>
                An enumerator of all bitrates.
            </returns>
            -------------------------------------------------------------------------------------------------
        </member>
        <member name="M:StreamCoders.Adaptive.Common.IAdjustableBitrate.SelectBitrate(System.UInt32)">
            -------------------------------------------------------------------------------------------------
            <summary>
                Selects the next bitrate to be used.
            </summary>
            <param name="bitrate">
                A valid bitrate.
            </param>
            -------------------------------------------------------------------------------------------------
        </member>
        <member name="T:StreamCoders.Adaptive.Common.WaveFormatExtensible">
            <summary>
                A managed representation of the multimedia WAVEFORMATEX structure
                declared in mmreg.h.
            </summary>
            <remarks>
                This was designed for usage in an environment where PInvokes are not
                allowed.
            </remarks>
        </member>
        <member name="P:StreamCoders.Adaptive.Common.WaveFormatExtensible.FormatTag">
            <summary>
                Gets or sets the audio format type. A complete list of format tags can be
                found in the Mmreg.h header file.
            </summary>
        </member>
        <member name="P:StreamCoders.Adaptive.Common.WaveFormatExtensible.Channels">
            <summary>
                Gets or sets the number of channels in the data.
                Mono            1
                Stereo          2
                Dual            2 (2 Mono channels)
            </summary>
        </member>
        <member name="P:StreamCoders.Adaptive.Common.WaveFormatExtensible.SamplesPerSec">
            <summary>
                Gets or sets the sampling rate in hertz (samples per second)
            </summary>
        </member>
        <member name="P:StreamCoders.Adaptive.Common.WaveFormatExtensible.AverageBytesPerSecond">
            <summary>
                Gets or sets the average data-transfer rate, in bytes per second, for the format.
            </summary>
        </member>
        <member name="P:StreamCoders.Adaptive.Common.WaveFormatExtensible.BlockAlign">
            <summary>
                Gets or sets the minimum size of a unit of data for the given format in Bytes.
            </summary>
        </member>
        <member name="P:StreamCoders.Adaptive.Common.WaveFormatExtensible.BitsPerSample">
            <summary>
                Gets or sets the number of bits in a single sample of the format's data.
            </summary>
        </member>
        <member name="P:StreamCoders.Adaptive.Common.WaveFormatExtensible.Size">
            <summary>
                Gets or sets the size in bytes of any extra format data added to the end of the
                WAVEFORMATEX structure.
            </summary>
        </member>
        <member name="P:StreamCoders.Adaptive.Common.WaveFormatExtensible.ExtraBytes">
            -------------------------------------------------------------------------------------------------
            <summary>
                Gets or sets the extra bytes.
            </summary>
            <value>
                The extra bytes.
            </value>
            -------------------------------------------------------------------------------------------------
        </member>
        <member name="M:StreamCoders.Adaptive.Common.WaveFormatExtensible.CreateFrom(StreamCoders.TrackInfo)">
            -------------------------------------------------------------------------------------------------
            <summary>
                Creates an instance of WaveFormatExtensible given a TrackInfo.
            </summary>
            <param name="info">
                An instance of TrackInfo. The codec must be set to PCM.
            </param>
            <returns>
                Returns a new instance of WaveFormatExtensible.
            </returns>
            -------------------------------------------------------------------------------------------------
        </member>
        <member name="M:StreamCoders.Adaptive.Common.WaveFormatExtensible.ToHexString">
            <summary>
                Returns a string representing the structure in little-endian
                hexadecimal format.
            </summary>
        </member>
        <member name="M:StreamCoders.Adaptive.Common.WaveFormatExtensible.ToString">
            <summary>
                Returns a string representing all of the fields in the object.
            </summary>
            <returns>
                A string representing all of the fields in the object.
            </returns>
        </member>
        <member name="T:StreamCoders.Adaptive.SmoothStreamingClient">
            -------------------------------------------------------------------------------------------------
            <summary>
                Smooth streaming client compatible reader. Compatible with Smooth Streaming 1.0, 2.0+.
            </summary>
            <remarks>
                SmoothStreamingClient can retrieve both Live and VOD content. The default downloader is
                <b>MeasuredHttpDownloader</b>, which can be overridden to support more advanced bitrate
                measurements and alternative transports or network interfaces.
            </remarks>
            <seealso cref="T:System.IDisposable" />
            -------------------------------------------------------------------------------------------------
        </member>
        <member name="M:StreamCoders.Adaptive.SmoothStreamingClient.#ctor(System.String,System.String,StreamCoders.Adaptive.Common.IMeasuredDownloader)">
            -------------------------------------------------------------------------------------------------
            <summary>
                Constructor.
            </summary>
            <param name="presentationUrl">
                URL of the presentation.
            </param>
            <param name="manifestUrl">
                URL of the manifest.
            </param>
            <param name="measuredDownloader">
                (optional) An instance of an alternative measured downloader. IMeasuredDownload.Spawn()
                is called on each SmoothStreamingAdaptiveTrackInfo object.
            </param>
            -------------------------------------------------------------------------------------------------
        </member>
        <member name="M:StreamCoders.Adaptive.SmoothStreamingClient.Dispose">
            -------------------------------------------------------------------------------------------------
            <summary>
                Dispose of this instance, cleaning up any resources it uses.
            </summary>
            -------------------------------------------------------------------------------------------------
        </member>
        <member name="M:StreamCoders.Adaptive.SmoothStreamingClient.Dispose(System.Boolean)">
            -------------------------------------------------------------------------------------------------
            <summary>
                Dispose of this instance, cleaning up any resources it uses.
            </summary>
            <param name="disposing">    true if resources should be disposed, false if not. </param>
            -------------------------------------------------------------------------------------------------
        </member>
        <member name="F:StreamCoders.Adaptive.SmoothStreaming.AdaptiveMp4FragmentAggregateConfiguration.ApproximateChunkDuration">
            -------------------------------------------------------------------------------------------------
            <summary>
                The approximate duration of each fragment that will be streamed.
            </summary>
            -------------------------------------------------------------------------------------------------
        </member>
        <member name="P:StreamCoders.Adaptive.SmoothStreaming.AdaptiveMp4FragmentAggregateConfiguration.RespectIFrameBoundary">
            -------------------------------------------------------------------------------------------------
            <summary>
                Gets or sets whether the approximate chunk duration will extended (as part of the
                condition) until the next chunk can start with an I-Frame.
            </summary>
            <value>
                true if respect i frame boundary, false if not.
            </value>
            -------------------------------------------------------------------------------------------------
        </member>
        <member name="P:StreamCoders.Adaptive.SmoothStreaming.AdaptiveMp4FragmentAggregateConfiguration.TimeScale">
            -------------------------------------------------------------------------------------------------
            <summary>
                The timescale used for timestamp calculation.
            </summary>
            <value>
                The timescale used for timestamp calculation.
            </value>
            -------------------------------------------------------------------------------------------------
        </member>
        <member name="P:StreamCoders.Adaptive.SmoothStreaming.AdaptiveMp4FragmentAggregateConfiguration.OutputDirectory">
            -------------------------------------------------------------------------------------------------
            <summary>
                Gets or sets the pathname of where manifest and fragments are written to.
            </summary>
            <value>
                The pathname of the output directory.
            </value>
            -------------------------------------------------------------------------------------------------
        </member>
        <member name="M:StreamCoders.Adaptive.SmoothStreaming.AdaptiveMp4FragmentAggregation.CommitAdaptiveSamples(System.TimeSpan,System.Collections.Generic.List{StreamCoders.Adaptive.Common.AdaptiveSample})">
            -------------------------------------------------------------------------------------------------
            <summary>
                Commit adaptive samples.
            </summary>
            <param name="originalDuration">
                Duration of the original sample.
            </param>
            <param name="inputSamples">
                The input samples.
            </param>
            <returns>
                Returns true if the sample was committed. If false, the fragments were full and the sample needs to be
                committed to the new aggregate.
            </returns>
            -------------------------------------------------------------------------------------------------
        </member>
        <member name="M:StreamCoders.Adaptive.SmoothStreaming.AdaptiveMp4FragmentAggregation.AddBoxToFragmentTraf(StreamCoders.Container.MP4.Box)">
            -------------------------------------------------------------------------------------------------
            <summary>
                Adds a look ahead entry for an aggregate that will follow after this one.
            </summary>
            <param name="aggr">
                The aggr.
            </param>
            -------------------------------------------------------------------------------------------------
        </member>
        <member name="M:StreamCoders.Adaptive.SmoothStreaming.AdaptiveMp4FragmentAggregation.CheckCongestion(System.Collections.Generic.List{StreamCoders.Adaptive.Common.AdaptiveSample})">
            <summary>
            </summary>
            <param name="inputSamples"></param>
            <returns></returns>
        </member>
        <member name="T:StreamCoders.Adaptive.SmoothStreaming.AdaptiveTrackFragment">
            -------------------------------------------------------------------------------------------------
            <summary>
                Contains MP4 fragment aggregation for adaptive streaming.
            </summary>
            -------------------------------------------------------------------------------------------------
        </member>
        <member name="T:StreamCoders.Adaptive.SmoothStreaming.Mp4FragmentReader">
            -------------------------------------------------------------------------------------------------
            <summary>
                Reads MOOF / MDAT pairs from MP4 fragments.
            </summary>
            -------------------------------------------------------------------------------------------------
        </member>
        <member name="M:StreamCoders.Adaptive.SmoothStreaming.Mp4FragmentReader.Parse(System.IO.Stream)">
            -------------------------------------------------------------------------------------------------
            <summary>
                Parses the given input stream. Must contain a single complete MOOF and MDAT
            </summary>
            <param name="inputStream">
                inputStream to read data from.
            </param>
            <returns>
                Returns parsed MOOF / MDAT pair.
            </returns>
            -------------------------------------------------------------------------------------------------
        </member>
        <member name="M:StreamCoders.Adaptive.SmoothStreaming.Mp4FragmentReader.GetFrames(StreamCoders.Container.MP4.FragmentPair,System.UInt64,System.TimeSpan)">
            -------------------------------------------------------------------------------------------------
            <summary>
                Produces media frames from parsed MOOF / MDAT pair.
            </summary>
            <param name="pair">
                The MOOF / MDAT pair.
            </param>
            <param name="timeScale">
                The time scale to use on samples.
            </param>
            <param name="baseTimeOffset">
                The base time offset for this fragment.
            </param>
            <returns>
                Returns media frames ready for decoding.
            </returns>
            -------------------------------------------------------------------------------------------------
        </member>
        <member name="T:StreamCoders.Adaptive.SmoothStreaming.QualityLevel">
            <summary>
                <para>Encapsulates metadata required to play a specific track in the stream.</para>
            </summary>
        </member>
        <member name="P:StreamCoders.Adaptive.SmoothStreaming.QualityLevel.Index">
            <summary>
                <para>
                    An ordinal that identifies the track and MUST be unique for each track in the stream. The Index SHOULD start at
                    0 and increment by 1 for each subsequent
                    track in the stream.
                </para>
            </summary>
        </member>
        <member name="P:StreamCoders.Adaptive.SmoothStreaming.QualityLevel.Bitrate">
            <summary>
                <para>
                    The average bandwidth consumed by the track, in bits per second (bps). The value 0 MAY be used for tracks whose
                    bit rate is negligible relative to other
                    tracks in the presentation.
                </para>
            </summary>
        </member>
        <member name="P:StreamCoders.Adaptive.SmoothStreaming.QualityLevel.MaxWidth">
            <summary>
                <para>The maximum width of a video sample, in pixels.</para>
            </summary>
        </member>
        <member name="P:StreamCoders.Adaptive.SmoothStreaming.QualityLevel.MaxHeight">
            <summary>
                <para>The maximum height of a video sample, in pixels.</para>
            </summary>
        </member>
        <member name="P:StreamCoders.Adaptive.SmoothStreaming.QualityLevel.CodecPrivateData">
            <summary>
                <para>
                    Data that specifies parameters specific to the media format and common to all samples in the track,
                    represented as a string of hex-coded bytes
                </para>
            </summary>
        </member>
        <member name="P:StreamCoders.Adaptive.SmoothStreaming.QualityLevel.SamplingRate">
            <summary>
                <para>The Sampling Rate of an audio track.</para>
            </summary>
        </member>
        <member name="P:StreamCoders.Adaptive.SmoothStreaming.QualityLevel.Channels">
            <summary>
                <para>The Channel Count of an audio track.</para>
            </summary>
        </member>
        <member name="P:StreamCoders.Adaptive.SmoothStreaming.QualityLevel.BitsPerSample">
            <summary>
                <para>The sample SizeIncludingHeader of an audio track.</para>
            </summary>
        </member>
        <member name="P:StreamCoders.Adaptive.SmoothStreaming.QualityLevel.PacketSize">
            <summary>
                <para>The size of each audio packet in bytes (WAVEFORMATEX.BLOCKALIGN).</para>
            </summary>
        </member>
        <member name="P:StreamCoders.Adaptive.SmoothStreaming.QualityLevel.AudioTag">
            <summary>
                <para>
                    A numeric code that identifies which media format and variant of the media format is used for each sample in
                    an audio track.
                </para>
            </summary>
            <remarks>
                <para> "1": The sample media format is Linear 8 or 16-bit Pulse Code Modulation</para>
                <para> "353": Microsoft Windows Media Audio v7, v8 and v9. x Standard (WMA Standard)</para>
                <para> "353": Microsoft Windows Media Audio v9. x and v10 Professional (WMA Professional)</para>
                <para> "85": ISO MPEG-1 Layer III (MP3)</para>
                <para> "255": ISO Advanced Audio Coding (AAC)</para>
                <para>
                     "65534": Vendor-extensible format. If specified, the CodecPrivateData field SHOULD contain a hex-encoded
                    version of the WAVE_FORMAT_EXTENSIBLE
                    structure
                </para>
            </remarks>
            <value>
                The audio tag.
            </value>
        </member>
        <member name="P:StreamCoders.Adaptive.SmoothStreaming.QualityLevel.NalUnitLengthField">
            <summary>
                <para>The number of bytes that specify the length of each Network Abstraction Layer (NAL) unit.</para>
            </summary>
        </member>
        <member name="P:StreamCoders.Adaptive.SmoothStreaming.QualityLevel.FourCc">
            <summary>
                <para>The FourCC is a vendor extension.</para>
            </summary>
        </member>
        <member name="P:StreamCoders.Adaptive.SmoothStreaming.StreamFragment.Number">
            <summary>
                <para>
                    The ordinal of the StreamFragment in the stream. If Number is specified, its value MUST monotonically
                    increase with the value of the Time field.
                </para>
            </summary>
        </member>
        <member name="P:StreamCoders.Adaptive.SmoothStreaming.StreamFragment.Duration">
            <summary>
                <para>
                    The duration of the fragment, specified as a number of increments defined by the implicit or explicit value of
                    the containing StreamElement's TimeScale
                    field. If the Duration field is omitted, its implicit value MUST be computed by the client by subtracting the
                    value of the preceding StreamFragment Time field
                    from the value of this StreamFragment Time field. If no subsequent StreamFragment exists, the implicit value of
                    the FragmentTime field is 0.
                </para>
            </summary>
        </member>
        <member name="P:StreamCoders.Adaptive.SmoothStreaming.StreamFragment.Time">
            <summary>
                <para>
                    The time of the fragment, specified as a number of increments defined by the implicit or explicit value of the
                    containing TimeScale field. If the Duration
                    field is omitted, its implicit value MUST be computed by the client by adding the value of the preceding
                    StreamFragment Time field to the value of this
                    StreamFragment Duration field. If no preceding StreamFragment exists, the implicit value of the Time field is
                    0.
                </para>
            </summary>
        </member>
        <member name="P:StreamCoders.Adaptive.SmoothStreaming.StreamFragment.Index">
            <summary>The index of the current fragment.</summary>
        </member>
        <member name="P:StreamCoders.Adaptive.SmoothStreaming.StreamFragment.Hash">
            <summary>A hash value uniquely identifying this StreamFragment.</summary>
        </member>
        <member name="T:StreamCoders.Adaptive.SmoothStreaming.StreamIndex">
            <summary>
                <para>
                    The StreamIndex and related fields encapsulate metadata required to play a specific stream in the
                    presentation.
                </para>
            </summary>
        </member>
        <member name="P:StreamCoders.Adaptive.SmoothStreaming.StreamIndex.Type">
            <summary>
                <para>The type of the stream: video, audio, or text.</para>
            </summary>
        </member>
        <member name="P:StreamCoders.Adaptive.SmoothStreaming.StreamIndex.SubType">
            <summary>
                <para>A four-character code that identifies the intended use category for each sample in a text track.</para>
            </summary>
        </member>
        <member name="P:StreamCoders.Adaptive.SmoothStreaming.StreamIndex.TimeScale">
            <summary>
                <para>
                    The time scale for duration and time values in this stream, specified as the number of increments in one
                    second.
                </para>
            </summary>
        </member>
        <member name="P:StreamCoders.Adaptive.SmoothStreaming.StreamIndex.Name">
            <summary>
                <para>The name of the stream.</para>
            </summary>
        </member>
        <member name="P:StreamCoders.Adaptive.SmoothStreaming.StreamIndex.Chunks">
            <summary>
                <para>The number of fragments available for this stream.</para>
            </summary>
        </member>
        <member name="P:StreamCoders.Adaptive.SmoothStreaming.StreamIndex.Url">
            <summary>A pattern used as query to retrieve chunks from the current StreamIndex.</summary>
        </member>
        <member name="P:StreamCoders.Adaptive.SmoothStreaming.StreamIndex.MaxWidth">
            <summary>
                <para>The maximum width of a video sample, in pixels.</para>
            </summary>
        </member>
        <member name="P:StreamCoders.Adaptive.SmoothStreaming.StreamIndex.MaxHeight">
            <summary>
                <para>The maximum height of a video sample, in pixels.</para>
            </summary>
        </member>
        <member name="P:StreamCoders.Adaptive.SmoothStreaming.StreamIndex.DisplayWidth">
            <summary>
                <para>The suggested display width of a video sample, in pixels.</para>
            </summary>
        </member>
        <member name="P:StreamCoders.Adaptive.SmoothStreaming.StreamIndex.DisplayHeight">
            <summary>
                <para>The suggested display height of a video sample, in pixels.</para>
            </summary>
        </member>
        <member name="P:StreamCoders.Adaptive.SmoothStreaming.StreamIndex.Language">
            <summary>
                <para>The language of the track if the track is text or audio</para>
            </summary>
        </member>
        <member name="P:StreamCoders.Adaptive.SmoothStreaming.StreamIndex.ManifestOutput">
            <summary>
                <para>
                    Specifies whether sample data for this stream appears directly in the manifest as part of the
                    ManifestOutputSample field.
                </para>
            </summary>
        </member>
        <member name="P:StreamCoders.Adaptive.SmoothStreaming.StreamIndex.QualityLevels">
            <summary>A list of tracks.</summary>
        </member>
        <member name="T:StreamCoders.Adaptive.SmoothStreamingAdaptiveTrackInfo">
            -------------------------------------------------------------------------------------------------
            <summary>
                Defines a track that can have multiple adaptations (in terms of bitrate) of the same
                original stream.
            </summary>
            <remarks>
                <para>
                    Each SmoothStreamingAdaptiveTrackInfo has a Category, e.g. Audio, Video and a list of adaptations
                    (a classic TrackInfo) that define codec specific information.
                </para>
                <para>
                    Adaptations can be selected into the current profile by selecting a bitrate, making
                    it the current TrackInfo.Video or TrackInfo.Audio configuration.
                </para>
                <para>
                    The associated reader will then retrieve "chunks" of that profile and return
                    AdaptiveSample instances.
                </para>
            </remarks>
            -------------------------------------------------------------------------------------------------
        </member>
        <member name="T:StreamCoders.Protocols.Adaptive.Dash.MPD">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Protocols.Adaptive.Dash.MPD.ProgramInformation">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Protocols.Adaptive.Dash.MPD.BaseURL">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Protocols.Adaptive.Dash.MPD.Location">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Protocols.Adaptive.Dash.MPD.Period">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Protocols.Adaptive.Dash.MPD.Metrics">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Protocols.Adaptive.Dash.MPD.Any">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Protocols.Adaptive.Dash.MPD.id">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Protocols.Adaptive.Dash.MPD.profiles">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Protocols.Adaptive.Dash.MPD.type">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Protocols.Adaptive.Dash.MPD.availabilityStartTime">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Protocols.Adaptive.Dash.MPD.availabilityStartTimeSpecified">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Protocols.Adaptive.Dash.MPD.availabilityEndTime">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Protocols.Adaptive.Dash.MPD.availabilityEndTimeSpecified">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Protocols.Adaptive.Dash.MPD.mediaPresentationDuration">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Protocols.Adaptive.Dash.MPD.minimumUpdatePeriod">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Protocols.Adaptive.Dash.MPD.minBufferTime">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Protocols.Adaptive.Dash.MPD.timeShiftBufferDepth">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Protocols.Adaptive.Dash.MPD.suggestedPresentationDelay">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Protocols.Adaptive.Dash.MPD.maxSegmentDuration">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Protocols.Adaptive.Dash.MPD.maxSubsegmentDuration">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Protocols.Adaptive.Dash.MPD.AnyAttr">
            <remarks/>
        </member>
        <member name="T:StreamCoders.Protocols.Adaptive.Dash.ProgramInformationType">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Protocols.Adaptive.Dash.ProgramInformationType.Title">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Protocols.Adaptive.Dash.ProgramInformationType.Source">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Protocols.Adaptive.Dash.ProgramInformationType.Copyright">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Protocols.Adaptive.Dash.ProgramInformationType.Any">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Protocols.Adaptive.Dash.ProgramInformationType.lang">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Protocols.Adaptive.Dash.ProgramInformationType.moreInformationURL">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Protocols.Adaptive.Dash.ProgramInformationType.AnyAttr">
            <remarks/>
        </member>
        <member name="T:StreamCoders.Protocols.Adaptive.Dash.RangeType">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Protocols.Adaptive.Dash.RangeType.starttime">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Protocols.Adaptive.Dash.RangeType.duration">
            <remarks/>
        </member>
        <member name="T:StreamCoders.Protocols.Adaptive.Dash.MetricsType">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Protocols.Adaptive.Dash.MetricsType.Reporting">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Protocols.Adaptive.Dash.MetricsType.Range">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Protocols.Adaptive.Dash.MetricsType.Any">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Protocols.Adaptive.Dash.MetricsType.metrics">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Protocols.Adaptive.Dash.MetricsType.AnyAttr">
            <remarks/>
        </member>
        <member name="T:StreamCoders.Protocols.Adaptive.Dash.DescriptorType">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Protocols.Adaptive.Dash.DescriptorType.Any">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Protocols.Adaptive.Dash.DescriptorType.schemeIdUri">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Protocols.Adaptive.Dash.DescriptorType.value">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Protocols.Adaptive.Dash.DescriptorType.AnyAttr">
            <remarks/>
        </member>
        <member name="T:StreamCoders.Protocols.Adaptive.Dash.SubsetType">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Protocols.Adaptive.Dash.SubsetType.contains">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Protocols.Adaptive.Dash.SubsetType.AnyAttr">
            <remarks/>
        </member>
        <member name="T:StreamCoders.Protocols.Adaptive.Dash.ContentComponentType">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Protocols.Adaptive.Dash.ContentComponentType.Accessibility">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Protocols.Adaptive.Dash.ContentComponentType.Role">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Protocols.Adaptive.Dash.ContentComponentType.Rating">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Protocols.Adaptive.Dash.ContentComponentType.Viewpoint">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Protocols.Adaptive.Dash.ContentComponentType.Any">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Protocols.Adaptive.Dash.ContentComponentType.id">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Protocols.Adaptive.Dash.ContentComponentType.idSpecified">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Protocols.Adaptive.Dash.ContentComponentType.lang">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Protocols.Adaptive.Dash.ContentComponentType.contentType">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Protocols.Adaptive.Dash.ContentComponentType.par">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Protocols.Adaptive.Dash.ContentComponentType.AnyAttr">
            <remarks/>
        </member>
        <member name="T:StreamCoders.Protocols.Adaptive.Dash.RepresentationBaseType">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Protocols.Adaptive.Dash.RepresentationBaseType.FramePacking">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Protocols.Adaptive.Dash.RepresentationBaseType.AudioChannelConfiguration">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Protocols.Adaptive.Dash.RepresentationBaseType.ContentProtection">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Protocols.Adaptive.Dash.RepresentationBaseType.Any">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Protocols.Adaptive.Dash.RepresentationBaseType.profiles">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Protocols.Adaptive.Dash.RepresentationBaseType.width">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Protocols.Adaptive.Dash.RepresentationBaseType.widthSpecified">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Protocols.Adaptive.Dash.RepresentationBaseType.height">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Protocols.Adaptive.Dash.RepresentationBaseType.heightSpecified">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Protocols.Adaptive.Dash.RepresentationBaseType.sar">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Protocols.Adaptive.Dash.RepresentationBaseType.frameRate">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Protocols.Adaptive.Dash.RepresentationBaseType.audioSamplingRate">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Protocols.Adaptive.Dash.RepresentationBaseType.mimeType">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Protocols.Adaptive.Dash.RepresentationBaseType.segmentProfiles">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Protocols.Adaptive.Dash.RepresentationBaseType.codecs">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Protocols.Adaptive.Dash.RepresentationBaseType.maximumSAPPeriod">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Protocols.Adaptive.Dash.RepresentationBaseType.maximumSAPPeriodSpecified">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Protocols.Adaptive.Dash.RepresentationBaseType.startWithSAP">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Protocols.Adaptive.Dash.RepresentationBaseType.startWithSAPSpecified">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Protocols.Adaptive.Dash.RepresentationBaseType.maxPlayoutRate">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Protocols.Adaptive.Dash.RepresentationBaseType.maxPlayoutRateSpecified">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Protocols.Adaptive.Dash.RepresentationBaseType.codingDependency">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Protocols.Adaptive.Dash.RepresentationBaseType.codingDependencySpecified">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Protocols.Adaptive.Dash.RepresentationBaseType.scanType">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Protocols.Adaptive.Dash.RepresentationBaseType.scanTypeSpecified">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Protocols.Adaptive.Dash.RepresentationBaseType.AnyAttr">
            <remarks/>
        </member>
        <member name="T:StreamCoders.Protocols.Adaptive.Dash.VideoScanType">
            <remarks/>
        </member>
        <member name="F:StreamCoders.Protocols.Adaptive.Dash.VideoScanType.progressive">
            <remarks/>
        </member>
        <member name="F:StreamCoders.Protocols.Adaptive.Dash.VideoScanType.interlaced">
            <remarks/>
        </member>
        <member name="F:StreamCoders.Protocols.Adaptive.Dash.VideoScanType.unknown">
            <remarks/>
        </member>
        <member name="T:StreamCoders.Protocols.Adaptive.Dash.SubRepresentationType">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Protocols.Adaptive.Dash.SubRepresentationType.level">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Protocols.Adaptive.Dash.SubRepresentationType.levelSpecified">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Protocols.Adaptive.Dash.SubRepresentationType.dependencyLevel">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Protocols.Adaptive.Dash.SubRepresentationType.bandwidth">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Protocols.Adaptive.Dash.SubRepresentationType.bandwidthSpecified">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Protocols.Adaptive.Dash.SubRepresentationType.contentComponent">
            <remarks/>
        </member>
        <member name="T:StreamCoders.Protocols.Adaptive.Dash.RepresentationType">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Protocols.Adaptive.Dash.RepresentationType.BaseURL">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Protocols.Adaptive.Dash.RepresentationType.SubRepresentation">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Protocols.Adaptive.Dash.RepresentationType.SegmentBase">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Protocols.Adaptive.Dash.RepresentationType.SegmentList">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Protocols.Adaptive.Dash.RepresentationType.SegmentTemplate">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Protocols.Adaptive.Dash.RepresentationType.id">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Protocols.Adaptive.Dash.RepresentationType.bandwidth">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Protocols.Adaptive.Dash.RepresentationType.qualityRanking">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Protocols.Adaptive.Dash.RepresentationType.qualityRankingSpecified">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Protocols.Adaptive.Dash.RepresentationType.dependencyId">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Protocols.Adaptive.Dash.RepresentationType.mediaStreamStructureId">
            <remarks/>
        </member>
        <member name="T:StreamCoders.Protocols.Adaptive.Dash.BaseURLType">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Protocols.Adaptive.Dash.BaseURLType.serviceLocation">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Protocols.Adaptive.Dash.BaseURLType.byteRange">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Protocols.Adaptive.Dash.BaseURLType.AnyAttr">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Protocols.Adaptive.Dash.BaseURLType.Value">
            <remarks/>
        </member>
        <member name="T:StreamCoders.Protocols.Adaptive.Dash.SegmentBaseType">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Protocols.Adaptive.Dash.SegmentBaseType.Initialization">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Protocols.Adaptive.Dash.SegmentBaseType.RepresentationIndex">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Protocols.Adaptive.Dash.SegmentBaseType.Any">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Protocols.Adaptive.Dash.SegmentBaseType.timescale">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Protocols.Adaptive.Dash.SegmentBaseType.timescaleSpecified">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Protocols.Adaptive.Dash.SegmentBaseType.presentationTimeOffset">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Protocols.Adaptive.Dash.SegmentBaseType.presentationTimeOffsetSpecified">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Protocols.Adaptive.Dash.SegmentBaseType.indexRange">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Protocols.Adaptive.Dash.SegmentBaseType.indexRangeExact">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Protocols.Adaptive.Dash.SegmentBaseType.AnyAttr">
            <remarks/>
        </member>
        <member name="T:StreamCoders.Protocols.Adaptive.Dash.URLType">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Protocols.Adaptive.Dash.URLType.Any">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Protocols.Adaptive.Dash.URLType.sourceURL">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Protocols.Adaptive.Dash.URLType.range">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Protocols.Adaptive.Dash.URLType.AnyAttr">
            <remarks/>
        </member>
        <member name="T:StreamCoders.Protocols.Adaptive.Dash.MultipleSegmentBaseType">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Protocols.Adaptive.Dash.MultipleSegmentBaseType.SegmentTimeline">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Protocols.Adaptive.Dash.MultipleSegmentBaseType.BitstreamSwitching">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Protocols.Adaptive.Dash.MultipleSegmentBaseType.duration">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Protocols.Adaptive.Dash.MultipleSegmentBaseType.durationSpecified">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Protocols.Adaptive.Dash.MultipleSegmentBaseType.startNumber">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Protocols.Adaptive.Dash.MultipleSegmentBaseType.startNumberSpecified">
            <remarks/>
        </member>
        <member name="T:StreamCoders.Protocols.Adaptive.Dash.SegmentTimelineType">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Protocols.Adaptive.Dash.SegmentTimelineType.S">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Protocols.Adaptive.Dash.SegmentTimelineType.Any">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Protocols.Adaptive.Dash.SegmentTimelineType.AnyAttr">
            <remarks/>
        </member>
        <member name="T:StreamCoders.Protocols.Adaptive.Dash.SegmentTimelineTypeS">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Protocols.Adaptive.Dash.SegmentTimelineTypeS.t">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Protocols.Adaptive.Dash.SegmentTimelineTypeS.tSpecified">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Protocols.Adaptive.Dash.SegmentTimelineTypeS.d">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Protocols.Adaptive.Dash.SegmentTimelineTypeS.r">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Protocols.Adaptive.Dash.SegmentTimelineTypeS.AnyAttr">
            <remarks/>
        </member>
        <member name="T:StreamCoders.Protocols.Adaptive.Dash.SegmentTemplateType">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Protocols.Adaptive.Dash.SegmentTemplateType.media">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Protocols.Adaptive.Dash.SegmentTemplateType.index">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Protocols.Adaptive.Dash.SegmentTemplateType.initialization">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Protocols.Adaptive.Dash.SegmentTemplateType.bitstreamSwitching">
            <remarks/>
        </member>
        <member name="T:StreamCoders.Protocols.Adaptive.Dash.SegmentListType">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Protocols.Adaptive.Dash.SegmentListType.SegmentURL">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Protocols.Adaptive.Dash.SegmentListType.href">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Protocols.Adaptive.Dash.SegmentListType.actuate">
            <remarks/>
        </member>
        <member name="T:StreamCoders.Protocols.Adaptive.Dash.SegmentURLType">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Protocols.Adaptive.Dash.SegmentURLType.Any">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Protocols.Adaptive.Dash.SegmentURLType.media">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Protocols.Adaptive.Dash.SegmentURLType.mediaRange">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Protocols.Adaptive.Dash.SegmentURLType.index">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Protocols.Adaptive.Dash.SegmentURLType.indexRange">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Protocols.Adaptive.Dash.SegmentURLType.AnyAttr">
            <remarks/>
        </member>
        <member name="T:StreamCoders.Protocols.Adaptive.Dash.actuateType">
            <remarks/>
        </member>
        <member name="F:StreamCoders.Protocols.Adaptive.Dash.actuateType.onLoad">
            <remarks/>
        </member>
        <member name="F:StreamCoders.Protocols.Adaptive.Dash.actuateType.onRequest">
            <remarks/>
        </member>
        <member name="T:StreamCoders.Protocols.Adaptive.Dash.AdaptationSetType">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Protocols.Adaptive.Dash.AdaptationSetType.Accessibility">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Protocols.Adaptive.Dash.AdaptationSetType.Role">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Protocols.Adaptive.Dash.AdaptationSetType.Rating">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Protocols.Adaptive.Dash.AdaptationSetType.Viewpoint">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Protocols.Adaptive.Dash.AdaptationSetType.ContentComponent">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Protocols.Adaptive.Dash.AdaptationSetType.BaseURL">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Protocols.Adaptive.Dash.AdaptationSetType.SegmentBase">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Protocols.Adaptive.Dash.AdaptationSetType.SegmentList">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Protocols.Adaptive.Dash.AdaptationSetType.SegmentTemplate">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Protocols.Adaptive.Dash.AdaptationSetType.Representation">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Protocols.Adaptive.Dash.AdaptationSetType.href">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Protocols.Adaptive.Dash.AdaptationSetType.actuate">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Protocols.Adaptive.Dash.AdaptationSetType.id">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Protocols.Adaptive.Dash.AdaptationSetType.idSpecified">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Protocols.Adaptive.Dash.AdaptationSetType.group">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Protocols.Adaptive.Dash.AdaptationSetType.groupSpecified">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Protocols.Adaptive.Dash.AdaptationSetType.lang">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Protocols.Adaptive.Dash.AdaptationSetType.contentType">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Protocols.Adaptive.Dash.AdaptationSetType.par">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Protocols.Adaptive.Dash.AdaptationSetType.minBandwidth">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Protocols.Adaptive.Dash.AdaptationSetType.minBandwidthSpecified">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Protocols.Adaptive.Dash.AdaptationSetType.maxBandwidth">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Protocols.Adaptive.Dash.AdaptationSetType.maxBandwidthSpecified">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Protocols.Adaptive.Dash.AdaptationSetType.minWidth">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Protocols.Adaptive.Dash.AdaptationSetType.minWidthSpecified">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Protocols.Adaptive.Dash.AdaptationSetType.maxWidth">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Protocols.Adaptive.Dash.AdaptationSetType.maxWidthSpecified">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Protocols.Adaptive.Dash.AdaptationSetType.minHeight">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Protocols.Adaptive.Dash.AdaptationSetType.minHeightSpecified">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Protocols.Adaptive.Dash.AdaptationSetType.maxHeight">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Protocols.Adaptive.Dash.AdaptationSetType.maxHeightSpecified">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Protocols.Adaptive.Dash.AdaptationSetType.minFrameRate">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Protocols.Adaptive.Dash.AdaptationSetType.maxFrameRate">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Protocols.Adaptive.Dash.AdaptationSetType.segmentAlignment">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Protocols.Adaptive.Dash.AdaptationSetType.subsegmentAlignment">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Protocols.Adaptive.Dash.AdaptationSetType.subsegmentStartsWithSAP">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Protocols.Adaptive.Dash.AdaptationSetType.bitstreamSwitching">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Protocols.Adaptive.Dash.AdaptationSetType.bitstreamSwitchingSpecified">
            <remarks/>
        </member>
        <member name="T:StreamCoders.Protocols.Adaptive.Dash.PeriodType">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Protocols.Adaptive.Dash.PeriodType.BaseURL">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Protocols.Adaptive.Dash.PeriodType.SegmentBase">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Protocols.Adaptive.Dash.PeriodType.SegmentList">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Protocols.Adaptive.Dash.PeriodType.SegmentTemplate">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Protocols.Adaptive.Dash.PeriodType.AdaptationSet">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Protocols.Adaptive.Dash.PeriodType.Subset">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Protocols.Adaptive.Dash.PeriodType.Any">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Protocols.Adaptive.Dash.PeriodType.href">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Protocols.Adaptive.Dash.PeriodType.actuate">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Protocols.Adaptive.Dash.PeriodType.id">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Protocols.Adaptive.Dash.PeriodType.start">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Protocols.Adaptive.Dash.PeriodType.duration">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Protocols.Adaptive.Dash.PeriodType.bitstreamSwitching">
            <remarks/>
        </member>
        <member name="P:StreamCoders.Protocols.Adaptive.Dash.PeriodType.AnyAttr">
            <remarks/>
        </member>
        <member name="T:StreamCoders.Protocols.Adaptive.Dash.PresentationType">
            <remarks/>
        </member>
        <member name="F:StreamCoders.Protocols.Adaptive.Dash.PresentationType.static">
            <remarks/>
        </member>
        <member name="F:StreamCoders.Protocols.Adaptive.Dash.PresentationType.dynamic">
            <remarks/>
        </member>
        <member name="T:StreamCoders.Protocols.Adaptive.Dash.DashAdaptiveTrackInfo">
            -------------------------------------------------------------------------------------------------
            <summary>
                Defines a track that can have multiple adaptations (in terms of bitrate) of the same
                original stream.
            </summary>
            <remarks>
                <para>
                    Each DashAdaptiveTrackInfo has a Category, e.g. Audio, Video and a list of adaptations
                    (a classic TrackInfo) that define codec specific information.
                </para>
                <para>
                    Adaptations can be selected into the current profile by selecting a bitrate, making
                    it the current TrackInfo.Video or TrackInfo.Audio configuration.
                </para>
                <para>
                    The associated reader will then retrieve "chunks" of that profile and return
                    AdaptiveSample instances.
                </para>
            </remarks>
            <seealso cref="T:ManifestParser.ExtendedTrackInfo" />
            <seealso cref="T:ManifestParser.IAdjustableBitrate" />
            -------------------------------------------------------------------------------------------------
        </member>
        <member name="T:StreamCoders.Protocols.Adaptive.Dash.DashDynamicEdgeType">
            <summary>
                Defines the ways a playback can be started when dynamic profile is used.
            </summary>
        </member>
        <member name="F:StreamCoders.Protocols.Adaptive.Dash.DashDynamicEdgeType.LiveEdge">
            <summary>
                The client will start playback on the edge of the live stream.
            </summary>
        </member>
        <member name="F:StreamCoders.Protocols.Adaptive.Dash.DashDynamicEdgeType.Specific">
            <summary>
                The client will start playback at a specific segment number.
            </summary>
        </member>
        <member name="F:StreamCoders.Protocols.Adaptive.Dash.DashDynamicEdgeType.Beginning">
            <summary>
                The client will start playback at the beginning of the stream.
            </summary>
        </member>
        <member name="T:StreamCoders.Protocols.Adaptive.Dash.DashDynamicWriterConfiguration">
            <summary>
                DASH configuration for the dynamic profile
            </summary>
            <seealso cref="T:StreamCoders.Protocols.Adaptive.Dash.DashIsoWriterConfigurationBase" />
        </member>
        <member name="M:StreamCoders.Protocols.Adaptive.Dash.DashDynamicWriterConfiguration.#ctor(System.String)">
            <summary>
                Initializes a new instance of the <see cref="T:StreamCoders.Protocols.Adaptive.Dash.DashDynamicWriterConfiguration" /> class.
            </summary>
            <param name="basePath">The base path to where segments and manifest are written to.</param>
        </member>
        <member name="P:StreamCoders.Protocols.Adaptive.Dash.DashDynamicWriterConfiguration.EdgeType">
            <summary>
                Gets or sets the edge type for a client to start playback at.
            </summary>
        </member>
        <member name="P:StreamCoders.Protocols.Adaptive.Dash.DashDynamicWriterConfiguration.SpecificEdgeTime">
            <summary>
                Gets or sets the specific edge time to start streaming at. This parameter is only relevant when <c>EdgeType</c> is
                set to <c>Specific</c>
            </summary>
        </member>
        <member name="P:StreamCoders.Protocols.Adaptive.Dash.DashDynamicWriterConfiguration.MinimumUpdatePeriod">
            <summary>
                Gets or sets the minimum amount of time to pass before the client should expect an update to the manifest. Initial
                value is the same as the default <c>SegmentDuration</c>
            </summary>
            <value>The minimum update period.</value>
        </member>
        <member name="P:StreamCoders.Protocols.Adaptive.Dash.DashDynamicWriterConfiguration.TimeShiftBufferDepth">
            <summary>
                Gets or sets  the duration of the smallest time shifting buffer for any Representation. Default value is 0.
            </summary>
        </member>
        <member name="T:StreamCoders.Protocols.Adaptive.Dash.DashIsoWriter">
            <summary>
                A DASH ISO 23009-1 compliant writer. This writer generates both manifest (MPD) and M4S fragments.
            </summary>
            <remarks>
                <para>
                    The writer supports both dynamic and static profiles.
                </para>
                <para>
                    The dynamic profile is used when the manifest needs to be updated regularly, like in live streams.
                </para>
                <para>
                    The static profile is used in Video-On-Demand where the duration is known ahead of time.
                </para>
            </remarks>
        </member>
        <member name="M:StreamCoders.Protocols.Adaptive.Dash.DashIsoWriter.#ctor(StreamCoders.Protocols.Adaptive.Dash.DashStaticWriterConfiguration)">
            <summary>
                Initializes a new instance of the <see cref="T:StreamCoders.Protocols.Adaptive.Dash.DashIsoWriter" /> class for static profiles.
            </summary>
            <param name="configuration">The configuration.</param>
        </member>
        <member name="M:StreamCoders.Protocols.Adaptive.Dash.DashIsoWriter.#ctor(StreamCoders.Protocols.Adaptive.Dash.DashDynamicWriterConfiguration)">
            <summary>
                Initializes a new instance of the <see cref="T:StreamCoders.Protocols.Adaptive.Dash.DashIsoWriter" /> class for dynamic profiles.
            </summary>
            <param name="configuration">The configuration.</param>
        </member>
        <member name="M:StreamCoders.Protocols.Adaptive.Dash.DashIsoWriter.AddTrack(StreamCoders.TrackInfo)">
            <summary>
                Adds a track to the writer. The track has to be either AdaptiveTrackInfo or TrackInfo.
            </summary>
            <param name="track">The track to add.</param>
            <returns>Returns the newly created track.</returns>
        </member>
        <member name="M:StreamCoders.Protocols.Adaptive.Dash.DashIsoWriter.Init(System.String)">
            <summary>
                Initializes the DASH iso writer.
            </summary>
            <param name="filename"></param>
            <returns></returns>
        </member>
        <member name="E:StreamCoders.Protocols.Adaptive.Dash.DashIsoWriter.BeforeSegmentFlush">
            <summary>
                Optional event called before a segment is written to disk. The event can be used to cancel or alter the proposed
                segment number.
            </summary>
        </member>
        <member name="E:StreamCoders.Protocols.Adaptive.Dash.DashIsoWriter.AfterSegmentFlush">
            <summary>
                Optional event called after a segment is written to disk
            </summary>
        </member>
        <member name="M:StreamCoders.Protocols.Adaptive.Dash.DashIsoWriter.Flush">
            <summary>
                Flushes all track segments and creates new empty segment instances.
            </summary>
            <remarks>
                When discontinuities appear in the source stream (e.g. seeking), <c>Flush</c> should be used to create new segments
                inside each track.
            </remarks>
        </member>
        <member name="T:StreamCoders.Protocols.Adaptive.Dash.DashIsoWriterAdaptiveTrackHandler">
            <summary>
                This encapsulates the basic components needed for each track (init segment, trackinfo and running fragements)
            </summary>
        </member>
        <member name="M:StreamCoders.Protocols.Adaptive.Dash.DashIsoWriterAdaptiveTrackHandler.AssignNewSegmentInternal">
            <summary>
                Flushes the segment by creating a new empty segment. No data is written to storage.
            </summary>
        </member>
        <member name="P:StreamCoders.Protocols.Adaptive.Dash.SegmentInformation.SegmentToBeWritten">
            <summary>
                Gets or sets the segment number to be written.
            </summary>
            <value>The segment to be written.</value>
        </member>
        <member name="P:StreamCoders.Protocols.Adaptive.Dash.SegmentInformation.TrackInfo">
            <summary>
                Gets the track information.
            </summary>
            <value>The track information.</value>
        </member>
        <member name="T:StreamCoders.Protocols.Adaptive.Dash.DashSegmentBeforeFlushEventArgs">
            <summary>
                Event arguments used by <c>BeforeFlush</c> before a segment is flushed to disk.
            </summary>
        </member>
        <member name="P:StreamCoders.Protocols.Adaptive.Dash.DashSegmentBeforeFlushEventArgs.CancelOperation">
            <summary>
                Gets or sets a value indicating whether the operation should be cancelled.
            </summary>
            <value><c>true</c> if [cancel operation]; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:StreamCoders.Protocols.Adaptive.Dash.DashSegmentBeforeFlushEventArgs.AlternativeStream">
            <summary>
            An alternative stream the segment will be flushed to. By default this is null and disabled.
            </summary>
            <remarks>
            Note that the writer will automatically call <c>Close()</c> in the Stream instance after flush.
            </remarks>
        </member>
        <member name="M:StreamCoders.Protocols.Adaptive.Dash.DashIsoWriterConfigurationBase.#ctor(System.String)">
            <summary>
                Initializes a new instance of the <see cref="T:StreamCoders.Protocols.Adaptive.Dash.DashStaticWriterConfiguration" /> class.
            </summary>
            <param name="basePath">The base path to where segments and manifest are written to.</param>
            <param name="segmentDuration">Segment duration</param>
        </member>
        <member name="P:StreamCoders.Protocols.Adaptive.Dash.DashIsoWriterConfigurationBase.ProfileUrn">
            <summary>
                Gets or sets the profile URN for the presentation.
            </summary>
            <value>The profile urn.</value>
        </member>
        <member name="P:StreamCoders.Protocols.Adaptive.Dash.DashIsoWriterConfigurationBase.CustomAppendix">
            <summary>
                Gets or sets the custom appendix added to all media files.
            </summary>
        </member>
        <member name="P:StreamCoders.Protocols.Adaptive.Dash.DashIsoWriterConfigurationBase.SegmentDuration">
            <summary>
                Gets the duration each segment must have before it is written to disk. Default value is 5.0 seconds.
            </summary>
            <value>The duration of the segment.</value>
        </member>
        <member name="P:StreamCoders.Protocols.Adaptive.Dash.DashIsoWriterConfigurationBase.MinimumBufferTime">
            <summary>
                Gets or sets the minimum buffer time for the client to buffer ahead before playback starts. Default value is 1.5
                seconds.
            </summary>
        </member>
        <member name="P:StreamCoders.Protocols.Adaptive.Dash.DashIsoWriterConfigurationBase.BasePath">
            <summary>
                The path where manifest and segments are written to. The directly is not created by the writer and has to exist.
            </summary>
        </member>
        <member name="P:StreamCoders.Protocols.Adaptive.Dash.DashIsoWriterConfigurationBase.PresentationDuration">
            <summary>
                Specifies the duration of the entire Media Presentation.
            </summary>
            <value>The duration of the presentation.</value>
        </member>
        <member name="T:StreamCoders.Protocols.Adaptive.Dash.DashProfile">
            <summary>
                Holds a single DASH profile URI and profile type.
            </summary>
        </member>
        <member name="T:StreamCoders.Protocols.Adaptive.Dash.DashProfiles">
            <summary>
                Contains currently specified MPEG DASH profiles.
                This profile list is extendable in case custom profiles need to be used.
            </summary>
        </member>
        <member name="M:StreamCoders.Protocols.Adaptive.Dash.DashProfiles.Find(System.String)">
            <summary>
                Attempts to find a profile based on the profile URI.
            </summary>
            <param name="uri">URI to look for.</param>
            <returns>Returns profile, otherwise null.</returns>
        </member>
        <member name="M:StreamCoders.Protocols.Adaptive.Dash.DashProfiles.Find(StreamCoders.Protocols.Adaptive.Dash.DashProfileType)">
            <summary>
                Attempts to find a profile based on the profile type.
            </summary>
            <param name="pType"><b>ProfileType</b> to look for.</param>
            <returns>Returns profile, otherwise null.</returns>
        </member>
        <member name="T:StreamCoders.Protocols.Adaptive.Dash.DashProfileType">
            <summary>
                Enumeration of all specified DASH profiles
            </summary>
        </member>
        <member name="F:StreamCoders.Protocols.Adaptive.Dash.DashProfileType.Full">
            <summary>
                Full Profile
            </summary>
        </member>
        <member name="F:StreamCoders.Protocols.Adaptive.Dash.DashProfileType.IsoOnDemand">
            <summary>
                ISO 14496-12 On-Demand Profile
            </summary>
        </member>
        <member name="F:StreamCoders.Protocols.Adaptive.Dash.DashProfileType.IsoLive">
            <summary>
                ISO 14496-12 Live Profile
            </summary>
        </member>
        <member name="F:StreamCoders.Protocols.Adaptive.Dash.DashProfileType.IsoMain">
            <summary>
                ISO 14496-12 Main Profile
            </summary>
        </member>
        <member name="F:StreamCoders.Protocols.Adaptive.Dash.DashProfileType.TsMain">
            <summary>
                MPEG-2 TS Main Profile
            </summary>
        </member>
        <member name="F:StreamCoders.Protocols.Adaptive.Dash.DashProfileType.TsSimple">
            <summary>
                MPEG-2 TS Simple Profile
            </summary>
        </member>
        <member name="T:StreamCoders.Protocols.Adaptive.Dash.DashStaticWriterConfiguration">
            <summary>
                DASH configuration for the static profile
            </summary>
            <seealso cref="T:StreamCoders.Protocols.Adaptive.Dash.DashIsoWriterConfigurationBase" />
        </member>
        <member name="M:StreamCoders.Protocols.Adaptive.Dash.DashStaticWriterConfiguration.#ctor(System.String)">
            <summary>
                Initializes a new instance of the <see cref="T:StreamCoders.Protocols.Adaptive.Dash.DashStaticWriterConfiguration" /> class.
            </summary>
            <param name="basePath">The base path to where segments and manifest are written to.</param>
        </member>
        <member name="P:StreamCoders.Protocols.Adaptive.Dash.Manifest.AudioChannelConfiguration.Value">
            <summary>
                Value indicating the number of channels
            </summary>
        </member>
        <member name="T:StreamCoders.Protocols.Adaptive.Dash.Manifest.DashManifestElementBase">
            <summary>
                Base element for all DASH manifest elements.
            </summary>
        </member>
        <member name="P:StreamCoders.Protocols.Adaptive.Dash.Manifest.Presentation.PresentationType">
            <summary>
                specifies the type of the Media Presentation
            </summary>
            <remarks>
                <para>
                    Optional with Default: static
                </para>
                <para>
                    For static Media Presentations (@type="static") all Segments are available between the @availabilityStartTime
                    and
                    the @availabilityEndTime. For dynamic Media Presentations (@type="dynamic") Segments typically have different
                    availability times.
                    In addition the Media Presentation Description may be updated in dynamic Media Presentations, i.e.the
                    @minimumUpdatePeriod may be present.
                    NOTE Static Media Presentations are typically used for On-Demand services, whereas dynamic Media Presentations
                    are
                    used for live services.
                </para>
            </remarks>
        </member>
        <member name="P:StreamCoders.Protocols.Adaptive.Dash.Manifest.Presentation.MinBufferTime">
            <summary>
                specifies a common duration used in the definition of the Representation data rate (see bandwidth)
            </summary>
            <remarks>
                Mandatory.
            </remarks>
        </member>
        <member name="P:StreamCoders.Protocols.Adaptive.Dash.Manifest.Presentation.MaxSegmentDuration">
            <summary>
                specifies the maximum duration of any Segment in any Representation in the Media Presentation, i.e. documented in
                this MPD and any future update of the MPD. If not present, then the maximum Segment duration shall be the maximum
                duration of any Segment documented in this MPD.
            </summary>
            <remarks>
                Optional.
            </remarks>
        </member>
        <member name="P:StreamCoders.Protocols.Adaptive.Dash.Manifest.Presentation.TimeShiftBufferDepth">
            <summary>
                specifies the duration of the smallest time shifting buffer for any Representation in the MPD that is guaranteed to
                be available for a Media Presentation with type 'dynamic'. When not present, the value is infinite. This value of
                the attribute is undefined if the type attribute is equal to ‘static’.
            </summary>
        </member>
        <member name="P:StreamCoders.Protocols.Adaptive.Dash.Manifest.Presentation.MinimumUpdatePeriod">
            <summary>
                Specifies the smallest period between potential changes to the MPD. This can be useful to control the frequency at
                which a client checks for updates.
                If this attribute is not present it indicates that the MPD does not change. If type is 'static',
                minimumUpdatePeriod shall not be present.
            </summary>
        </member>
        <member name="P:StreamCoders.Protocols.Adaptive.Dash.Manifest.Presentation.PublishTime">
            <summary>
                Specifies the wall-clock time when the MPD was generated and published at the origin server. This field is readonly
                and is automatically added and updated whenever the manifest is serialized.
            </summary>
            <remarks>
                Optional with Default. This item must be present when the presentation is dynamic.
            </remarks>
        </member>
        <member name="P:StreamCoders.Protocols.Adaptive.Dash.Manifest.Presentation.AvailabilityStartTime">
            <summary>
                For @type='dynamic' this attribute shall be present. In this case it specifies the anchor for the computation of
                the earliest availability time (in UTC) for any Segment in the Media Presentation.
                For @type =“static” if present, it specifies the Segment availability start time for all Segments referred to in
                this MPD.If not present, all Segments described in the MPD shall become available at the time the MPD becomes
                available.
            </summary>
            <remarks>
                Optional.
            </remarks>
        </member>
        <member name="P:StreamCoders.Protocols.Adaptive.Dash.Manifest.Presentation.AvailabilityEndTime">
            <summary>
                Specifies the latest Segment availability end time for any Segment in the Media Presentation. When not present, the
                value is unknown.
            </summary>
            <value>The availability end time.</value>
        </member>
        <member name="P:StreamCoders.Protocols.Adaptive.Dash.Manifest.Presentation.Profiles">
            <summary>
                Specifies a list of Media Presentation profiles
            </summary>
            <remarks>
                Mandatory.
            </remarks>
        </member>
        <member name="P:StreamCoders.Protocols.Adaptive.Dash.Manifest.ProgramInformation.MoreInformationUrl">
            <summary>
                If provided, this attribute specifies an absolute URL which provides more information about the Media Presentation.
            </summary>
        </member>
        <member name="P:StreamCoders.Protocols.Adaptive.Dash.Manifest.ProgramInformation.Title">
            <summary>
                specifies the title for the Media Presentation
            </summary>
        </member>
        <member name="P:StreamCoders.Protocols.Adaptive.Dash.Manifest.ProgramInformation.Copyright">
            <summary>
                specifies a copyright statement for the Media Presentation, usually starting with the copyright symbol, unicode
                U+00A9
            </summary>
        </member>
        <member name="P:StreamCoders.Protocols.Adaptive.Dash.Manifest.ProgramInformation.Source">
            <summary>
                specifies information about the original source (for example content provider) of the Media Presentation.
            </summary>
        </member>
        <!-- Badly formed XML comment ignored for member "F:StreamCoders.Container.AVI.AviHeaderFlags.HasIndex" -->
        <!-- Badly formed XML comment ignored for member "F:StreamCoders.Container.AVI.AviHeaderFlags.MustUseIndex" -->
        <member name="F:StreamCoders.Container.AVI.AviHeaderFlags.IsInterleaved">
            <summary>
                The streams are properly interleaved into each other
            </summary>
        </member>
        <!-- Badly formed XML comment ignored for member "F:StreamCoders.Container.AVI.AviHeaderFlags.WasCaptureFile" -->
        <member name="F:StreamCoders.Container.AVI.AviHeaderFlags.Copyrighted">
            <summary>
                Ignore
            </summary>
        </member>
        <!-- Badly formed XML comment ignored for member "F:StreamCoders.Container.AVI.AviHeaderFlags.TrustCkType" -->
        <member name="T:StreamCoders.Container.AVI.AviReader2">
            <summary>
                AVI Reader
            </summary>
            <seealso cref="T:StreamCoders.IReader" />
            <remarks>
                <para>
                    Supports: AVI 1.0 old index, OpenDML (AVI 2.0)
                </para>
                <para>
                    Supported Codecs: H.264, MPEG-4.2, MP3, AC3, DTS
                </para>
            </remarks>
        </member>
        <member name="P:StreamCoders.Container.AVI.AviStreamHeader.FrameDuration">
            <summary>
                Returns the duration of a frame.
            </summary>
        </member>
        <member name="P:StreamCoders.Container.AVI.AviStreamHeader.TotalStreamDuration">
            <summary>
                Returns the duration of the whole stream.
            </summary>
        </member>
        <member name="F:StreamCoders.Container.AVI.AviTrackDetail.previousChunk">
            <summary>
                We need this in case a chunk needs to be repeated. A chunk is supposed to be repeated when its chunk size from the
                index is zero.
                See here for more WORDING: http://lists.mplayerhq.hu/pipermail/mplayer-dev-eng/2004-March/024497.html
            </summary>
        </member>
        <member name="P:StreamCoders.Container.AVI.AviTrackDetail.IsVbrTrack">
            <summary>
                Indicates whether the track has VBR audio frames. Since the frame sizes vary, durations have to be calculated
                differently.
            </summary>
            <value><c>true</c> if this instance is VBR track; otherwise, <c>false</c>.</value>
        </member>
        <member name="M:StreamCoders.Container.AVI.AviTrackDetail.Seek(System.TimeSpan)">
            <summary>
                Resets the internal state. This is used for seeking.
            </summary>
            <param name="position">Returns the actual calculated position.</param>
            <returns>TimeSpan.</returns>
        </member>
        <member name="T:StreamCoders.Container.AVI.AviIndexAggregate">
            <summary>
                Holds new and old AVI indexes
            </summary>
        </member>
        <member name="T:StreamCoders.Container.AVI.AviStandardIndexBase">
            <summary>
                The standard index. The fields are identical with field and super index, except for the index-entries. Which are
                therefore made generic.
                This class reads up to reserved3.
            </summary>
        </member>
        <member name="M:StreamCoders.Container.AVI.AviStandardIndexEntry.#ctor(System.UInt32,System.UInt32,System.Boolean)">
            <summary>
                This constructor is used for artifical creation when the index is built.
            </summary>
        </member>
        <member name="P:StreamCoders.Container.AVI.AviStandardIndexEntry.FrameNumber">
            <summary>
                This helps us get an index faster.
            </summary>
            <value>The frame number.</value>
        </member>
        <member name="P:StreamCoders.Container.AVI.AviStandardIndexEntry.Duration">
            <summary>
                Precalculated duration of frame (buildIndices)
            </summary>
            <value>The duration.</value>
        </member>
        <member name="P:StreamCoders.Container.AVI.AviStandardIndexEntry.Timestamp">
            <summary>
                Integral sum of all duration of previous index entries. This should make seeking a breeze
            </summary>
            <value>The timestamp.</value>
        </member>
        <member name="P:StreamCoders.Container.AVI.IAviIndexEntry.DwSize">
            <summary>
                Note: bit 31 is set if this is NOT a keyframe
            </summary>
        </member>
        <member name="P:StreamCoders.Container.AVI.RiffIndex1Chunk.FrameNumber">
            <summary>
                The frame number generated internally by the RiffIndex1 class.
            </summary>
            <value>The frame number.</value>
        </member>
        <member name="F:StreamCoders.Container.AVI.RiffIndex1Flags.KeyFrame">
            <summary>
                The chunk the entry refers to is a keyframe
            </summary>
        </member>
        <member name="F:StreamCoders.Container.AVI.RiffIndex1Flags.List">
            <summary>
                The entry points to a list, not to a chunk.
            </summary>
        </member>
        <member name="F:StreamCoders.Container.AVI.RiffIndex1Flags.FirstPart">
            <summary>
                Indicates this chunk needs the frames following it to be used; it cannot stand alone.
            </summary>
        </member>
        <member name="F:StreamCoders.Container.AVI.RiffIndex1Flags.LastPart">
            <summary>
                Indicates this chunk needs the frames preceding it to be used; it cannot stand alone.
            </summary>
        </member>
        <member name="F:StreamCoders.Container.AVI.RiffIndex1Flags.NoTime">
            <summary>
                The duration which is applied to the corresponding chunk is 0.
            </summary>
        </member>
        <member name="T:StreamCoders.Container.AVI.RiffIndex1List">
            <summary>
                Legacy optional index 'idx1'
            </summary>
        </member>
        <member name="F:StreamCoders.Container.AVI.StandardIndexType.IndexOfIndexes">
            <summary>
                when each entry in aIndex
                array points to an index chun
            </summary>
        </member>
        <member name="F:StreamCoders.Container.AVI.StandardIndexType.IndexOfChunks">
            <summary>
                when each entry in aIndex
                array   points to a chunk in the file
            </summary>
        </member>
        <member name="F:StreamCoders.Container.AVI.StandardIndexType.IndexIsData">
            <summary>
                // when each entry is aIndex is
                really the data
            </summary>
        </member>
        <member name="F:StreamCoders.Container.AVI.StandardSubIndexType.DefaultStandardIndex">
            <summary>
                This is not documented in odmlff2.pdf but 0 means standard index
            </summary>
        </member>
        <member name="F:StreamCoders.Container.AVI.StandardSubIndexType.Index2Field">
            <summary>
                when fields within frames
                are also indexed
            </summary>
        </member>
        <member name="M:StreamCoders.Container.AVI.RiffElement.#ctor(System.IO.BinaryReader,StreamCoders.Container.AVI.RiffFourCc)">
            <summary>
                Specialized constructor when fourcc is already known.
            </summary>
            <param name="reader">The reader.</param>
            <param name="fourCC">The four cc.</param>
        </member>
        <member name="M:StreamCoders.Container.AVI.RiffElement.#ctor(System.IO.BinaryReader,StreamCoders.Container.AVI.RiffFourCc,System.UInt32)">
            <summary>
                Specializes constructor when fourcc and size are already known.
            </summary>
            <param name="reader">The reader.</param>
            <param name="fourCC">The four cc.</param>
            <param name="size">The size.</param>
        </member>
        <member name="T:StreamCoders.Container.AVI.VideoFieldDescriptor">
            <summary>
                Class VideoFieldDescriptor entity in VideoPropertyHeader
            </summary>
        </member>
        <member name="T:StreamCoders.Container.AVI.VideoPropertyHeader">
            <summary>
                Class VideoPropertyHeader VPRP
            </summary>
        </member>
        <member name="T:StreamCoders.Container.ExtendedM3U.KeywordParser">
            -------------------------------------------------------------------------------------------------
            <summary>
                Maps M3U8 tags to keywords and vice versa.
            </summary>
            -------------------------------------------------------------------------------------------------
        </member>
        <member name="T:StreamCoders.Container.ExtendedM3U.Tag">
            -------------------------------------------------------------------------------------------------
            <summary>
                Tags as defined by http://tools.ietf.org/html/draft-pantos-http-live-streaming-12
            </summary>
            -------------------------------------------------------------------------------------------------
        </member>
        <member name="M:StreamCoders.Container.ExtendedM3U.Tokenizer.Unwind(StreamCoders.Container.ExtendedM3U.Token)">
            -------------------------------------------------------------------------------------------------
            <summary>
                Unwinds the given token returning to the position before the token was parsed.
            </summary>
            <param name="token">
                The token to unwind.
            </param>
            -------------------------------------------------------------------------------------------------
        </member>
        <member name="T:StreamCoders.Container.FLV.AacPacketType">
            <summary>
                Enumeration of allowed AAC Packet types in FLV.
            </summary>
        </member>
        <member name="F:StreamCoders.Container.FLV.AacPacketType.SequenceHeader">
            <summary>
            </summary>
        </member>
        <member name="F:StreamCoders.Container.FLV.AacPacketType.RawData">
            <summary>
            </summary>
        </member>
        <member name="T:StreamCoders.Container.FLV.AvcPacketType">
            <summary>
                Enumeration of allowed AVC Packet types in FLV.
            </summary>
        </member>
        <member name="F:StreamCoders.Container.FLV.AvcPacketType.SequenceHeader">
            <summary>
            </summary>
        </member>
        <member name="F:StreamCoders.Container.FLV.AvcPacketType.Nalu">
            <summary>
            </summary>
        </member>
        <member name="F:StreamCoders.Container.FLV.AvcPacketType.EndSequence">
            <summary>
            </summary>
        </member>
        <member name="T:StreamCoders.Container.FLV.AvcVideoPacket">
            <summary>
                Contains information of AVC frame.
            </summary>
        </member>
        <member name="F:StreamCoders.Container.FLV.AvcVideoPacket.AvcType">
            <summary>
            </summary>
        </member>
        <member name="F:StreamCoders.Container.FLV.AvcVideoPacket.CompositionTime">
            <summary>
            </summary>
        </member>
        <member name="T:StreamCoders.Container.FLV.ChannelMode">
            <summary>
                Enumeration of allowed ChannelId Configuration in FLV.
            </summary>
        </member>
        <member name="F:StreamCoders.Container.FLV.ChannelMode.SndMono">
            <summary>
            </summary>
        </member>
        <member name="F:StreamCoders.Container.FLV.ChannelMode.SndStereo">
            <summary>
            </summary>
        </member>
        <member name="T:StreamCoders.Container.FLV.FlvAudioTag">
            <summary>
                Represents Audio Tag
            </summary>
        </member>
        <member name="F:StreamCoders.Container.FLV.FlvAudioTag.AacType">
            <summary>
            </summary>
        </member>
        <member name="F:StreamCoders.Container.FLV.FlvAudioTag.Channels">
            <summary>
            </summary>
        </member>
        <member name="F:StreamCoders.Container.FLV.FlvAudioTag.Format">
            <summary>
            </summary>
        </member>
        <member name="F:StreamCoders.Container.FLV.FlvAudioTag.Khz">
            <summary>
            </summary>
        </member>
        <member name="F:StreamCoders.Container.FLV.FlvAudioTag.SampleSize">
            <summary>
            </summary>
        </member>
        <member name="T:StreamCoders.Container.FLV.FlvFrameTypes">
            <summary>
                Enumeration of allowed Video Frame types in FLV.
            </summary>
        </member>
        <member name="F:StreamCoders.Container.FLV.FlvFrameTypes.KeyFrame">
            <summary>
            </summary>
        </member>
        <member name="F:StreamCoders.Container.FLV.FlvFrameTypes.InterFrame">
            <summary>
            </summary>
        </member>
        <member name="F:StreamCoders.Container.FLV.FlvFrameTypes.DisposableInterFrame">
            <summary>
            </summary>
        </member>
        <member name="F:StreamCoders.Container.FLV.FlvFrameTypes.GeneratedKeyFrame">
            <summary>
            </summary>
        </member>
        <member name="F:StreamCoders.Container.FLV.FlvFrameTypes.VideoInfo">
            <summary>
            </summary>
        </member>
        <member name="T:StreamCoders.Container.FLV.FlvSoundFormats">
            <summary>
                Enumeration of allowed Sound Formats in FLV
            </summary>
        </member>
        <member name="F:StreamCoders.Container.FLV.FlvSoundFormats.LinearPcm">
            <summary>
            </summary>
        </member>
        <member name="F:StreamCoders.Container.FLV.FlvSoundFormats.Adpcm">
            <summary>
            </summary>
        </member>
        <member name="F:StreamCoders.Container.FLV.FlvSoundFormats.Mp3">
            <summary>
            </summary>
        </member>
        <member name="F:StreamCoders.Container.FLV.FlvSoundFormats.LinearPcmLe">
            <summary>
            </summary>
        </member>
        <member name="F:StreamCoders.Container.FLV.FlvSoundFormats.Nellymoser16Khz">
            <summary>
            </summary>
        </member>
        <member name="F:StreamCoders.Container.FLV.FlvSoundFormats.Nellymoser_8Khz">
            <summary>
            </summary>
        </member>
        <member name="F:StreamCoders.Container.FLV.FlvSoundFormats.Nellymoser">
            <summary>
            </summary>
        </member>
        <member name="F:StreamCoders.Container.FLV.FlvSoundFormats.G711A">
            <summary>
            </summary>
        </member>
        <member name="F:StreamCoders.Container.FLV.FlvSoundFormats.G711U">
            <summary>
            </summary>
        </member>
        <member name="F:StreamCoders.Container.FLV.FlvSoundFormats.Reserved">
            <summary>
            </summary>
        </member>
        <member name="F:StreamCoders.Container.FLV.FlvSoundFormats.Aac">
            <summary>
            </summary>
        </member>
        <member name="F:StreamCoders.Container.FLV.FlvSoundFormats.Speex">
            <summary>
            </summary>
        </member>
        <member name="F:StreamCoders.Container.FLV.FlvSoundFormats.Mp3_8Khz">
            <summary>
            </summary>
        </member>
        <member name="F:StreamCoders.Container.FLV.FlvSoundFormats.DeviceSpecificSound">
            <summary>
            </summary>
        </member>
        <member name="T:StreamCoders.Container.FLV.FlvTag">
            -------------------------------------------------------------------------------------------------
            <summary>
                Represents generic FLV Tag. Depending on <c>TagType</c>, contains Script (Metadata),
                Video or Audio information.
            </summary>
            -------------------------------------------------------------------------------------------------
        </member>
        <member name="M:StreamCoders.Container.FLV.FlvTag.#ctor(System.Byte[],System.UInt32@)">
            -------------------------------------------------------------------------------------------------
            <summary>
                Initializes a new Instance of StreamCoders.Reader.FLVTag.
            </summary>
            <param name="buffer">   . </param>
            <param name="index">    [in,out]. </param>
            -------------------------------------------------------------------------------------------------
        </member>
        <member name="F:StreamCoders.Container.FLV.FlvTag.TagType">
            -------------------------------------------------------------------------------------------------
            <summary>
                Type of the tag.
            </summary>
            -------------------------------------------------------------------------------------------------
        </member>
        <member name="F:StreamCoders.Container.FLV.FlvTag.DataSize">
            -------------------------------------------------------------------------------------------------
            <summary>
                SizeIncludingHeader of the data.
            </summary>
            -------------------------------------------------------------------------------------------------
        </member>
        <member name="F:StreamCoders.Container.FLV.FlvTag.Timestamp">
            -------------------------------------------------------------------------------------------------
            <summary>
                The timestamp.
            </summary>
            -------------------------------------------------------------------------------------------------
        </member>
        <member name="F:StreamCoders.Container.FLV.FlvTag.TimestampExtended">
            -------------------------------------------------------------------------------------------------
            <summary>
                The timestamp extended.
            </summary>
            -------------------------------------------------------------------------------------------------
        </member>
        <member name="F:StreamCoders.Container.FLV.FlvTag.TimestampComplete">
            -------------------------------------------------------------------------------------------------
            <summary>
                For convenience, the complete timestamp.
            </summary>
            -------------------------------------------------------------------------------------------------
        </member>
        <member name="F:StreamCoders.Container.FLV.FlvTag.TimestampCompleteSeconds">
            -------------------------------------------------------------------------------------------------
            <summary>
                For convenience, the complete timestamp expressed in seconds.
            </summary>
            -------------------------------------------------------------------------------------------------
        </member>
        <member name="F:StreamCoders.Container.FLV.FlvTag.StreamId">
            -------------------------------------------------------------------------------------------------
            <summary>
                Identifier for the stream.
            </summary>
            -------------------------------------------------------------------------------------------------
        </member>
        <member name="F:StreamCoders.Container.FLV.FlvTag.AudioTag">
            -------------------------------------------------------------------------------------------------
            <summary>
                The audio tag.
            </summary>
            -------------------------------------------------------------------------------------------------
        </member>
        <member name="F:StreamCoders.Container.FLV.FlvTag.VideoTag">
            -------------------------------------------------------------------------------------------------
            <summary>
                The video tag.
            </summary>
            -------------------------------------------------------------------------------------------------
        </member>
        <member name="F:StreamCoders.Container.FLV.FlvTag.Data">
            -------------------------------------------------------------------------------------------------
            <summary>
                The data.
            </summary>
            -------------------------------------------------------------------------------------------------
        </member>
        <member name="F:StreamCoders.Container.FLV.FlvTag.ObjectValues">
            -------------------------------------------------------------------------------------------------
            <summary>
                The object values.
            </summary>
            -------------------------------------------------------------------------------------------------
        </member>
        <member name="T:StreamCoders.Container.FLV.FlvTagType">
            <summary>
                Enumeration of tags allowed in FLV.
            </summary>
        </member>
        <member name="F:StreamCoders.Container.FLV.FlvTagType.AudioData">
            <summary>
            </summary>
        </member>
        <member name="F:StreamCoders.Container.FLV.FlvTagType.VideoData">
            <summary>
            </summary>
        </member>
        <member name="F:StreamCoders.Container.FLV.FlvTagType.ScriptData">
            <summary>
            </summary>
        </member>
        <member name="T:StreamCoders.Container.FLV.FlvVideoFormats">
            <summary>
                Enumeration of allowed Video Formats in FLV.
            </summary>
        </member>
        <member name="F:StreamCoders.Container.FLV.FlvVideoFormats.Jpeg">
            <summary>
            </summary>
        </member>
        <member name="F:StreamCoders.Container.FLV.FlvVideoFormats.SorensonH263">
            <summary>
            </summary>
        </member>
        <member name="F:StreamCoders.Container.FLV.FlvVideoFormats.ScreenVideo">
            <summary>
            </summary>
        </member>
        <member name="F:StreamCoders.Container.FLV.FlvVideoFormats.Vp6">
            <summary>
            </summary>
        </member>
        <member name="F:StreamCoders.Container.FLV.FlvVideoFormats.Vp6A">
            <summary>
            </summary>
        </member>
        <member name="F:StreamCoders.Container.FLV.FlvVideoFormats.ScreenV2">
            <summary>
            </summary>
        </member>
        <member name="F:StreamCoders.Container.FLV.FlvVideoFormats.Avc">
            <summary>
            </summary>
        </member>
        <member name="T:StreamCoders.Container.FLV.FlvVideoTag">
            <summary>
                Represents Video Tag
            </summary>
        </member>
        <member name="F:StreamCoders.Container.FLV.FlvVideoTag.Avc">
            <summary>
            </summary>
        </member>
        <member name="F:StreamCoders.Container.FLV.FlvVideoTag.Format">
            <summary>
            </summary>
        </member>
        <member name="F:StreamCoders.Container.FLV.FlvVideoTag.FrameType">
            <summary>
            </summary>
        </member>
        <member name="T:StreamCoders.Container.FLV.KHzValues">
            <summary>
                Enumeration of allowed Sound sample Frequencies in FLV.
            </summary>
        </member>
        <member name="F:StreamCoders.Container.FLV.KHzValues.Khz55">
            <summary>
            </summary>
        </member>
        <member name="F:StreamCoders.Container.FLV.KHzValues.Khz11">
            <summary>
            </summary>
        </member>
        <member name="F:StreamCoders.Container.FLV.KHzValues.Khz22">
            <summary>
            </summary>
        </member>
        <member name="F:StreamCoders.Container.FLV.KHzValues.Khz44">
            <summary>
            </summary>
        </member>
        <member name="T:StreamCoders.Container.FLV.ObjectDataReference">
            <summary>
                Stores value field information from Script Tag parser.
            </summary>
        </member>
        <member name="F:StreamCoders.Container.FLV.ObjectDataReference.DataType">
            <summary>
            </summary>
        </member>
        <member name="F:StreamCoders.Container.FLV.ObjectDataReference.DataValue">
            <summary>
            </summary>
        </member>
        <member name="M:StreamCoders.Container.FLV.ObjectDataReference.#ctor(System.Object)">
            <summary>
                Initializes a new Instance of StreamCoders.Reader.ObjectDataReference
            </summary>
            <param name="value"></param>
        </member>
        <member name="T:StreamCoders.Container.FLV.ScriptDataType">
            <summary>
                Enumeration of Script Tag data types in FLV.
            </summary>
        </member>
        <member name="F:StreamCoders.Container.FLV.ScriptDataType.Double">
            <summary>
            </summary>
        </member>
        <member name="F:StreamCoders.Container.FLV.ScriptDataType.Ui8">
            <summary>
            </summary>
        </member>
        <member name="F:StreamCoders.Container.FLV.ScriptDataType.Scriptdatastring1">
            <summary>
            </summary>
        </member>
        <member name="F:StreamCoders.Container.FLV.ScriptDataType.Scriptdataobject">
            <summary>
            </summary>
        </member>
        <member name="F:StreamCoders.Container.FLV.ScriptDataType.Scriptdatastring2">
            <summary>
            </summary>
        </member>
        <member name="F:StreamCoders.Container.FLV.ScriptDataType.Ui16">
            <summary>
            </summary>
        </member>
        <member name="F:StreamCoders.Container.FLV.ScriptDataType.Scriptdatavariable1">
            <summary>
            </summary>
        </member>
        <member name="F:StreamCoders.Container.FLV.ScriptDataType.Scriptdatavariable2">
            <summary>
            </summary>
        </member>
        <member name="F:StreamCoders.Container.FLV.ScriptDataType.Scriptdate">
            <summary>
            </summary>
        </member>
        <member name="F:StreamCoders.Container.FLV.ScriptDataType.Scriptdatalongstring">
            <summary>
            </summary>
        </member>
        <member name="T:StreamCoders.Container.FLV.ScriptDataValuesTypes">
            <summary>
                Enumeration of Script Tag data types in FLV.
            </summary>
        </member>
        <member name="F:StreamCoders.Container.FLV.ScriptDataValuesTypes.SdvNumber">
            <summary>
            </summary>
        </member>
        <member name="F:StreamCoders.Container.FLV.ScriptDataValuesTypes.SdvBoolean">
            <summary>
            </summary>
        </member>
        <member name="F:StreamCoders.Container.FLV.ScriptDataValuesTypes.SdvString">
            <summary>
            </summary>
        </member>
        <member name="F:StreamCoders.Container.FLV.ScriptDataValuesTypes.SdvObject">
            <summary>
            </summary>
        </member>
        <member name="F:StreamCoders.Container.FLV.ScriptDataValuesTypes.SdvMovieClip">
            <summary>
            </summary>
        </member>
        <member name="F:StreamCoders.Container.FLV.ScriptDataValuesTypes.SdvNull">
            <summary>
            </summary>
        </member>
        <member name="F:StreamCoders.Container.FLV.ScriptDataValuesTypes.SdvUndefinied">
            <summary>
            </summary>
        </member>
        <member name="F:StreamCoders.Container.FLV.ScriptDataValuesTypes.SdvReference">
            <summary>
            </summary>
        </member>
        <member name="F:StreamCoders.Container.FLV.ScriptDataValuesTypes.SdvEcmaArray">
            <summary>
            </summary>
        </member>
        <member name="F:StreamCoders.Container.FLV.ScriptDataValuesTypes.SdvStrictArray">
            <summary>
            </summary>
        </member>
        <member name="F:StreamCoders.Container.FLV.ScriptDataValuesTypes.SddvDate">
            <summary>
            </summary>
        </member>
        <member name="F:StreamCoders.Container.FLV.ScriptDataValuesTypes.SdvLong">
            <summary>
            </summary>
        </member>
        <member name="T:StreamCoders.Container.FLV.SoundSize">
            <summary>
                Enumeration of allowed Sound Sizes (BitsPerSample) in FLV.
            </summary>
        </member>
        <member name="F:StreamCoders.Container.FLV.SoundSize.Snd8Bit">
            <summary>
            </summary>
        </member>
        <member name="F:StreamCoders.Container.FLV.SoundSize.Snd16Bit">
            <summary>
            </summary>
        </member>
        <member name="F:StreamCoders.Container.FLV.TrackContainer.Track">
            -------------------------------------------------------------------------------------------------
            <summary>
                The track.
            </summary>
            -------------------------------------------------------------------------------------------------
        </member>
        <member name="M:StreamCoders.Container.FLV.TrackContainer.#ctor(StreamCoders.TrackInfo)">
            -------------------------------------------------------------------------------------------------
            <summary>
                Constructor.
            </summary>
            <param name="RtspTrackInfo">   The RtspTrackInfo. </param>
            -------------------------------------------------------------------------------------------------
        </member>
        <member name="M:StreamCoders.Container.FLV.TrackContainer.Finalize">
            -------------------------------------------------------------------------------------------------
            <summary>
                Finaliser.
            </summary>
            -------------------------------------------------------------------------------------------------
        </member>
        <member name="M:StreamCoders.Container.FLV.TrackContainer.Enqueue(StreamCoders.Container.FLV.FlvTag)">
            -------------------------------------------------------------------------------------------------
            <summary>
                Adds an object onto the end of this queue.
            </summary>
            <param name="tag">  The tag. </param>
            -------------------------------------------------------------------------------------------------
        </member>
        <member name="M:StreamCoders.Container.FLV.TrackContainer.Dequeue">
            -------------------------------------------------------------------------------------------------
            <summary>
                Removes the head object from this queue.
            </summary>
            <returns>
                The head object from this queue.
            </returns>
            -------------------------------------------------------------------------------------------------
        </member>
        <member name="T:StreamCoders.Container.FlvReader">
            -------------------------------------------------------------------------------------------------
            <summary>
                <b>FLVReader is a Flash Video Splitter</b><br />
                Compatible with File Video File (FLV) Version 10<br />
                FLVReader is able to work with files on file systems and HTTP resources.<br />
            </summary>
            <remarks>
                For an example on how to use FLVReader see <b>FilePlayer</b> and online examples.
            </remarks>
            <seealso cref="T:StreamCoders.IReader" />
            -------------------------------------------------------------------------------------------------
        </member>
        <member name="F:StreamCoders.Container.FlvReader.ScriptDataTag">
            -------------------------------------------------------------------------------------------------
            <summary>
                Script Metadata of FLV file. Contains additional information and objects representing
                metatags.
            </summary>
            -------------------------------------------------------------------------------------------------
        </member>
        <member name="M:StreamCoders.Container.FlvReader.#ctor">
            -------------------------------------------------------------------------------------------------
            <summary>
                Initializes a new Instance of FLVReader.<br />
            </summary>
            -------------------------------------------------------------------------------------------------
        </member>
        <member name="P:StreamCoders.Container.FlvReader.Tracks">
            -------------------------------------------------------------------------------------------------
            <summary>
                Gets the tracks.
            </summary>
            <value>
                The tracks.
            </value>
            <seealso cref="P:StreamCoders.IReader.Tracks" />
            -------------------------------------------------------------------------------------------------
        </member>
        <member name="M:StreamCoders.Container.FlvReader.Dispose">
            -------------------------------------------------------------------------------------------------
            <summary>
                Dispose of this object, cleaning up any resources it uses.
            </summary>
            -------------------------------------------------------------------------------------------------
        </member>
        <member name="M:StreamCoders.Container.FlvReader.GetNextFrame(StreamCoders.TrackInfo)">
            -------------------------------------------------------------------------------------------------
            <summary>
                Gets next frame from media stream.
            </summary>
            <param name="track">
                Number of trackInfo to get data from.<br />
                The returned <c>MediaPackage</c> will also contain an FLVTag in the <c>ExtendedInfo</c>
                property.<br />
            </param>
            <returns>
                Returns MediaPackage containing <c>FLVTag</c> in ExtendedInfo property.
            </returns>
            -------------------------------------------------------------------------------------------------
        </member>
        <member name="M:StreamCoders.Container.FlvReader.GetTrackStatus(StreamCoders.TrackInfo)">
            -------------------------------------------------------------------------------------------------
            <summary>
                Gets the Status of a specified Track.
            </summary>
            <param name="trackInfo">    The trackInfo. </param>
            <returns>
                The trackInfo status.
            </returns>
            -------------------------------------------------------------------------------------------------
        </member>
        <member name="M:StreamCoders.Container.FlvReader.Init(System.String)">
            -------------------------------------------------------------------------------------------------
            <summary>
                Initialises this object.
            </summary>
            <returns>
                true if it succeeds, false if it fails.
            </returns>
            -------------------------------------------------------------------------------------------------
        </member>
        <member name="M:StreamCoders.Container.FlvReader.Init(System.IO.Stream)">
            -------------------------------------------------------------------------------------------------
            <summary>
                Initializes FLVReader with the previously specified <c>FileName</c>.
            </summary>
            <param name="inputStream"> The custom stream. </param>
            <returns>
                Returns true on success, otherwise false.
            </returns>
            -------------------------------------------------------------------------------------------------
        </member>
        <member name="P:StreamCoders.Container.FlvReader.Position">
            -------------------------------------------------------------------------------------------------
            <summary>
                Gets or sets the position in the data stream.<br />
            </summary>
            <value>
                Units are in seconds.<br />
                Setting the Position does not work for HTTP resources.<br />
            </value>
            -------------------------------------------------------------------------------------------------
        </member>
        <member name="M:StreamCoders.Container.FlvReader.Finalize">
            -------------------------------------------------------------------------------------------------
            <summary>
                Finaliser.
            </summary>
            -------------------------------------------------------------------------------------------------
        </member>
        <member name="M:StreamCoders.Container.FlvReader.Dispose(System.Boolean)">
            -------------------------------------------------------------------------------------------------
            <summary>
                Dispose of this object, cleaning up any resources it uses.
            </summary>
            <param name="disposing">    true if resources should be disposed, false if not. </param>
            -------------------------------------------------------------------------------------------------
        </member>
        <member name="M:StreamCoders.Container.FlvReader.GetNextFrame(System.Int32)">
            -------------------------------------------------------------------------------------------------
            <summary>
                Gets next frame from media stream.
            </summary>
            <param name="track">
                Number of trackInfo to get data from.<br />
                The returned <c>MediaPackage</c> will also contain an FLVTag in the <c>ExtendedInfo</c>
                property.<br />
            </param>
            <returns>
                Returns MediaPackage containing <c>FLVTag</c> in ExtendedInfo property.
            </returns>
            -------------------------------------------------------------------------------------------------
        </member>
        <member name="M:StreamCoders.Container.FlvReader.GetTrack(System.Int32)">
            -------------------------------------------------------------------------------------------------
            <summary>
                Gets information on specific Tracks in stream.
            </summary>
            <param name="track">    Track Number contained in <c>TrackInfo</c> </param>
            <returns>
                TrackInfo object.
            </returns>
            -------------------------------------------------------------------------------------------------
        </member>
        <member name="M:StreamCoders.Container.FlvReader.GetTrackStatus(System.Int32)">
            -------------------------------------------------------------------------------------------------
            <summary>
                Gets the Status of a specified Track.
            </summary>
            <param name="track">    Track Number contained in <c>TrackInfo</c> </param>
            <returns>
                Status of specified trackInfo. (Currently: OK or StreamEnd)
            </returns>
            -------------------------------------------------------------------------------------------------
        </member>
        <member name="T:StreamCoders.Container.FlvWriter">
            <summary>
                FLV Writer for Flash Video <strong>Beta</strong>.<br />
                Supported Codecs:
                Video: H.264 Baseline
                Audio: MPEG-4 Audio (AAC)
            </summary>
            <example>
                <code>
                      <![CDATA[
                 class Program
                 {
                     public static byte[] HexStringToByteArray(String HexString)
                     {
                         int NumberChars = HexString.Length;
                         byte[] bytes = new byte[NumberChars / 2];
                         for (int i = 0; i < NumberChars; i += 2)
                         {
                             bytes[i / 2] = Convert.ToByte(HexString.Substring(i, 2), 16);
                         }
                         return bytes;
                     }
            
                     static void Main(string[] args)
                     {
                         double framerate = 25;
                         CamCapture cam = new CamCapture();
                         System.Collections.Generic.List<string> devices = cam.GetDeviceList();
                         List<CamMetrics> metrics = cam.SelectDevice(devices[0]);
                         cam.SelectMetrics(metrics[0]);
                         cam.Start();
            
                         int width = cam.Metrics.Width;
                         int height = cam.Metrics.Height;
            
            
                         H264Encoder venc = new H264Encoder();
                         venc.SetInputResolution((uint)width, (uint)height);
                         venc.Framerate = framerate;
                         venc.IFrameFrequency = 10;
                         venc.SimpleInit();
            
                         int audioChannels = 1;
                         int audioSampleFreq = 44100;
                         int audioBitrate = 128000;
                         int audioBitsPerSample = 16;
            
                         AACEncoder aenc = new AACEncoder();
                         aenc.InputBitsPerSample = audioBitsPerSample;
                         aenc.OutputBitrate = audioBitrate;
                         aenc.InputChannels = audioChannels;
                         aenc.InputSampleFrequency = audioSampleFreq;
                         aenc.OutputFormat = AACFormats.ADIF;
            
                         aenc.SimpleInit();
            
                         AACDecoder adec = new AACDecoder();
                         adec.AudioSource = StreamSources.FILE_OTHER;
                         adec.BitsPerSample = audioBitsPerSample;
                         adec.Channels = audioChannels;
                         adec.SampleRate = audioSampleFreq;
                         adec.SimpleInit();
            
            
                         WaveInput win = new WaveInput();
                         win.BitsPerSample = audioBitsPerSample;
                         win.Channels = audioChannels;
                         win.SampleRate = audioSampleFreq;
            
                         win.OpenDevice();
                         win.Start();
            
                         WaveOutput wout = new WaveOutput();
                         wout.BitsPerSample = audioBitsPerSample;
                         wout.Channels = audioChannels;
                         wout.SampleRate = audioSampleFreq;
                         wout.OpenDevice();
            
            
            
                         FLVWriter streamWriter = new FLVWriter();
                         streamWriter.Filename = "flvfile.flv";
                         string fname = streamWriter.Filename;
            
                         TrackInfo vtrack = new TrackInfo();
                         vtrack.TrackCategory = TrackCategory.Video;
                         vtrack.Codec = Codec.H264;
                         vtrack.Video = new VideoTrack();
                         vtrack.Video.Framerate = framerate;
                         vtrack.Video.Width = width;
                         vtrack.Video.Height = height;
            
                         vtrack = streamWriter.AddAdaptiveTrack(vtrack);
            
                         TrackInfo atrack = new TrackInfo();
                         atrack.TrackCategory = TrackCategory.Audio;
                         atrack.Codec = Codec.AAC;
                         atrack.Audio = new AudioTrack();
                         atrack.Audio.Bitrate = 0;
                         atrack.Audio.BitsPerSample = audioBitsPerSample;
                         atrack.Audio.SampleFrequency = audioSampleFreq;
                         atrack.Audio.BitsPerSample = audioBitsPerSample;
                         atrack.Audio.Channels = audioChannels;
            
                         atrack = streamWriter.AddAdaptiveTrack(atrack);
                         streamWriter.SimpleInit();
            
                         MediaPackage sequenceData = venc.GetDecoderConfigurationInfo();
                         if(sequenceData != null)
                             streamWriter.WriteTrack(vtrack, sequenceData);
            
                         win.ClearBuffers();
            
                         sequenceData = new MediaPackage();
            
                         sequenceData.PackageType = MediaPackage.PackageTypes.CONFIG;
                         sequenceData.OggBuffer = HexStringToByteArray(aenc.ConfigParameter);
                         streamWriter.WriteTrack(atrack, sequenceData, true);
            
            
                         int startTicker = System.Environment.TickCount;
                         double frameduration = 1000.0 / framerate;
                         int absoluteTicker = System.Environment.TickCount;
                         double videoCurrent = 0.0;
                         int videoFramesEncoded = 0;
                         while (Console.KeyAvailable == false)
                         {
                             int delta = System.Environment.TickCount - startTicker;
                             if (delta > frameduration)
                             {
                                 Console.WriteLine("Preparing Video Frame");
                                 int deltaError = delta - (int)frameduration;
                                 startTicker = System.Environment.TickCount - deltaError;
                                 int absDelta = System.Environment.TickCount - absoluteTicker;
                                 byte[] pic = cam.GetFrame();
                                 if (pic != null)
                                 {
                                     byte[] cpic = venc.EncodeToArray(Visuals.Array24Rotate(vtrack.Video.Width, vtrack.Video.Height, pic, RotateFlipType.Rotate180FlipX));
            
                                     videoFramesEncoded++;
                                     MediaPackage mp = new MediaPackage();
                                     mp.OggBuffer = cpic;
                                     mp.startTime = videoCurrent;
                                     mp.endTime = 1.0 / framerate;
                                     mp.IsKeyFrame = venc.LastEncodedFrameType == FrameTypes.I_FRAME;
                                     bool writeres = streamWriter.WriteTrack(vtrack, mp);
                                     if (writeres == false)
                                         Console.WriteLine("Unable to write to video track");
                                     videoCurrent += (1.0 / framerate);
                                 }
                                 else
                                 {
                                     Console.WriteLine("failed to compress");
                                 }
            
                             }
                             if (win.SamplesAvailable)
                             {
                                 Console.WriteLine("Preparing Audio Frame");
                                 byte[] samples = win.GetAllData();
                                 while (true)
                                 {
                                     MediaPackage mp = aenc.Encode(samples, true);
                                     samples = null;             // Loop encoding with null, to retrieve remaining data from encoder.
                                     if (mp != null)
                                     {
                                         bool writeres = streamWriter.WriteTrack(atrack, mp);
                                         if (writeres == false)
                                             Console.WriteLine("Unable to write to audio track.");
                                     }
                                     else
                                         break;
                                 }
                             }
            
                         }
            
                         streamWriter.EndTrack(vtrack);
                         streamWriter.EndTrack(atrack);
                         streamWriter.Dispose();
                     }
                 }
                      ]]>
             </code>
            </example>
            <remarks>
                Note: The first buffers written to the tracks have to be configuration information for the decoders. See
                AAC.ConfigParameter and H264Encoder.GetDecoderConfigurationInfo()
            </remarks>
            <seealso cref="T:StreamCoders.Writer.Writer" />
            <seealso cref="T:System.IDisposable" />
        </member>
        <member name="T:StreamCoders.Container.H264NalReader">
            -------------------------------------------------------------------------------------------------
            <summary>
                Implements reading from <b>.H264</b> files which are raw H.264 NAL units without any
                timing information.
            </summary>
            <remarks>
                The reader assumes the content to contain a valid H.264 bitstream. There is no error
                checking as this file type has no framing.<br />
                <br />
                Limitations:<br />
                <b>Seeking is not supported.</b>
            </remarks>
            -------------------------------------------------------------------------------------------------
        </member>
        <member name="P:StreamCoders.Container.H264NalReader.DefaultFramerate">
            -------------------------------------------------------------------------------------------------
            <summary>
                Gets or sets the default framerate. This is a fallback value in case the framerate cannot
                be deduced from the supplied sequence parameter set.
                <br />
                The Default value is 25.
            </summary>
            <value>
                The default framerate.
            </value>
            -------------------------------------------------------------------------------------------------
        </member>
        <member name="M:StreamCoders.Container.H264NalReader.Init(System.String)">
            -------------------------------------------------------------------------------------------------
            <summary>
                Initialises this instance given a filename.
            </summary>
            <param name="fileName">
                Filename of the file.
            </param>
            <returns>
                true if it succeeds, false if it fails.
            </returns>
            -------------------------------------------------------------------------------------------------
        </member>
        <member name="M:StreamCoders.Container.H264NalReader.Init(System.IO.Stream)">
            -------------------------------------------------------------------------------------------------
            <summary>
                Initialises this instance given a stream.
            </summary>
            <param name="inputStream">
                The stream.
            </param>
            <returns>
                true if it succeeds, false if it fails.
            </returns>
            -------------------------------------------------------------------------------------------------
        </member>
        <member name="P:StreamCoders.Container.H264NalReader.Position">
            -------------------------------------------------------------------------------------------------
            <summary>
                Gets the current position.
            </summary>
            <value>
                The position.
            </value>
            -------------------------------------------------------------------------------------------------
        </member>
        <member name="M:StreamCoders.Container.H264NalReader.FindNextNal">
            -------------------------------------------------------------------------------------------------
            <summary>
                Searches for the next NAL unit.
            </summary>
            <remarks>
                This is a bit slow since every byte is touched on disk. Alternatively one could imagine a
                dynamic array implementation.
            </remarks>
            <returns>
                Returns absolute start and end position of NAL in stream. If EOS was detected, then the KeyValuePair.Value is -1.
            </returns>
            -------------------------------------------------------------------------------------------------
        </member>
        <member name="M:StreamCoders.Container.H264NalReader.GetNalUnitType(StreamCoders.OffsetBuffer{System.Byte})">
            -------------------------------------------------------------------------------------------------
            <summary>
                Get the NAL type code from buffer.
            </summary>
            <param name="buffer">
                The buffer.
            </param>
            <returns>
                The nal unit type.
            </returns>
            -------------------------------------------------------------------------------------------------
        </member>
        <member name="T:StreamCoders.Container.H265NalReader">
            -------------------------------------------------------------------------------------------------
            <summary>
                Implements reading from <b>.H265</b> files which are raw H.265 NAL units without any
                timing information.
            </summary>
            <remarks>
                The reader assumes the content to contain a valid H.265 bitstream. There is no error
                checking as this file type has no framing.<br />
                <br />
                Limitations:<br />
                <b>Seeking is not supported.</b>
            </remarks>
            -------------------------------------------------------------------------------------------------
        </member>
        <member name="P:StreamCoders.Container.H265NalReader.DefaultFramerate">
            -------------------------------------------------------------------------------------------------
            <summary>
                Gets or sets the default framerate. This is a fallback value in case the framerate cannot
                be deduced from the supplied sequence parameter set.
                <br />
                The Default value is 25.
            </summary>
            <value>
                The default framerate.
            </value>
            -------------------------------------------------------------------------------------------------
        </member>
        <member name="M:StreamCoders.Container.H265NalReader.Init(System.String)">
            -------------------------------------------------------------------------------------------------
            <summary>
                Initialises this instance given a filename.
            </summary>
            <param name="fileName">
                Filename of the file.
            </param>
            <returns>
                true if it succeeds, false if it fails.
            </returns>
            -------------------------------------------------------------------------------------------------
        </member>
        <member name="M:StreamCoders.Container.H265NalReader.Init(System.IO.Stream)">
            -------------------------------------------------------------------------------------------------
            <summary>
                Initialises this instance given a stream.
            </summary>
            <param name="inputStream">
                The stream.
            </param>
            <returns>
                true if it succeeds, false if it fails.
            </returns>
            -------------------------------------------------------------------------------------------------
        </member>
        <member name="P:StreamCoders.Container.H265NalReader.Position">
            -------------------------------------------------------------------------------------------------
            <summary>
                Gets the current position.
            </summary>
            <value>
                The position.
            </value>
            -------------------------------------------------------------------------------------------------
        </member>
        <member name="M:StreamCoders.Container.H265NalReader.FindNextNal">
            -------------------------------------------------------------------------------------------------
            <summary>
                Searches for the next NAL unit.
            </summary>
            <remarks>
                This is a bit slow since every byte is touched on disk. Alternatively one could imagine a
                dynamic array implementation.
            </remarks>
            <returns>
                Returns absolute start and end position of NAL in stream. If EOS was detected, then the KeyValuePair.Value is -1.
            </returns>
            -------------------------------------------------------------------------------------------------
        </member>
        <member name="M:StreamCoders.Container.H265NalReader.GetNalUnitType(StreamCoders.OffsetBuffer{System.Byte})">
            -------------------------------------------------------------------------------------------------
            <summary>
                Get the NAL type code from buffer.
            </summary>
            <param name="buffer">
                The buffer.
            </param>
            <returns>
                The nal unit type.
            </returns>
            -------------------------------------------------------------------------------------------------
        </member>
        <member name="F:StreamCoders.Container.ContentEncodingType.None">
            <summary>
                No compression used.
            </summary>
        </member>
        <member name="F:StreamCoders.Container.ContentEncodingType.Zlib">
            <summary>
                ZLib compression is used on blocks.
            </summary>
        </member>
        <member name="F:StreamCoders.Container.ContentEncodingType.HeaderStripped">
            <summary>
                All block headers are stripped.
            </summary>
        </member>
        <member name="T:StreamCoders.Container.EbmlReader">
            <summary>
                Implements reading of EBML streams.
            </summary>
            <remarks>See <see cref="!:http://ebml.sourceforge.net/" /> for more information.</remarks>
        </member>
        <member name="M:StreamCoders.Container.EbmlReader.ReadVInt">
            -------------------------------------------------------------------------------------------------
            <summary>
                Reads an unsigned VInt from stream.
            </summary>
            <returns>
                Returns VInt.
            </returns>
            -------------------------------------------------------------------------------------------------
        </member>
        <member name="M:StreamCoders.Container.EbmlReader.ReadVsInt">
            -------------------------------------------------------------------------------------------------
            <summary>
                Reads a signed VInt from stream.
            </summary>
            <returns>
                Returns VSInt.
            </returns>
            -------------------------------------------------------------------------------------------------
        </member>
        <member name="M:StreamCoders.Container.EbmlReader.ReadFixedSInt(System.Int32)">
            -------------------------------------------------------------------------------------------------
            <summary>
                This is to facilitate signed fixed length primitives such as: int8 or sint16.
            </summary>
            <param name="numberOfBytes">    Number of bytes to read. </param>
            <returns>
                The fixed signed int.
            </returns>
            -------------------------------------------------------------------------------------------------
        </member>
        <member name="M:StreamCoders.Container.EbmlReader.ReadFixedInt(System.Int32)">
            -------------------------------------------------------------------------------------------------
            <summary>
                This is to facilitate unsigned fixed length primitives such as: int8 or sint16.
            </summary>
            <param name="numberOfBytes">    Number of bytes to read. </param>
            <returns>
                The fixed unsigned int.
            </returns>
            -------------------------------------------------------------------------------------------------
        </member>
        <member name="M:StreamCoders.Container.EbmlReader.ReadDataFloat(System.Int64)">
            <summary>
                Reads either 4 or 8 byte floating point.
            </summary>
            <param name="size">4 bytes single precision cast to double, 8 bytes double precision.</param>
            <returns>Returns double</returns>
        </member>
        <member name="M:StreamCoders.Container.EbmlReader.GetRelativePositionTo(System.Int64)">
            -------------------------------------------------------------------------------------------------
            <summary>
                Gets a relative position to an arbitrary file offset.
            </summary>
            <param name="offset">   The offset. </param>
            <returns>
                The relative position.
            </returns>
            -------------------------------------------------------------------------------------------------
        </member>
        <member name="T:StreamCoders.Container.ElementIdMap">
            -------------------------------------------------------------------------------------------------
            <summary>
                Provides functionality to work with Matroska Elements.
            </summary>
            -------------------------------------------------------------------------------------------------
        </member>
        <member name="M:StreamCoders.Container.ElementIdMap.Find(StreamCoders.Container.ElementType)">
            -------------------------------------------------------------------------------------------------
            <summary>
                Finds Element given the Element id.
            </summary>
            <param name="elementId">
                Identifier for the element.
            </param>
            <returns>
                An ElementMap.
            </returns>
            -------------------------------------------------------------------------------------------------
        </member>
        <member name="M:StreamCoders.Container.ElementIdMap.Find(System.Byte[])">
            -------------------------------------------------------------------------------------------------
            <summary>
                Finds Element given byte signature as stored in a container.
            </summary>
            <param name="idData">
                Byte array containing element signature.
            </param>
            <returns>
                An ElementMap.
            </returns>
            -------------------------------------------------------------------------------------------------
        </member>
        <member name="M:StreamCoders.Container.ElementIdMap.Instantiate(StreamCoders.Container.ElementType[])">
            -------------------------------------------------------------------------------------------------
            <summary>
                Instantiates a variable number of Elements given their IDs.
            </summary>
            <param name="elementIds">
                List of instantiated ElementBase objects.
            </param>
            <returns>
                .
            </returns>
            -------------------------------------------------------------------------------------------------
        </member>
        <member name="M:StreamCoders.Container.ElementIdMap.Find``1(System.Collections.Generic.List{StreamCoders.Container.ElementBase},StreamCoders.Container.ElementType)">
            -------------------------------------------------------------------------------------------------
            <summary>
                Finds the first occurance of an Element id give a list of Elements.
            </summary>
            <typeparam name="T">
                Generic type parameter.
            </typeparam>
            <param name="elements">
                The elements to act on.
            </param>
            <param name="elementType">
                Type of the element.
            </param>
            <returns>
                A T.
            </returns>
            -------------------------------------------------------------------------------------------------
        </member>
        <member name="T:StreamCoders.Container.ElementBase">
            -------------------------------------------------------------------------------------------------
            <summary>
                Base class for all Matroska elements.
            </summary>
            -------------------------------------------------------------------------------------------------
        </member>
        <member name="M:StreamCoders.Container.ElementBase.SkipElement(StreamCoders.Container.EbmlReader)">
            -------------------------------------------------------------------------------------------------
            <summary>
                Skips the current element.
            </summary>
            <param name="reader">   inputStream to read from. </param>
            -------------------------------------------------------------------------------------------------
        </member>
        <member name="M:StreamCoders.Container.ElementBase.ReadElementSize(StreamCoders.Container.EbmlReader)">
            -------------------------------------------------------------------------------------------------
            <summary>
                Stores and returns size of element and also initializes internal element offset tracking.
            </summary>
            <param name="reader">   The stream to read from. </param>
            <returns>
                Returns size of element.
            </returns>
            <remarks>
                Element sizes of all binary 1s indicate that the element is of undetermined size. (e.g. live streams)
            </remarks>
            -------------------------------------------------------------------------------------------------
        </member>
        <member name="M:StreamCoders.Container.ElementBase.ReadId(StreamCoders.Container.EbmlReader)">
            -------------------------------------------------------------------------------------------------
            <summary>
                Reads an Element ID.
            </summary>
            <param name="reader">   The stream to read from. </param>
            <returns>
                Returns the Element ID.
            </returns>
            -------------------------------------------------------------------------------------------------
        </member>
        <member name="M:StreamCoders.Container.ElementBase.ReadBuffer(StreamCoders.Container.EbmlReader,System.Int64)">
            -------------------------------------------------------------------------------------------------
            <summary>
                Reads a number of bytes into a byte array.
            </summary>
            <param name="reader">   The stream to read from. </param>
            <param name="count">    Number of bytes to read. </param>
            <returns>
                Returns an array of byte.
            </returns>
            -------------------------------------------------------------------------------------------------
        </member>
        <member name="M:StreamCoders.Container.ElementBase.ReadString(StreamCoders.Container.EbmlReader,System.Int64)">
            -------------------------------------------------------------------------------------------------
            <summary>
                Reads an octet string.
            </summary>
            <param name="reader">   The stream to read from. </param>
            <param name="count">    Number of bytes to read. </param>
            <returns>
                A string.
            </returns>
            -------------------------------------------------------------------------------------------------
        </member>
        <member name="M:StreamCoders.Container.ElementBase.PopulateChildren(StreamCoders.Container.EbmlReader)">
            -------------------------------------------------------------------------------------------------
            <summary>
                Populate children of the current element.
            </summary>
            <exception cref="T:System.Exception">    Thrown when an exception error condition occurs. </exception>
            <param name="reader">   The stream to read from. </param>
            <returns>
                Returns <c>PopulateResult</c> to indicate success or failure.
            </returns>
            -------------------------------------------------------------------------------------------------
        </member>
        <member name="M:StreamCoders.Container.ElementBase.PopulateNextChild(StreamCoders.Container.EbmlReader)">
            -------------------------------------------------------------------------------------------------
            <summary>
                Populates the next child only.
            </summary>
            <exception cref="T:System.Exception">    Thrown when an exception error condition occurs. </exception>
            <param name="reader">   inputStream to read from. </param>
            <returns>
                .
            </returns>
            -------------------------------------------------------------------------------------------------
        </member>
        <member name="M:StreamCoders.Container.ElementBase.FindFirstChild(StreamCoders.Container.ElementType)">
            -------------------------------------------------------------------------------------------------
            <summary>
                Finds the first child that matches an <c>ElementType</c>
            </summary>
            <param name="element">  The element type. </param>
            <returns>
                The found child, otherwise null.
            </returns>
            -------------------------------------------------------------------------------------------------
        </member>
        <member name="M:StreamCoders.Container.ElementBase.FindAll(StreamCoders.Container.ElementType)">
            -------------------------------------------------------------------------------------------------
            <summary>
                Finds all children that match an <c>ElementType</c>
            </summary>
            <param name="element">  The element type. </param>
            <returns>
                The found children.
            </returns>
            -------------------------------------------------------------------------------------------------
        </member>
        <member name="M:StreamCoders.Container.ElementBase.FindAll``1(StreamCoders.Container.ElementType)">
            -------------------------------------------------------------------------------------------------
            <summary>
                Finds all children that match an <c>ElementType</c> and casts to T.
            </summary>
            <param name="element">  The element type. </param>
            <returns>
                The found children.
            </returns>
            -------------------------------------------------------------------------------------------------
        </member>
        <member name="M:StreamCoders.Container.ElementBase.FindFirstChild``1(StreamCoders.Container.ElementType)">
            -------------------------------------------------------------------------------------------------
            <summary>
                Finds the first child that matches an <c>ElementType</c> and casts to T.
            </summary>
            <param name="element">  The element type. </param>
            <returns>
                The found child, otherwise null.
            </returns>
            -------------------------------------------------------------------------------------------------
        </member>
        <member name="M:StreamCoders.Container.ElementBase.UpdateElementSizeForWriting">
            <summary>
                Updates ElementSize by simulation to a dummy EbmlWriter.
            </summary>
        </member>
        <member name="M:StreamCoders.Container.ElementBase.WriteElement(StreamCoders.Container.EbmlWriter)">
            <summary>
                Writes the whole element to the EBML output stream
            </summary>
            <param name="writer">EBML writer object</param>
            <returns></returns>
        </member>
        <member name="T:StreamCoders.Container.Elements.ElementBinary">
            -------------------------------------------------------------------------------------------------
            <summary>
                A binary element. Supports reading and writing of byte arrays.
            </summary>
            <seealso cref="T:StreamCoders.Container.ElementBase" />
            -------------------------------------------------------------------------------------------------
        </member>
        <member name="T:StreamCoders.Container.Elements.ElementBlock">
            -------------------------------------------------------------------------------------------------
            <summary>
                Contains one or more media buffers.
            </summary>
            <remarks>
                When the ElementBlock is written the lacing type is determined based upon the traits of the
                media buffers contained within.
            </remarks>
            <seealso cref="T:StreamCoders.Container.ElementBase" />
            -------------------------------------------------------------------------------------------------
        </member>
        <member name="F:StreamCoders.Container.Elements.ElementBlock.DelacedElementBlocks">
            -------------------------------------------------------------------------------------------------
            <summary>
                The delaced element blocks only contains data of LacingType != NoLacing.
            </summary>
            <remarks>
                An element block can contain multiple laced chunks of data in order to save space in the
                container. ElementSimpleblock expands the laced data to multiple ElementSimpleBlocks and
                saves them in DelacedElementBlocks.
            </remarks>
            -------------------------------------------------------------------------------------------------
        </member>
        <member name="M:StreamCoders.Container.Elements.ElementBlock.DetermineLacingType">
            -------------------------------------------------------------------------------------------------
            <summary>
                Determines the lacing type of the elementblocks based on their sizes. If they are all
                the same the lacing type will be fixed, otherwise EBML lacing.
            </summary>
            <returns>
                .
            </returns>
            -------------------------------------------------------------------------------------------------
        </member>
        <member name="T:StreamCoders.Container.Elements.ElementBool">
            -------------------------------------------------------------------------------------------------
            <summary>
                A boolean Element. Supports reading and writing of boolean values.
            </summary>
            <seealso cref="T:StreamCoders.Container.ElementBase" />
            -------------------------------------------------------------------------------------------------
        </member>
        <member name="T:StreamCoders.Container.Elements.ElementCodecId">
            -------------------------------------------------------------------------------------------------
            <summary>
                Codec Element supports parsing of codec information contained in <c>MatroskaCodecIdMap</c>
            </summary>
            <seealso cref="T:StreamCoders.Container.ElementBase" />
            -------------------------------------------------------------------------------------------------
        </member>
        <member name="T:StreamCoders.Container.Elements.ElementDateUtc">
            -------------------------------------------------------------------------------------------------
            <summary>
                Date Element. Supports reading and writing of date information.
            </summary>
            <seealso cref="T:StreamCoders.Container.ElementBase" />
            -------------------------------------------------------------------------------------------------
        </member>
        <member name="T:StreamCoders.Container.Elements.ElementFloat">
            -------------------------------------------------------------------------------------------------
            <summary>
                Float Element supports reading and writing of floating point values.
            </summary>
            <seealso cref="T:StreamCoders.Container.ElementBase" />
            -------------------------------------------------------------------------------------------------
        </member>
        <member name="T:StreamCoders.Container.Elements.ElementInt">
            -------------------------------------------------------------------------------------------------
            <summary>
                Int Element supports reading and writing of integer values.
            </summary>
            <seealso cref="T:StreamCoders.Container.ElementBase" />
            -------------------------------------------------------------------------------------------------
        </member>
        <member name="T:StreamCoders.Container.Elements.ElementMasterElement">
            -------------------------------------------------------------------------------------------------
            <summary>
                Matroska Master Element.
            </summary>
            <seealso cref="T:StreamCoders.Container.ElementBase" />
            -------------------------------------------------------------------------------------------------
        </member>
        <member name="T:StreamCoders.Container.Elements.ElementRoot">
            -------------------------------------------------------------------------------------------------
            <summary>
                Matroska root element. Represents position zero in a container.
            </summary>
            <seealso cref="T:StreamCoders.Container.ElementBase" />
            -------------------------------------------------------------------------------------------------
        </member>
        <member name="T:StreamCoders.Container.Elements.ElementSeekId">
            -------------------------------------------------------------------------------------------------
            <summary>
                Seek ID Element supports correlating elements with positions inside a Matroska container.
            </summary>
            <seealso cref="T:StreamCoders.Container.Elements.ElementBinary" />
            -------------------------------------------------------------------------------------------------
        </member>
        <member name="T:StreamCoders.Container.Elements.ElementSegment">
            -------------------------------------------------------------------------------------------------
            <summary>
                Segment Element.
            </summary>
            <seealso cref="T:StreamCoders.Container.Elements.ElementMasterElement" />
            -------------------------------------------------------------------------------------------------
        </member>
        <member name="T:StreamCoders.Container.Elements.ElementSimpleBlock">
            -------------------------------------------------------------------------------------------------
            <summary>
                SimpleBlock Element.
            </summary>
            <seealso cref="T:StreamCoders.Container.Elements.ElementBlock" />
            -------------------------------------------------------------------------------------------------
        </member>
        <member name="F:StreamCoders.Container.Elements.ElementSimpleBlock.DiscardableFrame">
            -------------------------------------------------------------------------------------------------
            <summary>
                Indicates whether the contained frame can be discarded by the player.
            </summary>
            -------------------------------------------------------------------------------------------------
        </member>
        <member name="F:StreamCoders.Container.Elements.ElementSimpleBlock.KeyFrame">
            -------------------------------------------------------------------------------------------------
            <summary>
                Indicates whether the contained frame is a key frame.
            </summary>
            -------------------------------------------------------------------------------------------------
        </member>
        <member name="T:StreamCoders.Container.Elements.ElementString">
            -------------------------------------------------------------------------------------------------
            <summary>
                String Element supports reading and writing of strings.
            </summary>
            <seealso cref="T:StreamCoders.Container.ElementBase" />
            -------------------------------------------------------------------------------------------------
        </member>
        <member name="T:StreamCoders.Container.Elements.ElementTrackType">
            -------------------------------------------------------------------------------------------------
            <summary>
                TrackType Element supports reading and writing of track type information.
            </summary>
            <seealso cref="T:StreamCoders.Container.ElementBase" />
            -------------------------------------------------------------------------------------------------
        </member>
        <member name="T:StreamCoders.Container.Elements.ElementUInt">
            -------------------------------------------------------------------------------------------------
            <summary>
                UInt Element supports reading and writing of unsigned integers.
            </summary>
            <seealso cref="T:StreamCoders.Container.ElementBase" />
            -------------------------------------------------------------------------------------------------
        </member>
        <member name="T:StreamCoders.Container.Elements.ElementUtf8">
            -------------------------------------------------------------------------------------------------
            <summary>
                UTF8 Element supports reading and writing of UTF8 strings.
            </summary>
            <seealso cref="T:StreamCoders.Container.ElementBase" />
            -------------------------------------------------------------------------------------------------
        </member>
        <member name="T:StreamCoders.Container.Elements.MatroskaTrackType">
            -------------------------------------------------------------------------------------------------
            <summary>
                Matroska track type indication.
            </summary>
            -------------------------------------------------------------------------------------------------
        </member>
        <member name="F:StreamCoders.Container.Elements.MatroskaTrackType.Video">
            <summary>
                Indicates a video track.
            </summary>
        </member>
        <member name="F:StreamCoders.Container.Elements.MatroskaTrackType.Audio">
            <summary>
                Indicates an audio track.
            </summary>
        </member>
        <member name="F:StreamCoders.Container.Elements.MatroskaTrackType.Complex">
            <summary>
                Not supported.
            </summary>
        </member>
        <member name="F:StreamCoders.Container.Elements.MatroskaTrackType.Logo">
            <summary>
                Not supported.
            </summary>
        </member>
        <member name="F:StreamCoders.Container.Elements.MatroskaTrackType.SubTitle">
            <summary>
                Not supported.
            </summary>
        </member>
        <member name="F:StreamCoders.Container.Elements.MatroskaTrackType.Buttons">
            <summary>
                Not supported.
            </summary>
        </member>
        <member name="F:StreamCoders.Container.Elements.MatroskaTrackType.Control">
            <summary>
                Not supported.
            </summary>
        </member>
        <member name="T:StreamCoders.Container.PopulateResult">
            -------------------------------------------------------------------------------------------------
            <summary>
                Results that are returned by ElementBase.Populate.
            </summary>
            -------------------------------------------------------------------------------------------------
        </member>
        <member name="F:StreamCoders.Container.PopulateResult.Ok">
            <summary>
                Indicates that the Element and its children parsed correctly.
            </summary>
        </member>
        <member name="F:StreamCoders.Container.PopulateResult.ClusterDetected">
            <summary>
                Indicates that the Element was parsed correctly, but a cluster was encountered.
            </summary>
        </member>
        <member name="F:StreamCoders.Container.PopulateResult.Error">
            <summary>
                Indicates that an error was encountered while parsing the Element or one of its children.
            </summary>
        </member>
        <member name="F:StreamCoders.Container.ElementType.Root">
            <summary>
                [Type: ElementMasterElement]
            </summary>
        </member>
        <member name="F:StreamCoders.Container.ElementType.Ebml">
            <summary>
                [Type: ElementMasterElement] Set the EBML characteristics of the data to follow. Each EBML document has to start
                with this.
            </summary>
        </member>
        <member name="F:StreamCoders.Container.ElementType.EbmlVersion">
            <summary>
                [Type: ElementUInt] The version of EBML parser used to create the file.
            </summary>
        </member>
        <member name="F:StreamCoders.Container.ElementType.EbmlReadVersion">
            <summary>
                [Type: ElementUInt] The minimum EBML version a parser has to support to read this file.
            </summary>
        </member>
        <member name="F:StreamCoders.Container.ElementType.EbmlMaxIdLength">
            <summary>
                [Type: ElementUInt] The maximum length of the IDs you'll find in this file (4 or less in Matroska).
            </summary>
        </member>
        <member name="F:StreamCoders.Container.ElementType.EbmlMaxSizeLength">
            <summary>
                [Type: ElementUInt] The maximum length of the sizes you'll find in this file (8 or less in Matroska). This does not
                override the Element size indicated at the beginning of an Element. Elements that have an indicated size which is
                larger than what is allowed by EBMLMaxSizeLength shall be considered invalid.
            </summary>
        </member>
        <member name="F:StreamCoders.Container.ElementType.DocType">
            <summary>
                [Type: ElementString] A string that describes the type of document that follows this EBML header. 'matroska' in our
                case or 'webm' for webm files.
            </summary>
        </member>
        <member name="F:StreamCoders.Container.ElementType.DocTypeVersion">
            <summary>
                [Type: ElementUInt] The version of DocType interpreter used to create the file.
            </summary>
        </member>
        <member name="F:StreamCoders.Container.ElementType.DocTypeReadVersion">
            <summary>
                [Type: ElementUInt] The minimum DocType version an interpreter has to support to read this file.
            </summary>
        </member>
        <member name="F:StreamCoders.Container.ElementType.Void">
            <summary>
                [Type: ElementBinary] Used to void damaged data, to avoid unexpected behaviors when using damaged data. The content
                is discarded. Also used to reserve space in a sub-element for later use.
            </summary>
        </member>
        <member name="F:StreamCoders.Container.ElementType.Crc32">
            <summary>
                [Type: ElementBinary] The CRC is computed on all the data of the Master-element it's in. The CRC Element should be
                the first in it's parent master for easier reading. All level 1 Elements should include a CRC-32. The CRC in use is
                the IEEE CRC32 Little Endian
            </summary>
        </member>
        <member name="F:StreamCoders.Container.ElementType.SignatureSlot">
            <summary>
                [Type: ElementMasterElement] Contain signature of some (coming) Elements in the stream.
            </summary>
        </member>
        <member name="F:StreamCoders.Container.ElementType.SignatureAlgo">
            <summary>
                [Type: ElementUInt] Signature algorithm used (1=RSA, 2=elliptic).
            </summary>
        </member>
        <member name="F:StreamCoders.Container.ElementType.SignatureHash">
            <summary>
                [Type: ElementUInt] Hash algorithm used (1=SHA1-160, 2=MD5).
            </summary>
        </member>
        <member name="F:StreamCoders.Container.ElementType.SignaturePublicKey">
            <summary>
                [Type: ElementBinary] The public key to use with the algorithm (in the case of a PKI-based signature).
            </summary>
        </member>
        <member name="F:StreamCoders.Container.ElementType.Signature">
            <summary>
                [Type: ElementBinary] The signature of the data (until a new.
            </summary>
        </member>
        <member name="F:StreamCoders.Container.ElementType.SignatureElements">
            <summary>
                [Type: ElementMasterElement] Contains Elements that will be used to compute the signature.
            </summary>
        </member>
        <member name="F:StreamCoders.Container.ElementType.SignatureElementList">
            <summary>
                [Type: ElementMasterElement] A list consists of a number of consecutive Elements that represent one case where data
                is used in signature. Ex: Cluster|Block|BlockAdditional means that the BlockAdditional of all Blocks in all
                Clusters is used for encryption.
            </summary>
        </member>
        <member name="F:StreamCoders.Container.ElementType.SignedElement">
            <summary>
                [Type: ElementBinary] An Element ID whose data will be used to compute the signature.
            </summary>
        </member>
        <member name="F:StreamCoders.Container.ElementType.Segment">
            <summary>
                [Type: ElementSegment] The Root Element that contains all other Top-Level Elements (Elements defined only at Level
                1). A Matroska file is composed of 1 Segment.
            </summary>
        </member>
        <member name="F:StreamCoders.Container.ElementType.SeekHead">
            <summary>
                [Type: ElementMasterElement] Contains the position of other Top-Level Elements.
            </summary>
        </member>
        <member name="F:StreamCoders.Container.ElementType.Seek">
            <summary>
                [Type: ElementMasterElement] Contains a single seek entry to an EBML Element.
            </summary>
        </member>
        <member name="F:StreamCoders.Container.ElementType.SeekId">
            <summary>
                [Type: ElementSeekId] The binary ID corresponding to the Element name.
            </summary>
        </member>
        <member name="F:StreamCoders.Container.ElementType.SeekPosition">
            <summary>
                [Type: ElementUInt] The position of the Element in the Segment in octets (0 = first level 1 Element).
            </summary>
        </member>
        <member name="F:StreamCoders.Container.ElementType.Info">
            <summary>
                [Type: ElementMasterElement] Contains miscellaneous general information and statistics on the file.
            </summary>
        </member>
        <member name="F:StreamCoders.Container.ElementType.SegmentUid">
            <summary>
                [Type: ElementBinary] A randomly generated unique ID to identify the current Segment between many others (128
                bits).
            </summary>
        </member>
        <member name="F:StreamCoders.Container.ElementType.SegmentFilename">
            <summary>
                [Type: ElementUtf8] A filename corresponding to this Segment.
            </summary>
        </member>
        <member name="F:StreamCoders.Container.ElementType.PrevUid">
            <summary>
                [Type: ElementBinary] A unique ID to identify the previous chained Segment (128 bits).
            </summary>
        </member>
        <member name="F:StreamCoders.Container.ElementType.PrevFilename">
            <summary>
                [Type: ElementUtf8] An escaped filename corresponding to the previous Segment.
            </summary>
        </member>
        <member name="F:StreamCoders.Container.ElementType.NextUid">
            <summary>
                [Type: ElementBinary] A unique ID to identify the next chained Segment (128 bits).
            </summary>
        </member>
        <member name="F:StreamCoders.Container.ElementType.NextFilename">
            <summary>
                [Type: ElementUtf8] An escaped filename corresponding to the next Segment.
            </summary>
        </member>
        <member name="F:StreamCoders.Container.ElementType.SegmentFamily">
            <summary>
                [Type: ElementBinary] A randomly generated unique ID that all Segments related to each other must use (128 bits).
            </summary>
        </member>
        <member name="F:StreamCoders.Container.ElementType.ChapterTranslate">
            <summary>
                [Type: ElementMasterElement] A tuple of corresponding ID used by chapter codecs to represent this Segment.
            </summary>
        </member>
        <member name="F:StreamCoders.Container.ElementType.ChapterTranslateEditionUid">
            <summary>
                [Type: ElementUInt] Specify an edition UID on which this correspondance applies. When not specified, it means for
                all editions found in the Segment.
            </summary>
        </member>
        <member name="F:StreamCoders.Container.ElementType.ChapterTranslateCodec">
            <summary>
                [Type: ElementUInt] The chapter codec using this ID (0: Matroska Script, 1: DVD-menu).
            </summary>
        </member>
        <member name="F:StreamCoders.Container.ElementType.ChapterTranslateId">
            <summary>
                [Type: ElementBinary] The binary value used to represent this Segment in the chapter codec data. The format depends
                on the ChapProcessCodecID used.
            </summary>
        </member>
        <member name="F:StreamCoders.Container.ElementType.TimecodeScale">
            <summary>
                [Type: ElementUInt] Timestamp scale in nanoseconds (1.000.000 means all timestamps in the Segment are expressed in
                milliseconds).
            </summary>
        </member>
        <member name="F:StreamCoders.Container.ElementType.Duration">
            <summary>
                [Type: ElementFloat] Duration of the Segment (based on TimecodeScale).
            </summary>
        </member>
        <member name="F:StreamCoders.Container.ElementType.DateUtc">
            <summary>
                [Type: ElementDateUtc] Date of the origin of timestamp (value 0), i.e. production date.
            </summary>
        </member>
        <member name="F:StreamCoders.Container.ElementType.Title">
            <summary>
                [Type: ElementUtf8] General name of the Segment.
            </summary>
        </member>
        <member name="F:StreamCoders.Container.ElementType.MuxingApp">
            <summary>
                [Type: ElementUtf8] Muxing application or library ("libmatroska-0.4.3").
            </summary>
        </member>
        <member name="F:StreamCoders.Container.ElementType.WritingApp">
            <summary>
                [Type: ElementUtf8] Writing application ("mkvmerge-0.3.3").
            </summary>
        </member>
        <member name="F:StreamCoders.Container.ElementType.Cluster">
            <summary>
                [Type: ElementMasterElement] The Top-Level Element containing the (monolithic) Block structure.
            </summary>
        </member>
        <member name="F:StreamCoders.Container.ElementType.Timecode">
            <summary>
                [Type: ElementUInt] Absolute timestamp of the cluster (based on TimecodeScale).
            </summary>
        </member>
        <member name="F:StreamCoders.Container.ElementType.SilentTracks">
            <summary>
                [Type: ElementMasterElement] The list of tracks that are not used in that part of the stream. It is useful when
                using overlay tracks on seeking. Then you should decide what track to use.
            </summary>
        </member>
        <member name="F:StreamCoders.Container.ElementType.SilentTrackNumber">
            <summary>
                [Type: ElementUInt] One of the track number that are not used from now on in the stream. It could change later if
                not specified as silent in a further Cluster.
            </summary>
        </member>
        <member name="F:StreamCoders.Container.ElementType.Position">
            <summary>
                [Type: ElementUInt] The Position of the Cluster in the Segment (0 in live broadcast streams). It might help to
                resynchronise offset on damaged streams.
            </summary>
        </member>
        <member name="F:StreamCoders.Container.ElementType.PrevSize">
            <summary>
                [Type: ElementUInt] Size of the previous Cluster, in octets. Can be useful for backward playing.
            </summary>
        </member>
        <member name="F:StreamCoders.Container.ElementType.SimpleBlock">
            <summary>
                [Type: ElementSimpleBlock] Similar to Block but without all the extra information, mostly used to reduced overhead
                when no extra feature is needed. (see SimpleBlock Structure)
            </summary>
        </member>
        <member name="F:StreamCoders.Container.ElementType.BlockGroup">
            <summary>
                [Type: ElementMasterElement] Basic container of information containing a single Block or BlockVirtual, and
                information specific to that Block/VirtualBlock.
            </summary>
        </member>
        <member name="F:StreamCoders.Container.ElementType.Block">
            <summary>
                [Type: ElementBlock] Block containing the actual data to be rendered and a timestamp relative to the Cluster
                Timecode. (see Block Structure)
            </summary>
        </member>
        <member name="F:StreamCoders.Container.ElementType.BlockVirtual">
            <summary>
                [Type: ElementBinary] A Block with no data. It must be stored in the stream at the place the real Block should be
                in display order. (see Block Virtual)
            </summary>
        </member>
        <member name="F:StreamCoders.Container.ElementType.BlockAdditions">
            <summary>
                [Type: ElementMasterElement] Contain additional blocks to complete the main one. An EBML parser that has no
                knowledge of the Block structure could still see and use/skip these data.
            </summary>
        </member>
        <member name="F:StreamCoders.Container.ElementType.BlockMore">
            <summary>
                [Type: ElementMasterElement] Contain the BlockAdditional and some parameters.
            </summary>
        </member>
        <member name="F:StreamCoders.Container.ElementType.BlockAddId">
            <summary>
                [Type: ElementUInt] An ID to identify the BlockAdditional level.
            </summary>
        </member>
        <member name="F:StreamCoders.Container.ElementType.BlockAdditional">
            <summary>
                [Type: ElementBinary] Interpreted by the codec as it wishes (using the BlockAddID).
            </summary>
        </member>
        <member name="F:StreamCoders.Container.ElementType.BlockDuration">
            <summary>
                [Type: ElementUInt] The duration of the Block (based on TimecodeScale). This Element is mandatory when
                DefaultDuration is set for the track (but can be omitted as other default values). When not written and with no
                DefaultDuration, the value is assumed to be the difference between the timestamp of this Block and the timestamp of
                the next Block in "display" order (not coding order). This Element can be useful at the end of a Track (as there is
                not other Block available), or when there is a break in a track like for subtitle tracks. When set to 0 that means
                the frame is not a keyframe.
            </summary>
        </member>
        <member name="F:StreamCoders.Container.ElementType.ReferencePriority">
            <summary>
                [Type: ElementUInt] This frame is referenced and has the specified cache priority. In cache only a frame of the
                same or higher priority can replace this frame. A value of 0 means the frame is not referenced.
            </summary>
        </member>
        <member name="F:StreamCoders.Container.ElementType.ReferenceBlock">
            <summary>
                [Type: ElementInt] Timestamp of another frame used as a reference (ie: B or P frame). The timestamp is relative to
                the block it's attached to.
            </summary>
        </member>
        <member name="F:StreamCoders.Container.ElementType.ReferenceVirtual">
            <summary>
                [Type: ElementInt] Relative position of the data that should be in position of the virtual block.
            </summary>
        </member>
        <member name="F:StreamCoders.Container.ElementType.CodecState">
            <summary>
                [Type: ElementBinary] The new codec state to use. Data interpretation is private to the codec. This information
                should always be referenced by a seek entry.
            </summary>
        </member>
        <member name="F:StreamCoders.Container.ElementType.DiscardPadding">
            <summary>
                [Type: ElementInt] Duration in nanoseconds of the silent data added to the Block (padding at the end of the Block
                for positive value, at the beginning of the Block for negative value). The duration of DiscardPadding is not
                calculated in the duration of the TrackEntry and should be discarded during playback.
            </summary>
        </member>
        <member name="F:StreamCoders.Container.ElementType.Slices">
            <summary>
                [Type: ElementMasterElement] Contains slices description.
            </summary>
        </member>
        <member name="F:StreamCoders.Container.ElementType.TimeSlice">
            <summary>
                [Type: ElementMasterElement] Contains extra time information about the data contained in the Block. While there are
                a few files in the wild with this Element, it is no longer in use and has been deprecated. Being able to interpret
                this Element is not required for playback.
            </summary>
        </member>
        <member name="F:StreamCoders.Container.ElementType.LaceNumber">
            <summary>
                [Type: ElementUInt] The reverse number of the frame in the lace (0 is the last frame, 1 is the next to last, etc).
                While there are a few files in the wild with this Element, it is no longer in use and has been deprecated. Being
                able to interpret this Element is not required for playback.
            </summary>
        </member>
        <member name="F:StreamCoders.Container.ElementType.FrameNumber">
            <summary>
                [Type: ElementUInt] The number of the frame to generate from this lace with this delay (allow you to generate many
                frames from the same Block/Frame).
            </summary>
        </member>
        <member name="F:StreamCoders.Container.ElementType.BlockAdditionId">
            <summary>
                [Type: ElementUInt] The ID of the BlockAdditional Element (0 is the main Block).
            </summary>
        </member>
        <member name="F:StreamCoders.Container.ElementType.Delay">
            <summary>
                [Type: ElementUInt] The (scaled) delay to apply to the Element.
            </summary>
        </member>
        <member name="F:StreamCoders.Container.ElementType.SliceDuration">
            <summary>
                [Type: ElementUInt] The (scaled) duration to apply to the Element.
            </summary>
        </member>
        <member name="F:StreamCoders.Container.ElementType.ReferenceFrame">
            <summary>
                [Type: ElementMasterElement] DivX trick track extenstions
            </summary>
        </member>
        <member name="F:StreamCoders.Container.ElementType.ReferenceOffset">
            <summary>
                [Type: ElementUInt] DivX trick track extenstions
            </summary>
        </member>
        <member name="F:StreamCoders.Container.ElementType.ReferenceTimeCode">
            <summary>
                [Type: ElementUInt] DivX trick track extenstions
            </summary>
        </member>
        <member name="F:StreamCoders.Container.ElementType.EncryptedBlock">
            <summary>
                [Type: ElementBinary] Similar to SimpleBlock but the data inside the Block are Transformed (encrypt and/or signed).
                (see EncryptedBlock Structure)
            </summary>
        </member>
        <member name="F:StreamCoders.Container.ElementType.Tracks">
            <summary>
                [Type: ElementMasterElement] A Top-Level Element of information with many tracks described.
            </summary>
        </member>
        <member name="F:StreamCoders.Container.ElementType.TrackEntry">
            <summary>
                [Type: ElementMasterElement] Describes a track with all Elements.
            </summary>
        </member>
        <member name="F:StreamCoders.Container.ElementType.TrackNumber">
            <summary>
                [Type: ElementUInt] The track number as used in the Block Header (using more than 127 tracks is not encouraged,
                though the design allows an unlimited number).
            </summary>
        </member>
        <member name="F:StreamCoders.Container.ElementType.TrackUid">
            <summary>
                [Type: ElementUInt] A unique ID to identify the Track. This should be kept the same when making a direct stream
                copy of the Track to another file.
            </summary>
        </member>
        <member name="F:StreamCoders.Container.ElementType.TrackType">
            <summary>
                [Type: ElementTrackType] A set of track types coded on 8 bits (1: video, 2: audio, 3: complex, 0x10: logo, 0x11:
                subtitle, 0x12: buttons, 0x20: control).
            </summary>
        </member>
        <member name="F:StreamCoders.Container.ElementType.FlagEnabled">
            <summary>
                [Type: ElementUInt] Set if the track is usable. (1 bit)
            </summary>
        </member>
        <member name="F:StreamCoders.Container.ElementType.FlagDefault">
            <summary>
                [Type: ElementUInt] Set if that track (audio, video or subs) SHOULD be active if no language found matches the user
                preference. (1 bit)
            </summary>
        </member>
        <member name="F:StreamCoders.Container.ElementType.FlagForced">
            <summary>
                [Type: ElementUInt] Set if that track MUST be active during playback. There can be many forced track for a kind
                (audio, video or subs), the player should select the one which language matches the user preference or the default
                + forced track. Overlay MAY happen between a forced and non-forced track of the same kind. (1 bit)
            </summary>
        </member>
        <member name="F:StreamCoders.Container.ElementType.FlagLacing">
            <summary>
                [Type: ElementUInt] Set if the track may contain blocks using lacing. (1 bit)
            </summary>
        </member>
        <member name="F:StreamCoders.Container.ElementType.MinCache">
            <summary>
                [Type: ElementUInt] The minimum number of frames a player should be able to cache during playback. If set to 0, the
                reference pseudo-cache system is not used.
            </summary>
        </member>
        <member name="F:StreamCoders.Container.ElementType.MaxCache">
            <summary>
                [Type: ElementUInt] The maximum cache size required to store referenced frames in and the current frame. 0 means no
                cache is needed.
            </summary>
        </member>
        <member name="F:StreamCoders.Container.ElementType.DefaultDuration">
            <summary>
                [Type: ElementUInt] Number of nanoseconds (not scaled via TimecodeScale) per frame ('frame' in the Matroska sense
                -- one Element put into a (Simple)Block).
            </summary>
        </member>
        <member name="F:StreamCoders.Container.ElementType.DefaultDecodedFieldDuration">
            <summary>
                [Type: ElementUInt] The period in nanoseconds (not scaled by TimcodeScale)
            </summary>
        </member>
        <member name="F:StreamCoders.Container.ElementType.TrackTimecodeScale">
            <summary>
                [Type: ElementFloat] DEPRECATED, DO NOT USE. The scale to apply on this track to work at normal speed in relation
                with other tracks (mostly used to adjust video speed when the audio length differs).
            </summary>
        </member>
        <member name="F:StreamCoders.Container.ElementType.TrackOffset">
            <summary>
                [Type: ElementInt] A value to add to the Block's Timestamp. This can be used to adjust the playback offset of a
                track.
            </summary>
        </member>
        <member name="F:StreamCoders.Container.ElementType.MaxBlockAdditionId">
            <summary>
                [Type: ElementUInt] The maximum value of BlockAddID. A value 0 means there is no BlockAdditions for this track.
            </summary>
        </member>
        <member name="F:StreamCoders.Container.ElementType.Name">
            <summary>
                [Type: ElementUtf8] A human-readable track name.
            </summary>
        </member>
        <member name="F:StreamCoders.Container.ElementType.Language">
            <summary>
                [Type: ElementString] Specifies the language of the track in the Matroska languages form.
            </summary>
        </member>
        <member name="F:StreamCoders.Container.ElementType.CodecId">
            <summary>
                [Type: ElementCodecId] An ID corresponding to the codec, see the codec page for more info.
            </summary>
        </member>
        <member name="F:StreamCoders.Container.ElementType.CodecPrivate">
            <summary>
                [Type: ElementBinary] Private data only known to the codec.
            </summary>
        </member>
        <member name="F:StreamCoders.Container.ElementType.CodecName">
            <summary>
                [Type: ElementUtf8] A human-readable string specifying the codec.
            </summary>
        </member>
        <member name="F:StreamCoders.Container.ElementType.AttachmentLink">
            <summary>
                [Type: ElementUInt] The UID of an attachment that is used by this codec.
            </summary>
        </member>
        <member name="F:StreamCoders.Container.ElementType.CodecSettings">
            <summary>
                [Type: ElementUtf8] A string describing the encoding setting used.
            </summary>
        </member>
        <member name="F:StreamCoders.Container.ElementType.CodecInfoUrl">
            <summary>
                [Type: ElementString] A URL to find information about the codec used.
            </summary>
        </member>
        <member name="F:StreamCoders.Container.ElementType.CodecDownloadUrl">
            <summary>
                [Type: ElementString] A URL to download about the codec used.
            </summary>
        </member>
        <member name="F:StreamCoders.Container.ElementType.CodecDecodeAll">
            <summary>
                [Type: ElementUInt] The codec can decode potentially damaged data (1 bit).
            </summary>
        </member>
        <member name="F:StreamCoders.Container.ElementType.TrackOverlay">
            <summary>
                [Type: ElementUInt] Specify that this track is an overlay track for the Track specified (in the u-integer). That
                means when this track has a gap (see SilentTracks) the overlay track should be used instead. The order of multiple
                TrackOverlay matters, the first one is the one that should be used. If not found it should be the second, etc.
            </summary>
        </member>
        <member name="F:StreamCoders.Container.ElementType.CodecDelay">
            <summary>
                [Type: ElementUInt] CodecDelay is The codec-built-in delay in nanoseconds. This value must be subtracted from each
                block timestamp in order to get the actual timestamp. The value should be small so the muxing of tracks with the
                same actual timestamp are in the same Cluster.
            </summary>
        </member>
        <member name="F:StreamCoders.Container.ElementType.SeekPreRoll">
            <summary>
                [Type: ElementUInt] After a discontinuity, SeekPreRoll is the duration in nanoseconds of the data the decoder must
                decode before the decoded data is valid.
            </summary>
        </member>
        <member name="F:StreamCoders.Container.ElementType.TrackTranslate">
            <summary>
                [Type: ElementMasterElement] The track identification for the given Chapter Codec.
            </summary>
        </member>
        <member name="F:StreamCoders.Container.ElementType.TrackTranslateEditionUid">
            <summary>
                [Type: ElementUInt] Specify an edition UID on which this translation applies. When not specified, it means for all
                editions found in the Segment.
            </summary>
        </member>
        <member name="F:StreamCoders.Container.ElementType.TrackTranslateCodec">
            <summary>
                [Type: ElementUInt] The chapter codec using this ID (0: Matroska Script, 1: DVD-menu).
            </summary>
        </member>
        <member name="F:StreamCoders.Container.ElementType.TrackTranslateTrackId">
            <summary>
                [Type: ElementBinary] The binary value used to represent this track in the chapter codec data. The format depends
                on the ChapProcessCodecID used.
            </summary>
        </member>
        <member name="F:StreamCoders.Container.ElementType.Video">
            <summary>
                [Type: ElementMasterElement] Video settings.
            </summary>
        </member>
        <member name="F:StreamCoders.Container.ElementType.FlagInterlaced">
            <summary>
                [Type: ElementBool] A flag to declare is the video is known to be progressive or interlaced and if applicable to
                declare details about the interlacement. (0: undetermined, 1: interlaced, 2: progressive)
            </summary>
        </member>
        <member name="F:StreamCoders.Container.ElementType.FieldOrder">
            <summary>
                [Type: ElementUInt] Declare the field ordering of the video. If FlagInterlaced is not set to 1, this Element MUST
                be ignored. (0: Progressive, 1: Interlaced with top field display first and top field stored first, 2: Undetermined
                field order, 6: Interlaced with bottom field displayed first and bottom field stored first, 9: Interlaced with
                bottom field displayed first and top field stored first, 14: Interlaced with top field displayed first and bottom
                field stored first)
            </summary>
        </member>
        <member name="F:StreamCoders.Container.ElementType.StereoMode">
            <summary>
                [Type: ElementUInt] Stereo-3D video mode (0: mono, 1: side by side (left eye is first), 2: top-bottom (right eye is
                first), 3: top-bottom (left eye is first), 4: checkboard (right is first), 5: checkboard (left is first), 6: row
                interleaved (right is first), 7: row interleaved (left is first), 8: column interleaved (right is first), 9: column
                interleaved (left is first), 10: anaglyph (cyan/red), 11: side by side (right eye is first), 12: anaglyph
                (green/magenta), 13 both eyes laced in one Block (left eye is first), 14 both eyes laced in one Block (right eye is
                first)) . There are some more details on 3D support in the Specification Notes.
            </summary>
        </member>
        <member name="F:StreamCoders.Container.ElementType.AlphaMode">
            <summary>
                [Type: ElementUInt] Alpha Video Mode. Presence of this Element indicates that the BlockAdditional Element could
                contain Alpha data.
            </summary>
        </member>
        <member name="F:StreamCoders.Container.ElementType.OldStereoMode">
            <summary>
                [Type: ElementUInt] DEPRECATED, DO NOT USE. Bogus StereoMode value used in old versions of libmatroska. (0: mono,
                1: right eye, 2: left eye, 3: both eyes).
            </summary>
        </member>
        <member name="F:StreamCoders.Container.ElementType.PixelWidth">
            <summary>
                [Type: ElementUInt] Width of the encoded video frames in pixels.
            </summary>
        </member>
        <member name="F:StreamCoders.Container.ElementType.PixelHeight">
            <summary>
                [Type: ElementUInt] Height of the encoded video frames in pixels.
            </summary>
        </member>
        <member name="F:StreamCoders.Container.ElementType.PixelCropBottom">
            <summary>
                [Type: ElementUInt] The number of video pixels to remove at the bottom of the image (for HDTV content).
            </summary>
        </member>
        <member name="F:StreamCoders.Container.ElementType.PixelCropTop">
            <summary>
                [Type: ElementUInt] The number of video pixels to remove at the top of the image.
            </summary>
        </member>
        <member name="F:StreamCoders.Container.ElementType.PixelCropLeft">
            <summary>
                [Type: ElementUInt] The number of video pixels to remove on the left of the image.
            </summary>
        </member>
        <member name="F:StreamCoders.Container.ElementType.PixelCropRight">
            <summary>
                [Type: ElementUInt] The number of video pixels to remove on the right of the image.
            </summary>
        </member>
        <member name="F:StreamCoders.Container.ElementType.DisplayWidth">
            <summary>
                [Type: ElementUInt] Width of the video frames to display. Applies to the video frame after cropping (PixelCrop*
                Elements). The default value is only valid when DisplayUnit is 0.
            </summary>
        </member>
        <member name="F:StreamCoders.Container.ElementType.DisplayHeight">
            <summary>
                [Type: ElementUInt] Height of the video frames to display. Applies to the video frame after cropping (PixelCrop*
                Elements). The default value is only valid when DisplayUnit is 0.
            </summary>
        </member>
        <!-- Badly formed XML comment ignored for member "F:StreamCoders.Container.ElementType.DisplayUnit" -->
        <member name="F:StreamCoders.Container.ElementType.AspectRatioType">
            <summary>
                [Type: ElementUInt] Specify the possible modifications to the aspect ratio (0: free resizing, 1: keep aspect ratio,
                2: fixed).
            </summary>
        </member>
        <member name="F:StreamCoders.Container.ElementType.ColourSpace">
            <summary>
                [Type: ElementBinary] Same value as in AVI (32 bits).
            </summary>
        </member>
        <member name="F:StreamCoders.Container.ElementType.GammaValue">
            <summary>
                [Type: ElementFloat] Gamma Value.
            </summary>
        </member>
        <member name="F:StreamCoders.Container.ElementType.FrameRate">
            <summary>
                [Type: ElementFloat] Number of frames per second. Informational only.
            </summary>
        </member>
        <member name="F:StreamCoders.Container.ElementType.Colour">
            <summary>
                [Type: ElementMasterElement] Settings describing the colour format.
            </summary>
        </member>
        <member name="F:StreamCoders.Container.ElementType.MatrixCoefficients">
            <summary>
                [Type: ElementUInt] The Matrix Coefficients of the video used to derive luma and chroma values from reg, green, and
                blue color primaries. For clarity, the value and meanings for MatrixCoefficients are adopted from Table 4 of
                ISO/IEC 23001-8:2013/DCOR1. (0:GBR, 1: BT709, 2: Unspecified, 3: Reserved, 4: FCC, 5: BT470BG, 6: SMPTE 170M, 7:
                SMPTE 240M, 8: YCOCG, 9: BT2020 Non-constant Luminance, 10: BT2020 Constant Luminance)
            </summary>
        </member>
        <member name="F:StreamCoders.Container.ElementType.BitsPerChannel">
            <summary>
                [Type: ElementUInt] Number of decoded bits per channel. A value of 0 indicates that the BitsPerChannel is
                unspecified.
            </summary>
        </member>
        <member name="F:StreamCoders.Container.ElementType.ChromaSubsamplingHorz">
            <summary>
                [Type: ElementUInt] The amount of pixels to remove in the Cr and Cb channels for every pixel not removed
                horizontally. Example: For video with 4:2:0 chroma subsampling, the ChromaSubsamplingHorz should be set to 1.
            </summary>
        </member>
        <member name="F:StreamCoders.Container.ElementType.ChromaSubsamplingVert">
            <summary>
                [Type: ElementUInt] The amount of pixels to remove in the Cr and Cb channels for every pixel not removed
                vertically. Example: For video with 4:2:0 chroma subsampling, the ChromaSubsamplingVert should be set to 1.
            </summary>
        </member>
        <member name="F:StreamCoders.Container.ElementType.CbSubsamplingHorz">
            <summary>
                [Type: ElementUInt] The amount of pixels to remove in the Cb channel for every pixel not removed horizontally. This
                is additive with ChromaSubsamplingHorz. Example: For video with 4:2:1 chroma subsampling, the ChromaSubsamplingHorz
                should be set to 1 and CbSubsamplingHorz should be set to 1.
            </summary>
        </member>
        <member name="F:StreamCoders.Container.ElementType.CbSubsamplingVert">
            <summary>
                [Type: ElementUInt] The amount of pixels to remove in the Cb channel for every pixel not removed vertically. This
                is additive with ChromaSubsamplingVert.
            </summary>
        </member>
        <member name="F:StreamCoders.Container.ElementType.ChromaSitingHorz">
            <summary>
                [Type: ElementUInt] How chroma is subsampled horizontally. (0: Unspecified, 1: Left Collocated, 2: Half)
            </summary>
        </member>
        <member name="F:StreamCoders.Container.ElementType.ChromaSitingVert">
            <summary>
                [Type: ElementUInt] How chroma is subsampled vertically. (0: Unspecified, 1: Top Collocated, 2: Half)
            </summary>
        </member>
        <member name="F:StreamCoders.Container.ElementType.Range">
            <summary>
                [Type: ElementUInt] Clipping of the color ranges. (0: Unspecified, 1: Broadcast Range, 2: Full range (no clipping),
                3: Defined by MatrixCoefficients/TransferCharacteristics)
            </summary>
        </member>
        <member name="F:StreamCoders.Container.ElementType.TransferCharacteristics">
            <summary>
                [Type: ElementUInt] The transfer characteristics of the video. For clarity, the value and meanings for
                TransferCharacteristics 1-15 are adopted from Table 3 of ISO/IEC 23001-8:2013/DCOR1. TransferCharacteristics 16-18
                are proposed values. (0: Reserved, 1: ITU-R BT.709, 2: Unspecified, 3: Reserved, 4: Gamma 2.2 curve, 5: Gamma 2.8
                curve, 6: SMPTE 170M, 7: SMPTE 240M, 8: Linear, 9: Log, 10: Log Sqrt, 11: IEC 61966-2-4, 12: ITU-R BT.1361 Extended
                Colour Gamut, 13: IEC 61966-2-1, 14: ITU-R BT.2020 10 bit, 15: ITU-R BT.2020 12 bit, 16: SMPTE ST 2084, 17: SMPTE
                ST 428-1 18: ARIB STD-B67 (HLG))
            </summary>
        </member>
        <member name="F:StreamCoders.Container.ElementType.Primaries">
            <summary>
                [Type: ElementUInt] The colour primaries of the video. For clarity, the value and meanings for Primaries are
                adopted from Table 2 of ISO/IEC 23001-8:2013/DCOR1. (0: Reserved, 1: ITU-R BT.709, 2: Unspecified, 3: Reserved, 4:
                ITU-R BT.470M, 5: ITU-R BT.470BG, 6: SMPTE 170M, 7: SMPTE 240M, 8: FILM, 9: ITU-R BT.2020, 10: SMPTE ST 428-1, 22:
                JEDEC P22 phosphors)
            </summary>
        </member>
        <member name="F:StreamCoders.Container.ElementType.MaxCll">
            <summary>
                [Type: ElementUInt] Maximum brightness of a single pixel (Maximum Content Light Level) in candelas per square meter
                (cd/m�).
            </summary>
        </member>
        <member name="F:StreamCoders.Container.ElementType.MaxFall">
            <summary>
                [Type: ElementUInt] Maximum brightness of a single full frame (Maximum Frame-Average Light Level) in candelas per
                square meter (cd/m�).
            </summary>
        </member>
        <member name="F:StreamCoders.Container.ElementType.MasteringMetadata">
            <summary>
                [Type: ElementMasterElement] SMPTE 2086 mastering data.
            </summary>
        </member>
        <member name="F:StreamCoders.Container.ElementType.PrimaryRChromaticityX">
            <summary>
                [Type: ElementFloat] Red X chromaticity coordinate as defined by CIE 1931.
            </summary>
        </member>
        <member name="F:StreamCoders.Container.ElementType.PrimaryRChromaticityY">
            <summary>
                [Type: ElementFloat] Red Y chromaticity coordinate as defined by CIE 1931.
            </summary>
        </member>
        <member name="F:StreamCoders.Container.ElementType.PrimaryGChromaticityX">
            <summary>
                [Type: ElementFloat] Green X chromaticity coordinate as defined by CIE 1931.
            </summary>
        </member>
        <member name="F:StreamCoders.Container.ElementType.PrimaryGChromaticityY">
            <summary>
                [Type: ElementFloat] Green Y chromaticity coordinate as defined by CIE 1931.
            </summary>
        </member>
        <member name="F:StreamCoders.Container.ElementType.PrimaryBChromaticityX">
            <summary>
                [Type: ElementFloat] Blue X chromaticity coordinate as defined by CIE 1931.
            </summary>
        </member>
        <member name="F:StreamCoders.Container.ElementType.PrimaryBChromaticityY">
            <summary>
                [Type: ElementFloat] Blue Y chromaticity coordinate as defined by CIE 1931.
            </summary>
        </member>
        <member name="F:StreamCoders.Container.ElementType.WhitePointChromaticityX">
            <summary>
                [Type: ElementFloat] White X chromaticity coordinate as defined by CIE 1931.
            </summary>
        </member>
        <member name="F:StreamCoders.Container.ElementType.WhitePointChromaticityY">
            <summary>
                [Type: ElementFloat] White Y chromaticity coordinate as defined by CIE 1931.
            </summary>
        </member>
        <member name="F:StreamCoders.Container.ElementType.LuminanceMax">
            <summary>
                [Type: ElementFloat] Maximum luminance. Shall be represented in candelas per square meter (cd/m�).
            </summary>
        </member>
        <member name="F:StreamCoders.Container.ElementType.LuminanceMin">
            <summary>
                [Type: ElementFloat] Mininum luminance. Shall be represented in candelas per square meter (cd/m�).
            </summary>
        </member>
        <member name="F:StreamCoders.Container.ElementType.Audio">
            <summary>
                [Type: ElementMasterElement] Audio settings.
            </summary>
        </member>
        <member name="F:StreamCoders.Container.ElementType.SamplingFrequency">
            <summary>
                [Type: ElementFloat] Sampling frequency in Hz.
            </summary>
        </member>
        <member name="F:StreamCoders.Container.ElementType.OutputSamplingFrequency">
            <summary>
                [Type: ElementFloat] Real output sampling frequency in Hz (used for SBR techniques).
            </summary>
        </member>
        <member name="F:StreamCoders.Container.ElementType.Channels">
            <summary>
                [Type: ElementUInt] Numbers of channels in the track.
            </summary>
        </member>
        <member name="F:StreamCoders.Container.ElementType.ChannelPositions">
            <summary>
                [Type: ElementBinary] Table of horizontal angles for each successive channel, see appendix.
            </summary>
        </member>
        <member name="F:StreamCoders.Container.ElementType.BitDepth">
            <summary>
                [Type: ElementUInt] Bits per sample, mostly used for PCM.
            </summary>
        </member>
        <member name="F:StreamCoders.Container.ElementType.TrackOperation">
            <summary>
                [Type: ElementMasterElement] Operation that needs to be applied on tracks to create this virtual track. For more
                details look at the Specification Notes on the subject.
            </summary>
        </member>
        <member name="F:StreamCoders.Container.ElementType.TrackCombinePlanes">
            <summary>
                [Type: ElementMasterElement] Contains the list of all video plane tracks that need to be combined to create this 3D
                track
            </summary>
        </member>
        <member name="F:StreamCoders.Container.ElementType.TrackPlane">
            <summary>
                [Type: ElementMasterElement] Contains a video plane track that need to be combined to create this 3D track
            </summary>
        </member>
        <member name="F:StreamCoders.Container.ElementType.TrackPlaneUid">
            <summary>
                [Type: ElementUInt] The trackUID number of the track representing the plane.
            </summary>
        </member>
        <member name="F:StreamCoders.Container.ElementType.TrackPlaneType">
            <summary>
                [Type: ElementUInt] The kind of plane this track corresponds to (0: left eye, 1: right eye, 2: background).
            </summary>
        </member>
        <member name="F:StreamCoders.Container.ElementType.TrackJoinBlocks">
            <summary>
                [Type: ElementMasterElement] Contains the list of all tracks whose Blocks need to be combined to create this
                virtual track
            </summary>
        </member>
        <member name="F:StreamCoders.Container.ElementType.TrackJoinUid">
            <summary>
                [Type: ElementUInt] The trackUID number of a track whose blocks are used to create this virtual track.
            </summary>
        </member>
        <member name="F:StreamCoders.Container.ElementType.TrickTrackUid">
            <summary>
                [Type: ElementUInt] DivX trick track extenstions
            </summary>
        </member>
        <member name="F:StreamCoders.Container.ElementType.TrickTrackSegmentUid">
            <summary>
                [Type: ElementBinary] DivX trick track extenstions
            </summary>
        </member>
        <member name="F:StreamCoders.Container.ElementType.TrickTrackFlag">
            <summary>
                [Type: ElementUInt] DivX trick track extenstions
            </summary>
        </member>
        <member name="F:StreamCoders.Container.ElementType.TrickMasterTrackUid">
            <summary>
                [Type: ElementUInt] DivX trick track extenstions
            </summary>
        </member>
        <member name="F:StreamCoders.Container.ElementType.TrickMasterTrackSegmentUid">
            <summary>
                [Type: ElementBinary] DivX trick track extenstions
            </summary>
        </member>
        <member name="F:StreamCoders.Container.ElementType.ContentEncodings">
            <summary>
                [Type: ElementMasterElement] Settings for several content encoding mechanisms like compression or encryption.
            </summary>
        </member>
        <member name="F:StreamCoders.Container.ElementType.ContentEncoding">
            <summary>
                [Type: ElementMasterElement] Settings for one content encoding like compression or encryption.
            </summary>
        </member>
        <member name="F:StreamCoders.Container.ElementType.ContentEncodingOrder">
            <summary>
                [Type: ElementUInt] Tells when this modification was used during encoding/muxing starting with 0 and counting
                upwards. The decoder/demuxer has to start with the highest order number it finds and work its way down. This value
                has to be unique over all ContentEncodingOrder Elements in the Segment.
            </summary>
        </member>
        <member name="F:StreamCoders.Container.ElementType.ContentEncodingScope">
            <summary>
                [Type: ElementUInt] A bit field that describes which Elements have been modified in this way. Values (big endian)
                can be OR'ed. Possible values: 1 - all frame contents, 2 - the track's private data, 4 - the next ContentEncoding
                (next ContentEncodingOrder. Either the data inside ContentCompression and/or ContentEncryption)
            </summary>
        </member>
        <member name="F:StreamCoders.Container.ElementType.ContentEncodingType">
            <summary>
                [Type: ElementUInt] A value describing what kind of transformation has been done. Possible values: 0 - compression,
                1 - encryption
            </summary>
        </member>
        <member name="F:StreamCoders.Container.ElementType.ContentCompression">
            <summary>
                [Type: ElementMasterElement] Settings describing the compression used. Must be present if the value of
                ContentEncodingType is 0 and absent otherwise. Each block must be decompressable even if no previous block is
                available in order not to prevent seeking.
            </summary>
        </member>
        <member name="F:StreamCoders.Container.ElementType.ContentCompAlgo">
            <summary>
                [Type: ElementUInt] The compression algorithm used. Algorithms that have been specified so far are: 0 - zlib,1 -
                bzlib,2 - lzo1x 3 - Header Stripping
            </summary>
        </member>
        <member name="F:StreamCoders.Container.ElementType.ContentCompSettings">
            <summary>
                [Type: ElementBinary] Settings that might be needed by the decompressor. For Header Stripping (ContentCompAlgo=3),
                the bytes that were removed from the beggining of each frames of the track.
            </summary>
        </member>
        <member name="F:StreamCoders.Container.ElementType.ContentEncryption">
            <summary>
                [Type: ElementMasterElement] Settings describing the encryption used. Must be present if the value of
                ContentEncodingType is 1 and absent otherwise.
            </summary>
        </member>
        <member name="F:StreamCoders.Container.ElementType.ContentEncAlgo">
            <summary>
                [Type: ElementUInt] The encryption algorithm used. The value '0' means that the contents have not been encrypted
                but only signed. Predefined values: 1 - DES, 2 - 3DES, 3 - Twofish, 4 - Blowfish, 5 - AES
            </summary>
        </member>
        <member name="F:StreamCoders.Container.ElementType.ContentEncKeyId">
            <summary>
                [Type: ElementBinary] For public key algorithms this is the ID of the public key the the data was encrypted with.
            </summary>
        </member>
        <member name="F:StreamCoders.Container.ElementType.ContentSignature">
            <summary>
                [Type: ElementBinary] A cryptographic signature of the contents.
            </summary>
        </member>
        <member name="F:StreamCoders.Container.ElementType.ContentSigKeyId">
            <summary>
                [Type: ElementBinary] This is the ID of the private key the data was signed with.
            </summary>
        </member>
        <member name="F:StreamCoders.Container.ElementType.ContentSigAlgo">
            <summary>
                [Type: ElementUInt] The algorithm used for the signature. A value of '0' means that the contents have not been
                signed but only encrypted. Predefined values: 1 - RSA
            </summary>
        </member>
        <member name="F:StreamCoders.Container.ElementType.ContentSigHashAlgo">
            <summary>
                [Type: ElementUInt] The hash algorithm used for the signature. A value of '0' means that the contents have not been
                signed but only encrypted. Predefined values: 1 - SHA1-160 2 - MD5
            </summary>
        </member>
        <member name="F:StreamCoders.Container.ElementType.Cues">
            <summary>
                [Type: ElementMasterElement] A Top-Level Element to speed seeking access. All entries are local to the Segment.
                Should be mandatory for non "live" streams.
            </summary>
        </member>
        <member name="F:StreamCoders.Container.ElementType.CuePoint">
            <summary>
                [Type: ElementMasterElement] Contains all information relative to a seek point in the Segment.
            </summary>
        </member>
        <member name="F:StreamCoders.Container.ElementType.CueTime">
            <summary>
                [Type: ElementUInt] Absolute timestamp according to the Segment time base.
            </summary>
        </member>
        <member name="F:StreamCoders.Container.ElementType.CueTrackPositions">
            <summary>
                [Type: ElementMasterElement] Contain positions for different tracks corresponding to the timestamp.
            </summary>
        </member>
        <member name="F:StreamCoders.Container.ElementType.CueTrack">
            <summary>
                [Type: ElementUInt] The track for which a position is given.
            </summary>
        </member>
        <member name="F:StreamCoders.Container.ElementType.CueClusterPosition">
            <summary>
                [Type: ElementUInt] The position of the Cluster containing the required Block.
            </summary>
        </member>
        <member name="F:StreamCoders.Container.ElementType.CueRelativePosition">
            <summary>
                [Type: ElementUInt] The relative position of the referenced block inside the cluster with 0 being the first
                possible position for an Element inside that cluster.
            </summary>
        </member>
        <member name="F:StreamCoders.Container.ElementType.CueDuration">
            <summary>
                [Type: ElementUInt] The duration of the block according to the Segment time base. If missing the track's
                DefaultDuration does not apply and no duration information is available in terms of the cues.
            </summary>
        </member>
        <member name="F:StreamCoders.Container.ElementType.CueBlockNumber">
            <summary>
                [Type: ElementUInt] Number of the Block in the specified Cluster.
            </summary>
        </member>
        <member name="F:StreamCoders.Container.ElementType.CueCodecState">
            <summary>
                [Type: ElementUInt] The position of the Codec State corresponding to this Cue Element. 0 means that the data is
                taken from the initial Track Entry.
            </summary>
        </member>
        <member name="F:StreamCoders.Container.ElementType.CueReference">
            <summary>
                [Type: ElementMasterElement] The Clusters containing the required referenced Blocks.
            </summary>
        </member>
        <member name="F:StreamCoders.Container.ElementType.CueRefTime">
            <summary>
                [Type: ElementUInt] Timestamp of the referenced Block.
            </summary>
        </member>
        <member name="F:StreamCoders.Container.ElementType.CueRefCluster">
            <summary>
                [Type: ElementUInt] The Position of the Cluster containing the referenced Block.
            </summary>
        </member>
        <member name="F:StreamCoders.Container.ElementType.CueRefNumber">
            <summary>
                [Type: ElementUInt] Number of the referenced Block of Track X in the specified Cluster.
            </summary>
        </member>
        <member name="F:StreamCoders.Container.ElementType.CueRefCodecState">
            <summary>
                [Type: ElementUInt] The position of the Codec State corresponding to this referenced Element. 0 means that the data
                is taken from the initial Track Entry.
            </summary>
        </member>
        <member name="F:StreamCoders.Container.ElementType.Attachments">
            <summary>
                [Type: ElementMasterElement] Contain attached files.
            </summary>
        </member>
        <member name="F:StreamCoders.Container.ElementType.AttachedFile">
            <summary>
                [Type: ElementMasterElement] An attached file.
            </summary>
        </member>
        <member name="F:StreamCoders.Container.ElementType.FileDescription">
            <summary>
                [Type: ElementUtf8] A human-friendly name for the attached file.
            </summary>
        </member>
        <member name="F:StreamCoders.Container.ElementType.FileName">
            <summary>
                [Type: ElementUtf8] Filename of the attached file.
            </summary>
        </member>
        <member name="F:StreamCoders.Container.ElementType.FileMimeType">
            <summary>
                [Type: ElementString] MIME type of the file.
            </summary>
        </member>
        <member name="F:StreamCoders.Container.ElementType.FileData">
            <summary>
                [Type: ElementBinary] The data of the file.
            </summary>
        </member>
        <member name="F:StreamCoders.Container.ElementType.FileUid">
            <summary>
                [Type: ElementUInt] Unique ID representing the file, as random as possible.
            </summary>
        </member>
        <member name="F:StreamCoders.Container.ElementType.FileReferral">
            <summary>
                [Type: ElementBinary] A binary value that a track/codec can refer to when the attachment is needed.
            </summary>
        </member>
        <member name="F:StreamCoders.Container.ElementType.FileUsedStartTime">
            <summary>
                [Type: ElementUInt] DivX font extension
            </summary>
        </member>
        <member name="F:StreamCoders.Container.ElementType.FileUsedEndTime">
            <summary>
                [Type: ElementUInt] DivX font extension
            </summary>
        </member>
        <member name="F:StreamCoders.Container.ElementType.Chapters">
            <summary>
                [Type: ElementMasterElement] A system to define basic menus and partition data. For more detailed information, look
                at the Chapters Explanation.
            </summary>
        </member>
        <member name="F:StreamCoders.Container.ElementType.EditionEntry">
            <summary>
                [Type: ElementMasterElement] Contains all information about a Segment edition.
            </summary>
        </member>
        <member name="F:StreamCoders.Container.ElementType.EditionUid">
            <summary>
                [Type: ElementUInt] A unique ID to identify the edition. It's useful for tagging an edition.
            </summary>
        </member>
        <member name="F:StreamCoders.Container.ElementType.EditionFlagHidden">
            <summary>
                [Type: ElementUInt] If an edition is hidden (1), it should not be available to the user interface (but still to
                Control Tracks; see flag notes). (1 bit)
            </summary>
        </member>
        <member name="F:StreamCoders.Container.ElementType.EditionFlagDefault">
            <summary>
                [Type: ElementUInt] If a flag is set (1) the edition should be used as the default one. (1 bit)
            </summary>
        </member>
        <member name="F:StreamCoders.Container.ElementType.EditionFlagOrdered">
            <summary>
                [Type: ElementUInt] Specify if the chapters can be defined multiple times and the order to play them is enforced.
                (1 bit)
            </summary>
        </member>
        <member name="F:StreamCoders.Container.ElementType.ChapterAtom">
            <summary>
                [Type: ElementMasterElement] Contains the atom information to use as the chapter atom (apply to all tracks).
            </summary>
        </member>
        <member name="F:StreamCoders.Container.ElementType.ChapterUid">
            <summary>
                [Type: ElementUInt] A unique ID to identify the Chapter.
            </summary>
        </member>
        <member name="F:StreamCoders.Container.ElementType.ChapterStringUid">
            <summary>
                [Type: ElementUtf8] A unique string ID to identify the Chapter. Use for WebVTT cue identifier storage.
            </summary>
        </member>
        <member name="F:StreamCoders.Container.ElementType.ChapterTimeStart">
            <summary>
                [Type: ElementUInt] Timestamp of the start of Chapter (not scaled).
            </summary>
        </member>
        <member name="F:StreamCoders.Container.ElementType.ChapterTimeEnd">
            <summary>
                [Type: ElementUInt] Timestamp of the end of Chapter (timestamp excluded, not scaled).
            </summary>
        </member>
        <member name="F:StreamCoders.Container.ElementType.ChapterFlagHidden">
            <summary>
                [Type: ElementUInt] If a chapter is hidden (1), it should not be available to the user interface (but still to
                Control Tracks; see flag notes). (1 bit)
            </summary>
        </member>
        <member name="F:StreamCoders.Container.ElementType.ChapterFlagEnabled">
            <summary>
                [Type: ElementUInt] Specify wether the chapter is enabled. It can be enabled/disabled by a Control Track. When
                disabled, the movie should skip all the content between the TimeStart and TimeEnd of this chapter (see flag notes).
                (1 bit)
            </summary>
        </member>
        <member name="F:StreamCoders.Container.ElementType.ChapterSegmentUid">
            <summary>
                [Type: ElementBinary] A Segment to play in place of this chapter. Edition ChapterSegmentEditionUID should be used
                for this Segment, otherwise no edition is used.
            </summary>
        </member>
        <member name="F:StreamCoders.Container.ElementType.ChapterSegmentEditionUid">
            <summary>
                [Type: ElementUInt] The EditionUID to play from the Segment linked in ChapterSegmentUID.
            </summary>
        </member>
        <member name="F:StreamCoders.Container.ElementType.ChapterPhysicalEquiv">
            <summary>
                [Type: ElementUInt] Specify the physical equivalent of this ChapterAtom like "DVD" (60) or "SIDE" (50), see
                complete list of values.
            </summary>
        </member>
        <member name="F:StreamCoders.Container.ElementType.ChapterTrack">
            <summary>
                [Type: ElementMasterElement] List of tracks on which the chapter applies. If this Element is not present, all
                tracks apply
            </summary>
        </member>
        <member name="F:StreamCoders.Container.ElementType.ChapterTrackNumber">
            <summary>
                [Type: ElementUInt] UID of the Track to apply this chapter too. In the absence of a control track, choosing this
                chapter will select the listed Tracks and deselect unlisted tracks. Absence of this Element indicates that the
                Chapter should be applied to any currently used Tracks.
            </summary>
        </member>
        <member name="F:StreamCoders.Container.ElementType.ChapterDisplay">
            <summary>
                [Type: ElementMasterElement] Contains all possible strings to use for the chapter display.
            </summary>
        </member>
        <member name="F:StreamCoders.Container.ElementType.ChapString">
            <summary>
                [Type: ElementUtf8] Contains the string to use as the chapter atom.
            </summary>
        </member>
        <member name="F:StreamCoders.Container.ElementType.ChapLanguage">
            <summary>
                [Type: ElementString] The languages corresponding to the string, in the bibliographic ISO-639-2 form.
            </summary>
        </member>
        <member name="F:StreamCoders.Container.ElementType.ChapCountry">
            <summary>
                [Type: ElementString] The countries corresponding to the string, same 2 octets as in Internet domains.
            </summary>
        </member>
        <member name="F:StreamCoders.Container.ElementType.ChapProcess">
            <summary>
                [Type: ElementMasterElement] Contains all the commands associated to the Atom.
            </summary>
        </member>
        <member name="F:StreamCoders.Container.ElementType.ChapProcessCodecId">
            <summary>
                [Type: ElementUInt] Contains the type of the codec used for the processing. A value of 0 means native Matroska
                processing (to be defined), a value of 1 means the DVD command set is used. More codec IDs can be added later.
            </summary>
        </member>
        <member name="F:StreamCoders.Container.ElementType.ChapProcessPrivate">
            <summary>
                [Type: ElementBinary] Some optional data attached to the ChapProcessCodecID information. For ChapProcessCodecID =
                1, it is the "DVD level" equivalent.
            </summary>
        </member>
        <member name="F:StreamCoders.Container.ElementType.ChapProcessCommand">
            <summary>
                [Type: ElementMasterElement] Contains all the commands associated to the Atom.
            </summary>
        </member>
        <member name="F:StreamCoders.Container.ElementType.ChapProcessTime">
            <summary>
                [Type: ElementUInt] Defines when the process command should be handled (0: during the whole chapter, 1: before
                starting playback, 2: after playback of the chapter).
            </summary>
        </member>
        <member name="F:StreamCoders.Container.ElementType.ChapProcessData">
            <summary>
                [Type: ElementBinary] Contains the command information. The data should be interpreted depending on the
                ChapProcessCodecID value. For ChapProcessCodecID = 1, the data correspond to the binary DVD cell pre/post commands.
            </summary>
        </member>
        <member name="F:StreamCoders.Container.ElementType.Tags">
            <summary>
                [Type: ElementMasterElement] Element containing Elements specific to Tracks/Chapters. A list of valid tags can be
                found here.
            </summary>
        </member>
        <member name="F:StreamCoders.Container.ElementType.Tag">
            <summary>
                [Type: ElementMasterElement] Element containing Elements specific to Tracks/Chapters.
            </summary>
        </member>
        <member name="F:StreamCoders.Container.ElementType.Targets">
            <summary>
                [Type: ElementMasterElement] Contain all UIDs where the specified meta data apply. It is empty to describe
                everything in the Segment.
            </summary>
        </member>
        <member name="F:StreamCoders.Container.ElementType.TargetTypeValue">
            <summary>
                [Type: ElementUInt] A number to indicate the logical level of the target (see TargetType).
            </summary>
        </member>
        <member name="F:StreamCoders.Container.ElementType.TargetType">
            <summary>
                [Type: ElementString] An informational string that can be used to display the logical level of the target like
                "ALBUM", "TRACK", "MOVIE", "CHAPTER", etc (see TargetType).
            </summary>
        </member>
        <member name="F:StreamCoders.Container.ElementType.TagTrackUid">
            <summary>
                [Type: ElementUInt] A unique ID to identify the Track(s) the tags belong to. If the value is 0 at this level, the
                tags apply to all tracks in the Segment.
            </summary>
        </member>
        <member name="F:StreamCoders.Container.ElementType.TagEditionUid">
            <summary>
                [Type: ElementUInt] A unique ID to identify the EditionEntry(s) the tags belong to. If the value is 0 at this
                level, the tags apply to all editions in the Segment.
            </summary>
        </member>
        <member name="F:StreamCoders.Container.ElementType.TagChapterUid">
            <summary>
                [Type: ElementUInt] A unique ID to identify the Chapter(s) the tags belong to. If the value is 0 at this level, the
                tags apply to all chapters in the Segment.
            </summary>
        </member>
        <member name="F:StreamCoders.Container.ElementType.TagAttachmentUid">
            <summary>
                [Type: ElementUInt] A unique ID to identify the Attachment(s) the tags belong to. If the value is 0 at this level,
                the tags apply to all the attachments in the Segment.
            </summary>
        </member>
        <member name="F:StreamCoders.Container.ElementType.SimpleTag">
            <summary>
                [Type: ElementMasterElement] Contains general information about the target.
            </summary>
        </member>
        <member name="F:StreamCoders.Container.ElementType.TagName">
            <summary>
                [Type: ElementUtf8] The name of the Tag that is going to be stored.
            </summary>
        </member>
        <member name="F:StreamCoders.Container.ElementType.TagLanguage">
            <summary>
                [Type: ElementString] Specifies the language of the tag specified, in the Matroska languages form.
            </summary>
        </member>
        <member name="F:StreamCoders.Container.ElementType.TagDefault">
            <summary>
                [Type: ElementUInt] Indication to know if this is the default/original language to use for the given tag. (1 bit)
            </summary>
        </member>
        <member name="F:StreamCoders.Container.ElementType.TagString">
            <summary>
                [Type: ElementUtf8] The value of the Tag.
            </summary>
        </member>
        <member name="F:StreamCoders.Container.ElementType.TagBinary">
            <summary>
                [Type: ElementBinary] The values of the Tag if it is binary. Note that this cannot be used in the same SimpleTag as
                TagString.
            </summary>
        </member>
        <member name="T:StreamCoders.Container.LacingType">
            -------------------------------------------------------------------------------------------------
            <summary>
                Lacing types used within Matroska blocks.
            </summary>
            -------------------------------------------------------------------------------------------------
        </member>
        <member name="F:StreamCoders.Container.LacingType.NoLacing">
            <summary>
                Block contains no lacing.
            </summary>
        </member>
        <member name="F:StreamCoders.Container.LacingType.XiphLacing">
            <summary>
                Block contains XIPH style lacing.
            </summary>
        </member>
        <member name="F:StreamCoders.Container.LacingType.EbmlLacing">
            <summary>
                Block contains EBML lacing.
            </summary>
        </member>
        <member name="F:StreamCoders.Container.LacingType.FixedSizeLacing">
            <summary>
                Block contains equally sized frames.
            </summary>
        </member>
        <member name="M:StreamCoders.Container.MatroskaBaseReader.GetNextFrame">
            -------------------------------------------------------------------------------------------------
            <summary>
                Gets the next block from container.
            </summary>
            <returns>
                Returns a simple block or block as ElementBlock.
            </returns>
            -------------------------------------------------------------------------------------------------
        </member>
        <member name="T:StreamCoders.Container.MatroskaReader">
            -------------------------------------------------------------------------------------------------
            <summary>
                Matroska file format reader (specification v4)
                <para>
                    Supported Video codecs: H.265/HEVC, H.264/AVC, VP8, VP9
                </para>
                <para>
                    Supported Audio codecs: Vorbis, AAC, AC3, DTS, MPEG1-L3, MPEG1-L2
                </para>
                <para>
                    Supported Subtitles:  Utf8
                </para>
            </summary>
            <seealso cref="T:StreamCoders.IReader" />
            -------------------------------------------------------------------------------------------------
        </member>
        <member name="M:StreamCoders.Container.MatroskaReader.GetNextFrame(StreamCoders.TrackInfo)">
            <summary>
                Gets the next frame.
            </summary>
            <param name="track">The trackInfo.</param>
            <returns>
                The next frame.
            </returns>
        </member>
        <member name="P:StreamCoders.Container.MatroskaReader.Position">
            -------------------------------------------------------------------------------------------------
            <summary>
                Gets or sets the position in the container in seconds.
            </summary>
            <remarks>
                Setting a position will only work if the file contains cues. Therefore not every
                requested position maps, but rather depends on the nearest cue-point.
            </remarks>
            <value>
                The new position in seconds.
            </value>
            -------------------------------------------------------------------------------------------------
        </member>
        <member name="T:StreamCoders.Container.MatroskaTrackDescriptor">
            -------------------------------------------------------------------------------------------------
            <summary>
                Holds detailed information about each track in a container.
            </summary>
            -------------------------------------------------------------------------------------------------
        </member>
        <member name="F:StreamCoders.Container.MatroskaTrackDescriptor.StrippedHeader">
            -------------------------------------------------------------------------------------------------
            <summary>
                If <b>ContentEncodingType</b> is using <b>HeaderStripped</b> then this contains the
                redundant header which needs to be added.
            </summary>
            -------------------------------------------------------------------------------------------------
        </member>
        <member name="P:StreamCoders.Container.MatroskaTrackDescriptor.TrackInfo">
            -------------------------------------------------------------------------------------------------
            <summary>
                Gets or sets the TrackInfo property.
            </summary>
            <value>
                Information describing the track.
            </value>
            -------------------------------------------------------------------------------------------------
        </member>
        <member name="P:StreamCoders.Container.MatroskaTrackDescriptor.DefaultFrameDurationNano">
            <summary>
                Gets the default frame duration
            </summary>
        </member>
        <member name="P:StreamCoders.Container.MatroskaTrackDescriptor.ContentEncodingType">
            -------------------------------------------------------------------------------------------------
            <summary>
                Gets or sets the type of the content encoding.
            </summary>
            <value>
                The type of the content encoding. This either includes the stripping of header or compression of Blocks.
            </value>
            -------------------------------------------------------------------------------------------------
        </member>
        <member name="T:StreamCoders.Container.SegmentReader">
            -------------------------------------------------------------------------------------------------
            <summary>
                Manages the contents of a segment and is especially used to retrieve cluster from the segment.
                Upon instantiation each segment is parsed for "SeekHeads" that may contain cueing information or tags.
            </summary>
            <remarks>
                Known limitation: Special Segment size (0xFFFF..F) for live streaming is not supported.
            </remarks>
            -------------------------------------------------------------------------------------------------
        </member>
        <member name="M:StreamCoders.Container.SegmentReader.GetNextClusterElement">
            -------------------------------------------------------------------------------------------------
            <summary>
                Gets the next cluster element.
            </summary>
            <returns>
                The next cluster element.
            </returns>
            <remarks>
                The function doesn't skip any elements, so it will not only return blocks, but also timecodes, crc-32 etc.
            </remarks>
            -------------------------------------------------------------------------------------------------
        </member>
        <member name="M:StreamCoders.Container.SegmentReader.GetClusterTimeCode">
            -------------------------------------------------------------------------------------------------
            <summary>
                The current cluster time code.
            </summary>
            <returns>
                Returns the cluster time code, or may return 0 when the time code value could not be found.
            </returns>
            -------------------------------------------------------------------------------------------------
        </member>
        <member name="M:StreamCoders.Container.SegmentReader.SeekToCluster(System.Int64)">
            -------------------------------------------------------------------------------------------------
            <summary>
                Seeks to a cluster.
            </summary>
            <param name="position"> The position relative to the segment. </param>
            <returns>
                true if it succeeds, false if it fails.
            </returns>
            -------------------------------------------------------------------------------------------------
        </member>
        <member name="M:StreamCoders.Container.SegmentReader.EvaluateSeekHeads">
            -------------------------------------------------------------------------------------------------
            <summary>
                Evaluates seek heads such as cues and tags if they aren't already.
            </summary>
            <exception cref="T:System.Exception">    Thrown when encountered ID doesn't match the seek head ID. </exception>
            -------------------------------------------------------------------------------------------------
        </member>
        <member name="M:StreamCoders.Container.TrackDataPrefetch.Touch">
            <summary>
                Touches this instance. So we can later check if the payloads are stale.
            </summary>
        </member>
        <member name="M:StreamCoders.Container.TrackDataPrefetch.IsStale">
            <summary>
                Determines whether the payloads are stale and ever fetched.
            </summary>
            <returns></returns>
        </member>
        <member name="T:StreamCoders.Container.WebMReader">
            -------------------------------------------------------------------------------------------------
            <summary>
                WebM container reader.
            </summary>
            <seealso cref="T:StreamCoders.Container.MatroskaReader" />
            -------------------------------------------------------------------------------------------------
        </member>
        <member name="T:StreamCoders.Container.EbmlDocumentType">
            -------------------------------------------------------------------------------------------------
            <summary>
                Describes the specification by which a file is written.
            </summary>
            -------------------------------------------------------------------------------------------------
        </member>
        <member name="F:StreamCoders.Container.EbmlDocumentType.Matroska">
            <summary>
                Identifies a generic Matroska file.
            </summary>
        </member>
        <member name="F:StreamCoders.Container.EbmlDocumentType.WebM">
            <summary>
                Identifies a Google WebM file.
            </summary>
        </member>
        <member name="T:StreamCoders.Container.EbmlWriter">
            <summary>Implements writing of EBML streams.</summary>
            <remarks>See <see cref="!:http://ebml.sourceforge.net/" /> for more information.</remarks>
        </member>
        <member name="P:StreamCoders.Container.EbmlWriter.WrittenBytes">
            -------------------------------------------------------------------------------------------------
            <summary>
                Gets the total amounts of bytes written to the stream
            </summary>
            <value>
                The written bytes.
            </value>
            -------------------------------------------------------------------------------------------------
        </member>
        <member name="P:StreamCoders.Container.EbmlWriter.Position">
            -------------------------------------------------------------------------------------------------
            <summary>
                Gets or sets the position in the base stream.
            </summary>
            <value>
                The position in the base stream.
            </value>
            -------------------------------------------------------------------------------------------------
        </member>
        <member name="P:StreamCoders.Container.EbmlWriter.BaseStream">
            <summary>Gets the underlying stream.</summary>
        </member>
        <member name="M:StreamCoders.Container.EbmlWriter.Close">
            <summary>Closes the stream.</summary>
        </member>
        <member name="M:StreamCoders.Container.EbmlWriter.Flush">
            <summary>Flushes the stream.</summary>
        </member>
        <member name="M:StreamCoders.Container.EbmlWriter.WriteByte(System.Byte)">
            <summary>Writes a single byte to the stream.</summary>
        </member>
        <member name="M:StreamCoders.Container.EbmlWriter.WriteBytes(System.Byte[],System.Int32,System.Int32)">
            <summary>Writes an array of bytes to the stream.</summary>
        </member>
        <member name="M:StreamCoders.Container.EbmlWriter.WriteBytes(System.Byte[])">
            <summary>Writes an array of bytes to the stream.</summary>
        </member>
        <member name="M:StreamCoders.Container.EbmlWriter.WriteDataInt(System.Int64,System.Int32)">
            -------------------------------------------------------------------------------------------------
            <summary>
                Writes an EBML data int.
            </summary>
            <param name="data">
                The data.
            </param>
            <param name="size">
                Number of 8-bit fields.
            </param>
            -------------------------------------------------------------------------------------------------
        </member>
        <member name="M:StreamCoders.Container.EbmlWriter.WriteAutoDataInt(System.Int64)">
            -------------------------------------------------------------------------------------------------
            <summary>
                Writes a fixed int, but determines the minimum size and returns it.
            </summary>
            <param name="data">
                The data.
            </param>
            <returns>
                .
            </returns>
            -------------------------------------------------------------------------------------------------
        </member>
        <member name="M:StreamCoders.Container.EbmlWriter.WriteDataFloat(System.Double)">
            -------------------------------------------------------------------------------------------------
            <summary>
                Writes a 64-bit double.
            </summary>
            <param name="data">
                The data.
            </param>
            -------------------------------------------------------------------------------------------------
        </member>
        <member name="M:StreamCoders.Container.EbmlWriter.WriteVInt(System.Int64)">
            <summary>Writes a variable length unsigned integer to the stream.</summary>
        </member>
        <member name="M:StreamCoders.Container.EbmlWriter.WriteVsInt(System.Int64)">
            <summary>Writes a variable length signed integer to the stream.</summary>
        </member>
        <member name="M:StreamCoders.Container.EbmlWriter.WriteId(System.Byte[])">
            <summary>Writes an element ID to the stream.</summary>
        </member>
        <member name="M:StreamCoders.Container.EbmlWriter.WriteFixedInt(System.Int64,System.Int32)">
            <summary>Writes a fixed size 32-bit unsigned integer to the stream.</summary>
        </member>
        <member name="M:StreamCoders.Container.EbmlWriter.WriteFixedSInt(System.Int64,System.Int32)">
            <summary>Writes a fixed size 32-bit signed integer to the stream.</summary>
        </member>
        <member name="M:StreamCoders.Container.EbmlWriter.WriteString(System.String)">
            <summary>Writes a string to the stream.</summary>
        </member>
        <member name="M:StreamCoders.Container.EbmlWriter.WriteUtf8(System.String)">
            <summary>Writes a string as UTF-8 (string) to the stream.</summary>
        </member>
        <member name="M:StreamCoders.Container.EbmlWriter.WriteXiphInt(System.Int64)">
            <summary>Writes a XIPH coded unsigned integer to the stream.</summary>
        </member>
        <member name="T:StreamCoders.Container.KaxCueAggregate">
            -------------------------------------------------------------------------------------------------
            <summary>
                Aggregates Cuepoint and Cluster/sample reference so we can late bind to the offset and time information.
            </summary>
            -------------------------------------------------------------------------------------------------
        </member>
        <member name="M:StreamCoders.Container.MatroskaBaseWriter.CreateVideoTrack(StreamCoders.TrackInfo)">
            -------------------------------------------------------------------------------------------------
            <summary>
                Creates video track TrackEntry Elementbase object.
            </summary>
            <param name="track">
                The track.
            </param>
            <returns>
                The new video track.
            </returns>
            -------------------------------------------------------------------------------------------------
        </member>
        <member name="M:StreamCoders.Container.MatroskaBaseWriter.CreateAudioTrack(StreamCoders.TrackInfo)">
            -------------------------------------------------------------------------------------------------
            <summary>
                Creates audio track TrackEntry Elementbase object.
            </summary>
            <param name="track">
                The track.
            </param>
            <returns>
                The new video track.
            </returns>
            -------------------------------------------------------------------------------------------------
        </member>
        <member name="P:StreamCoders.Container.MatroskaCluster.IsFull">
            -------------------------------------------------------------------------------------------------
            <summary>
                Determines whether the cluster can take on any more blockgroups or blocks.
            </summary>
            <value>
                true if this MatroskaCluster is full, false if not.
            </value>
            -------------------------------------------------------------------------------------------------
        </member>
        <member name="M:StreamCoders.Container.MatroskaCluster.GetBlockGroup">
            -------------------------------------------------------------------------------------------------
            <summary>
                Gets a BlockGroup to create block in
            </summary>
            <returns>
                Gets a BlockGroup object.
            </returns>
            -------------------------------------------------------------------------------------------------
        </member>
        <member name="M:StreamCoders.Container.MatroskaKaxCues.AddSample(System.TimeSpan,System.Int64,System.Int64)">
            <summary>
                This method adds a cuepoint without references to elements and samples. It is useful for manually adding cues in
                semi-live streams (e.g. live transcoding).
            </summary>
            <param name="seekTime">The time for the cue point</param>
            <param name="trackNumber">Track number reference</param>
            <param name="clusterPosition">Relative cluster position</param>
        </member>
        <member name="P:StreamCoders.Container.MatroskaSegment.SegmentDuration">
            -------------------------------------------------------------------------------------------------
            <summary>
                Gets or sets the duration of the segment.
            </summary>
            <value>
                The segment duration.
            </value>
            -------------------------------------------------------------------------------------------------
        </member>
        <member name="M:StreamCoders.Container.MatroskaSegment.Init(System.Collections.Generic.List{StreamCoders.Container.TrackAggregate})">
            -------------------------------------------------------------------------------------------------
            <summary>
                Creates a segment given "Segment tracks" Element.
                Creates SegmentInfo Element with information passed by Configuration.
            </summary>
            <param name="tracks">
                The segment tracks.
            </param>
            <returns>
                The new segment.
            </returns>
            -------------------------------------------------------------------------------------------------
        </member>
        <member name="M:StreamCoders.Container.MatroskaSegment.CreateCluster(StreamCoders.MediaBuffer{System.Byte})">
            <summary>
                Creates a new cluster.
            </summary>
            <param name="buffer">First sample to use for meta information (timing)</param>
            <returns>Returns a newly created cluster</returns>
        </member>
        <member name="M:StreamCoders.Container.MatroskaSegment.SetNextSegment(StreamCoders.Container.MatroskaSegment)">
            -------------------------------------------------------------------------------------------------
            <summary>
                Sets next/previous segment if multiple segments are used. The current segment will need
                information in order to correctly chain the segments together.
            </summary>
            <param name="segment">
                The segment.
            </param>
            -------------------------------------------------------------------------------------------------
        </member>
        <member name="M:StreamCoders.Container.MatroskaSegment.Write(StreamCoders.TrackInfo,StreamCoders.MediaBuffer{System.Byte},StreamCoders.Container.EbmlWriter)">
            -------------------------------------------------------------------------------------------------
            <summary>
                Writes buffer to the segment.
            </summary>
            <param name="track">
                The track information.
            </param>
            <param name="buffer">
                The buffer containing frame.
            </param>
            <returns>
                true if it succeeds, false if it fails.
            </returns>
            -------------------------------------------------------------------------------------------------
        </member>
        <member name="M:StreamCoders.Container.MatroskaSegment.Commit(StreamCoders.Container.EbmlWriter)">
            <summary>
                Commits segment to stream.
            </summary>
            <param name="writer">EBML writer to use.</param>
            <returns></returns>
        </member>
        <member name="T:StreamCoders.Container.MatroskaWriter">
            <summary>Matroska file container streamWriter. Supports v1,2,3,4 of container format specification.</summary>
            <remarks>
                <para>Supported features:</para>
                <list type="bullet">
                    <item>Multi-segment</item>
                    <item>BlockGroups</item>
                    <item>Blocks</item>
                    <item>SimpleBlocks</item>
                    <item>Cueing</item>
                    <item>Tagging</item>
                    <item>Live streaming</item>
                    <item>Live transforming from another container incl. fake cue points.</item>
                </list>
            </remarks>
            <seealso cref="T:StreamCoders.IWriter"></seealso>
        </member>
        <member name="F:StreamCoders.Container.MatroskaWriter.Configuration">
            -------------------------------------------------------------------------------------------------
            <summary>
                Container specific configurations. These should be set before calling the Init method.
            </summary>
            -------------------------------------------------------------------------------------------------
        </member>
        <member name="M:StreamCoders.Container.MatroskaWriter.AddTrack(StreamCoders.TrackInfo)">
            -------------------------------------------------------------------------------------------------
            <summary>
                Adds a new track to the Matroska container.
            </summary>
            <remarks>
                This method may throw first chance exceptions due to the internal cloning of the
                TrackInfo object.
            </remarks>
            <param name="track">
                The track information to add.
            </param>
            <returns>
                A new TrackInfo instance that should be use for all subsequent calls to this object.
            </returns>
            <seealso cref="M:StreamCoders.IWriter.AddTrack(TrackInfo)" />
            -------------------------------------------------------------------------------------------------
        </member>
        <member name="M:StreamCoders.Container.MatroskaWriter.EndTrack(StreamCoders.TrackInfo)">
            -------------------------------------------------------------------------------------------------
            <summary>
                Finalizes a track in the container.
            </summary>
            <param name="track">
                The track to finalize.
            </param>
            <seealso cref="M:StreamCoders.IWriter.EndTrack(TrackInfo)" />
            -------------------------------------------------------------------------------------------------
        </member>
        <member name="M:StreamCoders.Container.MatroskaWriter.Init(System.IO.Stream)">
            -------------------------------------------------------------------------------------------------
            <summary>
                Initializes the MKV container with the provided stream.
            </summary>
            <param name="stream">
                The output stream used to construct the MKV container.
            </param>
            <returns>
                true if it succeeds, false if it fails.
            </returns>
            -------------------------------------------------------------------------------------------------
        </member>
        <member name="M:StreamCoders.Container.MatroskaWriter.Close">
            -------------------------------------------------------------------------------------------------
            <summary>
                Finalizes all tracks and closes the stream object.
            </summary>
            -------------------------------------------------------------------------------------------------
        </member>
        <member name="T:StreamCoders.Container.MatroskaWriterConfiguration">
            <summary>
                Used to configure details of Matroska/WebM Writer.
            </summary>
            <remarks>
                <para>Notes for live streaming: </para>
                <para>
                    If LiveStream is set to true, the following options will be overwritten:
                </para>
                <para>
                    UseBlockGroups = false (implying SimpleBlocks)<br />
                    SegmentSwitchThreshold = UseOneSegment. <br />
                </para>
                <para>Also the default segment size will be infinite.</para>
            </remarks>
        </member>
        <member name="F:StreamCoders.Container.MatroskaWriterConfiguration.DurationThreshold">
            <summary>
                The segment switch duration threshold. Effective only if SegmentSwitchThreshold
                is CreateNewSegmentAfterDurationThreshold.
            </summary>
        </member>
        <member name="F:StreamCoders.Container.MatroskaWriterConfiguration.Tags">
            -------------------------------------------------------------------------------------------------
            <summary>
                A list of meta-tags (key/value) to be included in the file.
            </summary>
            -------------------------------------------------------------------------------------------------
        </member>
        <member name="P:StreamCoders.Container.MatroskaWriterConfiguration.EbmlVersion">
            -------------------------------------------------------------------------------------------------
            <summary>
                Gets or sets the EBML version. By default this set to 1.
            </summary>
            <value>
                The EBML version.
            </value>
            -------------------------------------------------------------------------------------------------
        </member>
        <member name="P:StreamCoders.Container.MatroskaWriterConfiguration.EbmlReadVersion">
            -------------------------------------------------------------------------------------------------
            <summary>
                Gets or sets the EBML read version. By default this is set to 1.
            </summary>
            <value>
                The ebml read version.
            </value>
            -------------------------------------------------------------------------------------------------
        </member>
        <member name="P:StreamCoders.Container.MatroskaWriterConfiguration.DocumentType">
            -------------------------------------------------------------------------------------------------
            <summary>
                Gets or sets the type of the document. E.g. "matroska", "webm"
            </summary>
            <value>
                The type of the document.
            </value>
            -------------------------------------------------------------------------------------------------
        </member>
        <member name="P:StreamCoders.Container.MatroskaWriterConfiguration.DocumentTypeVersion">
            <summary>
                Gets or sets the document type version. By default this is set to 2.
            </summary>
            <value>
                The document type version.
            </value>
        </member>
        <member name="P:StreamCoders.Container.MatroskaWriterConfiguration.DocumentTypeReadVersion">
            <summary>
                Gets or sets the document type read version. By default this is set to 2.
            </summary>
            <value>
                The document type read version.
            </value>
        </member>
        <member name="P:StreamCoders.Container.MatroskaWriterConfiguration.MuxingApplication">
            -------------------------------------------------------------------------------------------------
            <summary>
                Gets or sets the muxing application name.
            </summary>
            <value>
                The muxing application name.
            </value>
            -------------------------------------------------------------------------------------------------
        </member>
        <member name="P:StreamCoders.Container.MatroskaWriterConfiguration.WritingApplication">
            -------------------------------------------------------------------------------------------------
            <summary>
                Gets or sets the writing application name.
            </summary>
            <value>
                The writing application name.
            </value>
            -------------------------------------------------------------------------------------------------
        </member>
        <member name="P:StreamCoders.Container.MatroskaWriterConfiguration.UseBlockGroups">
            -------------------------------------------------------------------------------------------------
            <summary>
                Gets or sets a value indicating whether to use groups in clusters or otherwise SimpleBlocks.
            </summary>
            <value>
                true if use groups are used, false if not.
            </value>
            -------------------------------------------------------------------------------------------------
        </member>
        <member name="P:StreamCoders.Container.MatroskaWriterConfiguration.DefaultTimecodeScale">
            -------------------------------------------------------------------------------------------------
            <summary>
                Gets or sets the default timecode scale. Default: 1,000,000
            </summary>
            <value>
                The default timecode scale.
            </value>
            -------------------------------------------------------------------------------------------------
        </member>
        <member name="P:StreamCoders.Container.MatroskaWriterConfiguration.BlockGroupsPerCluster">
            <summary>Gets or sets the BlockGroups per cluster.</summary>
            <remarks>The number of blocks per cluster are: num = BlocksPerBlockGroup * BlockGroupsPerCluster</remarks>
            <value>
                The block groups per cluster.
            </value>
        </member>
        <member name="P:StreamCoders.Container.MatroskaWriterConfiguration.BlocksPerBlockGroup">
            -------------------------------------------------------------------------------------------------
            <summary>
                Gets or sets the number of blocks per BlockGroup.
            </summary>
            <remarks>
                The number of blocks per cluster are: num = BlocksPerBlockGroup * BlockGroupsPerCluster.
            </remarks>
            <value>
                The blocks per BlockGroup.
            </value>
            -------------------------------------------------------------------------------------------------
        </member>
        <member name="P:StreamCoders.Container.MatroskaWriterConfiguration.SimpleBlocksPerCluster">
            <summary>
                Gets or sets the number of simple-blocks per cluster.
            </summary>
        </member>
        <member name="P:StreamCoders.Container.MatroskaWriterConfiguration.IncludeSeekInformation">
            <summary>
                Gets or sets a value indicating whether the seek information should be included
                in segments. Without this information seeking cannot be accomplished, but it may
                be necessary to turn this property to false when live streaming.
            </summary>
            <value>
                true if include seek information, false if not.
            </value>
        </member>
        <member name="P:StreamCoders.Container.MatroskaWriterConfiguration.LiveStream">
            <summary>
                Gets or sets a value indicating whether the file will be used for live
                streaming.
                <para></para>
            </summary>
            <remarks>
                <para>Setting to true will modify the configuration to:</para>
                <para>
                    UseBlockGroups to false<br /><c>SegmentSwitchThreshold</c> to <c>SegmentSwitchThreshold.UseOneSegment</c>
                    <c>IncludeSeekInformation</c> to false<br /><c>SimpleBlocksPerCluster</c> to 1.
                </para>
            </remarks>
            <value>
                true if live stream, false if not.
            </value>
        </member>
        <member name="P:StreamCoders.Container.MatroskaWriterConfiguration.CreateFakeCuePoints">
            <summary>
                Creates fake cue points for live transform from another container. Cue points will be generated for every 5 seconds
                of video. At least one track must contain a duration for this feature to work.
            </summary>
            <value>
                <c>true</c> if [create fake cue points]; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:StreamCoders.Container.MatroskaWriterConfiguration.FakeCuePoints">
            <summary>
                Contains fake cue points for the container when <c>CreateFakeCuePoints</c> was enabled.
            </summary>
            <value>
                Face cue points.
            </value>
        </member>
        <member name="P:StreamCoders.Container.MatroskaWriterConfiguration.TimeCodeScaleNanoRatio">
            <summary>
                Gets the ratio of TimecodeScale to nano-second.
            </summary>
        </member>
        <member name="F:StreamCoders.Container.SegmentSwitchThreshold.UseOneSegment">
            <summary>
                inputStream will contain a single segment
            </summary>
        </member>
        <member name="F:StreamCoders.Container.SegmentSwitchThreshold.CreateNewSegmentAfterDurationThreshold">
            <summary>
                inputStream will have multiple segments with roughly the same duration
            </summary>
        </member>
        <member name="F:StreamCoders.Container.SegmentSwitchThreshold.CreateNewSegmentAfterWrittenBlocksThreshold">
            <summary>
                inputStream will have multiple segments with roughly the same number of blocks.
            </summary>
        </member>
        <member name="T:StreamCoders.Container.WebMWriter">
            <summary>WebM container streamWriter.</summary>
            <seealso cref="T:StreamCoders.Container.MatroskaWriter"></seealso>
        </member>
        <member name="T:StreamCoders.Container.Mp3Reader">
            -------------------------------------------------------------------------------------------------
            <summary>
                Implements an MP3 reader.
            </summary>
            <remarks>
                Currently ID3 tags are not provided back to the application.
            </remarks>
            -------------------------------------------------------------------------------------------------
        </member>
        <member name="M:StreamCoders.Container.Mp3StorageFrame.#ctor">
            <summary>
                Constructs an MP3 frame
            </summary>
        </member>
        <member name="P:StreamCoders.Container.Mp3StorageFrame.Samplerate">
            <summary>
                Sample rate of this frame
            </summary>
        </member>
        <member name="P:StreamCoders.Container.Mp3StorageFrame.FrameLength">
            <summary>
                Frame length in bytes
            </summary>
        </member>
        <member name="P:StreamCoders.Container.Mp3StorageFrame.Bitrate">
            <summary>
                Bit Rate
            </summary>
        </member>
        <member name="P:StreamCoders.Container.Mp3StorageFrame.RawData">
            <summary>
                Raw frame data (includes header bytes)
            </summary>
        </member>
        <member name="P:StreamCoders.Container.Mp3StorageFrame.MpegVersion">
            <summary>
                MPEG Version
            </summary>
        </member>
        <member name="P:StreamCoders.Container.Mp3StorageFrame.MpegLayer">
            <summary>
                MPEG Layer
            </summary>
        </member>
        <member name="P:StreamCoders.Container.Mp3StorageFrame.ChannelMode">
            <summary>
                Channel Mode
            </summary>
        </member>
        <member name="P:StreamCoders.Container.Mp3StorageFrame.SampleCount">
            -------------------------------------------------------------------------------------------------
            <summary>
                The number of samples in this frame.
            </summary>
            <value>
                The number of samples.
            </value>
            -------------------------------------------------------------------------------------------------
        </member>
        <member name="P:StreamCoders.Container.Mp3StorageFrame.ChannelExtension">
            <summary>
                The channel extension bits
            </summary>
        </member>
        <member name="P:StreamCoders.Container.Mp3StorageFrame.BitrateIndex">
            -------------------------------------------------------------------------------------------------
            <summary>
                The bitrate index (directly from the header)
            </summary>
            <value>
                The bit rate index.
            </value>
            -------------------------------------------------------------------------------------------------
        </member>
        <member name="P:StreamCoders.Container.Mp3StorageFrame.Copyright">
            -------------------------------------------------------------------------------------------------
            <summary>
                Whether the Copyright bit is set.
            </summary>
            <value>
                true if copyright, false if not.
            </value>
            -------------------------------------------------------------------------------------------------
        </member>
        <member name="P:StreamCoders.Container.Mp3StorageFrame.CrcPresent">
            -------------------------------------------------------------------------------------------------
            <summary>
                Whether a CRC is present.
            </summary>
            <value>
                true if CRC present, false if not.
            </value>
            -------------------------------------------------------------------------------------------------
        </member>
        <member name="P:StreamCoders.Container.Mp3StorageFrame.FileOffset">
            -------------------------------------------------------------------------------------------------
            <summary>
                Not part of the MP3 frame itself - indicates where in the stream we found this header.
            </summary>
            <value>
                The file offset.
            </value>
            -------------------------------------------------------------------------------------------------
        </member>
        <member name="M:StreamCoders.Container.Mp3StorageFrame.CreateFrom(System.IO.Stream)">
            <summary>
                Reads an MP3 frame from a stream
            </summary>
            <param name="input">input stream</param>
            <returns>A valid MP3 frame, or null if none found</returns>
        </member>
        <member name="M:StreamCoders.Container.Mp3StorageFrame.CreateFrom(System.IO.Stream,System.Boolean)">
            <summary>Reads an MP3Frame from a stream</summary>
            <returns>A valid MP3 frame, or null if none found</returns>
        </member>
        <member name="F:StreamCoders.Container.MpegAudioLayer.Reserved">
            <summary>
                Reserved
            </summary>
        </member>
        <member name="F:StreamCoders.Container.MpegAudioLayer.Layer3">
            <summary>
                Layer 3
            </summary>
        </member>
        <member name="F:StreamCoders.Container.MpegAudioLayer.Layer2">
            <summary>
                Layer 2
            </summary>
        </member>
        <member name="F:StreamCoders.Container.MpegAudioLayer.Layer1">
            <summary>
                Layer 1
            </summary>
        </member>
        <member name="F:StreamCoders.Container.MpegAudioVersion.Version25">
            <summary>
                Version 2.5
            </summary>
        </member>
        <member name="F:StreamCoders.Container.MpegAudioVersion.Reserved">
            <summary>
                Reserved
            </summary>
        </member>
        <member name="F:StreamCoders.Container.MpegAudioVersion.Version2">
            <summary>
                Version 2
            </summary>
        </member>
        <member name="F:StreamCoders.Container.MpegAudioVersion.Version1">
            <summary>
                Version 1
            </summary>
        </member>
        <member name="M:StreamCoders.Container.MP4.AacTransform.TransformAdts(StreamCoders.MediaBuffer{System.Byte},System.Boolean)">
            <summary>
                Transforms an ADTS frame to a raw headerless frame. The frame configuration is saved separately.
            </summary>
            <param name="mp">input buffer containing ADTS frame</param>
            <param name="isFirstFrame">Indicates whether the frame fed is the first frame of the stream</param>
            <returns></returns>
        </member>
        <member name="M:StreamCoders.Container.MP4.AacTransform.TransformAdtsToRaw(StreamCoders.OffsetBuffer{System.Byte})">
            -------------------------------------------------------------------------------------------------
            <summary>
                Transforms single or multiple ADTS frames into a list of raw AAC frames.
            </summary>
            <param name="adtsFrames">
                The adts frames.
            </param>
            <returns>
                A list of raw AAC frames
            </returns>
            <remarks>
                Note that this method is not thread safe as it temporarily modifies the input buffer.
            </remarks>
            -------------------------------------------------------------------------------------------------
        </member>
        <member name="M:StreamCoders.Container.MP4.AacTransform.TransformAdtsToRaw2(StreamCoders.OffsetBuffer{System.Byte})">
            -------------------------------------------------------------------------------------------------
            <summary>
                Transforms single or multiple ADTS frames into a list of raw AAC frames.
            </summary>
            <param name="adtsFrames">
                The adts frames.
            </param>
            <returns>
                A list of raw AAC frames including configuration data
            </returns>
            <remarks>
                Note that this method is not thread safe as it temporarily modifies the input buffer.
            </remarks>
            -------------------------------------------------------------------------------------------------
        </member>
        <member name="M:StreamCoders.Container.MP4.AacTransform.IsAdtsFrame(StreamCoders.OffsetBuffer{System.Byte})">
            -------------------------------------------------------------------------------------------------
            <summary>
                Checks whether a buffer starts with an ADTS header
            </summary>
            <param name="buffer">
                Buffer to check
            </param>
            <returns>
                Returns true if the buffer starts with an ADTS header, otherwise false.
            </returns>
            -------------------------------------------------------------------------------------------------
        </member>
        <member name="T:StreamCoders.Container.MP4.AacTransformPackage">
            <summary>
                Contains data outputted by AacTransform class
            </summary>
        </member>
        <member name="M:StreamCoders.Container.MP4.MP4StreamReader.ReadByteBuffer(System.Int32,System.Int32@)">
            -------------------------------------------------------------------------------------------------
            <summary>
                Reads a number of bytes into a newly created buffer. The returned buffer will have the
                size of the passed <code>size</code> parameter. EOS will be set if the number of bytes
                read equals zero or is less than <code>size</code>.
            </summary>
            <param name="size">
                The number of bytes to read.
            </param>
            <param name="bytesRead">
                Returns the number of bytes that were actually read from the stream.
            </param>
            <returns>
                An array of byte.
            </returns>
            -------------------------------------------------------------------------------------------------
        </member>
        <member name="M:StreamCoders.Container.MP4.MP4StreamReader.ReadByteBuffer(System.Int32)">
            -------------------------------------------------------------------------------------------------
            <summary>
                Reads a number of bytes into a newly created buffer. The returned buffer will have the
                size of the passed <code>size</code> parameter. EOS will be set if the number of bytes
                read equals zero or is less than <code>size</code>.
            </summary>
            <param name="size">
                The number of bytes to read.
            </param>
            <returns>
                An array of byte.
            </returns>
            -------------------------------------------------------------------------------------------------
        </member>
        <member name="M:StreamCoders.Container.MP4.MP4StreamReader.ReadByteBuffer(System.Int64)">
            -------------------------------------------------------------------------------------------------
            <summary>
                Reads a number of bytes into a newly created buffer. The returned buffer will have the
                size of the passed <code>size</code> parameter. EOS will be set if the number of bytes
                read equals zero or is less than <code>size</code>.
            </summary>
            <param name="size">
                The number of bytes to read.
            </param>
            <returns>
                An array of byte.
            </returns>
            -------------------------------------------------------------------------------------------------
        </member>
        <member name="M:StreamCoders.Container.MP4.MP4StreamReader.ReadUnsignedInt32Variable(System.Int32)">
            <summary>
                Reads variable length input 1..4 bytes and returns uint
            </summary>
            <param name="size"></param>
            <returns></returns>
        </member>
        <member name="P:StreamCoders.Container.MP4.MP4StreamReader.StreamPosition">
            -------------------------------------------------------------------------------------------------
            <summary>
                Gets or sets the underlying stream position. Caution because BytesReadFromStream is not
                increased. In almost all cases the Advance method should be used instead.
            </summary>
            <value>
                The stream position.
            </value>
            -------------------------------------------------------------------------------------------------
        </member>
        <member name="M:StreamCoders.Container.MP4.MP4StreamWriter.#ctor">
            <summary>
                Creates a MemoryStream streamWriter
            </summary>
        </member>
        <member name="T:StreamCoders.Container.MP4.FragmentSampleFlags">
            -------------------------------------------------------------------------------------------------
            <summary>
                sample flags used for "first_sample_flags" and "default_sample_flags" in fragments.
            </summary>
            -------------------------------------------------------------------------------------------------
        </member>
        <member name="F:StreamCoders.Container.MP4.FragmentSampleFlags.SampleDegradationPriority">
            -------------------------------------------------------------------------------------------------
            <summary>
                The sample degradation priority. This works together with the 'stdp' Degradation Priority
                Box.
            </summary>
            -------------------------------------------------------------------------------------------------
        </member>
        <member name="F:StreamCoders.Container.MP4.FragmentSampleFlags.SampleDependsOn">
            -------------------------------------------------------------------------------------------------
            <summary>
                Indicates Dependecy of the sample.
            </summary>
            ###
            <remarks>
                0: the dependency of this sample is unknown;
                1: this sample does depend on others (not an I picture);
                2: this sample does not depend on others (I picture);
                3: reserved.
            </remarks>
            -------------------------------------------------------------------------------------------------
        </member>
        <member name="F:StreamCoders.Container.MP4.FragmentSampleFlags.SampleHasRedundancy">
            -------------------------------------------------------------------------------------------------
            <summary>
                Indicates whether there is redundant coding in the sample.
            </summary>
            ###
            <remarks>
                0: it is unknown whether there is redundant coding in this sample;
                1: there is redundant coding in this sample;
                2: there is no redundant coding in this sample;
                3: reserved.
            </remarks>
            -------------------------------------------------------------------------------------------------
        </member>
        <member name="F:StreamCoders.Container.MP4.FragmentSampleFlags.SampleIsDependedOn">
            -------------------------------------------------------------------------------------------------
            <summary>
                Indicates that another sample depends on this sample.
            </summary>
            ###
            <remarks>
                0: the dependency of other samples on this sample is unknown;
                1: other samples may depend on this one (not disposable);
                2: no other sample depends on this one (disposable);
                3: reserved.
            </remarks>
            -------------------------------------------------------------------------------------------------
        </member>
        <member name="F:StreamCoders.Container.MP4.FragmentSampleFlags.SampleIsDifferenceSample">
            -------------------------------------------------------------------------------------------------
            <summary>
                Indicates whether this sample is a non-key frame.
            </summary>
            -------------------------------------------------------------------------------------------------
        </member>
        <member name="F:StreamCoders.Container.MP4.FragmentSampleFlags.SamplePaddingValue">
            -------------------------------------------------------------------------------------------------
            <summary>
                The sample padding value. This works in reference with 'padb' Padding Bits Box.
            </summary>
            -------------------------------------------------------------------------------------------------
        </member>
        <member name="T:StreamCoders.Container.MP4.MovieExtendsBox">
            -------------------------------------------------------------------------------------------------
            <summary>
                Movie Extends box 'mvex'.
            </summary>
            <seealso cref="T:StreamCoders.Container.MP4.Box" />
            -------------------------------------------------------------------------------------------------
        </member>
        <member name="T:StreamCoders.Container.MP4.TrackFragmentAdjustmentBox">
            -------------------------------------------------------------------------------------------------
            <summary>
                Track Fragment Adjustment Box 'tfad'.
            </summary>
            <seealso cref="T:StreamCoders.Container.MP4.Box" />
            -------------------------------------------------------------------------------------------------
        </member>
        <member name="T:StreamCoders.Container.MP4.TrackFragmentBaseMediaDecodeTimeBox">
            -------------------------------------------------------------------------------------------------
            <summary>
                <para>Track Fragment Decode Time Box 'tfdt' (3GPP 26.244 REL10) DASH</para>
                <para>
                    The Track Fragment Base Media Decode Time (‘tfdt’) Box provides the decode time of
                    the first sample in the track fragment. This can be useful, for example,
                    when performing random access in a file; it is not necessary to sum the sample durations
                    of all preceding samples in previous fragments to find this value (where the sample
                    durations are the deltas in the Decoding Time to sample Box and the sample_durationsin
                    the preceding track runs).
                </para>
                <para></para>
            </summary>
            <seealso cref="T:StreamCoders.Container.MP4.FullBox" />
            -------------------------------------------------------------------------------------------------
        </member>
        <member name="M:StreamCoders.Container.MP4.TrackFragmentBaseMediaDecodeTimeBox.#ctor">
            -------------------------------------------------------------------------------------------------
            <summary>
                Default constructor.
            </summary>
            -------------------------------------------------------------------------------------------------
        </member>
        <member name="M:StreamCoders.Container.MP4.TrackFragmentBaseMediaDecodeTimeBox.#ctor(System.Byte,System.UInt32)">
            -------------------------------------------------------------------------------------------------
            <summary>
                Constructor.
            </summary>
            <param name="Version">  The version. </param>
            <param name="Flags">    The flags. </param>
            -------------------------------------------------------------------------------------------------
        </member>
        <member name="M:StreamCoders.Container.MP4.TrackFragmentBaseMediaDecodeTimeBox.#ctor(StreamCoders.Container.MP4.Box)">
            -------------------------------------------------------------------------------------------------
            <summary>
                Constructor.
            </summary>
            <param name="box">  The box. </param>
            -------------------------------------------------------------------------------------------------
        </member>
        <member name="M:StreamCoders.Container.MP4.TrackFragmentBaseMediaDecodeTimeBox.WriteBox">
            -------------------------------------------------------------------------------------------------
            <summary>
                Writes a box.
            </summary>
            <param name="hostWriter">   The host streamWriter. </param>
            <returns>
                .
            </returns>
            -------------------------------------------------------------------------------------------------
        </member>
        <member name="T:StreamCoders.Container.MP4.TrackFragmentHeaderFlags">
            -------------------------------------------------------------------------------------------------
            <summary>
                Track fragment header flags. Contains default information for track runs.
            </summary>
            -------------------------------------------------------------------------------------------------
        </member>
        <member name="T:StreamCoders.Container.MP4.TrackFragmentMediaAdjustmentBox">
            -------------------------------------------------------------------------------------------------
            <summary>
                <para>Track Fragment Media Adjustment Box 'tfma' (3GPP 26.244 REL10) DASH</para>
                <para>
                    The Track Fragment Media Adjustment Box provides explicit time line offsets. By
                    indicating ‘empty’ time, or by defining a ‘dwell’, the offset can
                    advantageously delay the playback time of the media in the track so that media in
                    different tracks can be synchronized. Alternatively, the media_time value may be used to
                    discard part of the “earlier” tracks.
                </para>
                <para></para>
            </summary>
            <seealso cref="T:StreamCoders.Container.MP4.FullBox" />
            -------------------------------------------------------------------------------------------------
        </member>
        <member name="F:StreamCoders.Container.MP4.TrackFragmentMediaAdjustmentBox.EntryCount">
            -------------------------------------------------------------------------------------------------
            <summary>
                Indicates number of entries in <b>Entries</b> list.
            </summary>
            -------------------------------------------------------------------------------------------------
        </member>
        <member name="M:StreamCoders.Container.MP4.TrackFragmentMediaAdjustmentBox.#ctor">
            -------------------------------------------------------------------------------------------------
            <summary>
                Default constructor.
            </summary>
            -------------------------------------------------------------------------------------------------
        </member>
        <member name="M:StreamCoders.Container.MP4.TrackFragmentMediaAdjustmentBox.#ctor(System.Byte,System.UInt32)">
            -------------------------------------------------------------------------------------------------
            <summary>
                Constructor.
            </summary>
            <param name="Version">  The version. </param>
            <param name="Flags">    The flags. </param>
            -------------------------------------------------------------------------------------------------
        </member>
        <member name="M:StreamCoders.Container.MP4.TrackFragmentMediaAdjustmentBox.#ctor(StreamCoders.Container.MP4.Box)">
            -------------------------------------------------------------------------------------------------
            <summary>
                Constructor.
            </summary>
            <param name="box">  The box. </param>
            -------------------------------------------------------------------------------------------------
        </member>
        <member name="T:StreamCoders.Container.MP4.TrackFragmentMediaAdjustmentEntry">
            -------------------------------------------------------------------------------------------------
            <summary>
                Entry list for <b>TrackFragmentMediaAdjustmentBox</b>
            </summary>
            -------------------------------------------------------------------------------------------------
        </member>
        <member name="F:StreamCoders.Container.MP4.TrackFragmentMediaAdjustmentEntry.MediaRateFraction">
            -------------------------------------------------------------------------------------------------
            <summary>
                Specifies the relative rate at which to play the media corresponding to this adjustment
                segment. If this value is 0, then the adjustment is specifying a ‘dwell’: the media at
                media-time is presented for the segment-duration.  Otherwise this field shall contain the
                value 1.
            </summary>
            -------------------------------------------------------------------------------------------------
        </member>
        <member name="F:StreamCoders.Container.MP4.TrackFragmentMediaAdjustmentEntry.mediaRateInteger">
            -------------------------------------------------------------------------------------------------
            <summary>
                Specifies the relative rate at which to play the media corresponding to this adjustment
                segment. If this value is 0, then the adjustment is specifying a ‘dwell’: the media at
                media-time is presented for the segment-duration.  Otherwise this field shall contain the
                value 1.
            </summary>
            -------------------------------------------------------------------------------------------------
        </member>
        <member name="F:StreamCoders.Container.MP4.TrackFragmentMediaAdjustmentEntry.MediaTime">
            -------------------------------------------------------------------------------------------------
            <summary>
                <para>
                    Is an integer containing the starting time within the media of this adjustment
                    segment (in media time scale units, in composition time). If this field is set to -1, it
                    is an empty edit. The last adjustment in a track shall never be an empty edit.
                </para>
            </summary>
            -------------------------------------------------------------------------------------------------
        </member>
        <member name="F:StreamCoders.Container.MP4.TrackFragmentMediaAdjustmentEntry.SegmentDuration">
            -------------------------------------------------------------------------------------------------
            <summary>
                Is an integer that specifies the duration of this adjustment segment in units of the
                timescale in the Movie Header Box. “Adjustment segment” in this context does not refer to
                the “Media Segment” that contains the ‘tfma’ but refers to the operation that is
                performed to place the track at appropriate composition time.
            </summary>
            -------------------------------------------------------------------------------------------------
        </member>
        <member name="F:StreamCoders.Container.MP4.TrackFragmentRandomAccessBox.LengthSizeOfSampleNumber">
            -------------------------------------------------------------------------------------------------
            <summary>
                The length size of the sample number (LengthSize minus 1).
            </summary>
            -------------------------------------------------------------------------------------------------
        </member>
        <member name="F:StreamCoders.Container.MP4.TrackFragmentRandomAccessBox.LengthSizeOfTrafNumber">
            -------------------------------------------------------------------------------------------------
            <summary>
                The length size of the TRAF number (LengthSize minus 1).
            </summary>
            -------------------------------------------------------------------------------------------------
        </member>
        <member name="F:StreamCoders.Container.MP4.TrackFragmentRandomAccessBox.LengthSizeOfTranNumber">
            -------------------------------------------------------------------------------------------------
            <summary>
                The length size of the TRAN number (LengthSize minus 1).
            </summary>
            -------------------------------------------------------------------------------------------------
        </member>
        <member name="T:StreamCoders.Container.MP4.TrackFragmentRunBox">
            -------------------------------------------------------------------------------------------------
            <summary>
                Track Fragment Run box ('trun')
            </summary>
            <seealso cref="T:StreamCoders.Container.MP4.FullBox" />
            -------------------------------------------------------------------------------------------------
        </member>
        <member name="F:StreamCoders.Container.MP4.TrackFragmentRunBox.CurrentSample">
            -------------------------------------------------------------------------------------------------
            <summary>
                The current sample.
            </summary>
            -------------------------------------------------------------------------------------------------
        </member>
        <member name="F:StreamCoders.Container.MP4.TrackFragmentRunBox.DataOffset">
            -------------------------------------------------------------------------------------------------
            <summary>
                The data offset. this is the offset of MDAT relative to the BaseDataOffset defined in the TrackFragmentHeaderBox.
            </summary>
            <remarks>
                If the data-offset is not present, then the data for this run starts immediately after the data of the previous
                run,
                or at the base-data-offset defined by the track fragment header if this is the first run in a track fragment, If
                the
                data-offset is present, it is relative to the base-data-offset established in the track fragment header.
            </remarks>
            -------------------------------------------------------------------------------------------------
        </member>
        <member name="F:StreamCoders.Container.MP4.TrackFragmentRunBox.DataOffsetPresent">
            -------------------------------------------------------------------------------------------------
            <summary>
                true to data offset present. If the data offset is not present, then the next data is defined to be immediately
                after the previous track run data.
            </summary>
            -------------------------------------------------------------------------------------------------
        </member>
        <member name="F:StreamCoders.Container.MP4.TrackFragmentRunBox.FirstSampleFlags">
            -------------------------------------------------------------------------------------------------
            <summary>
                The first sample flags.
            </summary>
            -------------------------------------------------------------------------------------------------
        </member>
        <member name="F:StreamCoders.Container.MP4.TrackFragmentRunBox.SampleCount">
            -------------------------------------------------------------------------------------------------
            <summary>
                Number of samples.
            </summary>
            -------------------------------------------------------------------------------------------------
        </member>
        <member name="F:StreamCoders.Container.MP4.TrackFragmentRunBox.TrackRunSampleEntries">
            -------------------------------------------------------------------------------------------------
            <summary>
                The track run sample entries.
            </summary>
            -------------------------------------------------------------------------------------------------
        </member>
        <member name="M:StreamCoders.Container.MP4.TrackFragmentRunBox.#ctor(StreamCoders.Container.MP4.Box)">
            -------------------------------------------------------------------------------------------------
            <summary>
                Constructor.
            </summary>
            <param name="box">  The box. </param>
            -------------------------------------------------------------------------------------------------
        </member>
        <member name="M:StreamCoders.Container.MP4.TrackFragmentRunBox.GetNextSampleOffset">
            -------------------------------------------------------------------------------------------------
            <summary>
                Gets offset of next sample and incremen.
            </summary>
            <exception cref="T:System.IndexOutOfRangeException">
                Thrown when the index is outside the required range.
            </exception>
            <returns>
                The next sample offset.
            </returns>
            -------------------------------------------------------------------------------------------------
        </member>
        <member name="T:StreamCoders.Container.MP4.TrackFragmentRunFlags">
            -------------------------------------------------------------------------------------------------
            <summary>
                TrackFragmentRunBox flags. Indicating what information is included in each sample of the TRUN.
                Default values of omitted information can be found in the TFFlags.
            </summary>
            -------------------------------------------------------------------------------------------------
        </member>
        <member name="T:StreamCoders.Container.MP4.TrackRunSample">
            <summary>
                Is used by TrackFragmentRunBox to return information about the next sample.
            </summary>
        </member>
        <member name="F:StreamCoders.Container.MP4.TrackRunSample.SampleEntry">
            -------------------------------------------------------------------------------------------------
            <summary>
                The sample entry.
            </summary>
            -------------------------------------------------------------------------------------------------
        </member>
        <member name="F:StreamCoders.Container.MP4.TrackRunSample.SampleOffset">
            -------------------------------------------------------------------------------------------------
            <summary>
                The sample offset.
            </summary>
            -------------------------------------------------------------------------------------------------
        </member>
        <member name="T:StreamCoders.Container.MP4.TrackRunSampleEntry">
            -------------------------------------------------------------------------------------------------
            <summary>
                Represents each individual entry in a track run. The presence of each value has to be
                validated against TrackFragmentRunFlags.
            </summary>
            -------------------------------------------------------------------------------------------------
        </member>
        <member name="F:StreamCoders.Container.MP4.TrackRunSampleEntry.SampleCompositionTimeOffset">
            -------------------------------------------------------------------------------------------------
            <summary>
                The sample composition time offset.
            </summary>
            -------------------------------------------------------------------------------------------------
        </member>
        <member name="F:StreamCoders.Container.MP4.TrackRunSampleEntry.SampleDuration">
            -------------------------------------------------------------------------------------------------
            <summary>
                Duration of the sample.
            </summary>
            -------------------------------------------------------------------------------------------------
        </member>
        <member name="F:StreamCoders.Container.MP4.TrackRunSampleEntry.SampleFlags">
            -------------------------------------------------------------------------------------------------
            <summary>
                The sample flags.
            </summary>
            -------------------------------------------------------------------------------------------------
        </member>
        <member name="F:StreamCoders.Container.MP4.TrackRunSampleEntry.SampleSize">
            -------------------------------------------------------------------------------------------------
            <summary>
                SizeIncludingHeader of the sample.
            </summary>
            -------------------------------------------------------------------------------------------------
        </member>
        <member name="F:StreamCoders.Container.MP4.FragmentConfig.InitialFragmentBox">
            -------------------------------------------------------------------------------------------------
            <summary>
                If a fragmented mp4 file is encountered this will contain the box the parser
                encountered when it terminated the loop. We need to save this initial movie fragment,
                because the stream might not be seekable (e.g. HTTP stream). The 'moof' box is also not
                yet fully parsed, so the first thing the reader needs to do is finish parsing the box.
            </summary>
            -------------------------------------------------------------------------------------------------
        </member>
        <member name="T:StreamCoders.Container.MP4.H264NalType">
            -------------------------------------------------------------------------------------------------
            <summary>
                H.264 NAL types.
            </summary>
            -------------------------------------------------------------------------------------------------
        </member>
        <member name="T:StreamCoders.Container.MP4.H264NalUnit">
            -------------------------------------------------------------------------------------------------
            <summary>
                Class holding H.264 payload and NAL unit type.
            </summary>
            -------------------------------------------------------------------------------------------------
        </member>
        <member name="T:StreamCoders.Container.MP4.H264Transform">
            -------------------------------------------------------------------------------------------------
            <summary>
                Handles the extraction &amp; transformation of H.264 NALs to storage format AU.
            </summary>
            -------------------------------------------------------------------------------------------------
        </member>
        <member name="P:StreamCoders.Container.MP4.H264Transform.LengthSize">
            -------------------------------------------------------------------------------------------------
            <summary>
                Gets or sets the AVC AU LengthSize (= LengthSizeMinusOne + 1)
            </summary>
            <value>
                The AU length indicator.
            </value>
            -------------------------------------------------------------------------------------------------
        </member>
        <member name="M:StreamCoders.Container.MP4.H264Transform.ExtractNals(StreamCoders.OffsetBuffer{System.Byte},System.Boolean)">
            -------------------------------------------------------------------------------------------------
            <summary>
                Extracts the NALs from a buffer. By default all start codes will be stripped from the NALs.
            </summary>
            <param name="buffer">The Buffer containing NALs.</param>
            <param name="addStartCodes">When set to true the NALs will have start codes, otherwise the start codes will be stripped. Default is false.</param>
            <returns>
                The extracted NALs.
            </returns>
            -------------------------------------------------------------------------------------------------
        </member>
        <member name="M:StreamCoders.Container.MP4.H264Transform.TransformNalToAccessUnit(StreamCoders.MediaBuffer{System.Byte})">
            <summary>
                Transforms a start-code escaped frame to an access-unit.
            </summary>
            <param name="buffer">Start-code escaped frame</param>
            <returns></returns>
        </member>
        <member name="M:StreamCoders.Container.MP4.H264Transform.TransformNal(StreamCoders.MediaBuffer{System.Byte})">
            -------------------------------------------------------------------------------------------------
            <summary>
                Transforms H.264 NAL to MPEG-4.15 AU and extracts SPS/PPS if present.
            </summary>
            <param name="buffer">   Buffer containing NALs. </param>
            <returns>
                Returns AU Buffer, otherwise null.
            </returns>
            -------------------------------------------------------------------------------------------------
        </member>
        <member name="T:StreamCoders.Container.MP4.H264TransformPackage">
            -------------------------------------------------------------------------------------------------
            <summary>
                Contains the results of a H.264 NAL transformation.
            </summary>
            -------------------------------------------------------------------------------------------------
        </member>
        <member name="F:StreamCoders.Container.MP4.H264TransformPackage.FrameData">
            -------------------------------------------------------------------------------------------------
            <summary>
                List of individual AUs.
            </summary>
            -------------------------------------------------------------------------------------------------
        </member>
        <member name="P:StreamCoders.Container.MP4.H264TransformPackage.Pps">
            -------------------------------------------------------------------------------------------------
            <summary>
                If present, the PPS that was contained in the buffer.
            </summary>
            -------------------------------------------------------------------------------------------------
        </member>
        <member name="P:StreamCoders.Container.MP4.H264TransformPackage.Sps">
            -------------------------------------------------------------------------------------------------
            <summary>
                If present, the SPS that was contained in the buffer.
            </summary>
            -------------------------------------------------------------------------------------------------
        </member>
        <member name="T:StreamCoders.Container.MP4.H265NalUnit">
            -------------------------------------------------------------------------------------------------
            <summary>
                Class holding H.264 payload and NAL unit type.
            </summary>
            -------------------------------------------------------------------------------------------------
        </member>
        <member name="T:StreamCoders.Container.MP4.H265Transform">
            -------------------------------------------------------------------------------------------------
            <summary>
                Handles the extraction &amp; transformation of H.265 NALs to storage format AU.
            </summary>
            -------------------------------------------------------------------------------------------------
        </member>
        <member name="P:StreamCoders.Container.MP4.H265Transform.LengthSize">
            -------------------------------------------------------------------------------------------------
            <summary>
                Gets or sets the HEVC AU LengthSize (= LengthSizeMinusOne + 1)
            </summary>
            <value>
                The AU length indicator.
            </value>
            -------------------------------------------------------------------------------------------------
        </member>
        <member name="M:StreamCoders.Container.MP4.H265Transform.ExtractNals(StreamCoders.OffsetBuffer{System.Byte})">
            -------------------------------------------------------------------------------------------------
            <summary>
                Extracts the NALs from an buffer (stripping start codes).
            </summary>
            <param name="inputBuffer">   The Buffer containing NALs. </param>
            <returns>
                The extracted nals.
            </returns>
            -------------------------------------------------------------------------------------------------
        </member>
        <member name="M:StreamCoders.Container.MP4.H265Transform.GetNalOffsets(StreamCoders.OffsetBuffer{System.Byte})">
            -------------------------------------------------------------------------------------------------
            <summary>
                Extracts NAL offsets and length (excluding start codes)
            </summary>
            <param name="inputBuffer">   The Buffer containing NALs. </param>
            <returns>
                The extracted nal offsets.
            </returns>
            -------------------------------------------------------------------------------------------------
        </member>
        <member name="M:StreamCoders.Container.MP4.H265Transform.TransformNal(StreamCoders.MediaBuffer{System.Byte})">
            -------------------------------------------------------------------------------------------------
            <summary>
                Transforms H.265 NAL to MPEG-4.15 AU and extracts VPS/SPS/PPS if present.
            </summary>
            <param name="buffer">   Buffer containing NALs. </param>
            <returns>
                Returns AU Buffer, otherwise null.
            </returns>
            -------------------------------------------------------------------------------------------------
        </member>
        <member name="T:StreamCoders.Container.MP4.H265TransformPackage">
            -------------------------------------------------------------------------------------------------
            <summary>
                Contains the results of a H.265 NAL transformation. Data is stored separately for regular payload and
                parameter-sets.
            </summary>
            -------------------------------------------------------------------------------------------------
        </member>
        <member name="F:StreamCoders.Container.MP4.H265TransformPackage.ParameterSet">
            <summary>
                If parameter sets are encountered, this list will include VPS/SPS/PPS packets.
            </summary>
        </member>
        <member name="M:StreamCoders.Container.MP4.Mp4RtpConstructor.ConstructPayload(StreamCoders.Container.MP4.Mp4Track,StreamCoders.OffsetBuffer{System.Byte})">
            -------------------------------------------------------------------------------------------------
            <summary>
                Constructs partial payload.
            </summary>
            <param name="referenceTrack">
                The sample reference track.
            </param>
            <param name="payloadBuffer">
                Current Buffer for payload data.
            </param>
            <returns>
                A new instance of OffsetBuffer containing the added payload.
            </returns>
            -------------------------------------------------------------------------------------------------
        </member>
        <member name="T:StreamCoders.Container.MP4.Mp4RtpImmediateConstructor">
            -------------------------------------------------------------------------------------------------
            <summary>
                The immediate mode permits the insertion of payload-specific headers (e.g. the RTP H.261 header). For hint
                tracks where the media is sent ‘in the clear’, the sample entry then specifies the bytes to copy from the media
                track, by giving the sample number, data offset, and length to copy. <br />
                The track reference may index into the
                table of track references (a strictly positive value), name the hint track itself (-1), or the only associated
                media
                track (0). (The value zero is therefore equivalent to the value 1.)
            </summary>
            -------------------------------------------------------------------------------------------------
        </member>
        <member name="P:StreamCoders.Container.MP4.Mp4RtpImmediateConstructor.Count">
            -------------------------------------------------------------------------------------------------
            <summary>
                Gets or sets the number of significant information in <c>Data. </c>
            </summary>
            <value>
                The count.
            </value>
            -------------------------------------------------------------------------------------------------
        </member>
        <member name="P:StreamCoders.Container.MP4.Mp4RtpImmediateConstructor.Data">
            -------------------------------------------------------------------------------------------------
            <summary>
                Gets or sets the data used to construct RTP packets.
            </summary>
            <value>
                The data.
            </value>
            -------------------------------------------------------------------------------------------------
        </member>
        <member name="P:StreamCoders.Container.MP4.Mp4RtpImmediateConstructor.Pad">
            -------------------------------------------------------------------------------------------------
            <summary>
                Gets or sets the padding. Padding size is 14-Count
            </summary>
            <value>
                The pad.
            </value>
            -------------------------------------------------------------------------------------------------
        </member>
        <member name="F:StreamCoders.Container.MP4.Mp4RtpNoopConstructor.Pad">
            -------------------------------------------------------------------------------------------------
            <summary>
                15 byte padding
            </summary>
            -------------------------------------------------------------------------------------------------
        </member>
        <member name="T:StreamCoders.Container.MP4.Mp4Chunk">
            <summary>
                class responsible for writing MP4 chunks.
            </summary>
        </member>
        <member name="P:StreamCoders.Container.MP4.Mp4FragmentRunningConfiguration.UseTfdtBox">
            -------------------------------------------------------------------------------------------------
            <summary>
                Indicates whether the TFDT box should be used in fragments to indicate the base media
                decode time. This should be disabled when used for Smooth Streaming as the decode time is
                calculated via the manifest.
            </summary>
            <value>
                true if use TFDT box, false if not.
            </value>
            -------------------------------------------------------------------------------------------------
        </member>
        <member name="T:StreamCoders.Container.MP4.Mp4FragmentWriter">
            <summary>
                Class that writes ISOBMFF. The class can be configured for several different specifications.
                Currently supported specifications are: ISO Fragmented MP4, Smooth Streaming and DASH.
                Selection of profile and other configuration options are found in <c>MP4WriterConfiguration</c>
            </summary>
        </member>
        <member name="M:StreamCoders.Container.MP4.Mp4FragmentWriter.CreateZeroCopy">
            -------------------------------------------------------------------------------------------------
            <summary>
                Creates a new instance of this object and copies all essential variables to the new instance.
            </summary>
            <returns>
                A new instance of MP4FragmentWriter
            </returns>
            -------------------------------------------------------------------------------------------------
        </member>
        <member name="M:StreamCoders.Container.MP4.Mp4FragmentWriter.CommitSamplesToTrun(StreamCoders.Container.MP4.MP4StreamWriter)">
            <summary>
                Commits all added samples to a track run.
            </summary>
            <param name="writer"></param>
        </member>
        <member name="T:StreamCoders.Container.MP4.Mp4Track">
            -------------------------------------------------------------------------------------------------
            <summary>
                Encapsulates a single MP4 track.
            </summary>
            -------------------------------------------------------------------------------------------------
        </member>
        <member name="F:StreamCoders.Container.MP4.Mp4Track.BoxFlags">
            -------------------------------------------------------------------------------------------------
            <summary>
                The box flags.
            </summary>
            -------------------------------------------------------------------------------------------------
        </member>
        <member name="F:StreamCoders.Container.MP4.Mp4Track.BoxVersion">
            -------------------------------------------------------------------------------------------------
            <summary>
                The box version used to initialize all boxes.
            </summary>
            -------------------------------------------------------------------------------------------------
        </member>
        <member name="F:StreamCoders.Container.MP4.Mp4Track.CurrentSampleNumber">
            -------------------------------------------------------------------------------------------------
            <summary>
                The current sample number of samples actually comitted. This doesn't include
                configuration like SPS/PPS as they aren't part of the media payload itself.
            </summary>
            -------------------------------------------------------------------------------------------------
        </member>
        <member name="F:StreamCoders.Container.MP4.Mp4Track.TrackInfo">
            -------------------------------------------------------------------------------------------------
            <summary>
                Information describing the track.
            </summary>
            -------------------------------------------------------------------------------------------------
        </member>
        <member name="F:StreamCoders.Container.MP4.Mp4Track.TrackNumber">
            -------------------------------------------------------------------------------------------------
            <summary>
                The track number of this MP4Track.
            </summary>
            -------------------------------------------------------------------------------------------------
        </member>
        <member name="F:StreamCoders.Container.MP4.Mp4Track.TrackStatus">
            -------------------------------------------------------------------------------------------------
            <summary>
                The track status.
            </summary>
            -------------------------------------------------------------------------------------------------
        </member>
        <member name="M:StreamCoders.Container.MP4.Mp4Track.#ctor(System.Int32,System.Byte,System.UInt32)">
            -------------------------------------------------------------------------------------------------
            <summary>
                Constructor.
            </summary>
            <param name="trackNumber">  The track number. </param>
            <param name="boxVersion">   The box version. </param>
            <param name="boxFlags">     The box flags. </param>
            -------------------------------------------------------------------------------------------------
        </member>
        <member name="M:StreamCoders.Container.MP4.Mp4Track.#ctor(StreamCoders.Container.MP4.TrackBox,System.Int32,StreamCoders.Container.MP4.MP4StreamReader,StreamCoders.Container.MP4.FragmentConfig)">
            -------------------------------------------------------------------------------------------------
            <summary>
                Constructor.
            </summary>
            <param name="track">        The track. </param>
            <param name="trackNumber">  The track number. </param>
            <param name="streamReader">           The stream reader object. </param>
            -------------------------------------------------------------------------------------------------
        </member>
        <member name="M:StreamCoders.Container.MP4.Mp4Track.FillTrackInfo">
            -------------------------------------------------------------------------------------------------
            <summary>
                Attempts to fill tracks with media information such as bitrate, width/height &amp; DEC.
            </summary>
            <remarks>
                <para>
                    Supported FCC Video: 'mp4v', 'avc1', 's263', 'hvc1'/'hev1' <br />
                </para>
                <para>
                    Supported FCC Audio: 'mp4a' + OIDs,  'mp3 ','samr', 'sawb', 'sawp', 'sowt', 'lpcm', 'alaw', 'ulaw'.
                </para>
                <para>
                    Supported other: 'rtp'
                </para>
            </remarks>
            <returns>
                true if it succeeds, false if it fails.
            </returns>
            -------------------------------------------------------------------------------------------------
        </member>
        <member name="M:StreamCoders.Container.MP4.Mp4Track.GetNextSample">
            -------------------------------------------------------------------------------------------------
            <summary>
                Gets the next sample.
            </summary>
            <returns>
                The next sample.
            </returns>
            -------------------------------------------------------------------------------------------------
        </member>
        <member name="M:StreamCoders.Container.MP4.Mp4Track.WriteSample(StreamCoders.Container.MP4.MP4StreamWriter,StreamCoders.MediaBuffer{System.Byte})">
            -------------------------------------------------------------------------------------------------
            <summary>
                Writes a sample.
            </summary>
            <param name="writer">       The streamWriter. </param>
            <param name="buffer">           The mp. </param>
            <param name="isKeyFrame">   true if this object is key frame. </param>
            <returns>
                true if it succeeds, false if it fails.
            </returns>
            -------------------------------------------------------------------------------------------------
        </member>
        <member name="M:StreamCoders.Container.MP4.Mp4Track.ReadConfigurationInfo(StreamCoders.MediaBuffer{System.Byte})">
            -------------------------------------------------------------------------------------------------
            <summary>
                Reads configuration information from the current buffer. If decoder configuration data is
                found it will automatically be added to the corresponding decoder specfic configuration.
            </summary>
            <remarks>
                Currently handled are configurations for MPEG4V, AVC &amp; AAC.
            </remarks>
            <param name="buffer">   The Buffer to analyse. </param>
            <returns>
                The configuration information.
            </returns>
            -------------------------------------------------------------------------------------------------
        </member>
        <member name="M:StreamCoders.Container.MP4.Mp4Track.CommitRemainingSamples(StreamCoders.Container.MP4.MP4StreamWriter)">
            -------------------------------------------------------------------------------------------------
            <summary>
                Commit remaining samples.
            </summary>
            <param name="writer">   The streamWriter. </param>
            -------------------------------------------------------------------------------------------------
        </member>
        <member name="M:StreamCoders.Container.MP4.Mp4Track.SeekToTimePosition(System.Double)">
            -------------------------------------------------------------------------------------------------
            <summary>
                Seeks track to new position or nearest position. If a sync sample box (STSS) is present,
                this function will seek to the nearest key frame, which in some circumstances can be a
                signficant distance from the desired position.
            </summary>
            <param name="position"> Desired position. </param>
            <returns>
                Returns the actual position in stream.
            </returns>
            -------------------------------------------------------------------------------------------------
        </member>
        <member name="M:StreamCoders.Container.MP4.Mp4Track.GetTrackDuration">
            -------------------------------------------------------------------------------------------------
            <summary>
                Gets the track duration.
            </summary>
            <returns>
                The track duration.
            </returns>
            -------------------------------------------------------------------------------------------------
        </member>
        <member name="M:StreamCoders.Container.MP4.Mp4Track.CreateH263Track">
            -------------------------------------------------------------------------------------------------
            <summary>
                Creates an H.263 track.
            </summary>
            <returns>
                Returns instance of an H.263 track.
            </returns>
            -------------------------------------------------------------------------------------------------
        </member>
        <member name="M:StreamCoders.Container.MP4.Mp4Track.CreateAmrTrack">
            -------------------------------------------------------------------------------------------------
            <summary>
                Creates a new AMR-NB track.
            </summary>
            <returns>
                Returns an instance of an AMR-NB track.
            </returns>
            -------------------------------------------------------------------------------------------------
        </member>
        <member name="M:StreamCoders.Container.MP4.Mp4Track.CreateAmrWbTrack">
            -------------------------------------------------------------------------------------------------
            <summary>
                Creates a new AMR-WB track.
            </summary>
            <returns>
                Returns instance of an AMR-WB track.
            </returns>
            -------------------------------------------------------------------------------------------------
        </member>
        <member name="M:StreamCoders.Container.MP4.Mp4Track.CreateTrack(StreamCoders.TrackInfo,StreamCoders.Container.MP4.MP4WriterConfiguration)">
            -------------------------------------------------------------------------------------------------
            <summary>
                Creates a track based on the information passed by TrackInfo.
            </summary>
            <param name="track">        The track. </param>
            <param name="configuration">    The configuration of the streamWriter. </param>
            <returns>
                Returns a new instance of a track.
            </returns>
            -------------------------------------------------------------------------------------------------
        </member>
        <member name="F:StreamCoders.Container.MP4.IsoStreamingMode.Iso">
            <summary>
                Indicates ISO 14496-12 compliant fragments.
            </summary>
        </member>
        <member name="F:StreamCoders.Container.MP4.IsoStreamingMode.SmoothStreaming">
            <summary>
                Indicates Smooth Streaming compliant fragments.
            </summary>
        </member>
        <member name="F:StreamCoders.Container.MP4.IsoStreamingMode.Dash">
            <summary>
                Indicates DASH compliant fragments.
            </summary>
        </member>
        <member name="T:StreamCoders.Container.MP4.MP4WriterConfiguration">
            -------------------------------------------------------------------------------------------------
            <summary>
                Mp4Writer Configuration.
            </summary>
            -------------------------------------------------------------------------------------------------
        </member>
        <member name="F:StreamCoders.Container.MP4.MP4WriterConfiguration.CompatibleBrands">
            -------------------------------------------------------------------------------------------------
            <summary>
                Compatible brands of MP4 file to be created.
            </summary>
            -------------------------------------------------------------------------------------------------
        </member>
        <member name="F:StreamCoders.Container.MP4.MP4WriterConfiguration.MajorBrand">
            -------------------------------------------------------------------------------------------------
            <summary>
                Major brand of MP4 file to be created.
            </summary>
            -------------------------------------------------------------------------------------------------
        </member>
        <member name="M:StreamCoders.Container.MP4.MP4WriterConfiguration.#ctor(StreamCoders.Container.MP4.IsoStreamingMode)">
            <summary>
                Initializes writer configuration to particular standard definition.
            </summary>
            <param name="streamingMode">Mode to use</param>
        </member>
        <member name="M:StreamCoders.Container.MP4.MP4WriterConfiguration.#ctor">
            <summary>
                Default Constructor initializes to ISO mode.
            </summary>
        </member>
        <member name="P:StreamCoders.Container.MP4.MP4WriterConfiguration.SamplesPerChunk">
            -------------------------------------------------------------------------------------------------
            <summary>
                The number of samples to be contained inside an mp4 chunk. If Mp4Writer is set to use
                fragments, then this is the number of samples per track run.
            </summary>
            -------------------------------------------------------------------------------------------------
        </member>
        <member name="P:StreamCoders.Container.MP4.MP4WriterConfiguration.UseFragments">
            -------------------------------------------------------------------------------------------------
            <summary>
                Enables the use of fragments to construct the container.
            </summary>
            -------------------------------------------------------------------------------------------------
        </member>
        <member name="P:StreamCoders.Container.MP4.MP4WriterConfiguration.InitialTrackNumber">
            <summary>
                The initial track number to be used when tracks are added. The default is 1.
            </summary>
        </member>
        <member name="F:StreamCoders.Container.MP4.AMRDecoderSpecificInfoBox.DecoderVersion">
            <summary>
                version of the vendor"s decoder which can decode the encoded stream in the best (i.e. optimal) way.
                This field is closely tied to the vendor field. It may give advantage to the vendor which has optimal
                encoder-decoder
                version pairs. The value is set to 0 if decoder version has no importance for the vendor. It can be safely ignored.
            </summary>
        </member>
        <member name="F:StreamCoders.Container.MP4.AMRDecoderSpecificInfoBox.FramesPerSample">
            <summary>
                Defines the number of frames to be considered as 'one sample' inside the 3GP file. This number
                shall be greater than 0 and less than 16. A value of 1 means each frame is treated as one sample. A value of 10
                means
                that 10 frames (of duration 20 msec each) are put together and treated as one sample. It must be noted that, in
                this case,
                one sample duration is 20 (msec/frame) x 10 (frame) = 200 msec. For the last sample of the stream, the number of
                frames can be smaller than frames_per_sample, if the number of remaining frames is smaller than frames_per_sample.
            </summary>
        </member>
        <member name="F:StreamCoders.Container.MP4.AMRDecoderSpecificInfoBox.ModeChangePeriod">
            <summary>
                Defines a number N, which restricts the mode changes only at a multiple of N frames. If no
                restriction is applied, this value should be set to 0.
            </summary>
        </member>
        <member name="F:StreamCoders.Container.MP4.AMRDecoderSpecificInfoBox.ModeSet">
            <summary>
                The active codec modes. Each bit of the mode_set parameter corresponds to one mode. The bit index of the
                mode is calculated according to the 4 bit FT field of the AMR or AMR-WB frame structure. The mode_set bit structure
                is as follows: (B15xxxxxxB8B7xxxxxxB0) where B0 (Least Significant Bit) corresponds to Mode 0, and B8
                corresponds to Mode 8.
            </summary>
        </member>
        <member name="F:StreamCoders.Container.MP4.AMRDecoderSpecificInfoBox.Vendor">
            <summary>
                Four character code of the manufacturer of the codec, e.g. 'VXYZ'. The vendor field gives information about
                the vendor whose codec is used to create the encoded data. It is an informative field, which may be used by the
                decoding end. If a manufacturer already has a four-character code, it is recommended that it uses the same code in
                this
                field. Else, it is recommended that the manufacturer creates a four character code which best addresses the
                manufacturer"s name. It can be safely ignored.
            </summary>
        </member>
        <member name="F:StreamCoders.Container.MP4.AudioSampleEntry.QtCompressionID">
            <summary>
                CompressionID that must be set to 0 for version 0 sound descriptions (default for ISO). This may be set to –2 for
                some version 1 sound descriptions (QT).
            </summary>
        </member>
        <member name="T:StreamCoders.Container.MP4.AVCDecoderConfigurationRecord">
            -------------------------------------------------------------------------------------------------
            <summary>
                AVCc decoder configuration record
            </summary>
            -------------------------------------------------------------------------------------------------
        </member>
        <member name="F:StreamCoders.Container.MP4.AVCDecoderConfigurationRecord.AVCLevelIndication">
            -------------------------------------------------------------------------------------------------
            <summary>
                The AVC level indication.
            </summary>
            -------------------------------------------------------------------------------------------------
        </member>
        <member name="F:StreamCoders.Container.MP4.AVCDecoderConfigurationRecord.AVCProfileIndication">
            -------------------------------------------------------------------------------------------------
            <summary>
                The AVC profile indication.
            </summary>
            -------------------------------------------------------------------------------------------------
        </member>
        <member name="F:StreamCoders.Container.MP4.AVCDecoderConfigurationRecord.ConfigurationVersion">
            -------------------------------------------------------------------------------------------------
            <summary>
                The configuration version. Should be set to 1.
            </summary>
            -------------------------------------------------------------------------------------------------
        </member>
        <member name="F:StreamCoders.Container.MP4.AVCDecoderConfigurationRecord.LengthSize">
            -------------------------------------------------------------------------------------------------
            <summary>
                LengthSizeMinusOne + 1 (normalized)
            </summary>
            -------------------------------------------------------------------------------------------------
        </member>
        <member name="F:StreamCoders.Container.MP4.AVCDecoderConfigurationRecord.PictureParameterSets">
            -------------------------------------------------------------------------------------------------
            <summary>
                List of Picture Parameter Set.
            </summary>
            -------------------------------------------------------------------------------------------------
        </member>
        <member name="F:StreamCoders.Container.MP4.AVCDecoderConfigurationRecord.ProfileCompatibility">
            -------------------------------------------------------------------------------------------------
            <summary>
                The profile compatibility.
            </summary>
            -------------------------------------------------------------------------------------------------
        </member>
        <member name="F:StreamCoders.Container.MP4.AVCDecoderConfigurationRecord.SequenceParameterSets">
            -------------------------------------------------------------------------------------------------
            <summary>
                List of Sequence Parameter Set.
            </summary>
            -------------------------------------------------------------------------------------------------
        </member>
        <member name="M:StreamCoders.Container.MP4.AVCDecoderConfigurationRecord.AddSps(System.Byte[])">
            -------------------------------------------------------------------------------------------------
            <summary>
                Adds SPS to avcC. Duplicate entries will be not be added.
            </summary>
            <param name="newsps">   New SPS to add. </param>
            -------------------------------------------------------------------------------------------------
        </member>
        <member name="M:StreamCoders.Container.MP4.AVCDecoderConfigurationRecord.AddPps(System.Byte[])">
            -------------------------------------------------------------------------------------------------
            <summary>
                Adds PPS to avcC. Duplicate entries will be not be added.
            </summary>
            <param name="newpps">   New PPS to add. </param>
            -------------------------------------------------------------------------------------------------
        </member>
        <member name="M:StreamCoders.Container.MP4.AVCDecoderConfigurationRecord.Parse(System.Byte[])">
            -------------------------------------------------------------------------------------------------
            <summary>
                Parses buffer containing AVC decoder configuration record.
            </summary>
            <param name="data"> The data. </param>
            <returns>
                true if it succeeds, false if it fails.
            </returns>
            -------------------------------------------------------------------------------------------------
        </member>
        <member name="M:StreamCoders.Container.MP4.AVCDecoderConfigurationRecord.ToSpsPpsString">
            -------------------------------------------------------------------------------------------------
            <summary>
                Attempts to create an SPS/PPS string used in SDP using the first parameter-set found.
            </summary>
            <returns>
                This StreamCoders.Container.MP4.AVCDecoderConfigurationRecord as a string.
            </returns>
            -------------------------------------------------------------------------------------------------
        </member>
        <member name="M:StreamCoders.Container.MP4.AVCDecoderConfigurationRecord.ToSpsPpsNalOffsetBuffer">
            -------------------------------------------------------------------------------------------------
            <summary>
                Attempts to create SPS/PPS NALs using the first parameter-set found.
            </summary>
            <returns>
                This StreamCoders.Container.MP4.AVCDecoderConfigurationRecord as an OffsetBuffer&lt;
                byte&gt;
            </returns>
            -------------------------------------------------------------------------------------------------
        </member>
        <member name="T:StreamCoders.Container.MP4.BitBuffer">
            -------------------------------------------------------------------------------------------------
            <summary>
                Provides bitwise operations on a buffer with a focus on MPEG system structures.
            </summary>
            -------------------------------------------------------------------------------------------------
        </member>
        <member name="M:StreamCoders.Container.MP4.BitBuffer.SetData(System.Byte[],System.Int32,System.Int32)">
            -------------------------------------------------------------------------------------------------
            <summary>
                Sets the data of the bit stream to process.
            </summary>
            <param name="bitstream">
                Array containing the data to process.
            </param>
            <param name="dataOffset">
                The data offset into the array.
            </param>
            <param name="bitstreamLength">
                Number of bytes to use.
            </param>
            -------------------------------------------------------------------------------------------------
        </member>
        <member name="M:StreamCoders.Container.MP4.BitBuffer.SkipBits(System.Int32)">
            -------------------------------------------------------------------------------------------------
            <summary>
                Skips a number of bits.
            </summary>
            <param name="bits">
                The number of bits to skip.
            </param>
            -------------------------------------------------------------------------------------------------
        </member>
        <member name="M:StreamCoders.Container.MP4.BitBuffer.ShowBits(System.Int32)">
            -------------------------------------------------------------------------------------------------
            <summary>
                Shows the next number of bits.
            </summary>
            <param name="bits">
                The number of bits to process.
            </param>
            <returns>
                Returns the value of the bits that where passed.
            </returns>
            -------------------------------------------------------------------------------------------------
        </member>
        <member name="M:StreamCoders.Container.MP4.BitBuffer.GetBit">
            -------------------------------------------------------------------------------------------------
            <summary>
                Gets one bit.
            </summary>
            <returns>
                true if it succeeds, false if it fails.
            </returns>
            -------------------------------------------------------------------------------------------------
        </member>
        <member name="M:StreamCoders.Container.MP4.BitBuffer.PutBits(System.Int32,System.Int32)">
            -------------------------------------------------------------------------------------------------
            <summary>
                Puts a number of bits into the bit stream.
            </summary>
            <param name="bits">
                The number of bits to put into the stream.
            </param>
            <param name="length">
                The number of significant bits to put.
            </param>
            -------------------------------------------------------------------------------------------------
        </member>
        <member name="T:StreamCoders.Container.MP4.Box">
            -------------------------------------------------------------------------------------------------
            <summary>
                ISO 14496-12 Box.
            </summary>
            -------------------------------------------------------------------------------------------------
        </member>
        <member name="T:StreamCoders.Container.MP4.Box.OnBeforeWriteHandler">
            -------------------------------------------------------------------------------------------------
            <summary>
                Executes before a box is written to an output stream using Box.WriteInto.
            </summary>
            <param name="sender">
                The sender box.
            </param>
            <param name="e">
                The OnBeforeWriteArgs to process.
            </param>
            -------------------------------------------------------------------------------------------------
        </member>
        <member name="F:StreamCoders.Container.MP4.Box.BoxType">
            -------------------------------------------------------------------------------------------------
            <summary>
                Contains the type of the box.
            </summary>
            -------------------------------------------------------------------------------------------------
        </member>
        <member name="F:StreamCoders.Container.MP4.Box.BoxValueType">
            -------------------------------------------------------------------------------------------------
            <summary>
                The value representation of the box type.
            </summary>
            -------------------------------------------------------------------------------------------------
        </member>
        <member name="F:StreamCoders.Container.MP4.Box.SizeIncludingHeader">
            -------------------------------------------------------------------------------------------------
            <summary>
                The size of the current box including header.
            </summary>
            -------------------------------------------------------------------------------------------------
        </member>
        <member name="F:StreamCoders.Container.MP4.Box.SizeExcludingHeader">
            -------------------------------------------------------------------------------------------------
            <summary>
                The size of the box without header.
            </summary>
            -------------------------------------------------------------------------------------------------
        </member>
        <member name="F:StreamCoders.Container.MP4.Box.UserType">
            -------------------------------------------------------------------------------------------------
            <summary>
                Custom Box type (uuid).
            </summary>
            -------------------------------------------------------------------------------------------------
        </member>
        <member name="E:StreamCoders.Container.MP4.Box.OnBeforeWrite">
            -------------------------------------------------------------------------------------------------
            <summary>
                Event to be raised before a Box is written to an output stream using Box.WriteInto
            </summary>
            -------------------------------------------------------------------------------------------------
        </member>
        <member name="M:StreamCoders.Container.MP4.Box.#ctor(StreamCoders.Container.MP4.Box)">
            -------------------------------------------------------------------------------------------------
            <summary>
                Copy constructor.
            </summary>
            <param name="box">  The box. </param>
            -------------------------------------------------------------------------------------------------
        </member>
        <member name="M:StreamCoders.Container.MP4.Box.#ctor(StreamCoders.Container.MP4.BoxType)">
            -------------------------------------------------------------------------------------------------
            <summary>
                Copy constructor.
            </summary>
            <param name="boxtype">  The boxtype. </param>
            -------------------------------------------------------------------------------------------------
        </member>
        <member name="M:StreamCoders.Container.MP4.Box.#ctor(StreamCoders.Container.MP4.MP4StreamReader)">
            -------------------------------------------------------------------------------------------------
            <summary>
                Constructor.
            </summary>
            <param name="streamReader">   The streamReader. </param>
            -------------------------------------------------------------------------------------------------
        </member>
        <member name="P:StreamCoders.Container.MP4.Box.HeaderSize">
            -------------------------------------------------------------------------------------------------
            <summary>
                Gets the Boxes header size in bytes.
            </summary>
            <value>
                The size of the header.
            </value>
            -------------------------------------------------------------------------------------------------
        </member>
        <member name="P:StreamCoders.Container.MP4.Box.ContentSize">
            -------------------------------------------------------------------------------------------------
            <summary>
                Gets the content only size of a single box (without children) in bytes.
            </summary>
            <value>
                The size of the content.
            </value>
            -------------------------------------------------------------------------------------------------
        </member>
        <member name="P:StreamCoders.Container.MP4.Box.BoxSize">
            -------------------------------------------------------------------------------------------------
            <summary>
                Gets the content + header size of a single box (without children) in bytes.
            </summary>
            <value>
                The size of the box.
            </value>
            -------------------------------------------------------------------------------------------------
        </member>
        <member name="P:StreamCoders.Container.MP4.Box.FullTreeSize">
            -------------------------------------------------------------------------------------------------
            <summary>
                Gets the boxes size including all children and header sizes (in bytes).
            </summary>
            <value>
                The size of the full.
            </value>
            -------------------------------------------------------------------------------------------------
        </member>
        <member name="M:StreamCoders.Container.MP4.Box.Update">
            -------------------------------------------------------------------------------------------------
            <summary>
                Updates the box and it's children. The box must be set dirty.
            </summary>
            -------------------------------------------------------------------------------------------------
        </member>
        <member name="M:StreamCoders.Container.MP4.Box.SetDirty">
            -------------------------------------------------------------------------------------------------
            <summary>
                Marks box and its children as dirty. Initially all boxes are dirty.
            </summary>
            -------------------------------------------------------------------------------------------------
        </member>
        <member name="M:StreamCoders.Container.MP4.Box.WriteInto(StreamCoders.Container.MP4.MP4StreamWriter)">
            -------------------------------------------------------------------------------------------------
            <summary>
                Writes the box and its children to a destination stream.
            </summary>
            <param name="destinationStream">
                inputStream to write data to.
            </param>
            <returns>
                Returns the number of bytes written to the destination stream.
            </returns>
            -------------------------------------------------------------------------------------------------
        </member>
        <member name="M:StreamCoders.Container.MP4.Box.WriteBox">
            -------------------------------------------------------------------------------------------------
            <summary>
                Writes a box to a stream.
            </summary>
            <returns>
                Returns a stream containing fully written box including its children.
            </returns>
            -------------------------------------------------------------------------------------------------
        </member>
        <member name="M:StreamCoders.Container.MP4.Box.Parse">
            -------------------------------------------------------------------------------------------------
            <summary>
                Parses this object.
            </summary>
            <returns>
                true if it succeeds, false if it fails.
            </returns>
            -------------------------------------------------------------------------------------------------
        </member>
        <member name="M:StreamCoders.Container.MP4.Box.Skip">
            -------------------------------------------------------------------------------------------------
            <summary>
                Skips the remaining bytes of the box by reading them.
            </summary>
            -------------------------------------------------------------------------------------------------
        </member>
        <member name="M:StreamCoders.Container.MP4.Box.AddChild(StreamCoders.Container.MP4.Box)">
            -------------------------------------------------------------------------------------------------
            <summary>
                Adds a child.
            </summary>
            <param name="box">  The box. </param>
            -------------------------------------------------------------------------------------------------
        </member>
        <member name="M:StreamCoders.Container.MP4.Box.FindParent``1">
            -------------------------------------------------------------------------------------------------
            <summary>
                Traverses up until root node until an immediate parent is found.
            </summary>
            <typeparam name="T">    . </typeparam>
            <returns>
                Returns object of type, otherwise null.
            </returns>
            -------------------------------------------------------------------------------------------------
        </member>
        <member name="M:StreamCoders.Container.MP4.Box.FindChild``1">
            -------------------------------------------------------------------------------------------------
            <summary>
                Finds the first occurance of a child immediate to the current box.
            </summary>
            <typeparam name="T">    . </typeparam>
            <returns>
                Returns object of type, otherwise null.
            </returns>
            -------------------------------------------------------------------------------------------------
        </member>
        <member name="M:StreamCoders.Container.MP4.Box.FindChildren``1">
            -------------------------------------------------------------------------------------------------
            <summary>
                Finds multiple Children of the same type immediate to the current box.
            </summary>
            <typeparam name="T">
                .
            </typeparam>
            <returns>
                Returns list of objects of type, otherwise null.
            </returns>
            -------------------------------------------------------------------------------------------------
        </member>
        <member name="M:StreamCoders.Container.MP4.Box.FindChildFull``1">
            -------------------------------------------------------------------------------------------------
            <summary>
                Finds child of type T in full tree.
            </summary>
            <typeparam name="T">    . </typeparam>
            <returns>
                The found child full&lt; t&gt;
            </returns>
            -------------------------------------------------------------------------------------------------
        </member>
        <member name="M:StreamCoders.Container.MP4.Box.FindChildFullSubClassed``1">
            -------------------------------------------------------------------------------------------------
            <summary>
                Finds first child subclassed from type T in full tree.
            </summary>
            <typeparam name="T">    . </typeparam>
            <returns>
                The found child full sub classed&lt; t&gt;
            </returns>
            -------------------------------------------------------------------------------------------------
        </member>
        <member name="M:StreamCoders.Container.MP4.Box.FindChildrenFullSubClassed``1">
            -------------------------------------------------------------------------------------------------
            <summary>
                Finds object derived subclassed from T in full tree.
            </summary>
            <typeparam name="T">    . </typeparam>
            <returns>
                The found children full sub classed&lt; t&gt;
            </returns>
            -------------------------------------------------------------------------------------------------
        </member>
        <member name="M:StreamCoders.Container.MP4.Box.FindParentOrChild``1">
            -------------------------------------------------------------------------------------------------
            <summary>
                Traverses Parent and immediate children up to root node for a specific box type.
            </summary>
            <typeparam name="T">    . </typeparam>
            <returns>
                Returns object of type, otherwise null.
            </returns>
            -------------------------------------------------------------------------------------------------
        </member>
        <member name="M:StreamCoders.Container.MP4.Box.FindChild(StreamCoders.Container.MP4.BoxType)">
            -------------------------------------------------------------------------------------------------
            <summary>
                Finds a child of this item.
            </summary>
            <param name="Element">  The element. </param>
            <returns>
                The found child.
            </returns>
            -------------------------------------------------------------------------------------------------
        </member>
        <member name="M:StreamCoders.Container.MP4.Box.FindChild(StreamCoders.Container.MP4.BoxType[])">
            -------------------------------------------------------------------------------------------------
            <summary>
                Finds a child of this item.
            </summary>
            <param name="Path"> Full pathname of the file. </param>
            <returns>
                The found child.
            </returns>
            -------------------------------------------------------------------------------------------------
        </member>
        <member name="M:StreamCoders.Container.MP4.Box.ReadDebugData">
            -------------------------------------------------------------------------------------------------
            <summary>
                Reads the debug data.
            </summary>
            -------------------------------------------------------------------------------------------------
        </member>
        <member name="M:StreamCoders.Container.MP4.Box.VerifyDebugData">
            -------------------------------------------------------------------------------------------------
            <summary>
                Verify debug data.
            </summary>
            -------------------------------------------------------------------------------------------------
        </member>
        <member name="M:StreamCoders.Container.MP4.Box.VerifyDebugData(System.String)">
            -------------------------------------------------------------------------------------------------
            <summary>
                Verify debug data.
            </summary>
            <param name="infoStr">  The information string. </param>
            -------------------------------------------------------------------------------------------------
        </member>
        <member name="F:StreamCoders.Container.MP4.BoxHeaderEntry.ObjectTypeID">
            -------------------------------------------------------------------------------------------------
            <summary>
                Identifier for the object type.
            </summary>
            -------------------------------------------------------------------------------------------------
        </member>
        <member name="F:StreamCoders.Container.MP4.BoxHeaderEntry.Type">
            -------------------------------------------------------------------------------------------------
            <summary>
                The type.
            </summary>
            -------------------------------------------------------------------------------------------------
        </member>
        <member name="F:StreamCoders.Container.MP4.BoxHeaderEntry.ValueType">
            -------------------------------------------------------------------------------------------------
            <summary>
                Type of the value.
            </summary>
            -------------------------------------------------------------------------------------------------
        </member>
        <member name="M:StreamCoders.Container.MP4.BoxHeaderEntry.#ctor(System.UInt32,System.Type)">
            -------------------------------------------------------------------------------------------------
            <summary>
                Constructor.
            </summary>
            <param name="headerVal">    The header value. </param>
            <param name="ObjectTypeID"> Identifier for the object type. </param>
            -------------------------------------------------------------------------------------------------
        </member>
        <member name="T:StreamCoders.Container.MP4.BoxHeaderUtility">
            -------------------------------------------------------------------------------------------------
            <summary>
                Assists with finding and instantiating MP4 box data.
            </summary>
            -------------------------------------------------------------------------------------------------
        </member>
        <member name="F:StreamCoders.Container.MP4.BoxHeaderUtility.UuidHandlerDict">
            -------------------------------------------------------------------------------------------------
            <summary>
                Dictionary of uuid handlers.
            </summary>
            -------------------------------------------------------------------------------------------------
        </member>
        <member name="M:StreamCoders.Container.MP4.BoxHeaderUtility.GetHeaderValue(StreamCoders.Container.MP4.BoxType)">
            -------------------------------------------------------------------------------------------------
            <summary>
                Gets a header value.
            </summary>
            <param name="t">    The BoxType to process. </param>
            <returns>
                The header value.
            </returns>
            -------------------------------------------------------------------------------------------------
        </member>
        <member name="M:StreamCoders.Container.MP4.BoxHeaderUtility.GetBoxType(System.UInt32)">
            -------------------------------------------------------------------------------------------------
            <summary>
                Gets a box type.
            </summary>
            <param name="headerVal">    The header value. </param>
            <returns>
                The box type.
            </returns>
            -------------------------------------------------------------------------------------------------
        </member>
        <member name="M:StreamCoders.Container.MP4.BoxHeaderUtility.GetBoxObjectType(StreamCoders.Container.MP4.BoxType)">
            -------------------------------------------------------------------------------------------------
            <summary>
                Gets a box object type.
            </summary>
            <param name="t">    The BoxType to process. </param>
            <returns>
                The box object type.
            </returns>
            -------------------------------------------------------------------------------------------------
        </member>
        <member name="M:StreamCoders.Container.MP4.BoxHeaderUtility.GetBoxObjectType(StreamCoders.Container.MP4.Box)">
            -------------------------------------------------------------------------------------------------
            <summary>
                Gets a box object type.
            </summary>
            <param name="b">    The Box to process. </param>
            <returns>
                The box object type.
            </returns>
            -------------------------------------------------------------------------------------------------
        </member>
        <member name="M:StreamCoders.Container.MP4.BoxHeaderUtility.GetHandlerType(System.UInt32)">
            -------------------------------------------------------------------------------------------------
            <summary>
                Gets a handler type.
            </summary>
            <param name="handler"> The handler t. </param>
            <returns>
                The handler type.
            </returns>
            -------------------------------------------------------------------------------------------------
        </member>
        <member name="M:StreamCoders.Container.MP4.BoxHeaderUtility.GetHandlerTypeValue(StreamCoders.Container.MP4.HandlerType)">
            -------------------------------------------------------------------------------------------------
            <summary>
                Gets a handler type value.
            </summary>
            <param name="t">    The HandlerType to process. </param>
            <returns>
                The handler type value.
            </returns>
            -------------------------------------------------------------------------------------------------
        </member>
        <member name="M:StreamCoders.Container.MP4.BoxHeaderUtility.FindUuidBoxType(System.Byte[])">
            -------------------------------------------------------------------------------------------------
            <summary>
                Checks the <b>UuidHandlerDict</b> if a particular user type exists and returns the object type.
            </summary>
            <param name="userType">
                Type of the user defined type (for the UUID box).
            </param>
            <returns>
                The found uuid box type, otherwise null.
            </returns>
            -------------------------------------------------------------------------------------------------
        </member>
        <member name="M:StreamCoders.Container.MP4.BoxHeaderUtility.FindUUidBoxBytes(System.Type)">
            -------------------------------------------------------------------------------------------------
            <summary>
                Checks the <b>UuidHandlerDict</b> if a particular user type exists and returns the 16 byte user type byte array.
            </summary>
            <param name="userType">
                Type of the user defined type (for the UUID box).
            </param>
            <returns>
                16 byte array that represents the user type. Returns null if not found.
            </returns>
            -------------------------------------------------------------------------------------------------
        </member>
        <member name="T:StreamCoders.Container.MP4.BoxType">
            -------------------------------------------------------------------------------------------------
            <summary>
                Enumeration of ISO 14496-12 box type FourCCs. See ISO specification for more information.
            </summary>
            -------------------------------------------------------------------------------------------------
        </member>
        <member name="F:StreamCoders.Container.MP4.BoxType.unkn">
            <summary>
                An enum constant representing the "UNKN" box.
            </summary>
        </member>
        <member name="F:StreamCoders.Container.MP4.BoxType.ftyp">
            <summary>
                An enum constant representing the "FTYP" box.
            </summary>
        </member>
        <member name="F:StreamCoders.Container.MP4.BoxType.pdin">
            <summary>
                An enum constant representing the "PDIN" box.
            </summary>
        </member>
        <member name="F:StreamCoders.Container.MP4.BoxType.moov">
            <summary>
                An enum constant representing the "MOOV" box.
            </summary>
        </member>
        <member name="F:StreamCoders.Container.MP4.BoxType.mvhd">
            <summary>
                An enum constant representing the "MVHD" box.
            </summary>
        </member>
        <member name="F:StreamCoders.Container.MP4.BoxType.trak">
            <summary>
                An enum constant representing the "TRAK" box.
            </summary>
        </member>
        <member name="F:StreamCoders.Container.MP4.BoxType.tkhd">
            <summary>
                An enum constant representing the "TKHD" box.
            </summary>
        </member>
        <member name="F:StreamCoders.Container.MP4.BoxType.tref">
            <summary>
                An enum constant representing the "TREF" box.
            </summary>
        </member>
        <member name="F:StreamCoders.Container.MP4.BoxType.edts">
            <summary>
                An enum constant representing the "EDTS" box.
            </summary>
        </member>
        <member name="F:StreamCoders.Container.MP4.BoxType.elst">
            <summary>
                An enum constant representing the "ELST" box.
            </summary>
        </member>
        <member name="F:StreamCoders.Container.MP4.BoxType.mdia">
            <summary>
                An enum constant representing the "MDIA" box.
            </summary>
        </member>
        <member name="F:StreamCoders.Container.MP4.BoxType.mdhd">
            <summary>
                An enum constant representing the "MDHD" box.
            </summary>
        </member>
        <member name="F:StreamCoders.Container.MP4.BoxType.hdlr">
            <summary>
                An enum constant representing the "HDLR" box.
            </summary>
        </member>
        <member name="F:StreamCoders.Container.MP4.BoxType.minf">
            <summary>
                An enum constant representing the "MINF" box.
            </summary>
        </member>
        <member name="F:StreamCoders.Container.MP4.BoxType.vmhd">
            <summary>
                An enum constant representing the "VMHD" box.
            </summary>
        </member>
        <member name="F:StreamCoders.Container.MP4.BoxType.smhd">
            <summary>
                An enum constant representing the "SMHD" box.
            </summary>
        </member>
        <member name="F:StreamCoders.Container.MP4.BoxType.hmhd">
            <summary>
                An enum constant representing the "HMHD" box.
            </summary>
        </member>
        <member name="F:StreamCoders.Container.MP4.BoxType.nmhd">
            <summary>
                An enum constant representing the "NMHD" box.
            </summary>
        </member>
        <member name="F:StreamCoders.Container.MP4.BoxType.dinf">
            <summary>
                An enum constant representing the "DINF" box.
            </summary>
        </member>
        <member name="F:StreamCoders.Container.MP4.BoxType.dref">
            <summary>
                An enum constant representing the "DREF" box.
            </summary>
        </member>
        <member name="F:StreamCoders.Container.MP4.BoxType.stbl">
            <summary>
                An enum constant representing the "STBL" box.
            </summary>
        </member>
        <member name="F:StreamCoders.Container.MP4.BoxType.stsd">
            <summary>
                An enum constant representing the "STSD" box.
            </summary>
        </member>
        <member name="F:StreamCoders.Container.MP4.BoxType.stts">
            <summary>
                An enum constant representing the "STTS" box.
            </summary>
        </member>
        <member name="F:StreamCoders.Container.MP4.BoxType.ctts">
            <summary>
                An enum constant representing the "CTTS" box.
            </summary>
        </member>
        <member name="F:StreamCoders.Container.MP4.BoxType.stsc">
            <summary>
                An enum constant representing the "STSC" box.
            </summary>
        </member>
        <member name="F:StreamCoders.Container.MP4.BoxType.stsz">
            <summary>
                An enum constant representing the "STSZ" box.
            </summary>
        </member>
        <member name="F:StreamCoders.Container.MP4.BoxType.stz2">
            <summary>
                An enum constant representing the "STZ2" box.
            </summary>
        </member>
        <member name="F:StreamCoders.Container.MP4.BoxType.stco">
            <summary>
                An enum constant representing the "STCO" box.
            </summary>
        </member>
        <member name="F:StreamCoders.Container.MP4.BoxType.co64">
            <summary>
                An enum constant representing the "CO64" box.
            </summary>
        </member>
        <member name="F:StreamCoders.Container.MP4.BoxType.stss">
            <summary>
                An enum constant representing the "STSS" box.
            </summary>
        </member>
        <member name="F:StreamCoders.Container.MP4.BoxType.stsh">
            <summary>
                An enum constant representing the "STSH" box.
            </summary>
        </member>
        <member name="F:StreamCoders.Container.MP4.BoxType.padb">
            <summary>
                An enum constant representing the "PADB" box.
            </summary>
        </member>
        <member name="F:StreamCoders.Container.MP4.BoxType.stdp">
            <summary>
                An enum constant representing the "STDP" box.
            </summary>
        </member>
        <member name="F:StreamCoders.Container.MP4.BoxType.sdtp">
            <summary>
                An enum constant representing the "SDTP" box.
            </summary>
        </member>
        <member name="F:StreamCoders.Container.MP4.BoxType.sbgp">
            <summary>
                An enum constant representing the "SBGP" box.
            </summary>
        </member>
        <member name="F:StreamCoders.Container.MP4.BoxType.sgpd">
            <summary>
                An enum constant representing the "SGPD" box.
            </summary>
        </member>
        <member name="F:StreamCoders.Container.MP4.BoxType.subs">
            <summary>
                An enum constant representing the "SUBS" box.
            </summary>
        </member>
        <member name="F:StreamCoders.Container.MP4.BoxType.fmda">
            <summary>
                An enum constant representing the "FMDA" box.
            </summary>
            <summary>
                An enum constant representing the "FMDA" box.
            </summary>
        </member>
        <member name="F:StreamCoders.Container.MP4.BoxType.mvex">
            <summary>
                An enum constant representing the "MVEX" box.
            </summary>
        </member>
        <member name="F:StreamCoders.Container.MP4.BoxType.mehd">
            <summary>
                An enum constant representing the "MEHD" box.
            </summary>
        </member>
        <member name="F:StreamCoders.Container.MP4.BoxType.trex">
            <summary>
                An enum constant representing the "TREX" box.
            </summary>
        </member>
        <member name="F:StreamCoders.Container.MP4.BoxType.tfdt">
            <summary>
                An enum constant representing the "TFDT" box.
            </summary>
        </member>
        <member name="F:StreamCoders.Container.MP4.BoxType.tfad">
            <summary>
                An enum constant representing the "TFAD" box.
            </summary>
        </member>
        <member name="F:StreamCoders.Container.MP4.BoxType.tfma">
            <summary>
                An enum constant representing the "TFMA" box.
            </summary>
        </member>
        <member name="F:StreamCoders.Container.MP4.BoxType.ipmc">
            <summary>
                An enum constant representing the "IPMC" box.
            </summary>
        </member>
        <member name="F:StreamCoders.Container.MP4.BoxType.moof">
            <summary>
                An enum constant representing the "MOOF" box.
            </summary>
        </member>
        <member name="F:StreamCoders.Container.MP4.BoxType.mfhd">
            <summary>
                An enum constant representing the "MFHD" box.
            </summary>
        </member>
        <member name="F:StreamCoders.Container.MP4.BoxType.traf">
            <summary>
                An enum constant representing the "TRAF" box.
            </summary>
        </member>
        <member name="F:StreamCoders.Container.MP4.BoxType.tfhd">
            <summary>
                An enum constant representing the "TFHD" box.
            </summary>
        </member>
        <member name="F:StreamCoders.Container.MP4.BoxType.trun">
            <summary>
                An enum constant representing the "TRUN" box.
            </summary>
        </member>
        <member name="F:StreamCoders.Container.MP4.BoxType.mfra">
            <summary>
                An enum constant representing the "MFRA" box.
            </summary>
        </member>
        <member name="F:StreamCoders.Container.MP4.BoxType.tfra">
            <summary>
                An enum constant representing the "TFRA" box.
            </summary>
        </member>
        <member name="F:StreamCoders.Container.MP4.BoxType.mfro">
            <summary>
                An enum constant representing the "MFRO" box.
            </summary>
        </member>
        <member name="F:StreamCoders.Container.MP4.BoxType.mdat">
            <summary>
                An enum constant representing the "MDAT" box.
            </summary>
        </member>
        <member name="F:StreamCoders.Container.MP4.BoxType.free">
            <summary>
                An enum constant representing the "FREE" box.
            </summary>
        </member>
        <member name="F:StreamCoders.Container.MP4.BoxType.skip">
            <summary>
                An enum constant representing the "SKIP" box.
            </summary>
        </member>
        <member name="F:StreamCoders.Container.MP4.BoxType.udta">
            <summary>
                An enum constant representing the "UDTA" box.
            </summary>
        </member>
        <member name="F:StreamCoders.Container.MP4.BoxType.cprt">
            <summary>
                An enum constant representing the "CPRT" box.
            </summary>
        </member>
        <member name="F:StreamCoders.Container.MP4.BoxType.cenc">
            <summary>
                An enum constant representing the "CENC" box.
            </summary>
            <summary>
                An enum constant representing the "CENC" box.
            </summary>
        </member>
        <member name="F:StreamCoders.Container.MP4.BoxType.meta">
            <summary>
                An enum constant representing the "META" box.
            </summary>
        </member>
        <member name="F:StreamCoders.Container.MP4.BoxType.iloc">
            <summary>
                An enum constant representing the "ILOC" box.
            </summary>
        </member>
        <member name="F:StreamCoders.Container.MP4.BoxType.ipro">
            <summary>
                An enum constant representing the "IPRO" box.
            </summary>
        </member>
        <member name="F:StreamCoders.Container.MP4.BoxType.sinf">
            <summary>
                An enum constant representing the "SINF" box.
            </summary>
        </member>
        <member name="F:StreamCoders.Container.MP4.BoxType.frma">
            <summary>
                An enum constant representing the "FRMA" box.
            </summary>
        </member>
        <member name="F:StreamCoders.Container.MP4.BoxType.imif">
            <summary>
                An enum constant representing the "IMIF" box.
            </summary>
        </member>
        <member name="F:StreamCoders.Container.MP4.BoxType.schm">
            <summary>
                An enum constant representing the "SCHM" box.
            </summary>
        </member>
        <member name="F:StreamCoders.Container.MP4.BoxType.schi">
            <summary>
                An enum constant representing the "SCHI" box.
            </summary>
        </member>
        <member name="F:StreamCoders.Container.MP4.BoxType.iinf">
            <summary>
                An enum constant representing the "IINF" box.
            </summary>
        </member>
        <member name="F:StreamCoders.Container.MP4.BoxType.xml">
            <summary>
                An enum constant representing the "XML" box.
            </summary>
        </member>
        <member name="F:StreamCoders.Container.MP4.BoxType.bxml">
            <summary>
                An enum constant representing the "BXML" box.
            </summary>
        </member>
        <member name="F:StreamCoders.Container.MP4.BoxType.pitm">
            <summary>
                An enum constant representing the "PITM" box.
            </summary>
        </member>
        <member name="F:StreamCoders.Container.MP4.BoxType.cslg">
            <summary>
                An enum constant representing the "CSLG" box.
            </summary>
        </member>
        <member name="F:StreamCoders.Container.MP4.BoxType.styp">
            <summary>
                An enum constant representing the "STYP" box.
            </summary>
            <summary>
                An enum constant representing the "STYP" box.
            </summary>
        </member>
        <member name="F:StreamCoders.Container.MP4.BoxType.sidx">
            <summary>
                An enum constant representing the "SIDX" box.
            </summary>
        </member>
        <member name="F:StreamCoders.Container.MP4.BoxType.uuid">
            <summary>
                An enum constant representing the "UUID" box.
            </summary>
            <summary>
                An enum constant representing the "UUID" box.
            </summary>
        </member>
        <member name="F:StreamCoders.Container.MP4.BoxType.iods">
            <summary>
                An enum constant representing the "IODS" box.
            </summary>
        </member>
        <member name="F:StreamCoders.Container.MP4.BoxType.url">
            <summary>
                An enum constant representing the "URL" box.
            </summary>
        </member>
        <member name="F:StreamCoders.Container.MP4.BoxType.urn">
            <summary>
                An enum constant representing the "URN" box.
            </summary>
        </member>
        <member name="F:StreamCoders.Container.MP4.BoxType.avc1">
            <summary>
                An enum constant representing the "AVC1" box.
            </summary>
            <summary>
                An enum constant representing the "AVC1" box.
            </summary>
        </member>
        <member name="F:StreamCoders.Container.MP4.BoxType.avcC">
            <summary>
                An enum constant representing the "AVCC" box.
            </summary>
        </member>
        <member name="F:StreamCoders.Container.MP4.BoxType.hvcC">
            <summary>
                HEVCDecoderConfigurationBox
            </summary>
        </member>
        <member name="F:StreamCoders.Container.MP4.BoxType.hev1">
            <summary>
                Visual Sample Entry for HEVC.
            </summary>
        </member>
        <member name="F:StreamCoders.Container.MP4.BoxType.hvc1">
            <summary>
                Visual Sample Entry for HEVC.
            </summary>
        </member>
        <member name="F:StreamCoders.Container.MP4.BoxType.btrt">
            <summary>
                An enum constant representing the "BTRT" box.
            </summary>
        </member>
        <member name="F:StreamCoders.Container.MP4.BoxType.esds">
            <summary>
                An enum constant representing the "ESDS" box.
            </summary>
        </member>
        <member name="F:StreamCoders.Container.MP4.BoxType.mp4a">
            <summary>
                An enum constant representing the "MP4A" box.
            </summary>
        </member>
        <member name="F:StreamCoders.Container.MP4.BoxType.mp4v">
            <summary>
                An enum constant representing the "MP4V" box.
            </summary>
        </member>
        <member name="F:StreamCoders.Container.MP4.BoxType.mp4s">
            <summary>
                An enum constant representing the "MP4S" box.
            </summary>
        </member>
        <member name="F:StreamCoders.Container.MP4.BoxType.mp3">
            <summary>
                An enum constant representing the "MP3" box.
            </summary>
        </member>
        <member name="F:StreamCoders.Container.MP4.BoxType.s263">
            <summary>
                An enum constant representing the "S263" box.
            </summary>
        </member>
        <member name="F:StreamCoders.Container.MP4.BoxType.d263">
            <summary>
                An enum constant representing the "D263" box.
            </summary>
        </member>
        <member name="F:StreamCoders.Container.MP4.BoxType.samr">
            <summary>
                An enum constant representing the "SAMR" box.
            </summary>
        </member>
        <member name="F:StreamCoders.Container.MP4.BoxType.damr">
            <summary>
                An enum constant representing the "DAMR" box.
            </summary>
        </member>
        <member name="F:StreamCoders.Container.MP4.BoxType.sawb">
            <summary>
                An enum constant representing the "SAWB" box.
            </summary>
        </member>
        <member name="F:StreamCoders.Container.MP4.BoxType.sawp">
            <summary>
                An enum constant representing the "SAWP" box.
            </summary>
        </member>
        <member name="F:StreamCoders.Container.MP4.BoxType.dawp">
            <summary>
                An enum constant representing the "DAWP" box.
            </summary>
        </member>
        <member name="F:StreamCoders.Container.MP4.BoxType.rtp">
            <summary>
                An enum constant representing the "RTP" box.
            </summary>
        </member>
        <member name="F:StreamCoders.Container.MP4.BoxType.tims">
            <summary>
                An enum constant representing the "TIMS" box.
            </summary>
        </member>
        <member name="F:StreamCoders.Container.MP4.BoxType.tsro">
            <summary>
                An enum constant representing the "TSRO" box.
            </summary>
        </member>
        <member name="F:StreamCoders.Container.MP4.BoxType.snro">
            <summary>
                An enum constant representing the "SNRO" box.
            </summary>
        </member>
        <member name="F:StreamCoders.Container.MP4.BoxType.hnti">
            <summary>
                An enum constant representing the "HNTI" box.
            </summary>
        </member>
        <member name="F:StreamCoders.Container.MP4.BoxType.sdp">
            <summary>
                An enum constant representing the "SDP" box.
            </summary>
        </member>
        <member name="F:StreamCoders.Container.MP4.BoxType.hint">
            <summary>
                An enum constant representing the "HINT" box.
            </summary>
            <summary>
                An enum constant representing the "HINT" box.
            </summary>
        </member>
        <member name="F:StreamCoders.Container.MP4.BoxType.cdsc">
            <summary>
                An enum constant representing the "CDSC" box.
            </summary>
        </member>
        <member name="F:StreamCoders.Container.MP4.BoxType.hind">
            <summary>
                An enum constant representing the "HIND" box.
            </summary>
        </member>
        <member name="F:StreamCoders.Container.MP4.BoxType.hinf">
            <summary>
                An enum constant representing the "HINF" box.
            </summary>
            <summary>
                An enum constant representing the "HINF" box.
            </summary>
        </member>
        <member name="F:StreamCoders.Container.MP4.BoxType.trpy">
            <summary>
                An enum constant representing the "TRPY" box.
            </summary>
        </member>
        <member name="F:StreamCoders.Container.MP4.BoxType.nump">
            <summary>
                An enum constant representing the "NUMP" box.
            </summary>
        </member>
        <member name="F:StreamCoders.Container.MP4.BoxType.tpyl">
            <summary>
                An enum constant representing the "TPYL" box.
            </summary>
        </member>
        <member name="F:StreamCoders.Container.MP4.BoxType.dmed">
            <summary>
                An enum constant representing the "DMED" box.
            </summary>
        </member>
        <member name="F:StreamCoders.Container.MP4.BoxType.dimm">
            <summary>
                An enum constant representing the "DIMM" box.
            </summary>
        </member>
        <member name="F:StreamCoders.Container.MP4.BoxType.drep">
            <summary>
                An enum constant representing the "DREP" box.
            </summary>
        </member>
        <member name="F:StreamCoders.Container.MP4.BoxType.totl">
            <summary>
                An enum constant representing the "TOTL" box.
            </summary>
        </member>
        <member name="F:StreamCoders.Container.MP4.BoxType.npck">
            <summary>
                An enum constant representing the "NPCK" box.
            </summary>
        </member>
        <member name="F:StreamCoders.Container.MP4.BoxType.tpay">
            <summary>
                An enum constant representing the "TPAY" box.
            </summary>
        </member>
        <member name="F:StreamCoders.Container.MP4.BoxType.tmin">
            <summary>
                An enum constant representing the "TMIN" box.
            </summary>
        </member>
        <member name="F:StreamCoders.Container.MP4.BoxType.tmax">
            <summary>
                An enum constant representing the "TMAX" box.
            </summary>
        </member>
        <member name="F:StreamCoders.Container.MP4.BoxType.pmax">
            <summary>
                An enum constant representing the "PMAX" box.
            </summary>
        </member>
        <member name="F:StreamCoders.Container.MP4.BoxType.dmax">
            <summary>
                An enum constant representing the "DMAX" box.
            </summary>
        </member>
        <member name="F:StreamCoders.Container.MP4.BoxType.maxr">
            <summary>
                An enum constant representing the "MAXR" box.
            </summary>
        </member>
        <member name="F:StreamCoders.Container.MP4.BoxType.payt">
            <summary>
                An enum constant representing the "PAYT" box.
            </summary>
        </member>
        <member name="F:StreamCoders.Container.MP4.BoxType.cmov">
            <summary>
                An enum constant representing the "CMOV" box.
            </summary>
            <summary>
                An enum constant representing the "CMOV" box.
            </summary>
        </member>
        <member name="F:StreamCoders.Container.MP4.BoxType.dcom">
            <summary>
                An enum constant representing the "DCOM" box.
            </summary>
        </member>
        <member name="F:StreamCoders.Container.MP4.BoxType.cmvd">
            <summary>
                An enum constant representing the "CMVD" box.
            </summary>
        </member>
        <member name="F:StreamCoders.Container.MP4.BoxType.alis">
            <summary>
                An enum constant representing the "ALIS" box.
            </summary>
        </member>
        <member name="F:StreamCoders.Container.MP4.BoxType.colr">
            <summary>
                An enum constant representing the "COLR" box.
            </summary>
        </member>
        <member name="F:StreamCoders.Container.MP4.BoxType.nulx">
            <summary>
                An enum constant representing the "NULX" box.
            </summary>
        </member>
        <member name="F:StreamCoders.Container.MP4.BoxType.wave">
            <summary>
                An enum constant representing the "WAVE" box.
            </summary>
        </member>
        <member name="F:StreamCoders.Container.MP4.BoxType.tapt">
            <summary>
                An enum constant representing the "TAPT" box.
            </summary>
        </member>
        <member name="F:StreamCoders.Container.MP4.BoxType.clef">
            <summary>
                An enum constant representing the "CLEF" box.
            </summary>
        </member>
        <member name="F:StreamCoders.Container.MP4.BoxType.prof">
            <summary>
                An enum constant representing the "PROF" box.
            </summary>
        </member>
        <member name="F:StreamCoders.Container.MP4.BoxType.enof">
            <summary>
                An enum constant representing the "ENOF" box.
            </summary>
        </member>
        <member name="F:StreamCoders.Container.MP4.BoxType.wide">
            <summary>
                An enum constant representing the "WIDE" box.
            </summary>
        </member>
        <member name="F:StreamCoders.Container.MP4.BoxType.tmcd">
            <summary>
                An enum constant representing the "TMCD" box.
            </summary>
        </member>
        <member name="F:StreamCoders.Container.MP4.BoxType.sowt">
            <summary>
                An enum constant representing the "SOWT" box.
            </summary>
            <summary>
                An enum constant representing the "SOWT" box.
            </summary>
        </member>
        <member name="F:StreamCoders.Container.MP4.BoxType.lpcm">
            <summary>
                An enum constant representing the "LPCM" box.
            </summary>
        </member>
        <member name="F:StreamCoders.Container.MP4.BoxType.ulaw">
            <summary>
                An enum constant representing the "ULAW" box.
            </summary>
        </member>
        <member name="F:StreamCoders.Container.MP4.BoxType.alaw">
            <summary>
                An enum constant representing the "ALAW" box.
            </summary>
        </member>
        <member name="T:StreamCoders.Container.MP4.ChunkLargeOffsetBox">
            -------------------------------------------------------------------------------------------------
            <summary>
                Chunk offset atoms identify the location of each chunk of data in the medias data stream.
            </summary>
            <remarks>
                The chunk-offset table gives the index of each chunk into the containing file. There are
                two variants, permitting the use of 32-bit or 64-bit offsets. The latter is useful when
                managing very large movies. Only one of these variants occurs in any single instance of a
                sample table atom.
            </remarks>
            <seealso cref="T:StreamCoders.Container.MP4.FullBox" />
            -------------------------------------------------------------------------------------------------
        </member>
        <member name="T:StreamCoders.Container.MP4.ChunkOffsetBox">
            -------------------------------------------------------------------------------------------------
            <summary>
                Chunk offset atoms identify the location of each chunk of data in the medias data stream.
            </summary>
            <remarks>
                The chunk-offset table gives the index of each chunk into the containing file. There are
                two variants, permitting the use of 32-bit or 64-bit offsets. The latter is useful when
                managing very large movies. Only one of these variants occurs in any single instance of a
                sample table atom.
            </remarks>
            <seealso cref="T:StreamCoders.Container.MP4.FullBox" />
            -------------------------------------------------------------------------------------------------
        </member>
        <member name="T:StreamCoders.Container.MP4.CompositionOffsetBox">
            -------------------------------------------------------------------------------------------------
            <summary>
                This box provides the offset between decoding time and composition time.
            </summary>
            <remarks>
                In version 0 of this box the decoding time must be less than the composition time, and
                the offsets are expressed as unsigned numbers such that CT(n) = DT(n) + CTTS(n) where
                CTTS(n) is the (uncompressed) table entry for sample n. In version 1 of this box, the
                composition timeline and the decoding timeline are still derived from each other, but the
                offsets are signed. It is recommended that for the computed composition timestamps, there
                is exactly one with the value 0 (zero). For either version of the box, each sample must
                have a unique composition timestamp value, that is, the timestamp for two samples shall
                never be the same. It may be true that there is no frame to compose at time 0; the
                handling of this is unspecified (systems might display the first frame for longer, or a
                suitable fill colour). When version 1 of this box is used, the CompositionToDecodeBox may
                also be present in the sample table to relate the composition and decoding timelines.
                When backwards-compatibility or compatibility with an unknown set of readers is desired,,
                version 0 of this box should be used when possible. In either version of this box, but
                particularly under version 0, if it is desired that the media start at track time 0, and
                the first media sample does not have a composition time of 0, an edit list may be used to
                ‘shift’ the media to time 0. The composition time to sample table is optional and must
                only be present if DT and CT differ for any samples.
            </remarks>
            <seealso cref="T:StreamCoders.Container.MP4.FullBox" />
            -------------------------------------------------------------------------------------------------
        </member>
        <member name="T:StreamCoders.Container.MP4.FullBox">
            -------------------------------------------------------------------------------------------------
            <summary>
                ISO 14496-12 FullBox. Adds versioning and flags to boxes.
            </summary>
            <seealso cref="T:StreamCoders.Container.MP4.Box" />
            -------------------------------------------------------------------------------------------------
        </member>
        <member name="T:StreamCoders.Container.MP4.FullBoxFlagsArbitraryValue">
            -------------------------------------------------------------------------------------------------
            <summary>
                Represents the flags in FullBox structure with arbitrary uint values.
            </summary>
            <seealso cref="T:StreamCoders.Container.MP4.IFullBoxFlags" />
            -------------------------------------------------------------------------------------------------
        </member>
        <member name="T:StreamCoders.Container.MP4.HandlerReferenceBox">
            -------------------------------------------------------------------------------------------------
            <summary>
                This box within a Media Box declares the process by which the media-data in the track is
                presented, and thus, the nature of the media in a track. For example, a video track would
                be handled by a video handler.
            </summary>
            <seealso cref="T:StreamCoders.Container.MP4.FullBox" />
            -------------------------------------------------------------------------------------------------
        </member>
        <member name="M:StreamCoders.Container.MP4.IFullBoxFlags.GetValue">
            -------------------------------------------------------------------------------------------------
            <summary>
                Gets the value.
            </summary>
            <returns>
                The value.
            </returns>
            -------------------------------------------------------------------------------------------------
        </member>
        <member name="M:StreamCoders.Container.MP4.IFullBoxFlags.SetValue(System.UInt32)">
            -------------------------------------------------------------------------------------------------
            <summary>
                Sets a value.
            </summary>
            <param name="flags">
                The flags.
            </param>
            -------------------------------------------------------------------------------------------------
        </member>
        <member name="M:StreamCoders.Container.MP4.IFullBoxFlags.HasFlag(System.UInt32)">
            -------------------------------------------------------------------------------------------------
            <summary>
                Checks if a value is set.
            </summary>
            <param name="flag">
                The value to check.
            </param>
            <returns>
                true if set, false if not.
            </returns>
            -------------------------------------------------------------------------------------------------
        </member>
        <member name="T:StreamCoders.Container.MP4.MediaDataBox">
            -------------------------------------------------------------------------------------------------
            <summary>
                Media data box. ('mdat')
            </summary>
            <seealso cref="T:StreamCoders.Container.MP4.Box" />
            -------------------------------------------------------------------------------------------------
        </member>
        <member name="F:StreamCoders.Container.MP4.MediaDataBox.Data">
            -------------------------------------------------------------------------------------------------
            <summary>
                The data.
            </summary>
            -------------------------------------------------------------------------------------------------
        </member>
        <member name="M:StreamCoders.Container.MP4.MediaDataBox.#ctor">
            -------------------------------------------------------------------------------------------------
            <summary>
                Default constructor.
            </summary>
            -------------------------------------------------------------------------------------------------
        </member>
        <member name="M:StreamCoders.Container.MP4.MediaDataBox.#ctor(StreamCoders.Container.MP4.Box)">
            -------------------------------------------------------------------------------------------------
            <summary>
                Constructor.
            </summary>
            <param name="box">  The box. </param>
            -------------------------------------------------------------------------------------------------
        </member>
        <member name="M:StreamCoders.Container.MP4.MediaDataBox.SetSize(System.Int64)">
            -------------------------------------------------------------------------------------------------
            <summary>
                Sets the size of the MDAT. There is no content here, as it is written separately, but we
                still need to report it in this box once known.
            </summary>
            <param name="size">
                The size.
            </param>
            -------------------------------------------------------------------------------------------------
        </member>
        <member name="T:StreamCoders.Container.MP4.MovieBox">
            <summary>
                Movie box 'moov'
            </summary>
        </member>
        <member name="M:StreamCoders.Container.MP4.Mpeg4SystemUtility.GetDescriptorTagType(System.Byte)">
            -------------------------------------------------------------------------------------------------
            <summary>
                Gets a descriptor tag type.
            </summary>
            <param name="tag">  The tag. </param>
            <returns>
                The descriptor tag type.
            </returns>
            -------------------------------------------------------------------------------------------------
        </member>
        <member name="M:StreamCoders.Container.MP4.Mpeg4SystemUtility.IsValidTag(StreamCoders.Container.MP4.DescriptorTag)">
            -------------------------------------------------------------------------------------------------
            <summary>
                Query if 'Tag' is valid tag.
            </summary>
            <param name="tag">  The tag. </param>
            <returns>
                true if valid tag, false if not.
            </returns>
            -------------------------------------------------------------------------------------------------
        </member>
        <member name="M:StreamCoders.Container.MP4.Mpeg4SystemUtility.GetDescriptorTagValue(StreamCoders.Container.MP4.DescriptorTag)">
            -------------------------------------------------------------------------------------------------
            <summary>
                Gets a descriptor tag value.
            </summary>
            <param name="tag">  The tag. </param>
            <returns>
                The descriptor tag value.
            </returns>
            -------------------------------------------------------------------------------------------------
        </member>
        <member name="M:StreamCoders.Container.MP4.Mpeg4SystemUtility.GetDescriptorClass(StreamCoders.Container.MP4.DescriptorTag)">
            -------------------------------------------------------------------------------------------------
            <summary>
                Gets a descriptor class.
            </summary>
            <param name="tag">  The tag. </param>
            <returns>
                The descriptor class.
            </returns>
            -------------------------------------------------------------------------------------------------
        </member>
        <member name="T:StreamCoders.Container.MP4.OnBeforeWriteEventArgs">
            -------------------------------------------------------------------------------------------------
            <summary>
                Contains members for Box.OnBeforeWrite event.
            </summary>
            <seealso cref="T:System.EventArgs" />
            -------------------------------------------------------------------------------------------------
        </member>
        <member name="P:StreamCoders.Container.MP4.OnBeforeWriteEventArgs.AbsolutePosition">
            -------------------------------------------------------------------------------------------------
            <summary>
                Gets the absolute position in the output stream.
            </summary>
            <value>
                The absolute position.
            </value>
            -------------------------------------------------------------------------------------------------
        </member>
        <member name="P:StreamCoders.Container.MP4.OnBeforeWriteEventArgs.DirtyBox">
            -------------------------------------------------------------------------------------------------
            <summary>
                If the event receiver modifies a boxes, this member indicates the top-level box that needs to be
                updated for consistency against the output stream.
            </summary>
            <value>
                The dirty box to be updated.
            </value>
            -------------------------------------------------------------------------------------------------
        </member>
        <member name="T:StreamCoders.Container.MP4.RtpHintSampleEntry">
            <summary>
                Contains information about RTP hint tracks
            </summary>
        </member>
        <member name="M:StreamCoders.Container.MP4.RtpHintSampleEntry.#ctor(StreamCoders.Container.MP4.Box)">
            <summary>
                Initializes a new instance of the <see cref="T:StreamCoders.Container.MP4.RtpHintSampleEntry" /> class.
            </summary>
            <param name="box"></param>
        </member>
        <member name="T:StreamCoders.Container.MP4.SampleDependencyEntry">
            <summary>
                sample_depends_on takes one of the following four values:
                0: the dependency of this sample is unknown;
                1: this sample does depend on others (not an I picture);
                2: this sample does not depend on others (I picture);
                3: reserved
                sample_is_depended_on takes one of the following four values:
                0: the dependency of other samples on this sample is unknown;
                1: other samples may depend on this one (not disposable);
                2: no other sample depends on this one (disposable);
                3: reserved
                sample_has_redundancy takes one of the following four values:
                0: it is unknown whether there is redundant coding in this sample;
                1: there is redundant coding in this sample;
                2: there is no redundant coding in this sample;
                3: reserved
            </summary>
        </member>
        <member name="F:StreamCoders.Container.MP4.SampleEntry.DataReferenceIndex">
            <summary>
                Is an integer that contains the index of the data reference to use to retrieve
                data associated with samples that use this sample description. Data references are stored in Data
                Reference Boxes. The index ranges from 1 to the number of data references.
            </summary>
        </member>
        <member name="T:StreamCoders.Container.MP4.SampleSizeBox">
            <summary>
                The sample size atom contains the sample count and a table giving the size of each sample. This allows the media
                data itself to be unframed. The total number of samples in the media is always indicated in the sample count. If
                the default size is indicated, then no table follows.
            </summary>
        </member>
        <member name="T:StreamCoders.Container.MP4.SampleToChunkBox">
            <summary>
                As samples are added to a media, they are collected into chunks that allow optimized data access. A chunk contains
                one or more samples. Chunks in a media may have different sizes, and the samples within a chunk may have different
                sizes. The sample-to-chunk atom stores chunk information for the samples in a media.
            </summary>
        </member>
        <member name="M:StreamCoders.Container.MP4.SampleToChunkBox.AddChunk(System.UInt32,System.UInt32)">
            <summary>
                Adds a chunk of samples to the box
            </summary>
            <param name="SampleCount">Number of Samples per Chunk</param>
            <param name="descIndex">SampleEntry description index</param>
        </member>
        <member name="T:StreamCoders.Container.MP4.StreamType">
            <summary>
                ISO/IEC 14496-1:2004(E) Table 6 (Essentials)
            </summary>
        </member>
        <member name="T:StreamCoders.Container.MP4.SyncSampleBox">
            <summary>
                Holds Sync sample Time information for random access.
                The maximum number of entries should not exceed (2^31)-1.
            </summary>
        </member>
        <member name="M:StreamCoders.Container.MP4.SyncSampleBox.FindNearestSample(System.UInt32)">
            <summary>
                Finds the nearest lower or equal sample number.
            </summary>
            <param name="sampleNumber">sample number to find.</param>
            <returns>Returns sample number in case of success, otherwise -1.</returns>
        </member>
        <member name="M:StreamCoders.Container.MP4.SyncSampleBox.Contains(System.UInt32)">
            -------------------------------------------------------------------------------------------------
            <summary>
                Query if this instance contains the given sampleNumber.
            </summary>
            <param name="sampleNumber"> The sample number to test for. </param>
            <returns>
                True if sample number is contained, otherwise false.
            </returns>
            -------------------------------------------------------------------------------------------------
        </member>
        <member name="T:StreamCoders.Container.MP4.TimeToSampleBox">
            <summary>
                Time-to-sample atoms store duration information for a media’s samples, providing a mapping from a time in a media
                to the corresponding data sample.
            </summary>
        </member>
        <member name="M:StreamCoders.Container.MP4.TimeToSampleBox.GetSample(System.UInt64)">
            <summary>
                Retrieves sample timing information from the container.
            </summary>
            <param name="sampleNumber">The sample number.</param>
            <returns>TimeToSamplePoint.</returns>
        </member>
        <member name="M:StreamCoders.Container.MP4.TimeToSampleBox.IsValidSampleNumber(System.UInt64)">
            <summary>
                Determines whether a sample number is present in the current structure.
            </summary>
            <param name="SampleNumber">The sample number.</param>
            <returns><c>true</c> if the sample is present in the current structure otherwise, <c>false</c>.</returns>
        </member>
        <member name="M:StreamCoders.Container.MP4.TimeToSampleBox.AddSample(System.UInt32)">
            <summary>
                Adds a new SampleDelta to the list. The list is automatically compacted.
            </summary>
            <param name="delta"></param>
        </member>
        <member name="M:StreamCoders.Container.MP4.TimeToSampleBox.GetSampleNumberByTime(System.UInt64)">
            <summary>
                Gets a sample number corresponding to a specific time offset.
            </summary>
            <param name="TimeOffset">The time offset.</param>
            <returns>The sample number</returns>
        </member>
        <member name="T:StreamCoders.Container.MP4.TrackExtendsBox">
            <summary>
                Track Extends Box 'trex'
            </summary>
        </member>
        <member name="F:StreamCoders.Container.MP4.TrackHeaderBox.TrackEnabled">
            <summary>
                Indicates that the track is enabled
            </summary>
        </member>
        <member name="F:StreamCoders.Container.MP4.TrackHeaderBox.TrackInMovie">
            <summary>
                Indicates that the track is used in the presentation.
            </summary>
        </member>
        <member name="F:StreamCoders.Container.MP4.TrackHeaderBox.TrackInPreview">
            <summary>
                Indicates that the track is used when previewing the presentation.
            </summary>
        </member>
        <member name="T:StreamCoders.Container.MP4.Utility">
            -------------------------------------------------------------------------------------------------
            <summary>
                Contains convenience functions for bit-wise operations and data structure manipulation.
            </summary>
            -------------------------------------------------------------------------------------------------
        </member>
        <member name="M:StreamCoders.Container.MP4.Utility.ToByte(System.Char)">
            -------------------------------------------------------------------------------------------------
            <summary>
                Converts a char to byte.
            </summary>
            <param name="c">
                The character.
            </param>
            <returns>
                The byte value.
            </returns>
            -------------------------------------------------------------------------------------------------
        </member>
        <member name="M:StreamCoders.Container.MP4.Utility.CreateType(System.Char,System.Char,System.Char,System.Char)">
            -------------------------------------------------------------------------------------------------
            <summary>
                Creates a 4-byte int from 4 char values.
            </summary>
            <param name="c1">
                The first char.
            </param>
            <param name="c2">
                The second char.
            </param>
            <param name="c3">
                The third char.
            </param>
            <param name="c4">
                The fourth char.
            </param>
            <returns>
                The new type.
            </returns>
            -------------------------------------------------------------------------------------------------
        </member>
        <member name="M:StreamCoders.Container.MP4.Utility.CreateCharFromTypeValue(System.UInt32)">
            -------------------------------------------------------------------------------------------------
            <summary>
                Creates char array from a 4-byte type value.
            </summary>
            <param name="value">
                The value.
            </param>
            <returns>
                A new array of character.
            </returns>
            -------------------------------------------------------------------------------------------------
        </member>
        <member name="M:StreamCoders.Container.MP4.Utility.CreateStringFromTypeValue(System.UInt32)">
            -------------------------------------------------------------------------------------------------
            <summary>
                Creates string from a 32-bit value. This can be used to convert FourCC read as ints to be converted to a string.
            </summary>
            <param name="value">
                The value.
            </param>
            <returns>
                The new string from 4-byte value.
            </returns>
            -------------------------------------------------------------------------------------------------
        </member>
        <member name="M:StreamCoders.Container.MP4.Utility.IsBitSet(System.Byte,System.Int32)">
            -------------------------------------------------------------------------------------------------
            <summary>
                Checks whether a certain bit is set.
            </summary>
            <param name="val">
                [in,out] The variable to use.
            </param>
            <param name="bitnum">
                The bit number to check.
            </param>
            <returns>
                true if bit set, false if not.
            </returns>
            -------------------------------------------------------------------------------------------------
        </member>
        <member name="M:StreamCoders.Container.MP4.Utility.IsBitSet(System.UInt32,System.Int32)">
            -------------------------------------------------------------------------------------------------
            <summary>
                Checks whether a certain bit is set.
            </summary>
            <param name="val">
                [in,out] The variable to use.
            </param>
            <param name="bitnum">
                The bit number to check.
            </param>
            <returns>
                true if bit set, false if not.
            </returns>
            -------------------------------------------------------------------------------------------------
        </member>
        <member name="M:StreamCoders.Container.MP4.Utility.IsMaskPresent(System.UInt32,System.Int32)">
            -------------------------------------------------------------------------------------------------
            <summary>
                Checks if a value contains a certain bit-mask.
            </summary>
            <param name="val">
                [in,out] The variable to use.
            </param>
            <param name="mask">
                The bit-mask.
            </param>
            <returns>
                true if mask present, false if not.
            </returns>
            -------------------------------------------------------------------------------------------------
        </member>
        <member name="M:StreamCoders.Container.MP4.Utility.SetBit(System.Byte@,System.Int32,System.Boolean)">
            -------------------------------------------------------------------------------------------------
            <summary>
                Sets a bit in a 8-bit variable.
            </summary>
            <param name="val">
                [in,out] The variable to use.
            </param>
            <param name="bitnum">
                The bit number to set.
            </param>
            <param name="variable">
                Set to true for '1' or false for '0'.
            </param>
            -------------------------------------------------------------------------------------------------
        </member>
        <member name="M:StreamCoders.Container.MP4.Utility.SetBit(System.UInt32@,System.Int32,System.Boolean)">
            -------------------------------------------------------------------------------------------------
            <summary>
                Sets a bit in a 32-bit variable.
            </summary>
            <param name="val">
                [in,out] The variable to use.
            </param>
            <param name="bitnum">
                The bit number to set.
            </param>
            <param name="variable">
                Set to true for '1' or false for '0'.
            </param>
            -------------------------------------------------------------------------------------------------
        </member>
        <member name="M:StreamCoders.Container.MP4.Utility.GetUtf8Length(System.String)">
            -------------------------------------------------------------------------------------------------
            <summary>
                Gets the number of bytes in a UTF-8 string.
            </summary>
            <param name="str">
                The input string.
            </param>
            <returns>
                The length in bytes.
            </returns>
            -------------------------------------------------------------------------------------------------
        </member>
        <member name="M:StreamCoders.Container.MP4.Utility.TimeSince1904(System.UInt64)">
            -------------------------------------------------------------------------------------------------
            <summary>
                Adds a number of seconds to 1/1/1904 00:00 reference date.
            </summary>
            <param name="seconds">
                The seconds to add.
            </param>
            <returns>
                Sum of values.
            </returns>
            -------------------------------------------------------------------------------------------------
        </member>
        <member name="M:StreamCoders.Container.MP4.Utility.SecondsSince1904(System.DateTime)">
            -------------------------------------------------------------------------------------------------
            <summary>
                Returns the seconds that have passed since 1/1/1904 0:00
            </summary>
            <param name="date">
                Date/Time of the date.
            </param>
            <returns>
                The number of seconds that have passed.
            </returns>
            -------------------------------------------------------------------------------------------------
        </member>
        <member name="M:StreamCoders.Container.MP4.Utility.ConvertUnsignedInt64ToTimeSpan(System.UInt64,System.UInt32)">
            -------------------------------------------------------------------------------------------------
            <summary>
                Converts Ticks/Frequency to Timespan.
            </summary>
            <param name="timelineTicks">
                Ticks.
            </param>
            <param name="scale">
                The scale to use.
            </param>
            <returns>
                New instance of TimeSpan.
            </returns>
            -------------------------------------------------------------------------------------------------
        </member>
        <member name="M:StreamCoders.Container.MP4.Utility.ConvertUnsignedInt32ToTimeSpan(System.UInt32,System.UInt32)">
            <summary>
                Converts Ticks/Frequency to Timespan
            </summary>
            <param name="timelineTicks">Ticks</param>
            <param name="scale">Ticks/s, Frequency</param>
            <returns></returns>
        </member>
        <member name="M:StreamCoders.Container.MP4.Utility.ConverTimeSpanToUnsignedInt64(System.TimeSpan,System.UInt32)">
            -------------------------------------------------------------------------------------------------
            <summary>
                Converts a TimeSpan to ulong given a scale.
            </summary>
            <param name="span">
                The input timestamps.
            </param>
            <param name="scale">
                The scale to use for conversion.
            </param>
            <returns>
                Returns the converted value.
            </returns>
            -------------------------------------------------------------------------------------------------
        </member>
        <member name="M:StreamCoders.Container.MP4.Utility.CreateBoxInstance``1(StreamCoders.Container.MP4.Box)">
            -------------------------------------------------------------------------------------------------
            <summary>
                Creates an MP4 Box instance.
            </summary>
            <typeparam name="T">
                Generic type parameter constrained to Box and derivations.
            </typeparam>
            <param name="paramBox">
                A box used to initialize the newly created instance of box type T.
            </param>
            <returns>
                The new box instance.
            </returns>
            -------------------------------------------------------------------------------------------------
        </member>
        <member name="M:StreamCoders.Container.MP4.Utility.CreateBox(System.Type,StreamCoders.Container.MP4.Box)">
            -------------------------------------------------------------------------------------------------
            <summary>
                Creates an MP4 Box instance.
            </summary>
            <param name="t">
                The Type of the box to create.
            </param>
            <param name="paramBox">
                A box used to initialize the newly created instance of box.
            </param>
            <returns>
                The new box instance.
            </returns>
            -------------------------------------------------------------------------------------------------
        </member>
        <member name="M:StreamCoders.Container.MP4.Utility.CreateDescriptor(System.Type,StreamCoders.Container.MP4.BaseDescriptor)">
            -------------------------------------------------------------------------------------------------
            <summary>
                Creates an MPEG descriptor.
            </summary>
            <param name="t">
                The Type of descriptor to create. Must be derived from BaseDescriptor.
            </param>
            <param name="paramDesc">
                Descriptor used to initialize the newly created descriptor.
            </param>
            <returns>
                The new descriptor instance.
            </returns>
            -------------------------------------------------------------------------------------------------
        </member>
        <member name="F:StreamCoders.Container.MP4.RootBox.Fragmented">
            -------------------------------------------------------------------------------------------------
            <summary>
                If a fragmented mp4 file is encountered the parser will set this to true. FragmentConfig
                will container the initial unparsed 'moof' box.
            </summary>
            -------------------------------------------------------------------------------------------------
        </member>
        <member name="M:StreamCoders.Container.MP4.RootBox.Parse">
            -------------------------------------------------------------------------------------------------
            <summary>
                Parses container building an inheritance tree of all boxes up to the first fragment or
                mdat. The.
            </summary>
            <returns>
                Returns true if parsing was successful, otherwise false.
            </returns>
            <seealso cref="M:StreamCoders.Container.MP4.Box.Parse()" />
            -------------------------------------------------------------------------------------------------
        </member>
        <member name="M:StreamCoders.Container.MP4.RootBox.RetrieveTrackBoxes">
            <summary>
                Sets up MP4 tracks.
            </summary>
        </member>
        <member name="T:StreamCoders.Container.MP4.SegmentIndexBox">
            -------------------------------------------------------------------------------------------------
            <summary>
                <para>Segment Index Box 'sidx' (3GPP 26.244 REL10) DASH.</para>
                <para>
                    The Segment Index box ('sidx') provides a compact index of one track within the
                    media segment to which it applies. The index is referring to movie fragments
                    and other Segment Index Boxes in a segment.
                </para>
            </summary>
            <seealso cref="T:StreamCoders.Container.MP4.FullBox" />
            -------------------------------------------------------------------------------------------------
        </member>
        <member name="F:StreamCoders.Container.MP4.SegmentIndexBox.EarliestPresentationTime">
            -------------------------------------------------------------------------------------------------
            <summary>
                Is the earliest presentation time of any sample in the reference track in the first
                subsegment, expressed in the timescale of the timescale field.
            </summary>
            -------------------------------------------------------------------------------------------------
        </member>
        <member name="F:StreamCoders.Container.MP4.SegmentIndexBox.FirstOffset">
            -------------------------------------------------------------------------------------------------
            <summary>
                Is the distance in bytes from the first byte following the containing Segment Indexing
                Box, to the first byte of the first referenced box.
            </summary>
            -------------------------------------------------------------------------------------------------
        </member>
        <member name="F:StreamCoders.Container.MP4.SegmentIndexBox.ReferenceId">
            -------------------------------------------------------------------------------------------------
            <summary>
                <para>
                    Provides the track_ID for the reference track; if this Segment Index box is
                    referenced from a “parent” Segment Index box, the value of reference_IDshall be the same
                    as the value of reference_IDof the “parent” Segment Index box
                </para>
            </summary>
            -------------------------------------------------------------------------------------------------
        </member>
        <member name="F:StreamCoders.Container.MP4.SegmentIndexBox.References">
            <summary>   The entries. </summary>
        </member>
        <member name="F:StreamCoders.Container.MP4.SegmentIndexBox.TimeScale">
            -------------------------------------------------------------------------------------------------
            <summary>
                <para>
                    Provides the timescale, in ticks per second, for the time and duration fields
                    within this box; it is recommended that this match the timescale of the reference track,
                    i.e. the timescale field of the Media Header Box of the track.
                </para>
            </summary>
            -------------------------------------------------------------------------------------------------
        </member>
        <member name="F:StreamCoders.Container.MP4.SegmentIndexEntry.ReferencedSize">
            -------------------------------------------------------------------------------------------------
            <summary>
                <para>
                    The distance in bytes from the first byte of the referenced box to the first byte
                    of the next referenced box or in the case of the last entry, the first byte not indexed
                    by this Segment Index Box.
                </para>
            </summary>
            -------------------------------------------------------------------------------------------------
        </member>
        <member name="F:StreamCoders.Container.MP4.SegmentIndexEntry.ReferenceType">
            -------------------------------------------------------------------------------------------------
            <summary>
                <para>
                    When set to 0 indicates that the reference is to a movie fragment (‘moof’) box;
                    when set to 1 indicates that the reference is to a segment index (‘sidx’)
                    box.
                </para>
            </summary>
            -------------------------------------------------------------------------------------------------
        </member>
        <member name="F:StreamCoders.Container.MP4.SegmentIndexEntry.SAPDeltaTime">
            -------------------------------------------------------------------------------------------------
            <summary>
                Indicates TSAP of the first SAP, in decoding order, in the referenced subsegment for the
                reference stream. If the referenced subsegments do not contain a SAP, SAP_delta_timeis
                reserved with the value 0; otherwise SAP_delta_timeis the difference between the earliest
                presentation time of the subsegment, and the TSAP (note that this difference may be zero,
                in the case that the subsegment starts with a SAP).
            </summary>
            -------------------------------------------------------------------------------------------------
        </member>
        <member name="F:StreamCoders.Container.MP4.SegmentIndexEntry.SAPType">
            -------------------------------------------------------------------------------------------------
            <summary>
                Indicates a SAP type as specified in TS26.247 [49], Annex G.6, or the value 0. Other type
                values are reserved. For the detailed semantics of this field in combination with other
                fields, see the table below.
            </summary>
            -------------------------------------------------------------------------------------------------
        </member>
        <member name="F:StreamCoders.Container.MP4.SegmentIndexEntry.StartsWithSAP">
            -------------------------------------------------------------------------------------------------
            <summary>
                Indicates whether the referenced subsegments start with a SAP. For the detailed semantics
                of this field in combination with other fields, see the table below.
            </summary>
            -------------------------------------------------------------------------------------------------
        </member>
        <member name="F:StreamCoders.Container.MP4.SegmentIndexEntry.SubSegmentDuration">
            -------------------------------------------------------------------------------------------------
            <summary>
                When the reference is to Segment Index Box, this field carries the sum of the
                subsegment_duration fields in that box; when the reference is to a subsegment, this field
                carries the difference between the earliest presentation time of any sample of the
                reference track in the next subsegment (or the first subsegment of the next segment, if
                this is the last subsegment of the segment or the end composition time of the reference
                track if this is the last subsegment of the representation) and the earliest presentation
                time of any sample of the reference track in the referenced subsegment; the duration is
                expressed in the timescale value in this box.
            </summary>
            -------------------------------------------------------------------------------------------------
        </member>
        <member name="T:StreamCoders.Container.MP4.SegmentTypeBox">
            <summary>
                Segment Type Box 'styp' (3GPP 26.244 REL10) DASH
            </summary>
        </member>
        <member name="T:StreamCoders.Container.MP4.TfrfBox">
            -------------------------------------------------------------------------------------------------
            <summary>
                The TfrfBox and related fields encapsulate the absolute timestamp and duration for one or
                more subsequent fragments of the same track in a live presentation. This field SHOULD be
                ignored if it appears in an on-demand presentation.
            </summary>
            <seealso cref="T:StreamCoders.Container.MP4.FullBox" />
            -------------------------------------------------------------------------------------------------
        </member>
        <member name="T:StreamCoders.Container.MP4.TfxdBox">
            -------------------------------------------------------------------------------------------------
            <summary>
                The TfxdBox and related fields encapsulate the absolute timestamp and duration of a
                fragment in a live presentation. This field SHOULD be ignored if it appears in an on-
                demand presentation.
            </summary>
            <seealso cref="T:StreamCoders.Container.MP4.FullBox" />
            -------------------------------------------------------------------------------------------------
        </member>
        <member name="F:StreamCoders.Container.MP4.TfxdBoxDataField.AbsoluteTime">
            -------------------------------------------------------------------------------------------------
            <summary>
                The absolute time in timescale units.
            </summary>
            -------------------------------------------------------------------------------------------------
        </member>
        <member name="F:StreamCoders.Container.MP4.TfxdBoxDataField.Duration">
            -------------------------------------------------------------------------------------------------
            <summary>
                The duration in timescale units.
            </summary>
            -------------------------------------------------------------------------------------------------
        </member>
        <member name="T:StreamCoders.Container.Mp4Reader">
            <summary>
                ISO 14496-14 (2010), QTFF Reader, 3GPP annexes (mp4, mov, 3gx), fMP4, Smooth Streaming ISMV/ISMA, MPEG-DASH Segments (ISO
                23009-1)
                <para></para>
                <para>
                    <b>Currently supported Audio codecs</b>: AAC, MP3, AMR-NB, AMR-WB, G.711a/u, LPCM, LittleEndian Twos
                    Complement
                </para>
                <para></para>
                <para><b>Currently supported Video codecs</b>: H.265, H.264, MPEG4-2, H.263</para>
                <para></para>
            </summary>
            <remarks>
                <para>Supports reading file sizes up to 2^(64-1) bytes.</para>
            </remarks>
            <seealso cref="T:StreamCoders.IReader"></seealso>
        </member>
        <member name="M:StreamCoders.Container.Mp4Reader.#ctor">
            -------------------------------------------------------------------------------------------------
            <summary>
                Default constructor.
            </summary>
            -------------------------------------------------------------------------------------------------
        </member>
        <member name="P:StreamCoders.Container.Mp4Reader.IsFragmented">
            -------------------------------------------------------------------------------------------------
            <summary>
                After initialization this indicates whether the stream contains fragmented movie
                elements. It is important to disable tracks that are not being used, so the reader can
                discard fragments.
            </summary>
            <value>
                true if this object is fragmented, false if not.
            </value>
            -------------------------------------------------------------------------------------------------
        </member>
        <member name="P:StreamCoders.Container.Mp4Reader.Tracks">
            -------------------------------------------------------------------------------------------------
            <summary>
                Gets the tracks contained in the MP4 container.
            </summary>
            <value>
                The tracks.
            </value>
            <seealso cref="P:StreamCoders.IReader.Tracks" />
            -------------------------------------------------------------------------------------------------
        </member>
        <member name="M:StreamCoders.Container.Mp4Reader.GetNextFrame(StreamCoders.TrackInfo)">
            -------------------------------------------------------------------------------------------------
            <summary>
                Retrieves next frame from trackInfo.
            </summary>
            <param name="track">    Track to retrieve next frame from. </param>
            <returns>
                Returns frame data, otherwise null.
            </returns>
            -------------------------------------------------------------------------------------------------
        </member>
        <member name="M:StreamCoders.Container.Mp4Reader.Init(System.String)">
            -------------------------------------------------------------------------------------------------
            <summary>
                Initialises this object.
            </summary>
            <exception cref="T:System.Exception">    Thrown when an exception error condition occurs. </exception>
            <returns>
                true if it succeeds, false if it fails.
            </returns>
            -------------------------------------------------------------------------------------------------
        </member>
        <member name="M:StreamCoders.Container.Mp4Reader.Init(System.IO.Stream)">
            -------------------------------------------------------------------------------------------------
            <summary>
                Initialises this object.
            </summary>
            <param name="inputStream">   The stream. </param>
            <returns>
                true if it succeeds, false if it fails.
            </returns>
            -------------------------------------------------------------------------------------------------
        </member>
        <member name="P:StreamCoders.Container.Mp4Reader.Position">
            -------------------------------------------------------------------------------------------------
            <summary>
                Returns current time offset or adjusts position in stream to nearest valid time offset
                (smaller or equal to the value passed).
            </summary>
            <remarks>
                If an audio trackInfo is present, the position will reflect only that of the audio trackInfo.
            </remarks>
            <value>
                The position.
            </value>
            -------------------------------------------------------------------------------------------------
        </member>
        <member name="M:StreamCoders.Container.Mp4Reader.Dispose">
            -------------------------------------------------------------------------------------------------
            <summary>
                Dispose of this object, cleaning up any resources it uses.
            </summary>
            -------------------------------------------------------------------------------------------------
        </member>
        <member name="M:StreamCoders.Container.Mp4Reader.GetNextFrame(System.Int32)">
            -------------------------------------------------------------------------------------------------
            <summary>
                Retrieves next frame from trackInfo.
            </summary>
            <param name="track">    Track to retrieve next frame from. </param>
            <returns>
                Returns frame data, otherwise null.
            </returns>
            -------------------------------------------------------------------------------------------------
        </member>
        <member name="M:StreamCoders.Container.Mp4Reader.GetNextHintFrame(StreamCoders.TrackInfo)">
            -------------------------------------------------------------------------------------------------
            <summary>
                Retrieves the next RTP frame from a hint trackInfo.
            </summary>
            <param name="track">
                A valid hint trackInfo.
            </param>
            <returns>
                An RtpFrame object, otherwise null.
            </returns>
            -------------------------------------------------------------------------------------------------
        </member>
        <member name="M:StreamCoders.Container.Mp4Reader.GetTrackStatus(System.Int32)">
            -------------------------------------------------------------------------------------------------
            <summary>
                Gets the trackInfo status.
            </summary>
            <param name="track">    The trackInfo. </param>
            <returns>
                The trackInfo status.
            </returns>
            -------------------------------------------------------------------------------------------------
        </member>
        <member name="M:StreamCoders.Container.Mp4Reader.Finalize">
            -------------------------------------------------------------------------------------------------
            <summary>
                Finaliser.
            </summary>
            -------------------------------------------------------------------------------------------------
        </member>
        <member name="M:StreamCoders.Container.Mp4Reader.Dispose(System.Boolean)">
            -------------------------------------------------------------------------------------------------
            <summary>
                Dispose of this object, cleaning up any resources it uses.
            </summary>
            <param name="disposing">    true if resources should be disposed, false if not. </param>
            -------------------------------------------------------------------------------------------------
        </member>
        <member name="T:StreamCoders.Container.Mp4Writer">
            -------------------------------------------------------------------------------------------------
            <summary>
                MP4 writer compliant with ISO 14496-14 (2010)
                <para>
                    <b>Currently supported Audio codecs</b>: AAC, MP3, AMR-NB, AMR-WB, G.711a/u, LPCM, LittleEndian Twos
                    Complement
                </para>
                <para></para>
                <para><b>Currently supported Video codecs</b>: H.265, H.264, MPEG4-2, H.263</para>
            </summary>
            <seealso cref="T:StreamCoders.IWriter" />
            -------------------------------------------------------------------------------------------------
        </member>
        <member name="F:StreamCoders.Container.Mp4Writer.Configuration">
            -------------------------------------------------------------------------------------------------
            <summary>
                The configuration.
            </summary>
            -------------------------------------------------------------------------------------------------
        </member>
        <member name="M:StreamCoders.Container.Mp4Writer.#ctor">
            -------------------------------------------------------------------------------------------------
            <summary>
                Constructs an instance.
            </summary>
            -------------------------------------------------------------------------------------------------
        </member>
        <member name="P:StreamCoders.Container.Mp4Writer.CompatibilityMode">
            -------------------------------------------------------------------------------------------------
            <summary>
                true if compatibility mode, false if not.
            </summary>
            <value>
                true if compatibility mode, false if not.
            </value>
            -------------------------------------------------------------------------------------------------
        </member>
        <member name="M:StreamCoders.Container.Mp4Writer.AddTrack(StreamCoders.TrackInfo)">
            -------------------------------------------------------------------------------------------------
            <summary>
                Adds a track to the streamWriter.
            </summary>
            <param name="track">
                The TrackInfo instance describing the elementary stream.
            </param>
            <returns>
                Returns new instance of a TrackInfo object, containing the newly created tracks number,
                which should be used for all subsequent calls to Mp4Writer. In case the parameters are
                invalid or the codec is not supported, the return value is null.
            </returns>
            <seealso cref="M:StreamCoders.IWriter.AddTrack(TrackInfo)" />
            -------------------------------------------------------------------------------------------------
        </member>
        <member name="M:StreamCoders.Container.Mp4Writer.EndTrack(StreamCoders.TrackInfo)">
            -------------------------------------------------------------------------------------------------
            <summary>
                Ends a particular track.
            </summary>
            <param name="track">
                The TrackInfo instance describing the elementary stream.
            </param>
            <seealso cref="M:StreamCoders.IWriter.EndTrack(TrackInfo)" />
            -------------------------------------------------------------------------------------------------
        </member>
        <member name="M:StreamCoders.Container.Mp4Writer.Init(System.String)">
            -------------------------------------------------------------------------------------------------
            <summary>
                Initializes streamWriter by creating a file.
            </summary>
            <param name="filename"> Filename of the file. </param>
            <returns>
                true if it succeeds, false if it fails.
            </returns>
            -------------------------------------------------------------------------------------------------
        </member>
        <member name="M:StreamCoders.Container.Mp4Writer.Init(System.IO.Stream)">
            -------------------------------------------------------------------------------------------------
            <summary>
                Initializes streamWriter by taking a stream.
            </summary>
            <param name="outputStream">   The stream. </param>
            <returns>
                true if it succeeds, false if it fails.
            </returns>
            -------------------------------------------------------------------------------------------------
        </member>
        <member name="M:StreamCoders.Container.Mp4Writer.WriteTrack(StreamCoders.TrackInfo,StreamCoders.MediaBuffer{System.Byte})">
            -------------------------------------------------------------------------------------------------
            <summary>
                Writes buffer to a track.
            </summary>
            <param name="track">
                The TrackInfo instance describing the elementary stream.
            </param>
            <param name="buffer">
                The buffer.
            </param>
            <returns>
                true if it succeeds, false if it fails.
            </returns>
            <seealso cref="M:StreamCoders.IWriter.WriteTrack(TrackInfo,MediaBuffer{byte})" />
            -------------------------------------------------------------------------------------------------
        </member>
        <member name="M:StreamCoders.Container.Mp4Writer.Dispose">
            -------------------------------------------------------------------------------------------------
            <summary>
                Dispose of this instance, cleaning up any resources it uses.
            </summary>
            -------------------------------------------------------------------------------------------------
        </member>
        <member name="M:StreamCoders.Container.Mp4Writer.Close">
            -------------------------------------------------------------------------------------------------
            <summary>
                Closes streamWriter and finalizes all boxes.
            </summary>
            -------------------------------------------------------------------------------------------------
        </member>
        <member name="M:StreamCoders.Container.Mp4Writer.WriteMdat">
            <summary>
                When the first buffer is written, the ftype and mdat are written.
            </summary>
        </member>
        <member name="M:StreamCoders.Container.Mp4Writer.Finalize">
            -------------------------------------------------------------------------------------------------
            <summary>
                Finaliser.
            </summary>
            -------------------------------------------------------------------------------------------------
        </member>
        <member name="M:StreamCoders.Container.Mp4Writer.Dispose(System.Boolean)">
            -------------------------------------------------------------------------------------------------
            <summary>
                Dispose of this instance, cleaning up any resources it uses.
            </summary>
            <param name="disposing">    true if resources should be disposed, false if not. </param>
            -------------------------------------------------------------------------------------------------
        </member>
        <member name="M:StreamCoders.Container.Compression.Libs.zlib.SupportClass.Identity(System.Int64)">
            <summary>
                This method returns the literal value received
            </summary>
            <param name="literal">The literal to return</param>
            <returns>The received value</returns>
        </member>
        <member name="M:StreamCoders.Container.Compression.Libs.zlib.SupportClass.Identity(System.UInt64)">
            <summary>
                This method returns the literal value received
            </summary>
            <param name="literal">The literal to return</param>
            <returns>The received value</returns>
        </member>
        <member name="M:StreamCoders.Container.Compression.Libs.zlib.SupportClass.Identity(System.Single)">
            <summary>
                This method returns the literal value received
            </summary>
            <param name="literal">The literal to return</param>
            <returns>The received value</returns>
        </member>
        <member name="M:StreamCoders.Container.Compression.Libs.zlib.SupportClass.Identity(System.Double)">
            <summary>
                This method returns the literal value received
            </summary>
            <param name="literal">The literal to return</param>
            <returns>The received value</returns>
        </member>
        <member name="M:StreamCoders.Container.Compression.Libs.zlib.SupportClass.URShift(System.Int32,System.Int32)">
            <summary>
                Performs an unsigned bitwise right shift with the specified number
            </summary>
            <param name="number">Number to operate on</param>
            <param name="bits">Ammount of bits to shift</param>
            <returns>The resulting number from the shift operation</returns>
        </member>
        <member name="M:StreamCoders.Container.Compression.Libs.zlib.SupportClass.URShift(System.Int32,System.Int64)">
            <summary>
                Performs an unsigned bitwise right shift with the specified number
            </summary>
            <param name="number">Number to operate on</param>
            <param name="bits">Ammount of bits to shift</param>
            <returns>The resulting number from the shift operation</returns>
        </member>
        <member name="M:StreamCoders.Container.Compression.Libs.zlib.SupportClass.URShift(System.Int64,System.Int32)">
            <summary>
                Performs an unsigned bitwise right shift with the specified number
            </summary>
            <param name="number">Number to operate on</param>
            <param name="bits">Ammount of bits to shift</param>
            <returns>The resulting number from the shift operation</returns>
        </member>
        <member name="M:StreamCoders.Container.Compression.Libs.zlib.SupportClass.URShift(System.Int64,System.Int64)">
            <summary>
                Performs an unsigned bitwise right shift with the specified number
            </summary>
            <param name="number">Number to operate on</param>
            <param name="bits">Ammount of bits to shift</param>
            <returns>The resulting number from the shift operation</returns>
        </member>
        <member name="M:StreamCoders.Container.Compression.Libs.zlib.SupportClass.ReadInput(System.IO.Stream,System.Byte[],System.Int32,System.Int32)">
            <summary>
                Reads a number of characters from the current source inputStream and writes the data to the target array at the
                specified index.
            </summary>
            <param name="sourceStream">The source inputStream to read from.</param>
            <param name="target">Contains the array of characteres read from the source inputStream.</param>
            <param name="start">The starting index of the target array.</param>
            <param name="count">The maximum number of characters to read from the source inputStream.</param>
            <returns>
                The number of characters read. The number will be less than or equal to count depending on the data available
                in the source inputStream. Returns -1 if the end of the stream is reached.
            </returns>
        </member>
        <member name="M:StreamCoders.Container.Compression.Libs.zlib.SupportClass.ReadInput(System.IO.TextReader,System.Byte[],System.Int32,System.Int32)">
            <summary>
                Reads a number of characters from the current source TextReader and writes the data to the target array at the
                specified index.
            </summary>
            <param name="sourceTextReader">The source TextReader to read from</param>
            <param name="target">Contains the array of characteres read from the source TextReader.</param>
            <param name="start">The starting index of the target array.</param>
            <param name="count">The maximum number of characters to read from the source TextReader.</param>
            <returns>
                The number of characters read. The number will be less than or equal to count depending on the data available
                in the source TextReader. Returns -1 if the end of the stream is reached.
            </returns>
        </member>
        <member name="M:StreamCoders.Container.Compression.Libs.zlib.SupportClass.ToByteArray(System.String)">
            <summary>
                Converts a string to an array of bytes
            </summary>
            <param name="sourceString">The string to be converted</param>
            <returns>The new array of bytes</returns>
        </member>
        <member name="M:StreamCoders.Container.Compression.Libs.zlib.SupportClass.ToCharArray(System.Byte[])">
            <summary>
                Converts an array of bytes to an array of chars
            </summary>
            <param name="byteArray">The array of bytes to convert</param>
            <returns>The new array of chars</returns>
        </member>
        <member name="P:StreamCoders.Container.Compression.Libs.zlib.ZInputStream.TotalIn">
            <summary> Returns the total number of bytes input so far.</summary>
        </member>
        <member name="P:StreamCoders.Container.Compression.Libs.zlib.ZInputStream.TotalOut">
            <summary> Returns the total number of bytes output so far.</summary>
        </member>
        <member name="P:StreamCoders.Container.Compression.Libs.zlib.ZOutputStream.TotalIn">
            <summary> Returns the total number of bytes input so far.</summary>
        </member>
        <member name="P:StreamCoders.Container.Compression.Libs.zlib.ZOutputStream.TotalOut">
            <summary> Returns the total number of bytes output so far.</summary>
        </member>
        <member name="T:StreamCoders.Container.Mpeg2Ts.AdaptationFieldControlValue">
            -------------------------------------------------------------------------------------------------
            <summary>
                Indicates whether this Transport inputStream packet header is followed by an
                adaptation field and/or payload
            </summary>
            -------------------------------------------------------------------------------------------------
        </member>
        <member name="M:StreamCoders.Container.Mpeg2Ts.Bitstreamable.GetPositionDelta">
            -------------------------------------------------------------------------------------------------
            <summary>
                When the class gets created, the position in the stream is saved. This function returns
                the number of bytes that the stream has progressed since the class was instantiated.
            </summary>
            <returns>
                The position delta.
            </returns>
            -------------------------------------------------------------------------------------------------private DateTime CreationTime = Date
        </member>
        <member name="M:StreamCoders.Container.Mpeg2Ts.Bitstreamable.GetPositionDeltaRelativeTo(System.Int64)">
            -------------------------------------------------------------------------------------------------
            <summary>
                Gets the delta position relative to a value.
            </summary>
            <param name="position">
                The position.
            </param>
            <returns>
                The position delta relative to.
            </returns>
            -------------------------------------------------------------------------------------------------
        </member>
        <member name="T:StreamCoders.Container.Mpeg2Ts.PsiTableId">
            -------------------------------------------------------------------------------------------------
            <summary>
                PSI Table ID value names
            </summary>
            -------------------------------------------------------------------------------------------------
        </member>
        <member name="M:StreamCoders.Container.Mpeg2Ts.PsiConstants.GetPsiTableId(System.Int64)">
            -------------------------------------------------------------------------------------------------
            <summary>
                Table 2-26 – table_id assignment values
            </summary>
            <param name="value">
                The value.
            </param>
            <returns>
                The psi table identifier.
            </returns>
            -------------------------------------------------------------------------------------------------
        </member>
        <member name="T:StreamCoders.Container.Mpeg2Ts.ScrambleControlValue">
            -------------------------------------------------------------------------------------------------
            <summary>
                Indicates the scrambling mode of the Transport inputStream packet payload
            </summary>
            -------------------------------------------------------------------------------------------------
        </member>
        <member name="T:StreamCoders.Container.Mpeg2Ts.StreamDescriptor">
            -------------------------------------------------------------------------------------------------
            <summary>
                Elementary inputStream descriptors extracted from ProgramMapSection
            </summary>
            -------------------------------------------------------------------------------------------------
        </member>
        <member name="T:StreamCoders.Container.Mpeg2Ts.SectionBase">
            -------------------------------------------------------------------------------------------------
            <summary>
                Section base. Contains fields common to all sections, but not necessarily in the same
                order. The Parse function will only parse SectionSyntaxIndicator to SectionLength fields.
                The rest must be done in derived classes.
            </summary>
            -------------------------------------------------------------------------------------------------
        </member>
        <member name="M:StreamCoders.Container.Mpeg2Ts.SectionBase.Parse">
            -------------------------------------------------------------------------------------------------
            <summary>
                Parses fields of section common to almost all sections.
            </summary>
            -------------------------------------------------------------------------------------------------
        </member>
        <member name="T:StreamCoders.Container.Mpeg2TsReader">
            <summary>
                MPEG-2 TS Reader (BETA)
            </summary>
        </member>
        <member name="P:StreamCoders.Container.WaveChunk.ChunkSize">
            -------------------------------------------------------------------------------------------------
            <summary>
                Gets or sets the size of the chunk. The accesor set is public because there are 64-bit versions that not to set the
                actual length late.
            </summary>
            <value>
                The size of the chunk.
            </value>
            -------------------------------------------------------------------------------------------------
        </member>
        <member name="T:StreamCoders.Container.WaveReader">
            -------------------------------------------------------------------------------------------------
            <summary>
                Implements a WAV reader.
            </summary>
            -------------------------------------------------------------------------------------------------
        </member>
        <member name="T:StreamCoders.Container.WaveWriter">
            -------------------------------------------------------------------------------------------------
            <summary>
                Implements a WAV streamWriter.
            </summary>
            <remarks>
                Currently only writing of PCM samples is supported.
            </remarks>
            -------------------------------------------------------------------------------------------------
        </member>
        <member name="T:StreamCoders.Container.TimeAlignedReaderBuffer">
            -------------------------------------------------------------------------------------------------
            <summary>
                Aggregates track information and a media frame.
            </summary>
            -------------------------------------------------------------------------------------------------
        </member>
        <member name="T:StreamCoders.Container.TimeAlignedReader">
            -------------------------------------------------------------------------------------------------
            <summary>
                Accomplishes time aligned reading of containers. Since containers have multiple tracks
                and applications read from that container by passing TrackInfo e.g.
                IReader.GetNextFrame(videoTrack) and since the order and amount per time inside the
                container is unknown it is necessary to align read-outs from containers to receive media
                frames that are not too distant from one another in terms of time.
            </summary>
            -------------------------------------------------------------------------------------------------
        </member>
        <member name="M:StreamCoders.Container.TimeAlignedReader.Clear">
            -------------------------------------------------------------------------------------------------
            <summary>
                Clears this TimeAlignedReader so it can be garbage collected.
            </summary>
            -------------------------------------------------------------------------------------------------
        </member>
        <member name="M:StreamCoders.Container.TimeAlignedReader.GetNextFrame">
            -------------------------------------------------------------------------------------------------
            <summary>
                Gets the next frame, from any of the tracks, with the lowest timestamp.
            </summary>
            <returns>
                The next frame.
            </returns>
            -------------------------------------------------------------------------------------------------
        </member>
        <member name="T:StreamCoders.MotionJpeg.HttpMJpegServer">
            <summary>
                Represent an Motion JPEG server, able to handle multiple requests. Pictures are enqueued to the server and fed
                to all connected contexts.
            </summary>
            <remarks>
                HttpMJpegServer works in terms of contexts. Each time a client connects a new context is created, identified by a
                unique Id. When a client connects initially,
                the OnAddContext event is raised to notify the application of a new guid. Immediately after that, OnInitialRequest
                is raised, to communicate context, request
                and response to the application. When a client disconnects, the OnRemoveContext event is raised.
            </remarks>
        </member>
        <member name="M:StreamCoders.MotionJpeg.HttpMJpegServer.#ctor(System.String[])">
            <summary>
                Constructs HTTP server with a number of prefixes.
            </summary>
            <param name="prefixes">
                An array of prefixes (e.g. http://10.0.0.100:8080/liveServer/).
            </param>
            <remarks>
                Prefixes must have a trailing slash.
            </remarks>
        </member>
        <member name="M:StreamCoders.MotionJpeg.HttpMJpegServer.#ctor(System.Net.HttpListener)">
            <summary>
                Construct server using a previous created HttpListener object.
            </summary>
            <param name="listener">HttpListener object for the server to use.</param>
        </member>
        <member name="P:StreamCoders.MotionJpeg.HttpMJpegServer.ConnectedClients">
            <summary>
                Number of currently connected clients.
            </summary>
        </member>
        <member name="P:StreamCoders.MotionJpeg.HttpMJpegServer.Boundary">
            <summary>
                Custom boundary string.
            </summary>
        </member>
        <member name="E:StreamCoders.MotionJpeg.HttpMJpegServer.OnInitialRequest">
            <summary>
                is raised in order to notify application of newly created context, request and response.
                The application has the option to cancel the request and deny access to the client.
                The application can also modify the response message.
            </summary>
        </member>
        <member name="E:StreamCoders.MotionJpeg.HttpMJpegServer.OnAddContext">
            <summary>
                Is raised to notify the application of the creation of a new context, identified by a unique Id.
            </summary>
        </member>
        <member name="E:StreamCoders.MotionJpeg.HttpMJpegServer.OnRemoveContext">
            <summary>
                Is raised to notify the application of the removal of a specific context, identified by a unique Id.
            </summary>
        </member>
        <member name="M:StreamCoders.MotionJpeg.HttpMJpegServer.Enqueue(System.IO.Stream)">
            <summary>
                Enqueues a new stream to the server. The stream have to be of a complete encoded JPEG picture.
            </summary>
            <param name="stream">inputStream to enqueue.</param>
        </member>
        <member name="M:StreamCoders.MotionJpeg.HttpMJpegServer.Start">
            -------------------------------------------------------------------------------------------------
            <summary>
                Starts the listener to allow incoming connections. The listener cannot be started again
                after calling Stop().
            </summary>
            <remarks>
                This function can throw an HttpListenerException when the bound port is already in use.
            </remarks>
            -------------------------------------------------------------------------------------------------
        </member>
        <member name="M:StreamCoders.MotionJpeg.HttpMJpegServer.Stop">
            -------------------------------------------------------------------------------------------------
            <summary>
                Stops the listener and disposes all connected contexts.
            </summary>
            -------------------------------------------------------------------------------------------------
        </member>
        <member name="M:StreamCoders.MotionJpeg.HttpMJpegServer.PrepareEnqueue(System.IO.Stream)">
            <summary>Transforms a stream containing a JPEG into a M-JPEG (streamable) buffer.</summary>
            <param name="stream">The stream to transform.</param>
            <returns>Returns the transformed stream, otherwise null.</returns>
        </member>
        <member name="M:StreamCoders.MotionJpeg.HttpMJpegServer.AddContext(System.String)">
            <summary>
                Adds a context to the server.
            </summary>
            <param name="guid">Unique Id of context.</param>
        </member>
        <member name="M:StreamCoders.MotionJpeg.HttpMJpegServer.RemoveContext(System.String)">
            <summary>
                Removes a context from the server. Note that this only removes the structure, but does not disconnect the actual
                client. To deny a client access, set CancelRequest to true in the OnInitialRequest event.
            </summary>
            <param name="guid">Unique id of context.</param>
        </member>
        <member name="M:StreamCoders.MotionJpeg.HttpMJpegServer.EnqueueToAllContexts(StreamCoders.MediaBuffer{System.Byte})">
            <summary>
                Enqueues an already serialized picture to all contexts.
            </summary>
            <param name="pic">Serialized picture.</param>
        </member>
        <member name="M:StreamCoders.MotionJpeg.HttpMJpegServer.DequeueFromContext(System.String)">
            <summary>
                Deques an item from a specific context.
            </summary>
            <param name="guid">Uniqued Id of Context</param>
            <returns>Returns the dequed item. If the queue is empty, the function returns null.</returns>
        </member>
        <member name="M:StreamCoders.MotionJpeg.HttpMJpegServer.ContextQueueCount(System.String)">
            <summary>
                Retrieves the number of queued pictures for a specific context.
            </summary>
            <param name="guid">Unique Id of context.</param>
            <returns>Returns the number of items queued.</returns>
        </member>
        <member name="T:StreamCoders.MotionJpeg.HttpJpegSource">
            <summary>
                Provides access to single JPEG file resource
            </summary>
            <remarks>After calling <c>Stop</c>, <c>Start</c> can be called again on the same stream.</remarks>
        </member>
        <member name="T:StreamCoders.MotionJpeg.HttpMJpegSource">
            <summary>Provides access to multipart Motion JPEG streams.</summary>
            <remarks>After calling <c>Stop</c>, <c>Start</c> can be called again on the same stream.</remarks>
        </member>
        <member name="T:StreamCoders.MotionJpeg.HttpMotionStreamBase">
            <summary>
                Abstract base class for JPEG and MJPEG streams
            </summary>
        </member>
        <member name="M:StreamCoders.MotionJpeg.HttpMotionStreamBase.#ctor(System.String,System.String,System.String)">
            <summary>
                Initializes a new instance of the <see cref="T:StreamCoders.MotionJpeg.HttpMotionStreamBase" /> class.
            </summary>
            <param name="url">URL of streaming endpoint.</param>
            <param name="username">Username for authentication</param>
            <param name="password">Password for authentication</param>
        </member>
        <member name="M:StreamCoders.MotionJpeg.HttpMotionStreamBase.#ctor(System.String,System.Net.NetworkCredential)">
            <summary>
                Initializes a new instance of the <see cref="T:StreamCoders.MotionJpeg.HttpMotionStreamBase" /> class.
            </summary>
            <param name="url">URL of streaming endpoint.</param>
            <param name="credentials">Network credentials for authentication.</param>
        </member>
        <member name="M:StreamCoders.MotionJpeg.HttpMotionStreamBase.#ctor(System.String)">
            <summary>
                Initializes a new instance of the <see cref="T:StreamCoders.MotionJpeg.HttpMotionStreamBase" /> class.
            </summary>
            <param name="url">URL of streaming endpoint.</param>
        </member>
        <member name="P:StreamCoders.MotionJpeg.HttpMotionStreamBase.Credentials">
            <summary>
                Network credentials used for authentication.
            </summary>
            <value>The network credentials.</value>
        </member>
        <member name="P:StreamCoders.MotionJpeg.HttpMotionStreamBase.Url">
            <summary>HTTP URL of MJPEG stream.</summary>
        </member>
        <member name="P:StreamCoders.MotionJpeg.HttpMotionStreamBase.PictureBufferSize">
            <summary>
                Gets or sets the buffer size of the receiver from which pictures are reconstructed.
            </summary>
            <value>The buffer size of the receiver.</value>
        </member>
        <member name="P:StreamCoders.MotionJpeg.HttpMotionStreamBase.BytesReceived">
            <summary>Returns the number of bytes received.</summary>
        </member>
        <member name="P:StreamCoders.MotionJpeg.HttpMotionStreamBase.FramesReceived">
            <summary>Returns the number of frames received.</summary>
        </member>
        <member name="E:StreamCoders.MotionJpeg.HttpMotionStreamBase.Stopped">
            <summary>
                Is raised whenever Stop() is called or the connection terminates unexpectedly.
            </summary>
            <remarks>
                Start/Stop must not be called from inside this event.
            </remarks>
        </member>
        <member name="E:StreamCoders.MotionJpeg.HttpMotionStreamBase.NewFrame">
            <summary>
                Is raised when a new frame has arrived.
            </summary>
            <remarks>
                Start/Stop must not be called from inside this event.
            </remarks>
        </member>
        <member name="M:StreamCoders.MotionJpeg.HttpMotionStreamBase.Start">
            <summary>
                Starts processing packets from MJPEG resource.
            </summary>
        </member>
        <member name="M:StreamCoders.MotionJpeg.HttpMotionStreamBase.Stop">
            <summary>
                Stops processing packets from MJPEG resource.
                On completion this function raises OnStop event.
            </summary>
        </member>
        <member name="M:StreamCoders.MotionJpeg.HttpMotionStreamBase.WorkerTaskProc">
            <summary>
                Worker task called by Start method.
            </summary>
            <returns>Task</returns>
        </member>
        <member name="M:StreamCoders.MotionJpeg.HttpMotionStreamBase.OnStopped(StreamCoders.MotionJpeg.MJpegSourceStoppedEventArgs)">
            <summary>
                Handles the <see cref="E:Stopped" /> event.
            </summary>
            <param name="e">The <see cref="T:StreamCoders.MotionJpeg.MJpegSourceStoppedEventArgs" /> instance containing the event data.</param>
        </member>
        <member name="M:StreamCoders.MotionJpeg.HttpMotionStreamBase.OnNewFrame(StreamCoders.MotionJpeg.MJpegSourceNewFrameEventArgs)">
            <summary>
                Handles the <see cref="E:NewFrame" /> event.
            </summary>
            <param name="e">The <see cref="T:StreamCoders.MotionJpeg.MJpegSourceNewFrameEventArgs" /> instance containing the event data.</param>
        </member>
        <member name="T:StreamCoders.Rtmp.RtmpException">
            <summary>
            Specific exception throw when an unrecoverable error occurs in RTMP protocol suite.
            </summary>
        </member>
        <member name="T:StreamCoders.Rtp.AacFrameCreator">
            -------------------------------------------------------------------------------------------------
            <summary>
                AAC RTP frame creator.
            </summary>
            -------------------------------------------------------------------------------------------------
        </member>
        <member name="M:StreamCoders.Rtp.AacFrameCreator.CreateFrame(StreamCoders.MediaBuffer{System.Byte})">
            -------------------------------------------------------------------------------------------------
            <summary>
                Creates an RTP frame from an AAC frame.
            </summary>
            <param name="inputData">
                Buffer containing AAC frame. The frame must be an access unit.
            </param>
            <returns>
                Returns a frame containing 1 or more packets.
            </returns>
            -------------------------------------------------------------------------------------------------
        </member>
        <member name="T:StreamCoders.Rtp.ChunkType">
            -------------------------------------------------------------------------------------------------
            <summary>
                Values that represent the different type of RTCP-SDES chunk types.
            </summary>
            -------------------------------------------------------------------------------------------------
        </member>
        <member name="T:StreamCoders.Rtp.ExtendedSequenceNumber">
            -------------------------------------------------------------------------------------------------
            <summary>
                Represents extended Sequence numbering to 32-bit for RTP packets. Sequence numbers
                usually wrap at 16-bit boundaries. In order to avoid that behavior,
                ExtendedSequenceNumber class is introduced.
            </summary>
            -------------------------------------------------------------------------------------------------
        </member>
        <member name="M:StreamCoders.Rtp.ExtendedSequenceNumber.#ctor">
            -------------------------------------------------------------------------------------------------
            <summary>
                Default constructor.
            </summary>
            -------------------------------------------------------------------------------------------------
        </member>
        <member name="P:StreamCoders.Rtp.ExtendedSequenceNumber.WrapArounds">
            -------------------------------------------------------------------------------------------------
            <summary>
                Gets or sets or Sets the WrapArounds property.
            </summary>
            <value>
                Returns the number of times a sequence number has wrapped around it's 16-bit boundaries.
            </value>
            -------------------------------------------------------------------------------------------------
        </member>
        <member name="P:StreamCoders.Rtp.ExtendedSequenceNumber.LastSequenceNumber">
            -------------------------------------------------------------------------------------------------
            <summary>
                Gets the LastSequenceNumber property.
            </summary>
            <value>
                Returns the last sequence number computed by <c>GetNextSequenceNumber</c>.
            </value>
            -------------------------------------------------------------------------------------------------
        </member>
        <member name="M:StreamCoders.Rtp.ExtendedSequenceNumber.SetParameters(System.UInt16,System.UInt16)">
            -------------------------------------------------------------------------------------------------
            <summary>
                Sets the parameters.
            </summary>
            <param name="maxDropout">   The maximum dropout. </param>
            <param name="maxMisorder">  The maximum misorder. </param>
            -------------------------------------------------------------------------------------------------
        </member>
        <member name="M:StreamCoders.Rtp.ExtendedSequenceNumber.GetNextSequenceNumber(System.UInt16)">
            -------------------------------------------------------------------------------------------------
            <summary>
                Gets the next sequence number.
            </summary>
            <param name="seq">  The sequence. </param>
            <returns>
                The next sequence number.
            </returns>
            -------------------------------------------------------------------------------------------------
        </member>
        <member name="M:StreamCoders.Rtp.ExtendedSequenceNumber.GetState">
            -------------------------------------------------------------------------------------------------
            <summary>
                Gets the current state of the extended sequence algorithm.
            </summary>
            <returns>
                Returns the current state.
            </returns>
            -------------------------------------------------------------------------------------------------
        </member>
        <member name="M:StreamCoders.Rtp.ExtendedSequenceNumber.SetState(StreamCoders.Rtp.SequenceState)">
            -------------------------------------------------------------------------------------------------
            <summary>
                Sets the current state. This method should be used after an error was indicated.
            </summary>
            <param name="val">  New state of the algorithm. </param>
            -------------------------------------------------------------------------------------------------
        </member>
        <member name="T:StreamCoders.Rtp.FrameCreator">
            -------------------------------------------------------------------------------------------------
            <summary>
                Abstract base class for all RTP frame packetizers.
            </summary>
            -------------------------------------------------------------------------------------------------
        </member>
        <member name="M:StreamCoders.Rtp.FrameCreator.#ctor(System.Int32,System.Int32,System.Double,System.Int32)">
            -------------------------------------------------------------------------------------------------
            <summary>
                Constructor.
            </summary>
            <param name="mtuSize">
                MTU size of the transport you will be using to send frame.
            </param>
            <param name="ssrc">
                the Ssrc the packets of the frame will contain.
            </param>
            <param name="clockResolution">
                the clock resolution of the H.264 packets. Usually: 90000.
            </param>
            <param name="payloadType">
                the payload type.
            </param>
            -------------------------------------------------------------------------------------------------
        </member>
        <member name="P:StreamCoders.Rtp.FrameCreator.SequenceNumber">
            -------------------------------------------------------------------------------------------------
            <summary>
                Is the next sequence number to be used for packetization.
            </summary>
            <value>
                The sequence number.
            </value>
            -------------------------------------------------------------------------------------------------
        </member>
        <member name="P:StreamCoders.Rtp.FrameCreator.Timestamp">
            -------------------------------------------------------------------------------------------------
            <summary>
                Is the initial timestamp to be used for packetization.
            </summary>
            <value>
                The initial timestamp offset used for packetization.
            </value>
            -------------------------------------------------------------------------------------------------
        </member>
        <member name="M:StreamCoders.Rtp.FrameCreator.CreateFrame(StreamCoders.MediaBuffer{System.Byte})">
            -------------------------------------------------------------------------------------------------
            <summary>
                Implements the creation of an RTP frame with respect to MTU size.
                Timing information for each frame must be provided by the input buffer.
            </summary>
            <param name="inputData">
                Input buffer containing the payload to be packetized.
            </param>
            <returns>
                A new frame split into 1 or more RTP packets.
            </returns>
            -------------------------------------------------------------------------------------------------
        </member>
        <member name="T:StreamCoders.Rtp.H264Frame">
            -------------------------------------------------------------------------------------------------
            <summary>
                This frame type encapsulates RFC 3984 - RTP Payload Type for H.264 Packetization mode: 0
                (NAL Units), 1 (NAL Units, STAP-A, FU-A)
            </summary>
            <seealso cref="T:StreamCoders.Rtp.RtpFrame" />
            -------------------------------------------------------------------------------------------------
        </member>
        <member name="M:StreamCoders.Rtp.H264Frame.#ctor">
            -------------------------------------------------------------------------------------------------
            <summary>
                Default constructor.
            </summary>
            -------------------------------------------------------------------------------------------------
        </member>
        <member name="M:StreamCoders.Rtp.H264Frame.AddPacket(StreamCoders.Rtp.RtpPacket)">
            -------------------------------------------------------------------------------------------------
            <summary>
                Adds a packet to the frame.
            </summary>
            <param name="p">    The RtpPacket to process. </param>
            -------------------------------------------------------------------------------------------------
        </member>
        <member name="M:StreamCoders.Rtp.H264Frame.GetAssembledFrame">
            -------------------------------------------------------------------------------------------------
            <summary>
                Depacketizes one NAL unit per run.
            </summary>
            <returns>
                The assembled frame.
            </returns>
            -------------------------------------------------------------------------------------------------
        </member>
        <member name="T:StreamCoders.Rtp.H264FrameCreator">
            -------------------------------------------------------------------------------------------------
            <summary>
                Takes a raw compressed H.264 frame and creates a RFC 3984 compliant transport frame.<br />
                Supports: Mode 1 (NAL, FU-A, STAP-A)
            </summary>
            <remarks>
                In order to create packetization mode 0 frames (NALU only mode), the application must
                ensure that it feeds frames no bigger than the passed MTU size of the constructor of this
                class.
            </remarks>
            -------------------------------------------------------------------------------------------------
        </member>
        <member name="F:StreamCoders.Rtp.H264FrameCreator.LengthSizeMinusOne">
            -------------------------------------------------------------------------------------------------
            <summary>
                The length indication for NALU. This will hardly ever be different to 3. It is specified
                in the SPS of the corresponding H.264 stream.
            </summary>
            -------------------------------------------------------------------------------------------------
        </member>
        <member name="M:StreamCoders.Rtp.H264FrameCreator.#ctor(System.Int32,System.Int32,System.Double,System.Int32)">
            -------------------------------------------------------------------------------------------------
            <summary>
                Constructor.
            </summary>
            <param name="mtuSize">
                MTU size of the transport you will be using to send frame over.
            </param>
            <param name="ssrc">             the Ssrc the packets of the frame will contain. </param>
            <param name="clockResolution">
                the clock resolution of the H.264 packets. Usually: 90000.
            </param>
            <param name="payloadType">      the payload type. </param>
            -------------------------------------------------------------------------------------------------
        </member>
        <member name="M:StreamCoders.Rtp.H264FrameCreator.CreateFrame(StreamCoders.MediaBuffer{System.Byte})">
            <summary>Creates an RTP frame according to Packetization Mode 1 specification coming from an encoder.</summary>
            <param name="inputData">Encoded H.264 NAL unit that must be prefixed with H.264 startcodes.</param>
            <returns>
                Returns a frame containing packets with regard to MTU size and packetization mode 1 (NAL,
                FU-A, STAP-A) specified in RFC 3984, otherwise null.
            </returns>
        </member>
        <member name="M:StreamCoders.Rtp.H264FrameCreator.CreatePacketizationMode1FramesPrivate(System.Collections.Generic.List{StreamCoders.MediaBuffer{System.Byte}},System.Boolean,System.Boolean,System.Boolean)">
            -------------------------------------------------------------------------------------------------
            <summary>
                Creates Frames according to Packetization Mode 1 specification coming from an encoder
                Note: Currently no STAP-A packets are created.
            </summary>
            <param name="dataList"></param>
            <param name="containsStartCodes">
                Set to false if the frame start with NALU type. This can be useful in scenarios when
                converting between different storage types.
            </param>
            <param name="stapaCreation"></param>
            <param name="generateNaluLength"></param>
            <returns>
                Returns a frame containing packets with regard to MTU size and packetization mode 1 (NAL,
                FU-A, STAP-A) specified in RFC 3984, otherwise null.
            </returns>
            -------------------------------------------------------------------------------------------------
        </member>
        <member name="M:StreamCoders.Rtp.H264FrameCreator.CreateFrameFromAccessUnit(StreamCoders.MediaBuffer{System.Byte})">
            -------------------------------------------------------------------------------------------------
            <summary>
                Creates RFC 3984 packetization from one or more ISO 14496-15 access unit(s).
            </summary>
            <param name="inputData">    One or more access units. </param>
            <returns>
                Returns a newly created frame.
            </returns>
            -------------------------------------------------------------------------------------------------
        </member>
        <member name="T:StreamCoders.Rtp.H265RtpNaluType">
            <summary>
                Current specified H.265 NALU types
            </summary>
        </member>
        <member name="T:StreamCoders.Rtp.H265Frame">
            -------------------------------------------------------------------------------------------------
            <summary>
                This frame type encapsulates H.265 payloads according to RFC 7798.
                Supported units are: Single (SU), Aggregate (AP), Fragmentation (FU)
            </summary>
            <seealso cref="T:StreamCoders.Rtp.RtpFrame" />
            -------------------------------------------------------------------------------------------------
        </member>
        <member name="M:StreamCoders.Rtp.H265Frame.#ctor">
            -------------------------------------------------------------------------------------------------
            <summary>
                Default constructor.
            </summary>
            -------------------------------------------------------------------------------------------------
        </member>
        <member name="M:StreamCoders.Rtp.H265Frame.AddPacket(StreamCoders.Rtp.RtpPacket)">
            -------------------------------------------------------------------------------------------------
            <summary>
                Adds a packet to the frame.
            </summary>
            <param name="p">    The RtpPacket to process. </param>
            -------------------------------------------------------------------------------------------------
        </member>
        <member name="M:StreamCoders.Rtp.H265Frame.GetAssembledFrame">
            -------------------------------------------------------------------------------------------------
            <summary>
                Depacketizes one NAL unit per run.
            </summary>
            <returns>
                The assembled frame.
            </returns>
            -------------------------------------------------------------------------------------------------
        </member>
        <member name="T:StreamCoders.Rtp.Jitter.InterArrivalJitter">
            -------------------------------------------------------------------------------------------------
            <summary>
                Measures weighted interarrival differences of packets (jitter).
            </summary>
            -------------------------------------------------------------------------------------------------
        </member>
        <member name="P:StreamCoders.Rtp.Jitter.InterArrivalJitter.CurrentJitter">
            -------------------------------------------------------------------------------------------------
            <summary>
                Gets the current jitter.
            </summary>
            <value>
                The current jitter.
            </value>
            -------------------------------------------------------------------------------------------------
        </member>
        <member name="M:StreamCoders.Rtp.Jitter.InterArrivalJitter.Calculate(StreamCoders.Rtp.RtpPacket)">
            -------------------------------------------------------------------------------------------------
            <summary>
                Calculates the current jitter with respect to the current RTP packet based on the method presented in RFC 3550.
            </summary>
            <param name="packet">   The packet. </param>
            <returns>
                Returns weighted jitter in timestamp units.
            </returns>
            -------------------------------------------------------------------------------------------------
        </member>
        <member name="T:StreamCoders.Rtp.IRtpParticipant">
            -------------------------------------------------------------------------------------------------
            <summary>
                Interface for RTP participants.
            </summary>
            -------------------------------------------------------------------------------------------------
        </member>
        <member name="P:StreamCoders.Rtp.IRtpParticipant.Ssrc">
            -------------------------------------------------------------------------------------------------
            <summary>
                Gets or sets the Ssrc.
            </summary>
            <value>
                The ssrc.
            </value>
            -------------------------------------------------------------------------------------------------
        </member>
        <member name="P:StreamCoders.Rtp.IRtpParticipant.LocalInfo">
            -------------------------------------------------------------------------------------------------
            <summary>
                Gets or sets the information of the local participant endpoint and configuration.
            </summary>
            <value>
                Information describing the local.
            </value>
            -------------------------------------------------------------------------------------------------
        </member>
        <member name="P:StreamCoders.Rtp.IRtpParticipant.RemoteInfo">
            -------------------------------------------------------------------------------------------------
            <summary>
                Gets or sets the information of the remote participant endpoint and configuration.
            </summary>
            <value>
                Information describing the remote.
            </value>
            -------------------------------------------------------------------------------------------------
        </member>
        <member name="M:StreamCoders.Rtp.IRtpParticipant.Start">
            -------------------------------------------------------------------------------------------------
            <summary>
                Starts the receive chain.
            </summary>
            <returns>
                true if it succeeds, false if it fails.
            </returns>
            -------------------------------------------------------------------------------------------------
        </member>
        <member name="M:StreamCoders.Rtp.IRtpParticipant.Stop">
            -------------------------------------------------------------------------------------------------
            <summary>
                Stops the receive chain.
            </summary>
            -------------------------------------------------------------------------------------------------
        </member>
        <member name="M:StreamCoders.Rtp.IRtpParticipant.Send(StreamCoders.Rtp.RtpPacket)">
            -------------------------------------------------------------------------------------------------
            <summary>
                Send RTP packet.
            </summary>
            <param name="packet">   The packet. </param>
            <returns>
                true if it succeeds, false if it fails.
            </returns>
            -------------------------------------------------------------------------------------------------
        </member>
        <member name="M:StreamCoders.Rtp.IRtpParticipant.Send(StreamCoders.Rtp.RtpFrame)">
            -------------------------------------------------------------------------------------------------
            <summary>
                Send RTP frame.
            </summary>
            <param name="frame">    The frame. </param>
            -------------------------------------------------------------------------------------------------
        </member>
        <member name="M:StreamCoders.Rtp.IRtpParticipant.Send(StreamCoders.Rtp.RtcpCompoundPacket)">
            -------------------------------------------------------------------------------------------------
            <summary>
                Send RTCP compound packet.
            </summary>
            <param name="packet">   The packet. </param>
            <returns>
                true if it succeeds, false if it fails.
            </returns>
            -------------------------------------------------------------------------------------------------
        </member>
        <member name="M:StreamCoders.Rtp.IRtpParticipant.ForceSenderReportAfterNextUpdate">
            -------------------------------------------------------------------------------------------------
            <summary>
                Force sender report after next update.
            </summary>
            -------------------------------------------------------------------------------------------------
        </member>
        <member name="T:StreamCoders.Rtp.JitterBuffer`1">
            <summary>
                <para>Handles the creation and release of complete RTP frames.<br /></para>
            </summary>
            <typeparam name="T">    The type of RtpFrame to create. </typeparam>
            <remarks>
                The current critera for a complete frame is:
                <list type="bullet">
                    <item>RTPFrame.FrameComplete (no sequence gaps and Marker bit set)</item>
                    <item>RTPFrame.IsExpired == true</item>
                </list>
                <para>
                    To handle alternative critera on when a frame is complete, this class needs to be derived and method
                    FindCompleteFrame will need to be overridden.
                </para>
            </remarks>
            <example>
                <code title="Example"
                    description="Demonstrates creation of JitterBuffer for H.264 frames and creation of RTP participant to receive and fill the jitter."
                    lang="CS">
            class Program
              {
                  static JitterBuffer&lt;H264Frame&gt; jitter = new JitterBuffer&lt;H264Frame&gt;();
             
                  static void Main(string[] args)
                  {
                      
                      // Create participant and hook up RTP received event.
                      var participant = ParticipantHelper.CreateUdpParticipant(IPAddress.Parse("127.0.0.1"), 12000, null, 0);
                      participant.OnRtpReceive += participant_OnRtpReceive;
             
                      
                      while(true)
                      {
                          var frame = jitter.FindCompleteFrame();
                          if (frame == null) continue;
             
                          Console.WriteLine("Complete frame received {0}", frame.Timestamp);
                      }
                  }
             
                  static void participant_OnRtpReceive(object sender, RtpPacket Packet, ArraySegment&lt;byte&gt; RawPacket, EndPoint remoteEndpoint)
                  {
                      jitter.AddPacket(Packet);
                  }
              }</code>
            </example>
        </member>
        <member name="F:StreamCoders.Rtp.JitterBuffer`1.AdaptiveExpiry">
            -------------------------------------------------------------------------------------------------
            <summary>
                Adaptive expiry automatically adjusts the Expiry time by measuring the weighed average
                time of frame completion. Avg += 1/16 * (previous - current);
                The initial FrameExpiry in this scenario is still important as the algorithm needs a
                starting point.
            </summary>
            -------------------------------------------------------------------------------------------------
        </member>
        <member name="F:StreamCoders.Rtp.JitterBuffer`1.AdaptiveMaximumThreshold">
            -------------------------------------------------------------------------------------------------
            <summary>
                In an adaptive expiry scenario, the maximum change is FrameExpiry *
                AdaptiveMaximumThreshold.
            </summary>
            -------------------------------------------------------------------------------------------------
        </member>
        <member name="F:StreamCoders.Rtp.JitterBuffer`1.AdaptiveOvershootFactor">
            -------------------------------------------------------------------------------------------------
            <summary>
                The adaptive overshoot factor.
            </summary>
            -------------------------------------------------------------------------------------------------
        </member>
        <member name="F:StreamCoders.Rtp.JitterBuffer`1.CheckFrameComplete">
            -------------------------------------------------------------------------------------------------
            <summary>
                Some framing types don't set a marker bit. If set to false, the jitter will not check if
                the frame is complete and will release it upon <b>FrameExpiry</b>.
            </summary>
            -------------------------------------------------------------------------------------------------
        </member>
        <member name="F:StreamCoders.Rtp.JitterBuffer`1.CheckGaps">
            -------------------------------------------------------------------------------------------------
            <summary>
                Check whether frame gaps exist as criteria for a complete frame.
            </summary>
            -------------------------------------------------------------------------------------------------
        </member>
        <member name="F:StreamCoders.Rtp.JitterBuffer`1.Dropped">
            -------------------------------------------------------------------------------------------------
            <summary>
                The dropped.
            </summary>
            -------------------------------------------------------------------------------------------------
        </member>
        <member name="F:StreamCoders.Rtp.JitterBuffer`1.FrameExpiry">
            -------------------------------------------------------------------------------------------------
            <summary>
                Time to wait before a frame is released from the jitter.
            </summary>
            ###
            <remarks>
                This value can be used together with InterarrivalJitter class. Also with streams that
                only contain one packet per frame, it may be advisable to set this value to 0.
            </remarks>
            -------------------------------------------------------------------------------------------------
        </member>
        <member name="F:StreamCoders.Rtp.JitterBuffer`1.Jitter">
            -------------------------------------------------------------------------------------------------
            <summary>
                The jitter.
            </summary>
            -------------------------------------------------------------------------------------------------
        </member>
        <member name="F:StreamCoders.Rtp.JitterBuffer`1.MinimumFrameAge">
            -------------------------------------------------------------------------------------------------
            <summary>
                The minimum age a frame must have before it is released by the jitter.
            </summary>
            -------------------------------------------------------------------------------------------------
        </member>
        <member name="F:StreamCoders.Rtp.JitterBuffer`1.Name">
            -------------------------------------------------------------------------------------------------
            <summary>
                The name.
            </summary>
            -------------------------------------------------------------------------------------------------
        </member>
        <member name="F:StreamCoders.Rtp.JitterBuffer`1.SkipLateOrIncompleteFrames">
            -------------------------------------------------------------------------------------------------
            <summary>
                If set to true, the jitter will not release partially completed frames (due to packet
                loss etc.). A frame is considered late when the frame age is 1.5 times that of
                <b>FrameExpiry</b>.
            </summary>
            -------------------------------------------------------------------------------------------------
        </member>
        <member name="P:StreamCoders.Rtp.JitterBuffer`1.Count">
            -------------------------------------------------------------------------------------------------
            <summary>
                Gets the number of frames currently maintained in jitter buffer.
            </summary>
            <value>
                The count.
            </value>
            -------------------------------------------------------------------------------------------------
        </member>
        <member name="M:StreamCoders.Rtp.JitterBuffer`1.SetPlayoutBuffer(StreamCoders.Rtp.PlayoutBuffer)">
            -------------------------------------------------------------------------------------------------
            <summary>
                Set this to maintain playoutBufferToUse times from within the jitter buffer. RTCP updates will still
                have to be managed from the outside by sharing the object.
            </summary>
            <param name="playoutBufferToUse">  PlayoutBuffer object to maintain. </param>
            -------------------------------------------------------------------------------------------------
        </member>
        <member name="M:StreamCoders.Rtp.JitterBuffer`1.AddPacket(StreamCoders.Rtp.RtpPacket)">
            -------------------------------------------------------------------------------------------------
            <summary>
                Adds a packet to the jitter. This method will automatically create a frame if one does
                not already exist and call playoutBufferToUse.UpdateRelativeTimestamp once on the frame object.
            </summary>
            <param name="p">    Packet to add. </param>
            <returns>
                .
            </returns>
            -------------------------------------------------------------------------------------------------
        </member>
        <member name="M:StreamCoders.Rtp.JitterBuffer`1.AddPacket``1(StreamCoders.Rtp.RtpPacket)">
            -------------------------------------------------------------------------------------------------
            <summary>
                Adds a packet to the jitter. This method will automatically create a frame if one does
                not already exist and call playoutBufferToUse.UpdateRelativeTimestamp once on the frame object.
            </summary>
            <typeparam name="T1">   Generic type parameter. </typeparam>
            <param name="p">    Packet to add. </param>
            <returns>
                .
            </returns>
            -------------------------------------------------------------------------------------------------
        </member>
        <member name="M:StreamCoders.Rtp.JitterBuffer`1.ContainsFrame(System.Int32)">
            -------------------------------------------------------------------------------------------------
            <summary>
                Checks whether a frame is already contained within the jitter.
            </summary>
            <param name="timestamp">    Timestamp of frame to check for. </param>
            <returns>
                Returns true if a frame is already contained, otherwise false.
            </returns>
            -------------------------------------------------------------------------------------------------
        </member>
        <member name="M:StreamCoders.Rtp.JitterBuffer`1.Clear">
            -------------------------------------------------------------------------------------------------
            <summary>
                Removes all frames from jitter buffer.
            </summary>
            -------------------------------------------------------------------------------------------------
        </member>
        <member name="M:StreamCoders.Rtp.JitterBuffer`1.FindCompleteFrame">
            -------------------------------------------------------------------------------------------------
            <summary>
                Finds the first available frame to be release from the jitter.
            </summary>
            <remarks>
                For this method to return a frame, <c>RTPPFrame.FrameComplete</c> and
                <c>RTPPFrame.IsExpired</c> must evaluate to true.
            </remarks>
            <returns>
                The found complete frame.
            </returns>
            -------------------------------------------------------------------------------------------------
        </member>
        <member name="P:StreamCoders.Rtp.RtpJpegMainHeader.TypeSpecific">
            -------------------------------------------------------------------------------------------------
            <summary>
                Gets or sets the type specific. Interpretation depends on the value of the type field.  If no
                interpretation is specified, this field MUST be zeroed on
                transmission and ignored on reception.
            </summary>
            <value>
                The type specific.
            </value>
            -------------------------------------------------------------------------------------------------
        </member>
        <member name="P:StreamCoders.Rtp.RtpJpegMainHeader.FragmentOffset">
            -------------------------------------------------------------------------------------------------
            <summary>
                Gets or sets the fragment offset.  The Fragment Offset is the offset in bytes of the current packet in
                the JPEG frame data. This value is encoded in network byte order
                (most significant byte first). The Fragment Offset plus the length of
                the payload data in the packet MUST NOT exceed 2^24 bytes.
            </summary>
            <value>
                The fragment offset.
            </value>
            -------------------------------------------------------------------------------------------------
        </member>
        <member name="P:StreamCoders.Rtp.RtpJpegMainHeader.Type">
            -------------------------------------------------------------------------------------------------
            <summary>
                The type field specifies the information that would otherwise be
                present in a JPEG abbreviated table-specification as well as the
                additional JFIF-style parameters not defined by JPEG.  Types 0-63 are
                reserved as fixed, well-known mappings to be defined by this document
                and future revisions of this document.  Types 64-127 are the same as
                types 0-63, except that restart markers are present in the JPEG data
                and a Restart Marker header appears immediately following the main
                JPEG header.  Types 128-255 are free to be dynamically defined by a
                session setup protocol
            </summary>
            <value>
                The type.
            </value>
            -------------------------------------------------------------------------------------------------
        </member>
        <member name="P:StreamCoders.Rtp.RtpJpegMainHeader.Q">
            -------------------------------------------------------------------------------------------------
            <summary>
                Gets or sets the q.The Q field defines the quantization tables for this frame.  Q values
                0-127 indicate the quantization tables are computed using an
                algorithm determined by the Type field (see below).  Q values 128-255
                indicate that a Quantization Table header appears after the main JPEG
                header (and the Restart Marker header, if present) in the first
                packet of the frame (fragment offset 0).  This header can be used to
                explicitly specify the quantization tables in-band.
            </summary>
            <value>
                The q.
            </value>
            -------------------------------------------------------------------------------------------------
        </member>
        <member name="P:StreamCoders.Rtp.RtpJpegMainHeader.Width">
            -------------------------------------------------------------------------------------------------
            <summary>
                Indicates the width of the picture.
            </summary>
            <value>
                The width.
            </value>
            -------------------------------------------------------------------------------------------------
        </member>
        <member name="P:StreamCoders.Rtp.RtpJpegMainHeader.Height">
            -------------------------------------------------------------------------------------------------
            <summary>
                Indicates the height of the picture.
            </summary>
            <value>
                The height.
            </value>
            -------------------------------------------------------------------------------------------------
        </member>
        <member name="T:StreamCoders.Rtp.RtpJpegQuantizationTableHeader">
            -------------------------------------------------------------------------------------------------
            <summary>
                Rtp JPEG quantization table header. Implements RFC 2435 3.1.8
            </summary>
            -------------------------------------------------------------------------------------------------
        </member>
        <member name="P:StreamCoders.Rtp.RtpJpegQuantizationTableHeader.Length">
            -------------------------------------------------------------------------------------------------
            <summary>
                Gets or sets the length. The Length field is set to the length in bytes of the
                quantization table data to follow.  The Length field MAY be set to zero to indicate that
                no quantization table data is included in this frame. If the Length field in a received
                packet is larger than the remaining number of bytes, the packet MUST be discarded.
            </summary>
            <value>
                The length.
            </value>
            -------------------------------------------------------------------------------------------------
        </member>
        <member name="P:StreamCoders.Rtp.RtpJpegQuantizationTableHeader.IsValid">
            -------------------------------------------------------------------------------------------------
            <summary>
                Gets or sets a value indicating whether this RtpJpegQuantizationTableHeader is valid.
                This value should be checked after the quantization table structure is parsed. If it is
                invalid, the standard instructs to discard the entire packet from the frame.
            </summary>
            <value>
                true if this RtpJpegQuantizationTableHeader is valid, false if not.
            </value>
            -------------------------------------------------------------------------------------------------
        </member>
        <member name="M:StreamCoders.Rtp.RtpJpegQuantizationTableHeader.MakeTables(System.Int32,System.Byte[],System.Byte[])">
            -------------------------------------------------------------------------------------------------
            <summary>
                Creates a quanitized table given quantization factor from main header.
            </summary>
            <param name="q">
                The int to process.
            </param>
            <param name="lqt">
                The lqt.
            </param>
            <param name="cqt">
                The cqt.
            </param>
            -------------------------------------------------------------------------------------------------
        </member>
        <member name="T:StreamCoders.Rtp.RtpJpegRestartMarkerHeader">
            <summary>
                This header MUST be present immediately after the main JPEG header
                when using types 64-127.  It provides the additional information
                required to properly decode a data stream containing restart markers.
            </summary>
        </member>
        <member name="P:StreamCoders.Rtp.RtpJpegRestartMarkerHeader.RestartInterval">
            <summary>
                The Restart Interval field specifies the number of MCUs that appear
                between restart markers
            </summary>
        </member>
        <member name="P:StreamCoders.Rtp.RtpJpegRestartMarkerHeader.F">
            <summary>
                Restart Interval First
            </summary>
        </member>
        <member name="P:StreamCoders.Rtp.RtpJpegRestartMarkerHeader.L">
            <summary>
                Restart Interval Last
            </summary>
        </member>
        <member name="P:StreamCoders.Rtp.RtpJpegRestartMarkerHeader.RestartCount">
            <summary>
                This indicates
                that a receiver MUST reassemble the entire frame before decoding it.
            </summary>
        </member>
        <member name="M:StreamCoders.Rtp.RtpJpegRestartMarkerHeader.Parse(StreamCoders.OffsetBuffer{System.Byte})">
            <summary>
                Parses payload into this instance
            </summary>
            <param name="buffer">Input buffer containing payload</param>
        </member>
        <member name="T:StreamCoders.Rtp.Mpeg42FrameCreator">
            -------------------------------------------------------------------------------------------------
            <summary>
                Creates RTP packetization based on RFC 3016 "Payload Format for MPEG-4 Audio/Visual Streams"
            </summary>
            -------------------------------------------------------------------------------------------------
        </member>
        <member name="M:StreamCoders.Rtp.Mpeg42FrameCreator.CreateFrame(StreamCoders.MediaBuffer{System.Byte})">
            -------------------------------------------------------------------------------------------------
            <summary>
                Creates an RTP frame from an MPEG-4.2 byte stream.
            </summary>
            <param name="inputData">
                Buffer containing MPEG-4.2 frame. The frame must be prefixed with MPEG-4.2 start codes.
            </param>
            <returns>
                Returns a frame containing 1 or more packets.
            </returns>
            -------------------------------------------------------------------------------------------------
        </member>
        <member name="M:StreamCoders.Rtp.NalSplitter.Reset">
            -------------------------------------------------------------------------------------------------
            <summary>
                Resets this NalSplitter.
            </summary>
            -------------------------------------------------------------------------------------------------
        </member>
        <member name="M:StreamCoders.Rtp.NalSplitter.GetNals(StreamCoders.MediaBuffer{System.Byte})">
            -------------------------------------------------------------------------------------------------
            <summary>
                Extracts all individual NALs from a buffer.
            </summary>
            <param name="buffer">
                A buffer containing 1 or more NAL units. The NAL units need to be escaped by H.264 start
                codes.
            </param>
            <returns>
                Returns a list of NALs.
            </returns>
            -------------------------------------------------------------------------------------------------
        </member>
        <member name="T:StreamCoders.Rtp.NtpSyncTime">
            -------------------------------------------------------------------------------------------------
            <summary>
                A helper class encapsulating different aspects of NTP clock handling.
            </summary>
            -------------------------------------------------------------------------------------------------
        </member>
        <member name="P:StreamCoders.Rtp.NtpSyncTime.Msw">
            -------------------------------------------------------------------------------------------------
            <summary>
                Gets the MSW.
            </summary>
            <value>
                The msw.
            </value>
            -------------------------------------------------------------------------------------------------
        </member>
        <member name="P:StreamCoders.Rtp.NtpSyncTime.Lsw">
            -------------------------------------------------------------------------------------------------
            <summary>
                Gets the LSW.
            </summary>
            <value>
                The lsw.
            </value>
            -------------------------------------------------------------------------------------------------
        </member>
        <member name="M:StreamCoders.Rtp.NtpSyncTime.#ctor(System.UInt32,System.UInt32)">
            -------------------------------------------------------------------------------------------------
            <summary>
                Initializes NtpSyncTime with values MSW, LSW.
            </summary>
            <param name="high"> Upper 32 bit of network timestamp. </param>
            <param name="low">  Lower 32 bit of network timestamp. </param>
            -------------------------------------------------------------------------------------------------
        </member>
        <member name="M:StreamCoders.Rtp.NtpSyncTime.#ctor(System.DateTime)">
            -------------------------------------------------------------------------------------------------
            <summary>
                Initializes NtpSync with a DateTime structure.
            </summary>
            <param name="dt">   DateTime to use for calculating values. </param>
            -------------------------------------------------------------------------------------------------
        </member>
        <member name="P:StreamCoders.Rtp.NtpSyncTime.AsMiddle32">
            -------------------------------------------------------------------------------------------------
            <summary>
                Retrieves the middle 32-bit of NTP timestamp (RFC 2550/Section 4)
            </summary>
            <value>
                as middle 32.
            </value>
            -------------------------------------------------------------------------------------------------
        </member>
        <member name="P:StreamCoders.Rtp.NtpSyncTime.AsSeconds">
            -------------------------------------------------------------------------------------------------
            <summary>
                Retrieves the total number of seconds elapsed.
            </summary>
            <value>
                as seconds.
            </value>
            -------------------------------------------------------------------------------------------------
        </member>
        <member name="P:StreamCoders.Rtp.NtpSyncTime.AsDateTime">
            -------------------------------------------------------------------------------------------------
            <summary>
                Retrieves the DateTime representation.
            </summary>
            <value>
                The time of as date.
            </value>
            -------------------------------------------------------------------------------------------------
        </member>
        <member name="M:StreamCoders.Rtp.NtpSyncTime.Update(System.UInt32,System.UInt32)">
            -------------------------------------------------------------------------------------------------
            <summary>
                Updates NtpSyncTime with new values.
            </summary>
            <param name="high"> New upper 32 bit of network timestamp. </param>
            <param name="low">  New lower 32 bit of network timestamp. </param>
            -------------------------------------------------------------------------------------------------
        </member>
        <member name="M:StreamCoders.Rtp.NtpSyncTime.Update(System.DateTime)">
            -------------------------------------------------------------------------------------------------
            <summary>
                Updates NtpSyncTime with new values.
            </summary>
            <param name="dt">   New DateTime to use for calculating values. </param>
            -------------------------------------------------------------------------------------------------
        </member>
        <member name="M:StreamCoders.Rtp.NtpSyncTime.ToString">
            -------------------------------------------------------------------------------------------------
            <summary>
                Convert this object into a string representation.
            </summary>
            <returns>
                This object as a string.
            </returns>
            -------------------------------------------------------------------------------------------------
        </member>
        <member name="T:StreamCoders.Rtp.ParticipantHelper">
            -------------------------------------------------------------------------------------------------
            <summary>
                Provides helper functions to more easily create RTP participants.
            </summary>
            -------------------------------------------------------------------------------------------------
        </member>
        <member name="M:StreamCoders.Rtp.ParticipantHelper.CreateUdpParticipant(System.Net.IPAddress,System.Int32,System.Net.IPAddress,System.Int32,System.Boolean)">
            -------------------------------------------------------------------------------------------------
            <summary>
                Creates an RTPParticipant using UdpNetworkClient. Rtcp ports default to RtpPort + 1. RTP ports
                should be even numbered.
            </summary>
            <param name="localIp">
                Local IP address to send/receive. Leaving null will keep the socket unbound.
            </param>
            <param name="localRtpPort">
                Local RTP port.
            </param>
            <param name="remoteIp">
                <para>Remote IP address to send to. Leave null to receive from any remote endpoint.</para>
                <para>
                    If the participant is to receive from multiple remote endpoints the IPaddress
                    should be set to <strong>IPAddress.Any.</strong>
                </para>
            </param>
            <param name="remotePort">
                Remote port.
            </param>
            <param name="createRtcpEndpoint">
                (optional) the create RTCP endpoint. The port will be localRtpPort + 1;
            </param>
            <returns>
                Returns a valid IRTPParticipant, otherwise null.
            </returns>
            -------------------------------------------------------------------------------------------------
        </member>
        <member name="M:StreamCoders.Rtp.ParticipantHelper.CreateParticipant``1(System.Net.IPAddress,System.Int32,System.Net.IPAddress,System.Int32,System.Boolean)">
            -------------------------------------------------------------------------------------------------
            <summary>
                Creates an RTPParticipant using generic T where T is INetworkClient. Rtcp ports default to RtpPort + 1. RTP ports
                should be even numbered.
            </summary>
            <typeparam name="T">
                Generic type parameter that must be derived from INetworkClient.
            </typeparam>
            <param name="localIp">
                Local IP address to send/receive. Leaving null will keep the socket unbound.
            </param>
            <param name="localRtpPort">
                Local RTP port.
            </param>
            <param name="remoteIp">
                <para>Remote IP address to send to. Leave null to receive from any remote endpoint.</para>
                <para>
                    If the participant is to receive from multiple remote endpoints the IPaddress
                    should be set to <strong>IPAddress.Any.</strong>
                </para>
            </param>
            <param name="remotePort">
                Remote port.
            </param>
            <param name="createRtcpEndpoint">
                (optional) the create RTCP endpoint. The port will be localRtpPort + 1;
            </param>
            <returns>
                Returns a valid IRTPParticipant, otherwise null.
            </returns>
            -------------------------------------------------------------------------------------------------
        </member>
        <!-- Badly formed XML comment ignored for member "M:StreamCoders.Rtp.ParticipantHelper.CreateParticipantEx``2(System.Net.IPAddress,System.Int32,System.Net.IPAddress,System.Int32,System.Boolean)" -->
        <member name="M:StreamCoders.Rtp.ParticipantHelper.CreateParticipant``1(System.Net.IPEndPoint,System.Net.IPEndPoint,System.Boolean)">
            -------------------------------------------------------------------------------------------------
            <summary>
                Creates an RTPParticipant using generic T where T is INetworkClient. Rtcp ports default
                to RtpPort + 1. RTP ports should be even numbered.
            </summary>
            <typeparam name="T">
                Generic type parameter.
            </typeparam>
            <param name="localEndpoint">
                The local endpoint.
            </param>
            <param name="remoteEndpoint">
                The remote endpoint.
            </param>
            <param name="createRtcpEndpoint">
                (optional) the create RTCP endpoint. The port will be localRtpPort + 1;
            </param>
            <returns>
                Returns a valid IRTPParticipant, otherwise null.
            </returns>
            -------------------------------------------------------------------------------------------------
        </member>
        <member name="M:StreamCoders.Rtp.ParticipantHelper.CreateUdpParticipant(System.String,System.Int32,System.String,System.Int32,System.Boolean)">
            -------------------------------------------------------------------------------------------------
            <summary>
                Creates an RTPParticipant using UdpNetworkClient. Rtcp ports default to RtpPort + 1. RTP ports
                should be even numbered.
            </summary>
            <param name="localIp">
                Local IP address to send/receive. Leaving null will keep the socket unbound.
            </param>
            <param name="localRtpPort">
                Local RTP port.
            </param>
            <param name="remoteIp">
                Remote IP address to send to. Leave null to receive from any remote endpoint.
            </param>
            <param name="remotePort">
                Remote port.
            </param>
            <param name="createRtcpEndpoint">
                (optional) the create RTCP endpoint. The port will be localRtpPort + 1;
            </param>
            <returns>
                Returns a valid IRTPParticipant, otherwise null.
            </returns>
            -------------------------------------------------------------------------------------------------
        </member>
        <member name="T:StreamCoders.Rtp.ParticipantReceiverInformation">
            -------------------------------------------------------------------------------------------------
            <summary>
                Information about the receiving participant.
            </summary>
            -------------------------------------------------------------------------------------------------
        </member>
        <member name="F:StreamCoders.Rtp.ParticipantReceiverInformation.ByteCount">
            -------------------------------------------------------------------------------------------------
            <summary>
                Amount of bytes received.
            </summary>
            -------------------------------------------------------------------------------------------------
        </member>
        <member name="F:StreamCoders.Rtp.ParticipantReceiverInformation.ExtendedSequence">
            -------------------------------------------------------------------------------------------------
            <summary>
                Extended sequence number of the most recently received RTP packet.
            </summary>
            -------------------------------------------------------------------------------------------------
        </member>
        <member name="F:StreamCoders.Rtp.ParticipantReceiverInformation.InterArrivalJitter">
            -------------------------------------------------------------------------------------------------
            <summary>
                Interarrival jitter information.
            </summary>
            -------------------------------------------------------------------------------------------------
        </member>
        <member name="F:StreamCoders.Rtp.ParticipantReceiverInformation.PacketCount">
            -------------------------------------------------------------------------------------------------
            <summary>
                Amount of packets received.
            </summary>
            -------------------------------------------------------------------------------------------------
        </member>
        <member name="F:StreamCoders.Rtp.ParticipantReceiverInformation.RecentSenderReport">
            -------------------------------------------------------------------------------------------------
            <summary>
                Contains the most recently received Sender Report.
            </summary>
            -------------------------------------------------------------------------------------------------
        </member>
        <member name="P:StreamCoders.Rtp.ParticipantReceiverInformation.Ssrc">
            -------------------------------------------------------------------------------------------------
            <summary>
                Synchronization source of remote endpoint.
            </summary>
            -------------------------------------------------------------------------------------------------
        </member>
        <member name="M:StreamCoders.Rtp.ParticipantReceiverInformation.Update(StreamCoders.Rtp.RtpPacket)">
            -------------------------------------------------------------------------------------------------
            <summary>
                Updates the given packet.
            </summary>
            <param name="packet">   The packet. </param>
            -------------------------------------------------------------------------------------------------
        </member>
        <member name="M:StreamCoders.Rtp.ParticipantReceiverInformation.Update(StreamCoders.Rtp.RtcpCompoundPacket)">
            -------------------------------------------------------------------------------------------------
            <summary>
                Updates the participant receiver information.
            </summary>
            <param name="compound"> . </param>
            -------------------------------------------------------------------------------------------------
        </member>
        <member name="M:StreamCoders.Rtp.ParticipantReceiverInformation.GenerateReceiverReport">
            -------------------------------------------------------------------------------------------------
            <summary>
                Generates a RTCP-RR encapsulated in an RTCPCompound object.
            </summary>
            <returns>
                The receiver report.
            </returns>
            -------------------------------------------------------------------------------------------------
        </member>
        <member name="T:StreamCoders.Rtp.ParticipantSenderInformation">
            -------------------------------------------------------------------------------------------------
            <summary>
                Information about the sending participant.
            </summary>
            -------------------------------------------------------------------------------------------------
        </member>
        <member name="F:StreamCoders.Rtp.ParticipantSenderInformation.ByteCount">
            -------------------------------------------------------------------------------------------------
            <summary>
                Amount of bytes sent.
            </summary>
            -------------------------------------------------------------------------------------------------
        </member>
        <member name="F:StreamCoders.Rtp.ParticipantSenderInformation.PacketCount">
            -------------------------------------------------------------------------------------------------
            <summary>
                Amount of packets sent.
            </summary>
            -------------------------------------------------------------------------------------------------
        </member>
        <member name="F:StreamCoders.Rtp.ParticipantSenderInformation.RecentTimestamp">
            -------------------------------------------------------------------------------------------------
            <summary>
                Most recently sent timestamp.
            </summary>
            -------------------------------------------------------------------------------------------------
        </member>
        <member name="F:StreamCoders.Rtp.ParticipantSenderInformation.Ssrc">
            -------------------------------------------------------------------------------------------------
            <summary>
                Most recently sent Sync Source.
            </summary>
            -------------------------------------------------------------------------------------------------
        </member>
        <member name="M:StreamCoders.Rtp.ParticipantSenderInformation.Update(StreamCoders.Rtp.RtpPacket)">
            -------------------------------------------------------------------------------------------------
            <summary>
                Objects the participant sender information.
            </summary>
            <param name="packet">   . </param>
            -------------------------------------------------------------------------------------------------
        </member>
        <member name="M:StreamCoders.Rtp.ParticipantSenderInformation.GenerateSenderReport">
            -------------------------------------------------------------------------------------------------
            <summary>
                Generates a RTCP-SR, RTCP-SDES (CNAME) encapsulated in an RTCPCompound object.
            </summary>
            <returns>
                The sender report.
            </returns>
            -------------------------------------------------------------------------------------------------
        </member>
        <member name="T:StreamCoders.Rtp.PlayoutBuffer">
            -------------------------------------------------------------------------------------------------
            <summary>
                Handles syhcronization information and produces prsentation times for play-out.
            </summary>
            -------------------------------------------------------------------------------------------------
        </member>
        <member name="F:StreamCoders.Rtp.PlayoutBuffer.PresentationBuffer">
            -------------------------------------------------------------------------------------------------
            <summary>
                Optional presentation buffer to allow for reordering from decoding times to presentation
                times.
            </summary>
            -------------------------------------------------------------------------------------------------
        </member>
        <member name="F:StreamCoders.Rtp.PlayoutBuffer.Scale">
            -------------------------------------------------------------------------------------------------
            <summary>
                The scale.
            </summary>
            -------------------------------------------------------------------------------------------------
        </member>
        <member name="M:StreamCoders.Rtp.PlayoutBuffer.#ctor(System.Double)">
            -------------------------------------------------------------------------------------------------
            <summary>
                Constructor.
            </summary>
            <param name="clockResolution">  The clock resolution. </param>
            -------------------------------------------------------------------------------------------------
        </member>
        <member name="P:StreamCoders.Rtp.PlayoutBuffer.IsSynchronized">
            -------------------------------------------------------------------------------------------------
            <summary>
                Gets a value indicating whether this object is synchronized against RTCP.
            </summary>
            <value>
                true if this object is synchronized, false if not.
            </value>
            -------------------------------------------------------------------------------------------------
        </member>
        <member name="P:StreamCoders.Rtp.PlayoutBuffer.HasReceivedRtpInfo">
            -------------------------------------------------------------------------------------------------
            <summary>
                Gets a value indicating whether this object has been passed the RTP-INFO header.
            </summary>
            <value>
                true if this object has received rtp information, false if not.
            </value>
            -------------------------------------------------------------------------------------------------
        </member>
        <member name="P:StreamCoders.Rtp.PlayoutBuffer.PlayoutStartTime">
            -------------------------------------------------------------------------------------------------
            <summary>
                This is the relative seek start time. By default this will be 0.0.
            </summary>
            <value>
                The time of the playout start.
            </value>
            -------------------------------------------------------------------------------------------------
        </member>
        <member name="M:StreamCoders.Rtp.PlayoutBuffer.Update(StreamCoders.Rtp.RtcpSenderReport)">
            -------------------------------------------------------------------------------------------------
            <summary>
                Updates the given streamReader.
            </summary>
            <param name="senderReport">   The streamReader. </param>
            -------------------------------------------------------------------------------------------------
        </member>
        <member name="M:StreamCoders.Rtp.PlayoutBuffer.Update(StreamCoders.Rtsp.Url,StreamCoders.Rtsp.RtpInfo)">
            -------------------------------------------------------------------------------------------------
            <summary>
                Updates playout buffer with information contained in RTP-Info header of an RTSP Play
                response.
            </summary>
            <param name="streamUrl">    The stream/track URL. </param>
            <param name="rtpInfo">      The RTPInfo object as returned by the Play response. </param>
            -------------------------------------------------------------------------------------------------
        </member>
        <member name="M:StreamCoders.Rtp.PlayoutBuffer.UpdateFromInitialPacket(StreamCoders.Rtp.RtpPacket)">
            <summary>
                Updates the initial configuration of the playout buffer from an initially received packet so that relative
                timestamps can be calculated.
                This is a last resort when no other synchronization information is present.
            </summary>
            <param name="packet">Packet to use for initial configuration</param>
        </member>
        <member name="M:StreamCoders.Rtp.PlayoutBuffer.SetPresentationTime(StreamCoders.Rtp.RtpFrame)">
            -------------------------------------------------------------------------------------------------
            <summary>
                Sets a presentation time.
            </summary>
            <param name="frame">    The frame. </param>
            -------------------------------------------------------------------------------------------------
        </member>
        <member name="M:StreamCoders.Rtp.PlayoutBuffer.NormalizePresentationTime(StreamCoders.Rtp.RtpFrame)">
            -------------------------------------------------------------------------------------------------
            <summary>
                Normalize presentation time.
            </summary>
            <param name="frame">
                The frame used for normalization of presentation times.
            </param>
            <returns>
                Returns a presentation time relative to wall-clock.
            </returns>
            -------------------------------------------------------------------------------------------------
        </member>
        <member name="M:StreamCoders.Rtp.PlayoutBuffer.CalculatePresentationTime(StreamCoders.Rtp.RtpFrame)">
            -------------------------------------------------------------------------------------------------
            <summary>
                Calculates the presentation time.
            </summary>
            <param name="frame">    The frame used for calculating the relative presentation time. </param>
            <returns>
                The calculated presentation time relative to <b>TimeSpan.Zero</b>.
            </returns>
            -------------------------------------------------------------------------------------------------
        </member>
        <member name="T:StreamCoders.Rtp.QuickTimeFrame">
            -------------------------------------------------------------------------------------------------
            <summary>
                Represent RTPFrame specialized in parsing X-QT (Apple dispatch-026) frames.
            </summary>
            -------------------------------------------------------------------------------------------------
        </member>
        <member name="M:StreamCoders.Rtp.QuickTimeFrame.GetAssembledFrame">
            -------------------------------------------------------------------------------------------------
            <summary>
                Assembles the payloads in the packets of this frame into one array of Byte. This may have
                to be called multiple times as there can be multiple frames in the payload(s).
            </summary>
            <returns>
                The assembled frame.
            </returns>
            <seealso cref="M:StreamCoders.Rtp.RTPFrame.GetAssembledFrame()" />
            -------------------------------------------------------------------------------------------------
        </member>
        <member name="T:StreamCoders.Rtp.RtcpApp">
            -------------------------------------------------------------------------------------------------
            <summary>
                The APP packet is intended for experimental use as new applications and new features are
                developed, without requiring packet type value registration.
            </summary>
            <seealso cref="T:StreamCoders.Rtp.RtcpPacket" />
            -------------------------------------------------------------------------------------------------
        </member>
        <member name="M:StreamCoders.Rtp.RtcpApp.#ctor">
            -------------------------------------------------------------------------------------------------
            <summary>
                Constructor.
            </summary>
            -------------------------------------------------------------------------------------------------
        </member>
        <member name="P:StreamCoders.Rtp.RtcpApp.Name">
            -------------------------------------------------------------------------------------------------
            <summary>
                The 4 byte Name field.
            </summary>
            <value>
                The name.
            </value>
            -------------------------------------------------------------------------------------------------
        </member>
        <member name="P:StreamCoders.Rtp.RtcpApp.AppData">
            -------------------------------------------------------------------------------------------------
            <summary>
                Gets or sets the app specific data to be transmitted. If the array is not 32-bit aligned,
                the property will resize the array to be aligned.
            </summary>
            <value>
                Information describing the application.
            </value>
            -------------------------------------------------------------------------------------------------
        </member>
        <member name="P:StreamCoders.Rtp.RtcpApp.Subtype">
            -------------------------------------------------------------------------------------------------
            <summary>
                The Subtype.
            </summary>
            <value>
                The subtype.
            </value>
            -------------------------------------------------------------------------------------------------
        </member>
        <member name="P:StreamCoders.Rtp.RtcpApp.Ssrc">
            -------------------------------------------------------------------------------------------------
            <summary>
                The Ssrc.
            </summary>
            <value>
                The ssrc.
            </value>
            -------------------------------------------------------------------------------------------------
        </member>
        <member name="M:StreamCoders.Rtp.RtcpApp.ToByteArray(System.Byte[],System.UInt32@)">
            -------------------------------------------------------------------------------------------------
            <summary>
                Compiles the contents of the packets into an array of bytes.
            </summary>
            <param name="buffer">
                The buffer to compile the contents to. This should be big enough to hold all instances.
            </param>
            <param name="offset">
                [in,out] A reference to an unsigned integer to pass into the function.
            </param>
            <seealso cref="M:StreamCoders.Rtp.RTCPPacket.ToByteArray(Byte[],UInt32@)" />
            -------------------------------------------------------------------------------------------------
        </member>
        <member name="M:StreamCoders.Rtp.RtcpApp.ParseData(System.Byte[],System.UInt32@)">
            -------------------------------------------------------------------------------------------------
            <summary>
                Parses the an array of bytes to the appropriate fields within an object.
            </summary>
            <param name="buffer">
                The buffer to parse.
            </param>
            <param name="offset">
                [in,out] A reference to an unsigned integer to pass into the function.
            </param>
            <returns>
                true if it succeeds, false if it fails.
            </returns>
            -------------------------------------------------------------------------------------------------
        </member>
        <member name="M:StreamCoders.Rtp.RtcpApp.ToString">
            -------------------------------------------------------------------------------------------------
            <summary>
                Convert this object into a string representation.
            </summary>
            <returns>
                This object as a string.
            </returns>
            -------------------------------------------------------------------------------------------------
        </member>
        <member name="T:StreamCoders.Rtp.RtcpBye">
            -------------------------------------------------------------------------------------------------
            <summary>
                Notifies a remote session that a participant is leaving the session.
            </summary>
            <seealso cref="T:StreamCoders.Rtp.RtcpPacket" />
            -------------------------------------------------------------------------------------------------
        </member>
        <member name="M:StreamCoders.Rtp.RtcpBye.#ctor">
            -------------------------------------------------------------------------------------------------
            <summary>
                Constructor.
            </summary>
            -------------------------------------------------------------------------------------------------
        </member>
        <member name="P:StreamCoders.Rtp.RtcpBye.Reason">
            -------------------------------------------------------------------------------------------------
            <summary>
                Reason for termination. (optional)
            </summary>
            <value>
                The reason.
            </value>
            -------------------------------------------------------------------------------------------------
        </member>
        <member name="M:StreamCoders.Rtp.RtcpBye.ToByteArray(System.Byte[],System.UInt32@)">
            -------------------------------------------------------------------------------------------------
            <summary>
                Compiles the contents of the packets into an array of bytes.
            </summary>
            <param name="buffer">
                The buffer to compile the contents to. This should be big enough to hold all instances.
            </param>
            <param name="offset">
                [in,out] A reference to an unsigned integer to pass into the function.
            </param>
            -------------------------------------------------------------------------------------------------
        </member>
        <member name="M:StreamCoders.Rtp.RtcpBye.ParseData(System.Byte[],System.UInt32@)">
            -------------------------------------------------------------------------------------------------
            <summary>
                Parses the an array of bytes to the appriate fields within an object.
            </summary>
            <param name="buffer">   The buffer to parse. </param>
            <param name="offset">
                [in,out] A reference to an unsigned integer to pass into the function.
            </param>
            -------------------------------------------------------------------------------------------------
        </member>
        <member name="M:StreamCoders.Rtp.RtcpBye.ToString">
            -------------------------------------------------------------------------------------------------
            <summary>
                Convert this object into a string representation.
            </summary>
            <returns>
                This object as a string.
            </returns>
            -------------------------------------------------------------------------------------------------
        </member>
        <member name="T:StreamCoders.Rtp.RtcpCompoundPacket">
            -------------------------------------------------------------------------------------------------
            <summary>
                Encapsulates multiple RTCP Packets and is used to hold incoming and outgoing RTCP reports.
            </summary>
            -------------------------------------------------------------------------------------------------
        </member>
        <member name="M:StreamCoders.Rtp.RtcpCompoundPacket.#ctor">
            -------------------------------------------------------------------------------------------------
            <summary>
                Constructor.
            </summary>
            -------------------------------------------------------------------------------------------------
        </member>
        <member name="P:StreamCoders.Rtp.RtcpCompoundPacket.Packets">
            -------------------------------------------------------------------------------------------------
            <summary>
                Gets the packets.
            </summary>
            <value>
                The packets.
            </value>
            -------------------------------------------------------------------------------------------------
        </member>
        <member name="M:StreamCoders.Rtp.RtcpCompoundPacket.AddPacket(StreamCoders.Rtp.RtcpPacket)">
            -------------------------------------------------------------------------------------------------
            <summary>
                Adds a newly created RTCP packet to the compound packet.
            </summary>
            <param name="packet">   The packet. </param>
            -------------------------------------------------------------------------------------------------
        </member>
        <member name="M:StreamCoders.Rtp.RtcpCompoundPacket.RemovePacket(StreamCoders.Rtp.RtcpPacket)">
            -------------------------------------------------------------------------------------------------
            <summary>
                Removes a previously added RTCP packet from the compound packet.
            </summary>
            <param name="packet">   The packet. </param>
            <returns>
                true if it succeeds, false if it fails.
            </returns>
            -------------------------------------------------------------------------------------------------
        </member>
        <member name="M:StreamCoders.Rtp.RtcpCompoundPacket.Contains(StreamCoders.Rtp.RtcpType)">
            -------------------------------------------------------------------------------------------------
            <summary>
                Query if this object contains the given ptype.
            </summary>
            <param name="ptype">    The RTCPType to test for containment. </param>
            <returns>
                true if the object is in this collection, false if not.
            </returns>
            -------------------------------------------------------------------------------------------------
        </member>
        <member name="M:StreamCoders.Rtp.RtcpCompoundPacket.Find(StreamCoders.Rtp.RtcpType)">
            -------------------------------------------------------------------------------------------------
            <summary>
                Searches for the first match for the given rtcp type.
            </summary>
            <param name="ptype">    The ptype. </param>
            <returns>
                .
            </returns>
            -------------------------------------------------------------------------------------------------
        </member>
        <member name="M:StreamCoders.Rtp.RtcpCompoundPacket.Find``1(StreamCoders.Rtp.RtcpType)">
            -------------------------------------------------------------------------------------------------
            <summary>
                Searches for the first match for the given rtcp type.
            </summary>
            <param name="ptype">    The ptype. </param>
            <returns>
                .
            </returns>
            -------------------------------------------------------------------------------------------------
        </member>
        <member name="M:StreamCoders.Rtp.RtcpCompoundPacket.ToByteArray">
            -------------------------------------------------------------------------------------------------
            <summary>
                Compiles all RTCP packets in the compound packet to a single array of bytes.
            </summary>
            <exception cref="T:System.Exception">    Thrown when an exception error condition occurs. </exception>
            <returns>
                This object as an ArraySegment&lt;byte&gt;
            </returns>
            -------------------------------------------------------------------------------------------------
        </member>
        <member name="M:StreamCoders.Rtp.RtcpCompoundPacket.ToOffsetBuffer">
            -------------------------------------------------------------------------------------------------
            <summary>
                Compiles all RTCP packets in the compound packet to a single array of bytes.
            </summary>
            <exception cref="T:System.Exception">    Thrown when an exception error condition occurs. </exception>
            <returns>
                This object as an OffsetBuffer&lt;byte&gt;
            </returns>
            -------------------------------------------------------------------------------------------------
        </member>
        <member name="M:StreamCoders.Rtp.RtcpCompoundPacket.ToString">
            -------------------------------------------------------------------------------------------------
            <summary>
                Convert this object into a string representation.
            </summary>
            <returns>
                This object as a string.
            </returns>
            -------------------------------------------------------------------------------------------------
        </member>
        <member name="M:StreamCoders.Rtp.RtcpCompoundPacket.ParseData(System.Byte[],System.UInt32@)">
            -------------------------------------------------------------------------------------------------
            <summary>
                Parses an array of bytes to one or more RTCP packets.
            </summary>
            <param name="buffer">   The buffer. </param>
            <param name="offset">   [in,out] The offset. </param>
            <returns>
                A list of RTCPPacket.
            </returns>
            -------------------------------------------------------------------------------------------------
        </member>
        <member name="T:StreamCoders.Rtp.RtcpPacket">
            -------------------------------------------------------------------------------------------------
            <summary>
                RTCPPacket is the abstract base class for all RTCP packets.
            </summary>
            -------------------------------------------------------------------------------------------------
        </member>
        <member name="M:StreamCoders.Rtp.RtcpPacket.#ctor">
            -------------------------------------------------------------------------------------------------
            <summary>
                Constructor.
            </summary>
            -------------------------------------------------------------------------------------------------
        </member>
        <member name="P:StreamCoders.Rtp.RtcpPacket.Version">
            -------------------------------------------------------------------------------------------------
            <summary>
                The RTCP version field. This should always be 2.
            </summary>
            <value>
                The version.
            </value>
            -------------------------------------------------------------------------------------------------
        </member>
        <member name="P:StreamCoders.Rtp.RtcpPacket.Padding">
            -------------------------------------------------------------------------------------------------
            <summary>
                The RTCP padding field.
            </summary>
            <value>
                true if padding, false if not.
            </value>
            -------------------------------------------------------------------------------------------------
        </member>
        <member name="P:StreamCoders.Rtp.RtcpPacket.PacketType">
            -------------------------------------------------------------------------------------------------
            <summary>
                The RTCP packet Type of which the packet was instantiated.
            </summary>
            <value>
                The type of the packet.
            </value>
            -------------------------------------------------------------------------------------------------
        </member>
        <member name="P:StreamCoders.Rtp.RtcpPacket.CreationTime">
            -------------------------------------------------------------------------------------------------
            <summary>
                Gets the time of the creation.
            </summary>
            <value>
                The time of the creation.
            </value>
            -------------------------------------------------------------------------------------------------
        </member>
        <member name="M:StreamCoders.Rtp.RtcpPacket.ToByteArray(System.Byte[],System.UInt32@)">
            -------------------------------------------------------------------------------------------------
            <summary>
                Compiles the contents of the packets into an array of bytes.
            </summary>
            <param name="buffer">
                The buffer to compile the contents to. This should be big enough to hold all instances.
            </param>
            <param name="offset">
                [in,out] A reference to an unsigned integer to pass into the function.
            </param>
            -------------------------------------------------------------------------------------------------
        </member>
        <member name="M:StreamCoders.Rtp.RtcpPacket.ParseData(System.Byte[],System.UInt32@)">
            -------------------------------------------------------------------------------------------------
            <summary>
                Parses the an array of bytes to the appriate fields within an object.
            </summary>
            <param name="buffer">   The buffer to parse. </param>
            <param name="offset">
                [in,out] A reference to an unsigned integer to pass into the function.
            </param>
            -------------------------------------------------------------------------------------------------
        </member>
        <member name="M:StreamCoders.Rtp.RtcpPacket.ToString">
            -------------------------------------------------------------------------------------------------
            <summary>
                Returns a string that returns information about the packet in a human readable form.
            </summary>
            <returns>
                This object as a string.
            </returns>
            -------------------------------------------------------------------------------------------------
        </member>
        <member name="M:StreamCoders.Rtp.RtcpPacket.GetUint(System.Byte[],System.UInt32@)">
            -------------------------------------------------------------------------------------------------
            <summary>
                Gets an uint.
            </summary>
            <param name="buffer">
                The buffer to compile the contents to. This should be big enough to hold all instances.
            </param>
            <param name="offset">
                [in,out] A reference to an unsigned integer to pass into the function.
            </param>
            <returns>
                The uint.
            </returns>
            -------------------------------------------------------------------------------------------------
        </member>
        <member name="M:StreamCoders.Rtp.RtcpPacket.SetUInt(System.Byte[],System.UInt32@,System.UInt32)">
            -------------------------------------------------------------------------------------------------
            <summary>
                Sets an u int.
            </summary>
            <param name="buffer">   The buffer. </param>
            <param name="offset">   [in,out] The offset. </param>
            <param name="value">   The value. </param>
            -------------------------------------------------------------------------------------------------
        </member>
        <member name="M:StreamCoders.Rtp.RtcpPacket.PadBuffer(System.Byte[],System.UInt32@,System.UInt32@)">
            -------------------------------------------------------------------------------------------------
            <summary>
                Pads array to a 32-bit boundary by adjusting offset and length parameters. This should be
                called after a buffer has been filled with necessary data.
            </summary>
            <param name="buffer">
                Buffer to analyse. This buffer may be resized in order to align to a 32-bit boundary.
            </param>
            <param name="offset">   [in,out] Offset into buffer to adjust. </param>
            <param name="length">   [in,out] Length of RTCP "section" to adjust. </param>
            -------------------------------------------------------------------------------------------------
        </member>
        <member name="T:StreamCoders.Rtp.RtcpReceiverReport">
            -------------------------------------------------------------------------------------------------
            <summary>
                RTCP Receiver report.
            </summary>
            <seealso cref="T:StreamCoders.Rtp.RtcpPacket" />
            -------------------------------------------------------------------------------------------------
        </member>
        <member name="F:StreamCoders.Rtp.RtcpReceiverReport.ReportBlocks">
            -------------------------------------------------------------------------------------------------
            <summary>
                Holds report blocks to transport additional information.
            </summary>
            -------------------------------------------------------------------------------------------------
        </member>
        <member name="M:StreamCoders.Rtp.RtcpReceiverReport.#ctor">
            -------------------------------------------------------------------------------------------------
            <summary>
                Constructor.
            </summary>
            -------------------------------------------------------------------------------------------------
        </member>
        <member name="P:StreamCoders.Rtp.RtcpReceiverReport.Ssrc">
            -------------------------------------------------------------------------------------------------
            <summary>
                The Synchronization source.
            </summary>
            <value>
                A unique value identifying the synchronization source.
            </value>
            -------------------------------------------------------------------------------------------------
        </member>
        <member name="M:StreamCoders.Rtp.RtcpReceiverReport.ToByteArray(System.Byte[],System.UInt32@)">
            -------------------------------------------------------------------------------------------------
            <summary>
                Compiles the contents of the packets into an array of bytes.
            </summary>
            <param name="buffer">
                The buffer to compile the contents to. This should be big enough to hold all instances.
            </param>
            <param name="offset">
                [in,out] A reference to an unsigned integer to pass into the function.
            </param>
            -------------------------------------------------------------------------------------------------
        </member>
        <member name="M:StreamCoders.Rtp.RtcpReceiverReport.ParseData(System.Byte[],System.UInt32@)">
            -------------------------------------------------------------------------------------------------
            <summary>
                Parses a buffer to an RTCP Receiver Report.
            </summary>
            <param name="buffer">
                The buffer to parse.
            </param>
            <param name="offset">
                [in,out] A reference to an unsigned integer to pass into the function.
            </param>
            -------------------------------------------------------------------------------------------------
        </member>
        <member name="M:StreamCoders.Rtp.RtcpReceiverReport.ToString">
            -------------------------------------------------------------------------------------------------
            <summary>
                Convert this object into a string representation.
            </summary>
            <returns>
                This object as a string.
            </returns>
            -------------------------------------------------------------------------------------------------
        </member>
        <member name="T:StreamCoders.Rtp.RtcpReportBlock">
            -------------------------------------------------------------------------------------------------
            <summary>
                The Reportblock for SR and RR.
            </summary>
            -------------------------------------------------------------------------------------------------
        </member>
        <member name="M:StreamCoders.Rtp.RtcpReportBlock.ParseData(System.Byte[],System.UInt32@)">
            -------------------------------------------------------------------------------------------------
            <summary>
                Parse data.
            </summary>
            <param name="buffer">   The buffer. </param>
            <param name="offset">   [in,out] The offset. </param>
            -------------------------------------------------------------------------------------------------
        </member>
        <member name="M:StreamCoders.Rtp.RtcpReportBlock.ToByteArray(System.Byte[],System.UInt32@)">
            -------------------------------------------------------------------------------------------------
            <summary>
                Converts this object to a byte array.
            </summary>
            <param name="buffer">   The buffer. </param>
            <param name="offset">   [in,out] The offset. </param>
            -------------------------------------------------------------------------------------------------
        </member>
        <member name="M:StreamCoders.Rtp.RtcpReportBlock.ToString">
            -------------------------------------------------------------------------------------------------
            <summary>
                Convert this object into a string representation.
            </summary>
            <returns>
                This object as a string.
            </returns>
            ###
            <param name="buffer">   The buffer. </param>
            ###
            <param name="offset">   [in,out] The offset. </param>
            -------------------------------------------------------------------------------------------------
        </member>
        <member name="P:StreamCoders.Rtp.RtcpReportBlock.Ssrc">
            -------------------------------------------------------------------------------------------------
            <summary>
                Ssrc.
            </summary>
            <value>
                The ssrc.
            </value>
            -------------------------------------------------------------------------------------------------
        </member>
        <member name="P:StreamCoders.Rtp.RtcpReportBlock.FractionLost">
            -------------------------------------------------------------------------------------------------
            <summary>
                FractionLost.
            </summary>
            <value>
                The fraction lost.
            </value>
            -------------------------------------------------------------------------------------------------
        </member>
        <member name="P:StreamCoders.Rtp.RtcpReportBlock.CumulativePacketLost">
            -------------------------------------------------------------------------------------------------
            <summary>
                CumulativePacketLost.
            </summary>
            <value>
                The cumulative packet lost.
            </value>
            -------------------------------------------------------------------------------------------------
        </member>
        <member name="P:StreamCoders.Rtp.RtcpReportBlock.ExtendedHighestSequenceNumberReceived">
            -------------------------------------------------------------------------------------------------
            <summary>
                ExtendedHighestSequenceNumberReceived.
            </summary>
            <value>
                The extended highest sequence number received.
            </value>
            -------------------------------------------------------------------------------------------------
        </member>
        <member name="P:StreamCoders.Rtp.RtcpReportBlock.InterArrivalJitter">
            -------------------------------------------------------------------------------------------------
            <summary>
                InterArrivalJitter.
            </summary>
            <value>
                The inter arrival jitter.
            </value>
            -------------------------------------------------------------------------------------------------
        </member>
        <member name="P:StreamCoders.Rtp.RtcpReportBlock.LastSrTimestamp">
            -------------------------------------------------------------------------------------------------
            <summary>
                LastSRTimestamp.
            </summary>
            <value>
                The last streamReader timestamp.
            </value>
            -------------------------------------------------------------------------------------------------
        </member>
        <member name="P:StreamCoders.Rtp.RtcpReportBlock.DelayLastSr">
            -------------------------------------------------------------------------------------------------
            <summary>
                DelayLastSR.
            </summary>
            <value>
                The delay last streamReader.
            </value>
            -------------------------------------------------------------------------------------------------
        </member>
        <member name="T:StreamCoders.Rtp.RtcpSenderReport">
            -------------------------------------------------------------------------------------------------
            <summary>
                This is the RTCP Sender Report. It is sent by the sender of RTP packets to a session,
                containing quality and timing information.
            </summary>
            <seealso cref="T:StreamCoders.Rtp.RtcpPacket" />
            -------------------------------------------------------------------------------------------------
        </member>
        <member name="F:StreamCoders.Rtp.RtcpSenderReport.ReportBlocks">
            -------------------------------------------------------------------------------------------------
            <summary>
                Holds report blocks to transport additional information.
            </summary>
            -------------------------------------------------------------------------------------------------
        </member>
        <member name="F:StreamCoders.Rtp.RtcpSenderReport.NtpTime">
            -------------------------------------------------------------------------------------------------
            <summary>
                The NTP time of the sender. This value should be either received from an NTP Server or
                your system time (synchronized by NTP).
            </summary>
            -------------------------------------------------------------------------------------------------
        </member>
        <member name="M:StreamCoders.Rtp.RtcpSenderReport.#ctor">
            -------------------------------------------------------------------------------------------------
            <summary>
                Constructor.
            </summary>
            -------------------------------------------------------------------------------------------------
        </member>
        <member name="P:StreamCoders.Rtp.RtcpSenderReport.Ssrc">
            -------------------------------------------------------------------------------------------------
            <summary>
                This is the Synchronization Source (Ssrc) of the Sender.
            </summary>
            <value>
                The ssrc.
            </value>
            -------------------------------------------------------------------------------------------------
        </member>
        <member name="P:StreamCoders.Rtp.RtcpSenderReport.RtpTimestamp">
            -------------------------------------------------------------------------------------------------
            <summary>
                The NTP time of the sender expressed in RTP Timestamp units.
            </summary>
            <value>
                The rtp timestamp.
            </value>
            -------------------------------------------------------------------------------------------------
        </member>
        <member name="P:StreamCoders.Rtp.RtcpSenderReport.PacketCount">
            -------------------------------------------------------------------------------------------------
            <summary>
                The number of packets sent.
            </summary>
            <value>
                The number of packets.
            </value>
            -------------------------------------------------------------------------------------------------
        </member>
        <member name="P:StreamCoders.Rtp.RtcpSenderReport.OctetCount">
            -------------------------------------------------------------------------------------------------
            <summary>
                The number of bytes sent.
            </summary>
            <value>
                The number of octets.
            </value>
            -------------------------------------------------------------------------------------------------
        </member>
        <member name="M:StreamCoders.Rtp.RtcpSenderReport.ToByteArray(System.Byte[],System.UInt32@)">
            -------------------------------------------------------------------------------------------------
            <summary>
                Compiles the contents of the packets into an array of bytes.
            </summary>
            <param name="buffer">
                The buffer to compile the contents to. This should be big enough to hold all instances.
            </param>
            <param name="offset">
                [in,out] A reference to an unsigned integer to pass into the function.
            </param>
            -------------------------------------------------------------------------------------------------
        </member>
        <member name="M:StreamCoders.Rtp.RtcpSenderReport.ParseData(System.Byte[],System.UInt32@)">
            -------------------------------------------------------------------------------------------------
            <summary>
                Parses the an array of bytes to the appriate fields within an object.
            </summary>
            <param name="buffer">   The buffer to parse. </param>
            <param name="offset">
                [in,out] A reference to an unsigned integer to pass into the function.
            </param>
            -------------------------------------------------------------------------------------------------
        </member>
        <member name="M:StreamCoders.Rtp.RtcpSenderReport.ToString">
            -------------------------------------------------------------------------------------------------
            <summary>
                Convert this object into a string representation.
            </summary>
            <returns>
                This object as a string.
            </returns>
            -------------------------------------------------------------------------------------------------
        </member>
        <member name="T:StreamCoders.Rtp.RtcpSourceDescription">
            -------------------------------------------------------------------------------------------------
            <summary>
                RTCP Source description.
            </summary>
            <seealso cref="T:StreamCoders.Rtp.RtcpPacket" />
            -------------------------------------------------------------------------------------------------
        </member>
        <member name="M:StreamCoders.Rtp.RtcpSourceDescription.#ctor">
            -------------------------------------------------------------------------------------------------
            <summary>
                Constructor.
            </summary>
            -------------------------------------------------------------------------------------------------
        </member>
        <member name="P:StreamCoders.Rtp.RtcpSourceDescription.SourceCount">
            -------------------------------------------------------------------------------------------------
            <summary>
                Gets the number of sources.
            </summary>
            <value>
                The number of sources.
            </value>
            -------------------------------------------------------------------------------------------------
        </member>
        <member name="M:StreamCoders.Rtp.RtcpSourceDescription.ToByteArray(System.Byte[],System.UInt32@)">
            -------------------------------------------------------------------------------------------------
            <summary>
                Compiles the contents of the packets into an array of bytes.
            </summary>
            <param name="buffer">
                The buffer to compile the contents to. This should be big enough to hold all instances.
            </param>
            <param name="offset">
                [in,out] A reference to an unsigned integer to pass into the function.
            </param>
            <seealso cref="M:StreamCoders.Rtp.RTCPPacket.ToByteArray(Byte[],UInt32@)" />
            -------------------------------------------------------------------------------------------------
        </member>
        <member name="M:StreamCoders.Rtp.RtcpSourceDescription.AddChunk">
            -------------------------------------------------------------------------------------------------
            <summary>
                Creates a new <c>RTCPSDESChunk</c> and adds it to the internal chunk list.
            </summary>
            <returns>
                A new instance of <c>RTCPSDESChunk</c>
            </returns>
            -------------------------------------------------------------------------------------------------
        </member>
        <member name="M:StreamCoders.Rtp.RtcpSourceDescription.ParseData(System.Byte[],System.UInt32@)">
            -------------------------------------------------------------------------------------------------
            <summary>
                Parses the an array of bytes to the appriate fields within the object.
            </summary>
            <param name="buffer">   The buffer to parse. </param>
            <param name="offset">
                [in,out] A reference to an unsigned integer to pass into the function.
            </param>
            -------------------------------------------------------------------------------------------------
        </member>
        <member name="M:StreamCoders.Rtp.RtcpSourceDescription.ToString">
            -------------------------------------------------------------------------------------------------
            <summary>
                Convert this object into a string representation.
            </summary>
            <returns>
                This object as a string.
            </returns>
            -------------------------------------------------------------------------------------------------
        </member>
        <member name="T:StreamCoders.Rtp.RtcpSourceDescriptionChunk">
            -------------------------------------------------------------------------------------------------
            <summary>
                Source Description. A part of the RTCPSDES structure. Contains information elements about
                a Ssrc.
            </summary>
            -------------------------------------------------------------------------------------------------
        </member>
        <member name="M:StreamCoders.Rtp.RtcpSourceDescriptionChunk.#ctor">
            -------------------------------------------------------------------------------------------------
            <summary>
                Constructor.
            </summary>
            -------------------------------------------------------------------------------------------------
        </member>
        <member name="M:StreamCoders.Rtp.RtcpSourceDescriptionChunk.ToString">
            -------------------------------------------------------------------------------------------------
            <summary>
                Convert this object into a string representation.
            </summary>
            <returns>
                This object as a string.
            </returns>
            ###
            <param name="buffer">   The buffer. </param>
            ###
            <param name="offset">   [in,out] The offset. </param>
            -------------------------------------------------------------------------------------------------
        </member>
        <member name="M:StreamCoders.Rtp.RtcpSourceDescriptionChunk.ParseData(System.Byte[],System.UInt32@)">
            -------------------------------------------------------------------------------------------------
            <summary>
                Parse data.
            </summary>
            <param name="buffer">   The buffer. </param>
            <param name="offset">   [in,out] The offset. </param>
            -------------------------------------------------------------------------------------------------
        </member>
        <member name="M:StreamCoders.Rtp.RtcpSourceDescriptionChunk.ToByteArray(System.Byte[],System.UInt32@)">
            -------------------------------------------------------------------------------------------------
            <summary>
                Converts this object to a byte array.
            </summary>
            <param name="buffer">   The buffer. </param>
            <param name="offset">   [in,out] The offset. </param>
            -------------------------------------------------------------------------------------------------
        </member>
        <member name="P:StreamCoders.Rtp.RtcpSourceDescriptionChunk.Ssrc">
            -------------------------------------------------------------------------------------------------
            <summary>
                The Ssrc of this chunk.
            </summary>
            <value>
                The ssrc.
            </value>
            -------------------------------------------------------------------------------------------------
        </member>
        <member name="P:StreamCoders.Rtp.RtcpSourceDescriptionChunk.Cname">
            -------------------------------------------------------------------------------------------------
            <summary>
                A non-unique identifier of the host of an Ssrc in the form of user@computer (e.g.
                alice@biloxi.com)
            </summary>
            <value>
                The cname.
            </value>
            -------------------------------------------------------------------------------------------------
        </member>
        <member name="P:StreamCoders.Rtp.RtcpSourceDescriptionChunk.Name">
            -------------------------------------------------------------------------------------------------
            <summary>
                The real name of the Ssrc, e.g., "John Doe, Bit Recycler".
            </summary>
            <value>
                The name.
            </value>
            -------------------------------------------------------------------------------------------------
        </member>
        <member name="P:StreamCoders.Rtp.RtcpSourceDescriptionChunk.Email">
            -------------------------------------------------------------------------------------------------
            <summary>
                The email address, e.g., "John.Doe@example.com".
            </summary>
            <value>
                The email.
            </value>
            -------------------------------------------------------------------------------------------------
        </member>
        <member name="P:StreamCoders.Rtp.RtcpSourceDescriptionChunk.Phone">
            -------------------------------------------------------------------------------------------------
            <summary>
                The phone number SHOULD be formatted with the plus sign replacing the international
                access code.  For example, +1 908 555 1212 for a number in the United States.
            </summary>
            <value>
                The phone.
            </value>
            -------------------------------------------------------------------------------------------------
        </member>
        <member name="P:StreamCoders.Rtp.RtcpSourceDescriptionChunk.Loc">
            -------------------------------------------------------------------------------------------------
            <summary>
                Depending on the application, different degrees of detail are appropriate for this item.
                For conference applications, a string like "Murray Hill, New Jersey" may be sufficient.
            </summary>
            <value>
                The location.
            </value>
            -------------------------------------------------------------------------------------------------
        </member>
        <member name="P:StreamCoders.Rtp.RtcpSourceDescriptionChunk.Tool">
            -------------------------------------------------------------------------------------------------
            <summary>
                A string giving the name and possibly version of the application generating the stream,
                e.g., "videotool 1.2".  This information may be useful for debugging purposes and is
                similar to the Mailer or Mail-System-Version SMTP headers.  The TOOL value is expected to
                remain constant for the duration of the session.
            </summary>
            <value>
                The tool.
            </value>
            -------------------------------------------------------------------------------------------------
        </member>
        <member name="P:StreamCoders.Rtp.RtcpSourceDescriptionChunk.Note">
            -------------------------------------------------------------------------------------------------
            <summary>
                The following semantics are suggested for this item, but these or other semantics MAY be
                explicitly defined by a profile.  The NOTE item is intended for transient messages
                describing the current state of the source, e.g., "on the phone, can't talk".  Or, during
                a seminar, this item might be used to convey the title of the talk.  It should be used
                only to carry exceptional information and SHOULD NOT be included routinely by all
                participants because this would slow down the rate at which reception reports and CNAME
                are sent, thus impairing the performance of the protocol.  In particular, it SHOULD NOT
                be included as an item in a user's configuration file nor automatically generated as in a
                quote-of-the-day.
                Since the NOTE item may be important to display while it is active, the rate at which
                other non-CNAME items such as NAME are transmitted might be reduced so that the NOTE item
                can take that part of the RTCP bandwidth.  When the transient message becomes inactive,
                the NOTE item SHOULD continue to be transmitted a few times at the same repetition rate
                but with a string of length zero to signal the receivers.  However, receivers SHOULD also
                consider the NOTE item inactive if it is not received for a small multiple of the
                repetition rate, or perhaps 20-30 RTCP intervals.
            </summary>
            <value>
                The note.
            </value>
            -------------------------------------------------------------------------------------------------
        </member>
        <member name="P:StreamCoders.Rtp.RtcpSourceDescriptionChunk.Priv">
            -------------------------------------------------------------------------------------------------
            <summary>
                Gets or sets the priv.
            </summary>
            <value>
                The priv.
            </value>
            ###
            <param name="buffer">   The buffer. </param>
            ###
            <param name="offset">   [in,out] The offset. </param>
            -------------------------------------------------------------------------------------------------
        </member>
        <member name="P:StreamCoders.Rtp.RtcpSourceDescriptionChunk.PrivPrefix">
            -------------------------------------------------------------------------------------------------
            <summary>
                Gets or sets the priv prefix.
            </summary>
            <value>
                The priv prefix.
            </value>
            ###
            <param name="buffer">   The buffer. </param>
            ###
            <param name="offset">   [in,out] The offset. </param>
            -------------------------------------------------------------------------------------------------
        </member>
        <member name="T:StreamCoders.Rtp.RtcpType">
            -------------------------------------------------------------------------------------------------
            <summary>
                An enumeration of all RTCP packet types. Their values already represent their binary form.
            </summary>
            -------------------------------------------------------------------------------------------------
        </member>
        <member name="F:StreamCoders.Rtp.RtcpType.SenderReport">
            <summary>
                Identifies an RTCP Sender Report.
            </summary>
        </member>
        <member name="F:StreamCoders.Rtp.RtcpType.ReceiverReport">
            <summary>
                Identifies an RTCP Receiver Report.
            </summary>
        </member>
        <member name="F:StreamCoders.Rtp.RtcpType.SourceDescription">
            <summary>
                Identifies an RTCP Source Description.
            </summary>
        </member>
        <member name="F:StreamCoders.Rtp.RtcpType.Bye">
            <summary>
                Identifies an RTCP Goodbye packet.
            </summary>
        </member>
        <member name="F:StreamCoders.Rtp.RtcpType.App">
            <summary>
                Identifies an RTCP Application Defined packet.
            </summary>
        </member>
        <member name="T:StreamCoders.Rtp.Rtp4629">
            -------------------------------------------------------------------------------------------------
            <summary>
                RFC 2429/4629 Packet representation.
            </summary>
            <seealso cref="T:StreamCoders.Rtp.RtpPacket" />
            -------------------------------------------------------------------------------------------------
        </member>
        <member name="M:StreamCoders.Rtp.Rtp4629.#ctor">
            -------------------------------------------------------------------------------------------------
            <summary>
                Default constructor.
            </summary>
            ###
            <param name="buffer">   The buffer to receive the compile RTP packet. </param>
            ###
            <param name="offset">
                The offset into the buffer after it was filled. (representing the size of the packet)
            </param>
            -------------------------------------------------------------------------------------------------
        </member>
        <member name="M:StreamCoders.Rtp.Rtp4629.#ctor(StreamCoders.Rtp.RtpPacket)">
            -------------------------------------------------------------------------------------------------
            <summary>
                Constructor.
            </summary>
            <param name="packet">   The buffer to receive the compile RTP packet. </param>
            ###
            <param name="offset">
                The offset into the buffer after it was filled. (representing the size of the packet)
            </param>
            -------------------------------------------------------------------------------------------------
        </member>
        <member name="P:StreamCoders.Rtp.Rtp4629.HeaderSize">
            -------------------------------------------------------------------------------------------------
            <summary>
                Gets the size of the header.
            </summary>
            <value>
                The size of the header.
            </value>
            ###
            <param name="buffer">   The buffer to receive the compile RTP packet. </param>
            ###
            <param name="offset">
                The offset into the buffer after it was filled. (representing the size of the packet)
            </param>
            -------------------------------------------------------------------------------------------------
        </member>
        <member name="P:StreamCoders.Rtp.Rtp4629.Pebit">
            -------------------------------------------------------------------------------------------------
            <summary>
                Gets or sets the pebit.
            </summary>
            <value>
                The pebit.
            </value>
            ###
            <param name="buffer">   The buffer to receive the compile RTP packet. </param>
            ###
            <param name="offset">
                The offset into the buffer after it was filled. (representing the size of the packet)
            </param>
            -------------------------------------------------------------------------------------------------
        </member>
        <member name="P:StreamCoders.Rtp.Rtp4629.PictureStartCompression">
            -------------------------------------------------------------------------------------------------
            <summary>
                Gets or sets a value indicating whether the picture start compression.
            </summary>
            <value>
                true if picture start compression, false if not.
            </value>
            ###
            <param name="buffer">   The buffer to receive the compile RTP packet. </param>
            ###
            <param name="offset">
                The offset into the buffer after it was filled. (representing the size of the packet)
            </param>
            -------------------------------------------------------------------------------------------------
        </member>
        <member name="P:StreamCoders.Rtp.Rtp4629.Plen">
            -------------------------------------------------------------------------------------------------
            <summary>
                Gets or sets the plen.
            </summary>
            <value>
                The plen.
            </value>
            ###
            <param name="buffer">   The buffer to receive the compile RTP packet. </param>
            ###
            <param name="offset">
                The offset into the buffer after it was filled. (representing the size of the packet)
            </param>
            -------------------------------------------------------------------------------------------------
        </member>
        <member name="P:StreamCoders.Rtp.Rtp4629.VrcPresent">
            -------------------------------------------------------------------------------------------------
            <summary>
                Gets or sets a value indicating whether the vrc present.
            </summary>
            <value>
                true if vrc present, false if not.
            </value>
            ###
            <param name="buffer">   The buffer to receive the compile RTP packet. </param>
            ###
            <param name="offset">
                The offset into the buffer after it was filled. (representing the size of the packet)
            </param>
            -------------------------------------------------------------------------------------------------
        </member>
        <member name="M:StreamCoders.Rtp.Rtp4629.ParseData">
            -------------------------------------------------------------------------------------------------
            <summary>
                Parse data.
            </summary>
            <param name="buffer">   The buffer to receive the compile RTP packet. </param>
            <param name="offset">
                The offset into the buffer after it was filled. (representing the size of the packet)
            </param>
            -------------------------------------------------------------------------------------------------
        </member>
        <member name="M:StreamCoders.Rtp.Rtp4629.ToByteArray(System.Byte[],System.UInt32@)">
            -------------------------------------------------------------------------------------------------
            <summary>
                The function compiles the RTP packet header and payload into a array of type Byte.
            </summary>
            <param name="buffer">   The buffer to receive the compile RTP packet. </param>
            <param name="offset">
                [in,out] The offset into the buffer after it was filled. (representing the size of the
                packet)
            </param>
            -------------------------------------------------------------------------------------------------
        </member>
        <member name="T:StreamCoders.Rtp.RtpFrameCompleteEventArgs">
            <summary>
                Event arguments passed when an RtpFrame is completed
            </summary>
            <seealso cref="T:System.EventArgs" />
        </member>
        <member name="T:StreamCoders.Rtp.RtpFrame">
            <summary>
                A Frame wraps multiple RTP packets into a logical unit. All packets in a frame have the
                same timestamp and are normally terminated by an RTP packet with the marker bit set.
            </summary>
            -------------------------------------------------------------------------------------------------
            -------------------------------------------------------------------------------------------------
        </member>
        <member name="F:StreamCoders.Rtp.RtpFrame.IsPurgable">
            -------------------------------------------------------------------------------------------------
            <summary>
                Indicates that this frames is ready to be purged from whatever structure holds it.
            </summary>
            -------------------------------------------------------------------------------------------------
        </member>
        <member name="F:StreamCoders.Rtp.RtpFrame.PresentationTime">
            -------------------------------------------------------------------------------------------------
            <summary>
                Optional presentation time from e.g. PlayoutBuffer.
            </summary>
            -------------------------------------------------------------------------------------------------
        </member>
        <member name="F:StreamCoders.Rtp.RtpFrame.RelativePresentationTime">
            -------------------------------------------------------------------------------------------------
            <summary>
                Relative (normalized) presentation time, relative to wall-clock time.
            </summary>
            -------------------------------------------------------------------------------------------------
        </member>
        <member name="M:StreamCoders.Rtp.RtpFrame.#ctor">
            -------------------------------------------------------------------------------------------------
            <summary>
                Default constructor.
            </summary>
            -------------------------------------------------------------------------------------------------
        </member>
        <member name="P:StreamCoders.Rtp.RtpFrame.HasSequenceGaps">
            -------------------------------------------------------------------------------------------------
            <summary>
                Determines whether there are gaps between sequence numbers in this frame.
            </summary>
            <value>
                This property iterates over all packets in this frame and can therefore be costly to use
                in an inner loop.<br />
                The comparison happens using data type int and short. So it is safe to use it with
                ExtendedSequenceNumber (32-bit) or regular short.
            </value>
            -------------------------------------------------------------------------------------------------
        </member>
        <member name="P:StreamCoders.Rtp.RtpFrame.PacketCount">
            -------------------------------------------------------------------------------------------------
            <summary>
                Stores the number of packets in the frame.
            </summary>
            <value>
                The number of packets.
            </value>
            -------------------------------------------------------------------------------------------------
        </member>
        <member name="P:StreamCoders.Rtp.RtpFrame.TotalPayloadSize">
            -------------------------------------------------------------------------------------------------
            <summary>
                Stores the total number of bytes that make up the payload of this frame.
            </summary>
            <value>
                The total number of payload size.
            </value>
            -------------------------------------------------------------------------------------------------
        </member>
        <member name="P:StreamCoders.Rtp.RtpFrame.Age">
            -------------------------------------------------------------------------------------------------
            <summary>
                Returns the age of the frame since creation time in milliseconds.
            </summary>
            <value>
                The age.
            </value>
            -------------------------------------------------------------------------------------------------
        </member>
        <member name="P:StreamCoders.Rtp.RtpFrame.UpdateAge">
            -------------------------------------------------------------------------------------------------
            <summary>
                Gets the UpdateAge property.
            </summary>
            <value>
                Returns the milliseconds that have passed since a packet was added to the frame.
            </value>
            -------------------------------------------------------------------------------------------------
        </member>
        <member name="P:StreamCoders.Rtp.RtpFrame.IsExpired">
            -------------------------------------------------------------------------------------------------
            <summary>
                Gets or sets or Sets the IsExpired property.
            </summary>
            <value>
                Returns true of the frame is expired based on the criteria set by <c>SetExpiry</c>,
                otherwise false.
            </value>
            -------------------------------------------------------------------------------------------------
        </member>
        <member name="P:StreamCoders.Rtp.RtpFrame.IsFrameComplete">
            -------------------------------------------------------------------------------------------------
            <summary>
                Indicates whether the content of this frame is complete. For most frames this is true if
                a packet was received that has its marker bit set.
            </summary>
            <value>
                true if frame complete, false if not.
            </value>
            -------------------------------------------------------------------------------------------------
        </member>
        <member name="P:StreamCoders.Rtp.RtpFrame.Timestamp">
            -------------------------------------------------------------------------------------------------
            <summary>
                Returns the timestamp of this frame.
            </summary>
            <value>
                The timestamp.
            </value>
            -------------------------------------------------------------------------------------------------
        </member>
        <member name="P:StreamCoders.Rtp.RtpFrame.LowestSequenceNumber">
            -------------------------------------------------------------------------------------------------
            <summary>
                Returns the lowest Sequence number in frame.
            </summary>
            <value>
                The lowest sequence number.
            </value>
            -------------------------------------------------------------------------------------------------
        </member>
        <member name="P:StreamCoders.Rtp.RtpFrame.HighestSequenceNumber">
            -------------------------------------------------------------------------------------------------
            <summary>
                Returns the highest Sequence number in frame.
            </summary>
            <value>
                The lowest sequence number.
            </value>
            -------------------------------------------------------------------------------------------------
        </member>
        <member name="P:StreamCoders.Rtp.RtpFrame.CustomHeader">
            -------------------------------------------------------------------------------------------------
            <summary>
                Maintains a custom header to the beginning of a frame. It will be added by
                GetAssembledFrame. This can be useful for automatically adding start-codes or meta
                information.
            </summary>
            -------------------------------------------------------------------------------------------------
        </member>
        <member name="M:StreamCoders.Rtp.RtpFrame.Clear">
            -------------------------------------------------------------------------------------------------
            <summary>
                Removes all RtpPacket objects from frame.
            </summary>
            -------------------------------------------------------------------------------------------------
        </member>
        <member name="E:StreamCoders.Rtp.RtpFrame.FrameComplete">
            -------------------------------------------------------------------------------------------------
            <summary>
                Event queue for all listeners interested in OnFrameComplete events.
            </summary>
            -------------------------------------------------------------------------------------------------
        </member>
        <member name="M:StreamCoders.Rtp.RtpFrame.AddPacket(StreamCoders.Rtp.RtpPacket)">
            -------------------------------------------------------------------------------------------------
            <summary>
                Adds a packet to the frame.
            </summary>
            <param name="p">    The RtpPacket to process. </param>
            -------------------------------------------------------------------------------------------------
        </member>
        <member name="M:StreamCoders.Rtp.RtpFrame.DecideFrameComplete(StreamCoders.Rtp.RtpPacket)">
            -------------------------------------------------------------------------------------------------
            <summary>
                Decides whether a frame is complete based on criteria matched by an incoming packet.
            </summary>
            <param name="p">    Incoming packet. </param>
            <returns>
                Return true if frame is complete, otherwise false.
            </returns>
            -------------------------------------------------------------------------------------------------
        </member>
        <member name="M:StreamCoders.Rtp.RtpFrame.GetAssembledFrame">
            -------------------------------------------------------------------------------------------------
            <summary>
                Assembles the payloads in the packets of this frame into one array of Byte. This may have
                to be called multiple times as there can be multiple frames in the payload(s).
            </summary>
            <returns>
                The assembled frame.
            </returns>
            -------------------------------------------------------------------------------------------------
        </member>
        <member name="M:StreamCoders.Rtp.RtpFrame.GetNextPacket">
            -------------------------------------------------------------------------------------------------
            <summary>
                Retrieves Packets from the frame, sorted by their sequence numbers.
            </summary>
            <returns>
                The next packet.
            </returns>
            -------------------------------------------------------------------------------------------------
        </member>
        <member name="M:StreamCoders.Rtp.RtpFrame.Peek(System.Int32)">
            -------------------------------------------------------------------------------------------------
            <summary>
                Allows to peek at the first packet in the queue. The packet will not be removed.
            </summary>
            <param name="packetNumber"> (optional) The  packet number to peek at. </param>
            <returns>
                The current top-of-stack object.
            </returns>
            -------------------------------------------------------------------------------------------------
        </member>
        <member name="M:StreamCoders.Rtp.RtpFrame.SetExpiry(System.TimeSpan,System.TimeSpan)">
            -------------------------------------------------------------------------------------------------
            <summary>
                Set the expiry of the frame for age and update-age of the frame content in milliseconds.
            </summary>
            <remarks>
                Calling <c>SetExpiry</c> resets <c>IsExpired</c> to false.
            </remarks>
            <param name="ageExpiry">
                The <c>Age</c> of the frame that has to be reached for the frame to be expired. A value
                of zero disables the mechanism. Default: 0.
            </param>
            <param name="updateAgeExpiry">
                The <c>UpdateAge</c> of the frame that has to be reached for the frame to be expired. A
                value of zero disables the mechanism. Default: 0.
            </param>
            -------------------------------------------------------------------------------------------------
        </member>
        <member name="M:StreamCoders.Rtp.RtpFrame.AddPacketToQueue(StreamCoders.Rtp.RtpPacket)">
            -------------------------------------------------------------------------------------------------
            <summary>
                Adds packet to frames internal Queue. Sets the frames timestamp and lowest sequence
                number, so we can later determine the decode-order.
            </summary>
            <param name="packet">   The packet. </param>
            -------------------------------------------------------------------------------------------------
        </member>
        <member name="T:StreamCoders.Rtp.RtpHeaderExtension">
            <summary>
                Represents RTP Header Extension used by <c>RtpPacket</c> class.
            </summary>
        </member>
        <member name="P:StreamCoders.Rtp.RtpHeaderExtension.DefinedByProfile">
            -------------------------------------------------------------------------------------------------
            <summary>
                Gets or sets the Profile defining the extension.
            </summary>
            <value>
                16-bit profile definition.
            </value>
            -------------------------------------------------------------------------------------------------
        </member>
        <member name="P:StreamCoders.Rtp.RtpHeaderExtension.Extensions">
            -------------------------------------------------------------------------------------------------
            <summary>
                An array containing 32-bit word extensions.
            </summary>
            <value>
                Array containing the extensions.
            </value>
            -------------------------------------------------------------------------------------------------
        </member>
        <member name="T:StreamCoders.Rtp.RtpPacket">
            -------------------------------------------------------------------------------------------------
            <summary>
                Represents an RTP Packet, implemented according to RFC 3550.
            </summary>
            <seealso cref="T:System.ICloneable" />
            -------------------------------------------------------------------------------------------------
        </member>
        <member name="F:StreamCoders.Rtp.RtpPacket.RelativePresentationTime">
            -------------------------------------------------------------------------------------------------
            <summary>
                Time of the relative presentation.
            </summary>
            -------------------------------------------------------------------------------------------------
        </member>
        <member name="M:StreamCoders.Rtp.RtpPacket.#ctor">
            -------------------------------------------------------------------------------------------------
            <summary>
                Default constructor.
            </summary>
            -------------------------------------------------------------------------------------------------
        </member>
        <member name="M:StreamCoders.Rtp.RtpPacket.#ctor(StreamCoders.Rtp.RtpPacket)">
            -------------------------------------------------------------------------------------------------
            <summary>
                Copy constructor.
            </summary>
            <param name="packet">   The packet. </param>
            -------------------------------------------------------------------------------------------------
        </member>
        <member name="M:StreamCoders.Rtp.RtpPacket.#ctor(System.Byte[])">
            -------------------------------------------------------------------------------------------------
            <summary>
                Constructor taking a fully contained RTP packet to be parsed.
            </summary>
            <remarks>
                Use this constructor to parse incoming RTP packets.
            </remarks>
            <param name="data"> Array containg RTP packet to be parsed. </param>
            -------------------------------------------------------------------------------------------------
        </member>
        <member name="M:StreamCoders.Rtp.RtpPacket.#ctor(System.ArraySegment{System.Byte})">
            -------------------------------------------------------------------------------------------------
            <summary>
                Constructor taking a fully contained RTP packet to be parsed.
            </summary>
            <remarks>
                Use this constructor to parse incoming RTP packets.
            </remarks>
            <param name="segmentData">  ArraySegment containing RTP packet to be parsed. </param>
            -------------------------------------------------------------------------------------------------
        </member>
        <member name="P:StreamCoders.Rtp.RtpPacket.Version">
            -------------------------------------------------------------------------------------------------
            <summary>
                Contains the Version Number of the RTP packet. The value should always be 2.
            </summary>
            <value>
                The version.
            </value>
            -------------------------------------------------------------------------------------------------
        </member>
        <member name="P:StreamCoders.Rtp.RtpPacket.Marker">
            -------------------------------------------------------------------------------------------------
            <summary>
                This represents the Marker bit. This is mostly used for framing.
            </summary>
            <value>
                true if marker, false if not.
            </value>
            -------------------------------------------------------------------------------------------------
        </member>
        <member name="P:StreamCoders.Rtp.RtpPacket.PayloadType">
            -------------------------------------------------------------------------------------------------
            <summary>
                The PayloadType of the packet. (http://www.iana.org/assignments/rtp-parameters)
            </summary>
            <value>
                The type of the payload.
            </value>
            -------------------------------------------------------------------------------------------------
        </member>
        <member name="P:StreamCoders.Rtp.RtpPacket.SequenceNumber">
            -------------------------------------------------------------------------------------------------
            <summary>
                The sequence number increments by one for each RTP data packet sent, and may be used by
                the receiver to detect packet loss and to restore packet sequence.  The initial value of
                the sequence number SHOULD be random (unpredictable) to make known-plaintext attacks on
                encryption more difficult. The sequence number is originally 16-bit signed. An extended
                Sequence number scheme CAN be used to avoid frequent wrap around (See class
                <c>ExtendedSequenceNumber</c>).
            </summary>
            <value>
                The sequence number.
            </value>
            -------------------------------------------------------------------------------------------------
        </member>
        <member name="P:StreamCoders.Rtp.RtpPacket.Timestamp">
            -------------------------------------------------------------------------------------------------
            <summary>
                The timestamp reflects the sampling instant of the first octet in the RTP data packet.
                The sampling instant MUST be derived from a clock that increments monotonically and
                linearly in time to allow synchronization and jitter calculations.  The resolution of the
                clock must be sufficient for the desired synchronization accuracy and for measuring
                packet arrival jitter (one tick per video frame is typically not sufficient).  The clock
                frequency is dependent on the format of data carried as payload and is specified
                statically in the profile or payload format specification that defines the format, or may
                be specified dynamically for payload formats defined through non-RTP means.  If RTP
                packets are generated periodically, the nominal sampling instant as determined from the
                sampling clock is to be used, not a reading of the system clock.  As an example, for
                fixed-rate audio the timestamp clock would likely increment by one for each sampling
                period.
            </summary>
            <value>
                The timestamp.
            </value>
            -------------------------------------------------------------------------------------------------
        </member>
        <member name="P:StreamCoders.Rtp.RtpPacket.Ssrc">
            -------------------------------------------------------------------------------------------------
            <summary>
                The Ssrc field identifies the synchronization source. It is chosen randomly.
            </summary>
            <value>
                The ssrc.
            </value>
            -------------------------------------------------------------------------------------------------
        </member>
        <member name="P:StreamCoders.Rtp.RtpPacket.DataSize">
            -------------------------------------------------------------------------------------------------
            <summary>
                The size of the payload attached to the RTP packet.
            </summary>
            <value>
                The size of the data.
            </value>
            -------------------------------------------------------------------------------------------------
        </member>
        <member name="P:StreamCoders.Rtp.RtpPacket.DataPointer">
            -------------------------------------------------------------------------------------------------
            <summary>
                A pointer to the payload data that will be attached to the RTP packet.
            </summary>
            <value>
                The data pointer.
            </value>
            -------------------------------------------------------------------------------------------------
        </member>
        <member name="P:StreamCoders.Rtp.RtpPacket.HeaderSize">
            -------------------------------------------------------------------------------------------------
            <summary>
                The RTP Header Length in bytes.
            </summary>
            <value>
                The size of the header.
            </value>
            -------------------------------------------------------------------------------------------------
        </member>
        <member name="P:StreamCoders.Rtp.RtpPacket.IsValidPacket">
            -------------------------------------------------------------------------------------------------
            <summary>
                Indicates whether this packet is valid.
                <br />
                This is especially useful when the parsing of data is done through the constructor of the
                object.
            </summary>
            <value>
                true if this object is valid packet, false if not.
            </value>
            -------------------------------------------------------------------------------------------------
        </member>
        <member name="P:StreamCoders.Rtp.RtpPacket.StartBitOffset">
            -------------------------------------------------------------------------------------------------
            <summary>
                Gets or sets the Offset of the first valid bit.
            </summary>
            <remarks>
                Note that, End and Start bits still have to qualify this condition (Packet[n+1].startbit
                + Packet[n].endbit) mod 8 = 0.
            </remarks>
            <value>
                Not all payloads start at a byte boundary. This identifies the first significant bit of
                the payload.
            </value>
            -------------------------------------------------------------------------------------------------
        </member>
        <member name="P:StreamCoders.Rtp.RtpPacket.EndBitOffset">
            -------------------------------------------------------------------------------------------------
            <summary>
                Gets or sets the Offset of the last valid bit.
            </summary>
            <remarks>
                Note that, End and Start bits still have to qualify this condition (Packet[n+1].startbit
                + Packet[n].endbit) mod 8 = 0.
            </remarks>
            <value>
                Not all payloads end at a byte boundary. This identifies the last significant bit of the
                payload.
            </value>
            -------------------------------------------------------------------------------------------------
        </member>
        <member name="P:StreamCoders.Rtp.RtpPacket.CreationTime">
            -------------------------------------------------------------------------------------------------
            <summary>
                Gets the CreationTime property.
            </summary>
            <value>
                Gets the time the RtpPacket was created.
            </value>
            -------------------------------------------------------------------------------------------------
        </member>
        <member name="P:StreamCoders.Rtp.RtpPacket.PresentationTime">
            -------------------------------------------------------------------------------------------------
            <summary>
                When used together with PlayoutBuffer this will contain the presentation time of the
                packet.
            </summary>
            <value>
                The time of the presentation.
            </value>
            -------------------------------------------------------------------------------------------------
        </member>
        <member name="P:StreamCoders.Rtp.RtpPacket.HeaderExtension">
            -------------------------------------------------------------------------------------------------
            <summary>
                Gets or sets optional header extension to transport additional profile defined information.
            </summary>
            <value>
                The header extension.
            </value>
            -------------------------------------------------------------------------------------------------
        </member>
        <member name="M:StreamCoders.Rtp.RtpPacket.Clone">
            -------------------------------------------------------------------------------------------------
            <summary>
                Deep clones RtpPacket object.
            </summary>
            <returns>
                Cloned object.
            </returns>
            -------------------------------------------------------------------------------------------------
        </member>
        <member name="M:StreamCoders.Rtp.RtpPacket.ToString">
            -------------------------------------------------------------------------------------------------
            <summary>
                Creates a String that contains the values of all fields in this RTP packet.
            </summary>
            <returns>
                This object as a string.
            </returns>
            -------------------------------------------------------------------------------------------------
        </member>
        <member name="M:StreamCoders.Rtp.RtpPacket.ToByteArray(System.Byte[],System.UInt32@)">
            -------------------------------------------------------------------------------------------------
            <summary>
                The function compiles the RTP packet header and payload into a array of type Byte.
            </summary>
            <param name="buffer">   The buffer. </param>
            <param name="offset">   [in,out] The offset. </param>
            -------------------------------------------------------------------------------------------------
        </member>
        <member name="M:StreamCoders.Rtp.RtpPacket.ToByteArray">
            -------------------------------------------------------------------------------------------------
            <summary>
                The function compiles the RTP packet header and payload into a array of type Byte.
            </summary>
            <returns>
                This object as an ArraySegment&lt;byte&gt;
            </returns>
            -------------------------------------------------------------------------------------------------
        </member>
        <member name="M:StreamCoders.Rtp.RtpPacket.ToOffsetBuffer">
            -------------------------------------------------------------------------------------------------
            <summary>
                The function compiles the RTP packet header and payload into a array of type Byte.
            </summary>
            <returns>
                This object as an OffsetBuffer&lt;byte&gt;
            </returns>
            -------------------------------------------------------------------------------------------------
        </member>
        <member name="M:StreamCoders.Rtp.RtpPacket.ParseHeader">
            -------------------------------------------------------------------------------------------------
            <summary>
                Parses the header of a packet.
            </summary>
            <remarks>
                To parse a packet completely (including payload), use ParseData instead.
            </remarks>
            <param name="buffer">   The data to be parsed. </param>
            <param name="offset">   [in,out] The offset into the data to be parsed. </param>
            -------------------------------------------------------------------------------------------------
        </member>
        <member name="M:StreamCoders.Rtp.RtpPacket.DefaultInit">
            -------------------------------------------------------------------------------------------------
            <summary>
                Override this method if you inherit a class from RtpPacket.
            </summary>
            -------------------------------------------------------------------------------------------------
        </member>
        <member name="M:StreamCoders.Rtp.RtpPacket.ParseData">
            -------------------------------------------------------------------------------------------------
            <summary>
                Override this method if you inherit a class from RtpPacket.
            </summary>
            <param name="buffer">   The buffer. </param>
            <param name="offset">   The offset. </param>
            <param name="length">   The length. </param>
            -------------------------------------------------------------------------------------------------
        </member>
        <member name="M:StreamCoders.Rtp.RtpPacket.SetUInt(System.Byte[],System.UInt32@,System.UInt32)">
            -------------------------------------------------------------------------------------------------
            <summary>
                Sets an u int.
            </summary>
            <param name="buffer">   The buffer. </param>
            <param name="offset">   [in,out] The offset. </param>
            <param name="@value">   The value. </param>
            -------------------------------------------------------------------------------------------------
        </member>
        <member name="T:StreamCoders.Rtp.RtpPacketToneEvent">
            -------------------------------------------------------------------------------------------------
            <summary>
                RTP packet implementing RFC 2833 carrying DTMF tones and other line and trunk signals.
            </summary>
            <seealso cref="T:StreamCoders.Rtp.RtpPacket" />
            -------------------------------------------------------------------------------------------------
        </member>
        <member name="P:StreamCoders.Rtp.RtpPacketToneEvent.EndOfEvent">
            -------------------------------------------------------------------------------------------------
            <summary>
                If set to a value of true, the "end" bit indicates that this
                packet contains the end of the event.
            </summary>
            <value>
                true if end of event, false if not.
            </value>
            -------------------------------------------------------------------------------------------------
        </member>
        <member name="P:StreamCoders.Rtp.RtpPacketToneEvent.Duration">
            -------------------------------------------------------------------------------------------------
            <summary>
                Duration of this digit, in timestamp units. Thus, the
                event began at the instant identified by the RTP timestamp and has so far lasted as
                long as indicated by this parameter. The event may or may not have ended.
            </summary>
            <value>
                The duration.
            </value>
            -------------------------------------------------------------------------------------------------
        </member>
        <member name="P:StreamCoders.Rtp.RtpPacketToneEvent.Volume">
            -------------------------------------------------------------------------------------------------
            <summary>
                For DTMF digits and other events representable as tones,
                this field describes the power level of the tone, expressed in dBm0 after dropping
                the sign. Power levels range from 0 to
                -63 dBm0. The range of valid DTMF is from 0 to -36 dBm0.
            </summary>
            -------------------------------------------------------------------------------------------------
        </member>
        <member name="T:StreamCoders.Rtp.RtpParticipant`1">
            -------------------------------------------------------------------------------------------------
            <summary>
                RTP Participant is able to send and receive RTP packets. See ParticipantHelper for easy
                creation.
            </summary>
            <remarks>
                RtpParticipant also supports SRTP, which allows for encryption along the media path. See
                <see cref="M:StreamCoders.Rtp.RtpParticipant`1.SetSecureSession(StreamCoders.Rtp.ISRtpSession)" />
            </remarks>
            <typeparam name="T">
                Transport Type: currently either UDPClient or UDPMulticastClient.
            </typeparam>
            <seealso cref="T:StreamCoders.Rtp.IRtpParticipant">
                <seealso cref="T:StreamCoders.Rtp.ParticipantHelper" />
            </seealso>
            -------------------------------------------------------------------------------------------------
        </member>
        <member name="F:StreamCoders.Rtp.RtpParticipant`1.ReceiverInformation">
            -------------------------------------------------------------------------------------------------
            <summary>
                Contains receiver information. it is used to generate RTCP-RR reports and contains useful
                statistical information. This structure is updated every time a packet arrives.
            </summary>
            -------------------------------------------------------------------------------------------------
        </member>
        <member name="F:StreamCoders.Rtp.RtpParticipant`1.SenderInformation">
            -------------------------------------------------------------------------------------------------
            <summary>
                Contains sender information. It is used to generate RTCP-SR reports and contains useful
                statistical information. This structure is updated every time a packet is sent.
            </summary>
            -------------------------------------------------------------------------------------------------
        </member>
        <member name="M:StreamCoders.Rtp.RtpParticipant`1.#ctor(StreamCoders.Rtp.RtpParticipantInfo,StreamCoders.Rtp.RtpParticipantInfo)">
            -------------------------------------------------------------------------------------------------
            <summary>
                Instantiates RTPParticipant.
            </summary>
            <param name="local">
                Sets the local endpoint. In case local.Rtp.Port is set to zero, then local.Rtcp.Port will
                try to be local.Rtp.Port + 1 after calling Start().
            </param>
            <param name="remote">
                Sets the remote endpoint.
            </param>
            -------------------------------------------------------------------------------------------------
        </member>
        <member name="P:StreamCoders.Rtp.RtpParticipant`1.LocalRtcpClient">
            <summary>
                Holds the local RTCP network client which is instantiated in the Start() method.
            </summary>
        </member>
        <member name="P:StreamCoders.Rtp.RtpParticipant`1.LocalRtpClient">
            <summary>
                Holds the local RTP network client which is instantiated in the Start() method.
            </summary>
        </member>
        <member name="P:StreamCoders.Rtp.RtpParticipant`1.LocalInfo">
            -------------------------------------------------------------------------------------------------
            <summary>
                Gets or sets the information describing the local.
            </summary>
            <value>
                Information describing the local.
            </value>
            -------------------------------------------------------------------------------------------------
        </member>
        <member name="P:StreamCoders.Rtp.RtpParticipant`1.RemoteInfo">
            -------------------------------------------------------------------------------------------------
            <summary>
                Gets or sets the information describing the remote.
            </summary>
            <value>
                Information describing the remote.
            </value>
            -------------------------------------------------------------------------------------------------
        </member>
        <member name="P:StreamCoders.Rtp.RtpParticipant`1.Ssrc">
            -------------------------------------------------------------------------------------------------
            <summary>
                The Syncronization source of this participant.
            </summary>
            <value>
                The ssrc.
            </value>
            -------------------------------------------------------------------------------------------------
        </member>
        <member name="P:StreamCoders.Rtp.RtpParticipant`1.IsStarted">
            <summary>
                Gets a value indicating whether this instance is started.
            </summary>
            <value>
                <c>true</c> if this instance is started; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="E:StreamCoders.Rtp.RtpParticipant`1.RtpReceive">
            -------------------------------------------------------------------------------------------------
            <summary>
                Is raised when an RTP packet arrives.
            </summary>
            -------------------------------------------------------------------------------------------------
        </member>
        <member name="E:StreamCoders.Rtp.RtpParticipant`1.RtcpReceive">
            -------------------------------------------------------------------------------------------------
            <summary>
                Is raised when an RTCP packet arrives.
            </summary>
            -------------------------------------------------------------------------------------------------
        </member>
        <member name="M:StreamCoders.Rtp.RtpParticipant`1.Start">
            -------------------------------------------------------------------------------------------------
            <summary>
                Starts participant and generic transport objects. (Enables sending and receiving).
            </summary>
            <returns>
                Returns true on success, otherwise false.
            </returns>
            -------------------------------------------------------------------------------------------------
        </member>
        <member name="M:StreamCoders.Rtp.RtpParticipant`1.Stop">
            -------------------------------------------------------------------------------------------------
            <summary>
                Stops the generic transport objects. This closes/disposes the generic transport objects,
                to re-activate call Start()
            </summary>
            -------------------------------------------------------------------------------------------------
        </member>
        <member name="M:StreamCoders.Rtp.RtpParticipant`1.Send(StreamCoders.Rtp.RtpPacket)">
            -------------------------------------------------------------------------------------------------
            <summary>
                Sends RtpPacket object to remote endpoint.
            </summary>
            <remarks>
                Note that Ssrc will be overwritten automatically by cloning the passed object.
            </remarks>
            <param name="packet">   Packet to send. </param>
            <returns>
                Returns true if packet was sent, otherwise false.
            </returns>
            -------------------------------------------------------------------------------------------------
        </member>
        <member name="M:StreamCoders.Rtp.RtpParticipant`1.Send(StreamCoders.Rtp.RtcpCompoundPacket)">
            -------------------------------------------------------------------------------------------------
            <summary>
                Sends an RTCPCompountPacket object to remote endpoint.
            </summary>
            <param name="packet">   Packet to send. </param>
            <returns>
                Returns true on success, otherwise false.
            </returns>
            -------------------------------------------------------------------------------------------------
        </member>
        <member name="M:StreamCoders.Rtp.RtpParticipant`1.Send(StreamCoders.Rtp.RtpFrame)">
            -------------------------------------------------------------------------------------------------
            <summary>
                Sends a whole RTPFrame to remote endpoint.
            </summary>
            <param name="frame">    Frame to send. </param>
            -------------------------------------------------------------------------------------------------
        </member>
        <member name="M:StreamCoders.Rtp.RtpParticipant`1.ForceSenderReportAfterNextUpdate">
            -------------------------------------------------------------------------------------------------
            <summary>
                Forces the creation and sending of an RTCP-SR before the next packet is sent.
            </summary>
            -------------------------------------------------------------------------------------------------
        </member>
        <member name="M:StreamCoders.Rtp.RtpParticipant`1.SetSecureSession(StreamCoders.Rtp.ISRtpSession)">
            -------------------------------------------------------------------------------------------------
            <summary>
                Sets a secure session containing predefined SRTP stream(s).
            </summary>
            <remarks>
                <para>
                    Packets will automatically be encrypted and decrypted once the secure session is set via
                    this method. For this to work, the secure session needs to contain a stream
                    configuration (by calling <c>AddStream</c>) that matches by the SSRC of the packets
                    being sent or received.
                </para>
            </remarks>
            <param name="srtpSession">
                The secure session.
            </param>
            -------------------------------------------------------------------------------------------------
        </member>
        <member name="M:StreamCoders.Rtp.RtpParticipant`1.RtcpClientReceive(System.Object,StreamCoders.Network.TransportOperationCompleteEventArgs)">
            -------------------------------------------------------------------------------------------------
            <summary>
                Rtcp client receive.
            </summary>
            <param name="sender">
                Source of the event.
            </param>
            <param name="completion">
                The completion.
            </param>
            -------------------------------------------------------------------------------------------------
        </member>
        <member name="M:StreamCoders.Rtp.RtpParticipant`1.RtpClientReceive(System.Object,StreamCoders.Network.TransportOperationCompleteEventArgs)">
            -------------------------------------------------------------------------------------------------
            <summary>
                Rtp client receive.
            </summary>
            <param name="sender">
                Source of the event.
            </param>
            <param name="completion">
                The completion.
            </param>
            -------------------------------------------------------------------------------------------------
        </member>
        <member name="T:StreamCoders.Rtp.RtpParticipantInfo">
            -------------------------------------------------------------------------------------------------
            <summary>
                Aggregate holding RTP and RTCP EndPoint information.
            </summary>
            -------------------------------------------------------------------------------------------------
        </member>
        <member name="F:StreamCoders.Rtp.RtpParticipantInfo.Rtcp">
            -------------------------------------------------------------------------------------------------
            <summary>
                EndPoint of RTCP packets.
            </summary>
            -------------------------------------------------------------------------------------------------
        </member>
        <member name="F:StreamCoders.Rtp.RtpParticipantInfo.Rtp">
            -------------------------------------------------------------------------------------------------
            <summary>
                EndPoint of RTP packets.
            </summary>
            -------------------------------------------------------------------------------------------------
        </member>
        <member name="T:StreamCoders.Rtp.RtpReceiver">
            -------------------------------------------------------------------------------------------------
            <summary>
                RTP receiver groups multiple partipants together.
            </summary>
            <remarks>
                Multiple participants can be part of a logical group, such as RTP receivers &amp;
                senders. In return an RTPReceiver again be part of an RTPSession, grouping multiple
                RTPReceivers together.
            </remarks>
            -------------------------------------------------------------------------------------------------
        </member>
        <member name="M:StreamCoders.Rtp.RtpReceiver.#ctor">
            -------------------------------------------------------------------------------------------------
            <summary>
                Default constructor.
            </summary>
            -------------------------------------------------------------------------------------------------
        </member>
        <member name="P:StreamCoders.Rtp.RtpReceiver.UId">
            -------------------------------------------------------------------------------------------------
            <summary>
                Gets the identifier.
            </summary>
            <value>
                The u identifier.
            </value>
            -------------------------------------------------------------------------------------------------
        </member>
        <member name="E:StreamCoders.Rtp.RtpReceiver.RtpPacketReceived">
            -------------------------------------------------------------------------------------------------
            <summary>
                Event queue for all listeners interested in OnRtpPacketReceived events.
            </summary>
            -------------------------------------------------------------------------------------------------
        </member>
        <member name="E:StreamCoders.Rtp.RtpReceiver.RtcpPacketReceived">
            -------------------------------------------------------------------------------------------------
            <summary>
                Event queue for all listeners interested in OnRtcpPacketReceived events.
            </summary>
            -------------------------------------------------------------------------------------------------
        </member>
        <member name="M:StreamCoders.Rtp.RtpReceiver.Add(StreamCoders.Rtp.IRtpParticipant)">
            -------------------------------------------------------------------------------------------------
            <summary>
                Adds a participant to the receiver list.
            </summary>
            <param name="participant">  Participant to add. </param>
            -------------------------------------------------------------------------------------------------
        </member>
        <member name="M:StreamCoders.Rtp.RtpReceiver.Remove(StreamCoders.Rtp.IRtpParticipant)">
            -------------------------------------------------------------------------------------------------
            <summary>
                Removes a participant from the receiver list.
            </summary>
            <param name="participant">  Participant to remove. </param>
            <returns>
                Returns true if participant is found, otherwise false.
            </returns>
            -------------------------------------------------------------------------------------------------
        </member>
        <member name="M:StreamCoders.Rtp.RtpReceiver.Remove(System.Int32)">
            -------------------------------------------------------------------------------------------------
            <summary>
                Removes a participant from the receiver list.
            </summary>
            <param name="ssrc"> Ssrc of participant to remove. </param>
            <returns>
                Returns true if participant is found, otherwise false.
            </returns>
            -------------------------------------------------------------------------------------------------
        </member>
        <member name="T:StreamCoders.Rtp.RtpReceiverRtcpPacketHandler">
            -------------------------------------------------------------------------------------------------
            <summary>
                Handler, called when the rtp participant receives an RTCP packet.
            </summary>
            <param name="sender">
                The originating object.
            </param>
            <param name="participant">
                The participant that received the packet.
            </param>
            <param name="packet">
                Parsed RTCP packet.
            </param>
            <param name="rawPacket">
                Raw unparsed RTCP packet.
            </param>
            <param name="remoteEndpoint">
                Sending remote endpoint. This will only contain a valid value if the RTPParticipant was
                initialized with a remote endpoint (non-null).
            </param>
            -------------------------------------------------------------------------------------------------
        </member>
        <member name="T:StreamCoders.Rtp.RtpReceiverRtpPacketHandler">
            -------------------------------------------------------------------------------------------------
            <summary>
                Handler, called when an rtp participant receives an RTP packet.
            </summary>
            <param name="sender">
                The originating object.
            </param>
            <param name="participant">
                The participant that received the packet.
            </param>
            <param name="packet">
                Parsed RTP packet.
            </param>
            <param name="rawPacket">
                Raw unparsed RTP packet.
            </param>
            <param name="remoteEndpoint">
                Sending remote endpoint. This will only contain a valid value if the RTPParticipant was
                initialized with a remote endpoint (non-null).
            </param>
            -------------------------------------------------------------------------------------------------
        </member>
        <member name="T:StreamCoders.Rtp.RtpReceiverStatistics">
            -------------------------------------------------------------------------------------------------
            <summary>
                Provides byte and packet counters for RTPReceiver activity.
            </summary>
            -------------------------------------------------------------------------------------------------
        </member>
        <member name="P:StreamCoders.Rtp.RtpReceiverStatistics.RtpPacketReceived">
            -------------------------------------------------------------------------------------------------
            <summary>
                Gets the number of RTP packets received.
            </summary>
            -------------------------------------------------------------------------------------------------
        </member>
        <member name="P:StreamCoders.Rtp.RtpReceiverStatistics.RtpBytesReceived">
            -------------------------------------------------------------------------------------------------
            <summary>
                Gets the number of RTP payload bytes received.
            </summary>
            -------------------------------------------------------------------------------------------------
        </member>
        <member name="P:StreamCoders.Rtp.RtpReceiverStatistics.RtcpPacketReceived">
            -------------------------------------------------------------------------------------------------
            <summary>
                Gets the number of RTCP packets received.
            </summary>
            -------------------------------------------------------------------------------------------------
        </member>
        <member name="P:StreamCoders.Rtp.RtpReceiverStatistics.RtcpBytesReceived">
            -------------------------------------------------------------------------------------------------
            <summary>
                Gets the number of RTCP payload bytes received.
            </summary>
            -------------------------------------------------------------------------------------------------
        </member>
        <member name="T:StreamCoders.Rtp.RtpSender">
            -------------------------------------------------------------------------------------------------
            <summary>
                Defines a group of one or more RTP participants.
            </summary>
            <remarks>
                RTPSender provides logical grouping of multiple RTP participants.
            </remarks>
            -------------------------------------------------------------------------------------------------
        </member>
        <member name="F:StreamCoders.Rtp.RtpSender.statistics">
            <summary>
                Contains sender statistics.
            </summary>
        </member>
        <member name="M:StreamCoders.Rtp.RtpSender.#ctor">
            -------------------------------------------------------------------------------------------------
            <summary>
                Default constructor.
            </summary>
            -------------------------------------------------------------------------------------------------
        </member>
        <member name="P:StreamCoders.Rtp.RtpSender.UId">
            -------------------------------------------------------------------------------------------------
            <summary>
                Gets the identifier.
            </summary>
            <value>
                The u identifier.
            </value>
            -------------------------------------------------------------------------------------------------
        </member>
        <member name="M:StreamCoders.Rtp.RtpSender.Add(StreamCoders.Rtp.IRtpParticipant)">
            -------------------------------------------------------------------------------------------------
            <summary>
                Adds a participant to the sender list.
            </summary>
            <param name="participant">  Participant to add. </param>
            -------------------------------------------------------------------------------------------------
        </member>
        <member name="M:StreamCoders.Rtp.RtpSender.Remove(StreamCoders.Rtp.IRtpParticipant)">
            -------------------------------------------------------------------------------------------------
            <summary>
                Removes a participant from the sender list.
            </summary>
            <param name="participant">  Participant to remove. </param>
            <returns>
                Returns true if participant is found, otherwise false.
            </returns>
            -------------------------------------------------------------------------------------------------
        </member>
        <member name="M:StreamCoders.Rtp.RtpSender.Remove(System.Int32)">
            -------------------------------------------------------------------------------------------------
            <summary>
                Removes a participant from the sender list.
            </summary>
            <param name="ssrc"> Ssrc of participant to remove. </param>
            <returns>
                Returns true if participant is found, otherwise false.
            </returns>
            -------------------------------------------------------------------------------------------------
        </member>
        <member name="M:StreamCoders.Rtp.RtpSender.Send(StreamCoders.Rtp.RtpPacket)">
            -------------------------------------------------------------------------------------------------
            <summary>
                Sends an RTP packet to each participant in this sender group.
            </summary>
            <param name="packet">   Packet to send. </param>
            -------------------------------------------------------------------------------------------------
        </member>
        <member name="M:StreamCoders.Rtp.RtpSender.Send(StreamCoders.Rtp.RtpFrame)">
            -------------------------------------------------------------------------------------------------
            <summary>
                Sends an RTP frame to each participant in this sender group.
            </summary>
            <param name="frame">    Frame to send. </param>
            -------------------------------------------------------------------------------------------------
        </member>
        <member name="T:StreamCoders.Rtp.RtpSenderStatistics">
            -------------------------------------------------------------------------------------------------
            <summary>
                Provides byte and packet counters for RTPSender activity.
            </summary>
            -------------------------------------------------------------------------------------------------
        </member>
        <member name="P:StreamCoders.Rtp.RtpSenderStatistics.RtpPacketsSent">
            -------------------------------------------------------------------------------------------------
            <summary>
                Number of RTP packets sent.
            </summary>
            <value>
                The rtp packets sent.
            </value>
            -------------------------------------------------------------------------------------------------
        </member>
        <member name="P:StreamCoders.Rtp.RtpSenderStatistics.RtpBytesSent">
            -------------------------------------------------------------------------------------------------
            <summary>
                Number of bytes sent.
            </summary>
            <value>
                The rtp bytes sent.
            </value>
            -------------------------------------------------------------------------------------------------
        </member>
        <member name="T:StreamCoders.Rtp.RtpSession">
            -------------------------------------------------------------------------------------------------
            <summary>
                An RTP session combines multiple RTP sender and RTP receiver objects into a logical group.
            </summary>
            -------------------------------------------------------------------------------------------------
        </member>
        <member name="F:StreamCoders.Rtp.RtpSession.Statistics">
            -------------------------------------------------------------------------------------------------
            <summary>
                Contains statistics about this session.
            </summary>
            -------------------------------------------------------------------------------------------------
        </member>
        <member name="E:StreamCoders.Rtp.RtpSession.RtcpPacketReceived">
            -------------------------------------------------------------------------------------------------
            <summary>
                Is invoked whenever an RTCP packet was received.
            </summary>
            -------------------------------------------------------------------------------------------------
        </member>
        <member name="E:StreamCoders.Rtp.RtpSession.RtpPacketReceived">
            -------------------------------------------------------------------------------------------------
            <summary>
                Is invoked whenever an RTP packet was received.
            </summary>
            -------------------------------------------------------------------------------------------------
        </member>
        <member name="M:StreamCoders.Rtp.RtpSession.Add(StreamCoders.Rtp.RtpSender)">
            -------------------------------------------------------------------------------------------------
            <summary>
                Adds an RtpSender object to the session.
            </summary>
            <param name="sender">   RTPSender object to add. </param>
            -------------------------------------------------------------------------------------------------
        </member>
        <member name="M:StreamCoders.Rtp.RtpSession.Remove(StreamCoders.Rtp.RtpSender)">
            -------------------------------------------------------------------------------------------------
            <summary>
                Removes an RtpSender object from the session.
            </summary>
            <param name="sender">   RTPSender object to remove. </param>
            <returns>
                Returns true if object was removed, otherwise false.
            </returns>
            -------------------------------------------------------------------------------------------------
        </member>
        <member name="M:StreamCoders.Rtp.RtpSession.Add(StreamCoders.Rtp.RtpReceiver)">
            -------------------------------------------------------------------------------------------------
            <summary>
                Adds an RtpReceiver object to the session.
            </summary>
            <param name="receiver"> RtpReceiver object to add. </param>
            -------------------------------------------------------------------------------------------------
        </member>
        <member name="M:StreamCoders.Rtp.RtpSession.Remove(StreamCoders.Rtp.RtpReceiver)">
            -------------------------------------------------------------------------------------------------
            <summary>
                Removes an RtpReceiver object from the session.
            </summary>
            <param name="receiver"> RtpReceiver object to remove. </param>
            <returns>
                Returns true if object was removed, otherwise false.
            </returns>
            -------------------------------------------------------------------------------------------------
        </member>
        <member name="M:StreamCoders.Rtp.RtpSession.Send(StreamCoders.Rtp.RtpPacket)">
            -------------------------------------------------------------------------------------------------
            <summary>
                Sends an RtpPacket object to all participants of this session.
            </summary>
            <param name="packet"> The packet to send </param>
            -------------------------------------------------------------------------------------------------
        </member>
        <member name="M:StreamCoders.Rtp.RtpSession.Send(StreamCoders.Rtp.RtpFrame)">
            -------------------------------------------------------------------------------------------------
            <summary>
                Sends an RtpFrame object to all participants of this class.
            </summary>
            <param name="frame"> The frame to send </param>
            -------------------------------------------------------------------------------------------------
        </member>
        <member name="T:StreamCoders.Rtp.RtpSessionRtcpPacketHandler">
            -------------------------------------------------------------------------------------------------
            <summary>
                Handler, called when the rtp participant receives an RTCP packet.
            </summary>
            <param name="sender">
                The originating object.
            </param>
            <param name="receiver">
                The RTP receiver that handled the packet.
            </param>
            <param name="participant">
                The participant that received the packet.
            </param>
            <param name="packet">
                Parsed RTCP packet.
            </param>
            <param name="rawPacket">
                Raw unparsed RTCP packet.
            </param>
            <param name="remoteEndpoint">
                Sending remote endpoint. This will only contain a valid value if the RTPParticipant was
                initialized with a remote endpoint (non-null).
            </param>
            -------------------------------------------------------------------------------------------------
        </member>
        <member name="T:StreamCoders.Rtp.RtpSessionStatistics">
            -------------------------------------------------------------------------------------------------
            <summary>
                Provides byte and packet counters for RTPSession activity.
            </summary>
            -------------------------------------------------------------------------------------------------
        </member>
        <member name="P:StreamCoders.Rtp.RtpSessionStatistics.RtpPacketReceived">
            -------------------------------------------------------------------------------------------------
            <summary>
                Gets the number of RTP packets received.
            </summary>
            -------------------------------------------------------------------------------------------------
        </member>
        <member name="P:StreamCoders.Rtp.RtpSessionStatistics.RtpBytesReceived">
            -------------------------------------------------------------------------------------------------
            <summary>
                Gets the number of RTP payload bytes received.
            </summary>
            -------------------------------------------------------------------------------------------------
        </member>
        <member name="P:StreamCoders.Rtp.RtpSessionStatistics.RtcpPacketReceived">
            -------------------------------------------------------------------------------------------------
            <summary>
                Gets the number of RTCP packets received.
            </summary>
            -------------------------------------------------------------------------------------------------
        </member>
        <member name="P:StreamCoders.Rtp.RtpSessionStatistics.RtcpBytesReceived">
            -------------------------------------------------------------------------------------------------
            <summary>
                Gets the number of RTCP payload bytes received.
            </summary>
            -------------------------------------------------------------------------------------------------
        </member>
        <member name="P:StreamCoders.Rtp.RtpSessionStatistics.RtpPacketsSent">
            -------------------------------------------------------------------------------------------------
            <summary>
                Gets the number of RTP packets sent.
            </summary>
            -------------------------------------------------------------------------------------------------
        </member>
        <member name="P:StreamCoders.Rtp.RtpSessionStatistics.RtpBytesSent">
            -------------------------------------------------------------------------------------------------
            <summary>
                Gets the number of RTP payload bytes sent.
            </summary>
            -------------------------------------------------------------------------------------------------
        </member>
        <member name="T:StreamCoders.Rtp.SequenceState">
            -------------------------------------------------------------------------------------------------
            <summary>
                Indications of the state of the extended sequence number algorithm.
            </summary>
            -------------------------------------------------------------------------------------------------
        </member>
        <member name="F:StreamCoders.Rtp.SequenceState.SequenceOk">
            <summary>
                Indicates that there were no problems calculating extended sequence numbers.
            </summary>
        </member>
        <member name="F:StreamCoders.Rtp.SequenceState.SequenceEqual">
            <summary>
                Indicates that the sequence was either redundant or made a large jump. This is an error state.
            </summary>
        </member>
        <member name="F:StreamCoders.Rtp.SequenceState.SequenceMisordered">
            <summary>
                Indicates that a duplicate or misordered sequence number was encountered. This is an error state.
            </summary>
        </member>
        <member name="T:StreamCoders.Rtp.SmartJitterDroppedFrameEventArgs">
            <summary>
                Event arguments provided when FrameDropped is raised.
            </summary>
        </member>
        <member name="T:StreamCoders.Rtp.SmartJitterBuffer`1">
            -------------------------------------------------------------------------------------------------
            <summary>
                Smart jitter buffer collects RTP packets and outputs RTP frames.
            </summary>
            <remarks>
                <para>
                    The jitters goal is to minimize latency with the constraint to provide complete frames.
                    It will automatically adjust the time a frame spends inside the jitter buffer depending
                    on the average time it takes for other previous frames to complete using a weighted sum algorithm.
                </para>
                <para>
                    The jitter buffer has a global duration whose value must not go beyond the value set in the constructor
                    parameter <c>globalMaximumDuration</c>.
                    The jitter buffer has a global minimum duration which determines the minimum time a frame has to spend in the
                    buffer before it is released.
                    If the global duration exceeds that value, all frames in the buffer whose age exceed that threshold are
                    automatically purged and an <c>OnFrameDropped</c> event is emitted. This ensures sane levels of memory
                    consumption in situation where frames are incomplete
                    due to dropped packets.
                </para>
                <para>
                    <para>
                        The SmartJitterStrategy determines how the duration of the jitter is calculated. If PresentationTime is
                        selected the duration is determined to be the difference between the oldest and most recent frame sent to
                        the
                        jitter.
                    </para>
                    <para>
                        If FrameAge is selected the creation time of the oldest frame in the buffer is taken as criteria. If Both
                        is selected, PresentationTime and FrameAge are used.
                        If Ignore is selected no criteria is used to match for completion (aside from frame gaps and markers).
                    </para>
                </para>
                <para>
                    It is mandatory to use a playout buffer on the packets being processed by the jitter buffer. The playout buffer
                    should either
                    pre-process the packets before being fed to the jitter buffer or <c>SetPlayoutBuffer</c> must be called in
                    order to
                    allow the jitter buffer
                    to pre-process all packets itself.
                </para>
            </remarks>
            <typeparam name="T">
                RTP Frame class to use. For H.264 <c>H264Frame</c> should be used. For most other payloads <c>RtpFrame</c> will
                suffice.
            </typeparam>
            -------------------------------------------------------------------------------------------------
        </member>
        <member name="M:StreamCoders.Rtp.SmartJitterBuffer`1.#ctor(System.TimeSpan)">
            <summary>
                Initializes a new instance of the <see cref="T:StreamCoders.Rtp.SmartJitterBuffer`1" /> class.
            </summary>
            <remarks>
                JitterMinimumDuration is set to TimeSpan.Zero through this constructor.
                SmartJitterStrategy is set to <c>Ignore</c>.
            </remarks>
            <param name="globalMaximumDuration">Maximum duration of the global.</param>
        </member>
        <member name="M:StreamCoders.Rtp.SmartJitterBuffer`1.#ctor(StreamCoders.Rtp.SmartJitterStrategy,System.TimeSpan,System.TimeSpan)">
            <summary>
                Initializes a new instance of the <see cref="T:StreamCoders.Rtp.SmartJitterBuffer`1" /> class.
            </summary>
            <param name="globalMinimumDuration">Minimum duration of the jitter before a frame is added to the output queue.</param>
            <param name="globalMaximumDuration">
                Threshold for maximum jitter duration, that when exceeded will get frames purged
                out of the buffer.
            </param>
            <exception cref="T:System.ArgumentException">Maximum threshold must be greater than minimum threshold</exception>
        </member>
        <member name="M:StreamCoders.Rtp.SmartJitterBuffer`1.#ctor(StreamCoders.Rtp.SmartJitterStrategy,System.TimeSpan,System.TimeSpan,StreamCoders.Rtp.PlayoutBuffer)">
            <summary>
             Initializes a new instance of the <see cref="T:StreamCoders.Rtp.SmartJitterBuffer`1" /> class.
            </summary>
            <param name="jitterStrategy"></param>
            <param name="globalMinimumDuration"></param>
            <param name="globalMaximumDuration">
                Threshold for global jitter duration, that
                when exceeded will get frames purged out of the buffer.
            </param>
            <param name="playoutBufferToUse">
                Playout buffer object created for the
                payload.
            </param>
        </member>
        <member name="P:StreamCoders.Rtp.SmartJitterBuffer`1.JitterMinimumDuration">
            <summary>
                Gets the minimum duration of the jitter before a frame is released from the jitter.
            </summary>
            <value>The minimum duration of the jitter.</value>
        </member>
        <member name="P:StreamCoders.Rtp.SmartJitterBuffer`1.JitterMaximumDuration">
            <summary>
                Gets the maximum duration of the jitter before a frame is dropped from the jitter.
            </summary>
            <value>The maximum duration of the jitter.</value>
            <remarks>
                When a frame is dropped from the jitter, the <c>OnFrameDropped</c> event is emitted.
            </remarks>
        </member>
        <member name="P:StreamCoders.Rtp.SmartJitterBuffer`1.CurrentAgeDuration">
            <summary>
                Returns the current age of the jitter
            </summary>
        </member>
        <member name="P:StreamCoders.Rtp.SmartJitterBuffer`1.CurrentPresentationDuration">
            <summary>
                Returns the sum of all frame durations in the jitter
            </summary>
        </member>
        <member name="P:StreamCoders.Rtp.SmartJitterBuffer`1.CheckMarkersForCompletion">
            <summary>
                Instructs the jitter that a criteria for a complete frame is that it is terminated by a packet that has its marker
                bit set.
            </summary>
            <remarks>
                This should usually be set to true for video streams and for most all audio streams to false.
            </remarks>
        </member>
        <member name="P:StreamCoders.Rtp.SmartJitterBuffer`1.AdaptiveMaximum">
            <summary>
                If set to true, the jitter will increase the <c>JitterMaximumDuration</c> by 50ms each time a frame is dropped.
            </summary>
        </member>
        <member name="P:StreamCoders.Rtp.SmartJitterBuffer`1.CheckTimestampChangeForCompletion">
            <summary>
                If set to true the jitter will check whether a change of timestamps has happened in the stream before a frame is
                marked as complete.
            </summary>
            <remarks>
                In some streams markers are not sent to complete a frame. In order to more robustly detect a complete frame, a
                change of timestamp must first occur.
            </remarks>
        </member>
        <member name="P:StreamCoders.Rtp.SmartJitterBuffer`1.CheckSequenceGaps">
            <summary>
                Instructs the jitter that a criteria for a complete frame is that the frame has no sequence gaps. This should
                always be true unless highly unreliable transports are used.
            </summary>
        </member>
        <member name="P:StreamCoders.Rtp.SmartJitterBuffer`1.ProcessFrameCompletionOnAddFrame">
            <summary>
            If true, AddFrame will automatically check if there are any frames completed and append them to the output queue. If false, ProcessFrameCompletion has to be called explicitly.
            </summary>
        </member>
        <member name="P:StreamCoders.Rtp.SmartJitterBuffer`1.SkipLateOrIncompleteFrames">
            <summary>
                Instructs the jitter to drop a frame when it is incomplete and expired.
            </summary>
        </member>
        <member name="P:StreamCoders.Rtp.SmartJitterBuffer`1.OutputQueue">
            <summary>
                The output queue holds completed frames.
            </summary>
        </member>
        <member name="P:StreamCoders.Rtp.SmartJitterBuffer`1.Name">
            <summary>
                Optional name for the jitter.
            </summary>
        </member>
        <member name="P:StreamCoders.Rtp.SmartJitterBuffer`1.CurrentIncompleteCount">
            <summary>
                The current number of incomplete frames in the jitter.
            </summary>
        </member>
        <member name="P:StreamCoders.Rtp.SmartJitterBuffer`1.CurrentAverageCompletionTime">
            <summary>
                Indicates the average time a frame spends in the jitter before being moved to the OutputQueue.
            </summary>
            <remarks>
                The initial value will be equal to <c>JitterMinimumDuration</c>
            </remarks>
        </member>
        <member name="P:StreamCoders.Rtp.SmartJitterBuffer`1.TotalCompleteCount">
            <summary>
                The total number of completed frames.
            </summary>
        </member>
        <member name="P:StreamCoders.Rtp.SmartJitterBuffer`1.TotalDroppedFramesCount">
            <summary>
                The total number of frames dropped.
            </summary>
        </member>
        <member name="E:StreamCoders.Rtp.SmartJitterBuffer`1.FrameDropped">
            <summary>
                Optional Event informing of a frame being dropped.
            </summary>
            <remarks>
                Subscribing to this event could have a negative impact on performance and could amplify the amount of dropped
                frames.
                Therefore it should only be used for debugging purposes.
            </remarks>
        </member>
        <member name="M:StreamCoders.Rtp.SmartJitterBuffer`1.SetPlayoutBuffer(StreamCoders.Rtp.PlayoutBuffer)">
            <summary>
                Sets the playout buffer to use in order to assign presentation times.
            </summary>
            <param name="playoutBufferToUse">Playout buffer object created for the payload.</param>
        </member>
        <member name="M:StreamCoders.Rtp.SmartJitterBuffer`1.AddPacket(StreamCoders.Rtp.RtpPacket)">
            <summary>
                Adds a packet to the jitter
            </summary>
            <param name="packet">The RTP packet to add.</param>
            <remarks></remarks>
        </member>
        <member name="M:StreamCoders.Rtp.SmartJitterBuffer`1.AddPacket``1(StreamCoders.Rtp.RtpPacket)">
            <summary>
                Adds a packet to the jitter
            </summary>
            <typeparam name="T1">The type of RtpFrame to instantiate</typeparam>
            <param name="packet">The RTP packet to add.</param>
            <remarks>
                Calling AddPacket with a <c>null</c> parameter will still check frames for completion and process them to the
                OutputQueue.
            </remarks>
        </member>
        <member name="M:StreamCoders.Rtp.SmartJitterBuffer`1.ProcessFrameCompletion">
            <summary>
            Processes the currently incomplete frames for completion. This is a thread safe function.
            </summary>
            <remarks>
            By default ProcessFrameCompletion is called in AddFrame. In order to avoid redundant checking within short time-frames,
            the implicit call from within AddFrame can be disabled by setting <c>ProcessFrameCompletionOnAddFrame</c> to false.
            </remarks>
            <returns>Returns the OutputQueue of the instance of SmartJitterBuffer.</returns>
        </member>
        <member name="M:StreamCoders.Rtp.SmartJitterBuffer`1.Clear">
            <summary>
                Clears the jitter of complete and incomplete frames.
            </summary>
        </member>
        <member name="T:StreamCoders.Rtp.SmartJitterStrategy">
            <summary>
                Strategy to determine the release of a frame from the jitter buffer based on durations.
            </summary>
        </member>
        <member name="F:StreamCoders.Rtp.SmartJitterStrategy.PresentationTime">
            <summary>
                Frame is released when presentation duration of all frames surpasses <c>JitterMinimumDuration</c>
            </summary>
        </member>
        <member name="F:StreamCoders.Rtp.SmartJitterStrategy.FrameAge">
            <summary>
                Frame is released when frame age of oldest frame surpasses <c>JitterMinimumDuration</c>
            </summary>
        </member>
        <member name="F:StreamCoders.Rtp.SmartJitterStrategy.Both">
            <summary>
                Frame is released when either presentation duration or frame age of all frames surpasses
                <c>JitterMinimumDuration</c>
            </summary>
        </member>
        <member name="F:StreamCoders.Rtp.SmartJitterStrategy.Ignore">
            <summary>
                Ignores the minimum frame age and delivers the frame as soon as it is completed.
            </summary>
        </member>
        <member name="T:StreamCoders.Rtp.CryptoSuite">
            -------------------------------------------------------------------------------------------------
            <summary>
                Enumeration of supported crypto suites.
            </summary>
            -------------------------------------------------------------------------------------------------
        </member>
        <member name="T:StreamCoders.Rtp.ISRtpSession">
            -------------------------------------------------------------------------------------------------
            <summary>
                Interface for secure RTP session implementations.
            </summary>
            -------------------------------------------------------------------------------------------------
        </member>
        <member name="M:StreamCoders.Rtp.ISRtpSession.AddStream(StreamCoders.Rtp.SRtpStreamConfiguration)">
            -------------------------------------------------------------------------------------------------
            <summary>
                Should be used when adding a stream to the session.
            </summary>
            <param name="streamConfiguration">
                The stream configuration.
            </param>
            <returns>
                A SRtpStatusCode.
            </returns>
            -------------------------------------------------------------------------------------------------
        </member>
        <member name="M:StreamCoders.Rtp.ISRtpSession.RemoveStream(StreamCoders.Rtp.SRtpStreamConfiguration)">
            -------------------------------------------------------------------------------------------------
            <summary>
                Should be used when removing a stream from the session.
            </summary>
            <param name="streamConfiguration">
                The stream configuration.
            </param>
            <returns>
                A SRtpStatusCode.
            </returns>
            -------------------------------------------------------------------------------------------------
        </member>
        <member name="M:StreamCoders.Rtp.ISRtpSession.Protect(StreamCoders.OffsetBuffer{System.Byte}@,System.Boolean)">
            -------------------------------------------------------------------------------------------------
            <summary>
                Protects the given packet.
            </summary>
            <param name="packet">
                [in,out] Packet to transform.
            </param>
            <param name="isRtcp">
                True if input is RTCP, otherwise RTP.
            </param>
            <returns>
                A SRtpStatusCode.
            </returns>
            -------------------------------------------------------------------------------------------------
        </member>
        <member name="M:StreamCoders.Rtp.ISRtpSession.Protect(StreamCoders.Rtp.RtpPacket@)">
            -------------------------------------------------------------------------------------------------
            <summary>
                Protects the given packet.
            </summary>
            <param name="packet">
                [in,out] Packet to transform.
            </param>
            <returns>
                A SRtpStatusCode.
            </returns>
            -------------------------------------------------------------------------------------------------
        </member>
        <member name="M:StreamCoders.Rtp.ISRtpSession.Protect(StreamCoders.Rtp.RtcpCompoundPacket@)">
            -------------------------------------------------------------------------------------------------
            <summary>
                Protects the given packet.
            </summary>
            <param name="packet">
                [in,out] Packet to transform.
            </param>
            <returns>
                A SRtpStatusCode.
            </returns>
            -------------------------------------------------------------------------------------------------
        </member>
        <member name="M:StreamCoders.Rtp.ISRtpSession.UnProtect(StreamCoders.OffsetBuffer{System.Byte}@,System.Boolean)">
            -------------------------------------------------------------------------------------------------
            <summary>
                Un-protects the given packet.
            </summary>
            <param name="packet">
                [in,out] Packet to transform.
            </param>
            <param name="isRtcp">
                True if input is RTCP, otherwise RTP.
            </param>
            <returns>
                A SRtpStatusCode.
            </returns>
            -------------------------------------------------------------------------------------------------
        </member>
        <member name="M:StreamCoders.Rtp.ISRtpSession.UnProtect(StreamCoders.Rtp.RtpPacket@)">
            -------------------------------------------------------------------------------------------------
            <summary>
                Un-protects the given packet.
            </summary>
            <param name="packet">
                [in,out] Packet to transform.
            </param>
            <returns>
                A SRtpStatusCode.
            </returns>
            -------------------------------------------------------------------------------------------------
        </member>
        <member name="M:StreamCoders.Rtp.ISRtpSession.UnProtect(StreamCoders.Rtp.RtcpCompoundPacket@)">
            -------------------------------------------------------------------------------------------------
            <summary>
                Un protect.
            </summary>
            <param name="packet">
                [in,out] Packet to transform.
            </param>
            <returns>
                A SRtpStatusCode.
            </returns>
            -------------------------------------------------------------------------------------------------
        </member>
        <member name="T:StreamCoders.Rtp.SRtpSynchronizationSourceType">
            -------------------------------------------------------------------------------------------------
            <summary>
                Defines the behavior of how synchronization sources are treated.
            </summary>
            -------------------------------------------------------------------------------------------------
        </member>
        <member name="F:StreamCoders.Rtp.SRtpSynchronizationSourceType.Specific">
            <summary>
                Indicates a specific SSRC. All outbound streams must be specific.
            </summary>
        </member>
        <member name="F:StreamCoders.Rtp.SRtpSynchronizationSourceType.InboundAny">
            <summary>
                Wildcard stream. Indicates that any inbound stream with the same key will succeed.
            </summary>
        </member>
        <member name="T:StreamCoders.Rtp.SRtpStreamDirection">
            -------------------------------------------------------------------------------------------------
            <summary>
                Contains information about the direction of an SRTP stream.
            </summary>
            -------------------------------------------------------------------------------------------------
        </member>
        <member name="F:StreamCoders.Rtp.SRtpStreamDirection.Inbound">
            <summary>
                The stream is inbound and a key and crypto suite is provided by the sender
            </summary>
        </member>
        <member name="F:StreamCoders.Rtp.SRtpStreamDirection.Outbound">
            <summary>
                The stream is outbound and a key is provided by the user
            </summary>
        </member>
        <member name="T:StreamCoders.Rtp.SRtpStatusCode">
            -------------------------------------------------------------------------------------------------
            <summary>
                Contains status codes return from SRTP methods and functions.
            </summary>
            -------------------------------------------------------------------------------------------------
        </member>
        <member name="F:StreamCoders.Rtp.SRtpStatusCode.StatusOk">
            <summary>
                nothing to report
            </summary>
        </member>
        <member name="F:StreamCoders.Rtp.SRtpStatusCode.StatusFail">
            <summary>
                unspecified failure
            </summary>
        </member>
        <member name="F:StreamCoders.Rtp.SRtpStatusCode.StatusBadParam">
            <summary>
                unsupported parameter
            </summary>
        </member>
        <member name="F:StreamCoders.Rtp.SRtpStatusCode.StatusAllocFail">
            <summary>
                Couldn't allocate memory
            </summary>
        </member>
        <member name="F:StreamCoders.Rtp.SRtpStatusCode.StatusDeallocFail">
            <summary>
                Couldn't deallocate properly
            </summary>
        </member>
        <member name="F:StreamCoders.Rtp.SRtpStatusCode.StatusInitFail">
            <summary>
                Couldn't initialize
            </summary>
        </member>
        <member name="F:StreamCoders.Rtp.SRtpStatusCode.StatusTerminus">
            <summary>
                Can't process as much data as requested
            </summary>
        </member>
        <member name="F:StreamCoders.Rtp.SRtpStatusCode.StatusAuthFail">
            <summary>
                Authentication failure
            </summary>
        </member>
        <member name="F:StreamCoders.Rtp.SRtpStatusCode.StatusCipherFail">
            <summary>
                Cipher failure
            </summary>
        </member>
        <member name="F:StreamCoders.Rtp.SRtpStatusCode.StatusReplayFail">
            <summary>
                Replay check failed (bad index)
            </summary>
        </member>
        <member name="F:StreamCoders.Rtp.SRtpStatusCode.StatusReplayOld">
            <summary>
                Replay check failed (index too old)
            </summary>
        </member>
        <member name="F:StreamCoders.Rtp.SRtpStatusCode.StatusAlgoFail">
            <summary>
                Algorithm failed test routine
            </summary>
        </member>
        <member name="F:StreamCoders.Rtp.SRtpStatusCode.StatusNoSuchOp">
            <summary>
                Unsupported operation
            </summary>
        </member>
        <member name="F:StreamCoders.Rtp.SRtpStatusCode.StatusNoCtx">
            <summary>
                No appropriate context found. This can indicate that the wrong SSRC was set.
            </summary>
        </member>
        <member name="F:StreamCoders.Rtp.SRtpStatusCode.StatusCantCheck">
            <summary>
                Unable to perform desired validation
            </summary>
        </member>
        <member name="F:StreamCoders.Rtp.SRtpStatusCode.StatusKeyExpired">
            <summary>
                Can't use key any more
            </summary>
        </member>
        <member name="F:StreamCoders.Rtp.SRtpStatusCode.StatusSocketErr">
            <summary>
                Error in use of socket
            </summary>
        </member>
        <member name="F:StreamCoders.Rtp.SRtpStatusCode.StatusSignalErr">
            <summary>
                Error in use POSIX signals
            </summary>
        </member>
        <member name="F:StreamCoders.Rtp.SRtpStatusCode.StatusNonceBad">
            <summary>
                Nonce check failed
            </summary>
        </member>
        <member name="F:StreamCoders.Rtp.SRtpStatusCode.StatusReadFail">
            <summary>
                Couldn't read data
            </summary>
        </member>
        <member name="F:StreamCoders.Rtp.SRtpStatusCode.StatusWriteFail">
            <summary>
                Couldn't write data
            </summary>
        </member>
        <member name="F:StreamCoders.Rtp.SRtpStatusCode.StatusParseErr">
            <summary>
                Error parsing data
            </summary>
        </member>
        <member name="F:StreamCoders.Rtp.SRtpStatusCode.StatusEncodeErr">
            <summary>
                Error encoding data
            </summary>
        </member>
        <member name="F:StreamCoders.Rtp.SRtpStatusCode.StatusSemaphoreErr">
            <summary>
                Error while using semaphores
            </summary>
        </member>
        <member name="F:StreamCoders.Rtp.SRtpStatusCode.StatusPfkeyErr">
            <summary>
                Error while using pfkey
            </summary>
        </member>
        <member name="T:StreamCoders.Rtp.SRtpStreamConfiguration">
            -------------------------------------------------------------------------------------------------
            <summary>
                Rtp stream configuration.
            </summary>
            -------------------------------------------------------------------------------------------------
        </member>
        <member name="P:StreamCoders.Rtp.SRtpStreamConfiguration.Direction">
            -------------------------------------------------------------------------------------------------
            <summary>
                Gets or sets the direction of the stream.
            </summary>
            <value>
                The direction.
            </value>
            -------------------------------------------------------------------------------------------------
        </member>
        <member name="P:StreamCoders.Rtp.SRtpStreamConfiguration.SynchronizationSourceType">
            -------------------------------------------------------------------------------------------------
            <summary>
                Gets or sets the type of the type synchronization source.
            </summary>
            <value>
                The type of the synchronization source.
            </value>
            -------------------------------------------------------------------------------------------------
        </member>
        <member name="P:StreamCoders.Rtp.SRtpStreamConfiguration.Ssrc">
            -------------------------------------------------------------------------------------------------
            <summary>
                Gets or sets the synchronization source of the RTP stream.
            </summary>
            <value>
                The synchronization source.
            </value>
            -------------------------------------------------------------------------------------------------
        </member>
        <member name="P:StreamCoders.Rtp.SRtpStreamConfiguration.Key">
            -------------------------------------------------------------------------------------------------
            <summary>
                Gets or sets the key used to encrypt the RTP/RTCP stream.
            </summary>
            <value>
                The encryption key.
            </value>
            -------------------------------------------------------------------------------------------------
        </member>
        <member name="P:StreamCoders.Rtp.SRtpStreamConfiguration.Suite">
            -------------------------------------------------------------------------------------------------
            <summary>
                Gets or sets the crypto suite to use.
            </summary>
            <value>
                The crypto suite to use.
            </value>
            -------------------------------------------------------------------------------------------------
        </member>
        <member name="T:StreamCoders.Rtsp.Extensions.DeliveryMethod">
            -------------------------------------------------------------------------------------------------
            <summary>
                Values that represent DeliveryMethod.
            </summary>
            -------------------------------------------------------------------------------------------------
        </member>
        <member name="F:StreamCoders.Rtsp.Extensions.DeliveryMethod.Multicast">
            <summary>
                TCP signaling, RTP/RTCP over UDP multicast.
            </summary>
        </member>
        <member name="F:StreamCoders.Rtsp.Extensions.DeliveryMethod.Unicast">
            <summary>
                TCP signaling, RTP/RTCP over UDP unicast.
            </summary>
        </member>
        <member name="F:StreamCoders.Rtsp.Extensions.DeliveryMethod.TcpInterleave">
            <summary>
                TCP signaling, RTP/RTCP over TCP interleave.
            </summary>
        </member>
        <member name="F:StreamCoders.Rtsp.Extensions.DeliveryMethod.RtspOverHttp">
            <summary>
                Same as <b>TcpInterleave</b>, plus all packets are encapsulated in HTTP.
            </summary>
        </member>
        <member name="T:StreamCoders.Rtsp.Extensions.DiscoveryReport">
            -------------------------------------------------------------------------------------------------
            <summary>
                Contains information about the initial discovery of an RTSP resource. It is returned by
                <b>RtspPrimitives.Discover()</b> and <b>RtspSessionManager.Discover()</b>
            </summary>
            -------------------------------------------------------------------------------------------------
        </member>
        <member name="F:StreamCoders.Rtsp.Extensions.DiscoveryReport.Session">
            -------------------------------------------------------------------------------------------------
            <summary>
                A session object is returned from <b>RtspSessionManager</b> if the discovery was successful.
            </summary>
            -------------------------------------------------------------------------------------------------
        </member>
        <member name="F:StreamCoders.Rtsp.Extensions.DiscoveryReport.Successful">
            -------------------------------------------------------------------------------------------------
            <summary>
                Indication whether the initial discovery was successful.
            </summary>
            -------------------------------------------------------------------------------------------------
        </member>
        <member name="F:StreamCoders.Rtsp.Extensions.DiscoveryReport.TimedOut">
            -------------------------------------------------------------------------------------------------
            <summary>
                Indication whether the transaction has timed out.
            </summary>
            -------------------------------------------------------------------------------------------------
        </member>
        <member name="F:StreamCoders.Rtsp.Extensions.DiscoveryReport.Tracks">
            -------------------------------------------------------------------------------------------------
            <summary>
                Tracks discovered from initial Describe method.
            </summary>
            -------------------------------------------------------------------------------------------------
        </member>
        <member name="F:StreamCoders.Rtsp.Extensions.DiscoveryReport.Transaction">
            -------------------------------------------------------------------------------------------------
            <summary>
                The transaction object containing request/response pair.
            </summary>
            -------------------------------------------------------------------------------------------------
        </member>
        <member name="F:StreamCoders.Rtsp.Extensions.DiscoveryReport.TransportEstablished">
            -------------------------------------------------------------------------------------------------
            <summary>
                If Discovery fails, this will indicate whether the underlying transport connection
                (TCP)was established.
            </summary>
            -------------------------------------------------------------------------------------------------
        </member>
        <member name="T:StreamCoders.Rtsp.Extensions.TransportModifier">
            -------------------------------------------------------------------------------------------------
            <summary>
                Allows access to RTSPManager object via RTSP extensions (RtspSessionManager).
            </summary>
            <remarks>
                This class is useful to hook to events that are normally encapsulated by higher
                abstractions.
            </remarks>
            -------------------------------------------------------------------------------------------------
        </member>
        <member name="M:StreamCoders.Rtsp.Extensions.TransportModifier.AttachManager(StreamCoders.Rtsp.RtspManager)">
            -------------------------------------------------------------------------------------------------
            <summary>
                Is called to attach an RTSPManager object. This function is called after the
                RtspSessionManager has created the RTSPManager object and called Init.
            </summary>
            <param name="manager">  . </param>
            -------------------------------------------------------------------------------------------------
        </member>
        <member name="M:StreamCoders.Rtsp.Extensions.TransportModifier.Close">
            -------------------------------------------------------------------------------------------------
            <summary>
                Is called when RtspSessionManager.Close is called.
            </summary>
            -------------------------------------------------------------------------------------------------
        </member>
        <member name="T:StreamCoders.Rtsp.Extensions.MediaCapability">
            -------------------------------------------------------------------------------------------------
            <summary>
                Stores Media capabilities for each RTSP substream.
            </summary>
            -------------------------------------------------------------------------------------------------
        </member>
        <member name="F:StreamCoders.Rtsp.Extensions.MediaCapability.Channels">
            -------------------------------------------------------------------------------------------------
            <summary>
                Number of Audio channels (if applicable)
            </summary>
            -------------------------------------------------------------------------------------------------
        </member>
        <member name="F:StreamCoders.Rtsp.Extensions.MediaCapability.ClockResolution">
            -------------------------------------------------------------------------------------------------
            <summary>
                Audio clock resolution (if applicable)
            </summary>
            -------------------------------------------------------------------------------------------------
        </member>
        <member name="F:StreamCoders.Rtsp.Extensions.MediaCapability.Codec">
            -------------------------------------------------------------------------------------------------
            <summary>
                Audio/Video Codec used.
            </summary>
            -------------------------------------------------------------------------------------------------
        </member>
        <member name="F:StreamCoders.Rtsp.Extensions.MediaCapability.DecoderConfig">
            -------------------------------------------------------------------------------------------------
            <summary>
                The decoder configuration.
            </summary>
            -------------------------------------------------------------------------------------------------
        </member>
        <member name="F:StreamCoders.Rtsp.Extensions.MediaCapability.fmtp">
            -------------------------------------------------------------------------------------------------
            <summary>
                The fmtp.
            </summary>
            -------------------------------------------------------------------------------------------------
        </member>
        <member name="F:StreamCoders.Rtsp.Extensions.MediaCapability.Frequency">
            -------------------------------------------------------------------------------------------------
            <summary>
                The frequency.
            </summary>
            -------------------------------------------------------------------------------------------------
        </member>
        <member name="F:StreamCoders.Rtsp.Extensions.MediaCapability.h264Metrics">
            -------------------------------------------------------------------------------------------------
            <summary>
                The 264 metrics.
            </summary>
            -------------------------------------------------------------------------------------------------
        </member>
        <member name="F:StreamCoders.Rtsp.Extensions.MediaCapability.h264ParameterSet">
            -------------------------------------------------------------------------------------------------
            <summary>
                Set the 264 parameter belongs to.
            </summary>
            -------------------------------------------------------------------------------------------------
        </member>
        <member name="F:StreamCoders.Rtsp.Extensions.MediaCapability.Height">
            -------------------------------------------------------------------------------------------------
            <summary>
                Optional framesize parameter (height) if restrictions apply.
            </summary>
            -------------------------------------------------------------------------------------------------
        </member>
        <member name="F:StreamCoders.Rtsp.Extensions.MediaCapability.InfoHeader">
            -------------------------------------------------------------------------------------------------
            <summary>
                Together with RTCP, the Info header allows easy synchronization after Play or Play-SEEK.
            </summary>
            -------------------------------------------------------------------------------------------------
        </member>
        <member name="F:StreamCoders.Rtsp.Extensions.MediaCapability.PayloadType">
            -------------------------------------------------------------------------------------------------
            <summary>
                Payload type of media.
            </summary>
            -------------------------------------------------------------------------------------------------
        </member>
        <member name="F:StreamCoders.Rtsp.Extensions.MediaCapability.TrackId">
            -------------------------------------------------------------------------------------------------
            <summary>
                Track ID of media.
            </summary>
            -------------------------------------------------------------------------------------------------
        </member>
        <member name="F:StreamCoders.Rtsp.Extensions.MediaCapability.Width">
            -------------------------------------------------------------------------------------------------
            <summary>
                Optional framesize parameter (width) if restrictions apply.
            </summary>
            -------------------------------------------------------------------------------------------------
        </member>
        <member name="T:StreamCoders.Rtsp.Extensions.MediaParser">
            -------------------------------------------------------------------------------------------------
            <summary>
                Represent a specialized parser for media information.
            </summary>
            -------------------------------------------------------------------------------------------------
        </member>
        <member name="M:StreamCoders.Rtsp.Extensions.MediaParser.ParseMedia``1(StreamCoders.Sdp.SdpMessage)">
            <summary>
                Parses all media attributes in an SDP and returns a list of <c>TrackInfo</c>.
                <para>Currently supported video codecs: H.264 (AVC), MPEG-4.2, H.263, JPEG</para>
                <para>
                    Currently supported audio codecs: AAC, G.711a/u (also PT 0 and 8), G.726, PCM L16 (PT 10), AMR-NB, AMR-WB,
                    G.728 (PT 15), G.729, G.729.1, G.722, G.723
                </para>
            </summary>
            <typeparam name="T">Type parameter with a <c>TrackInfo</c> constraint.</typeparam>
            <param name="sdpMessage">A SdpMessage which contains SdpMedia instances</param>
            <returns>Returns a list of <c>TrackInfo</c> instance</returns>
        </member>
        <member name="M:StreamCoders.Rtsp.Extensions.MediaParser.ParseMedia``1(``0,StreamCoders.Sdp.SdpMedia)">
            <summary>
                Parses an SDP media attribute and returns track information for it.
                <para>Currently supported video codecs: H.264 (AVC), MPEG-4.2, H.263, JPEG</para>
                <para>
                    Currently supported audio codecs: AAC, G.711a/u (also PT 0 and 8), G.726, PCM L16 (PT 10), AMR-NB, AMR-WB,
                    G.728 (PT 15), G.729, G.729.1, G.722, G.723
                </para>
            </summary>
            <typeparam name="T">Type parameter with a <c>TrackInfo</c> constraint.</typeparam>
            <param name="media">SDPMedia attribute to parse</param>
            <returns>Returns a <c>TrackInfo</c> instance</returns>
        </member>
        <member name="M:StreamCoders.Rtsp.Extensions.MediaParser.ParseMedia(StreamCoders.Rtsp.RtspTrackInfo)">
            -------------------------------------------------------------------------------------------------
            <summary>
                <para>
                    Parses SDP data contained within an RtspTrackInfo object and fills out the
                    MediaCapability fields.
                </para>
                <para>Currently supported video codecs: H.264 (AVC), MPEG-4.2, H.263, JPEG</para>
                <para>
                    Currently supported audio codecs: AAC, G.711a/u (also PT 0 and 8), G.726, PCM L16 (PT 10), AMR-NB, AMR-WB,
                    G.728 (PT 15), G.729, G.729.1, G.722, G.723
                </para>
            </summary>
            <param name="RtspTrackInfo">   SubStream track information. </param>
            -------------------------------------------------------------------------------------------------
        </member>
        <member name="F:StreamCoders.Rtsp.Extensions.MediaStreamType.Undefined">
            <summary>
                Unknown or net yet determined media stream type.
            </summary>
        </member>
        <member name="F:StreamCoders.Rtsp.Extensions.MediaStreamType.Live">
            <summary>
                Live stream (open interval)
            </summary>
        </member>
        <member name="F:StreamCoders.Rtsp.Extensions.MediaStreamType.Vod">
            <summary>
                Video on Demand from a recording (closed interval)
            </summary>
        </member>
        <member name="T:StreamCoders.Rtsp.Extensions.RtspConfiguration">
            -------------------------------------------------------------------------------------------------
            <summary>
                Contains configuration information for RtspPrimitives.
            </summary>
            -------------------------------------------------------------------------------------------------
        </member>
        <member name="F:StreamCoders.Rtsp.Extensions.RtspConfiguration.NextInterleaveChannel">
            -------------------------------------------------------------------------------------------------
            <summary>
                Initial interleave channel to use in when using <b>CreateTcpInterleaveSession</b>. This
                value will then be automatically incremented.
            </summary>
            -------------------------------------------------------------------------------------------------
        </member>
        <member name="F:StreamCoders.Rtsp.Extensions.RtspConfiguration.Password">
            -------------------------------------------------------------------------------------------------
            <summary>
                Password to RTSP resource.
            </summary>
            -------------------------------------------------------------------------------------------------
        </member>
        <member name="F:StreamCoders.Rtsp.Extensions.RtspConfiguration.RemoteEndpoint">
            -------------------------------------------------------------------------------------------------
            <summary>
                The remote endpoint or proxy to the RTSP resource. This can be null if the host part -of
                <b>RtspResource</b> is identical with the IP endpoint (no proxy)
            </summary>
            -------------------------------------------------------------------------------------------------
        </member>
        <member name="F:StreamCoders.Rtsp.Extensions.RtspConfiguration.RtspResourceUri">
            -------------------------------------------------------------------------------------------------
            <summary>
                If a proxy or other types of indirections are used, this is the endpoint the client
                should connect to.
            </summary>
            -------------------------------------------------------------------------------------------------
        </member>
        <member name="F:StreamCoders.Rtsp.Extensions.RtspConfiguration.TransportModifiers">
            -------------------------------------------------------------------------------------------------
            <summary>
                The <b>ITransportModifier</b> to use on this session. (Optional)
            </summary>
            -------------------------------------------------------------------------------------------------
        </member>
        <member name="F:StreamCoders.Rtsp.Extensions.RtspConfiguration.UserName">
            -------------------------------------------------------------------------------------------------
            <summary>
                Username to RTSP resource.
            </summary>
            -------------------------------------------------------------------------------------------------
        </member>
        <member name="F:StreamCoders.Rtsp.Extensions.RtspConfiguration.UseRtcpInterleaveChannel">
            -------------------------------------------------------------------------------------------------
            <summary>
                If true, the session setup will include a dedicated interleave channel for RTCP signaling.
            </summary>
            -------------------------------------------------------------------------------------------------
        </member>
        <member name="T:StreamCoders.Rtsp.Extensions.RtspOverHttp">
            -------------------------------------------------------------------------------------------------
            <summary>
                Implements RTSP over HTTP (See Dispatch 28 on Apple Dev.: Tunnelling RTSP and RTP through
                HTTP) by using ITransportModifier to intercept outgoing/incoming RTSP for HTTP
                encapsulation. By being derived from ITransportModifier, the object gains access to the
                underlying RTSPManager object and allows the hooking of <b>OnBeforeSend</b> and
                <b>OnBeforeReceive</b> to encapsulated RTSP sessions.
            </summary>
            <remarks>
                RTSP over HTTP supports both RTSP and HTTP layer authentication.
            </remarks>
            <seealso cref="!:StreamCoders.Rtsp.Extensions.ITransportModifier" />
            -------------------------------------------------------------------------------------------------
        </member>
        <member name="M:StreamCoders.Rtsp.Extensions.RtspOverHttp.AttachManager(StreamCoders.Rtsp.RtspManager)">
            -------------------------------------------------------------------------------------------------
            <summary>
                Attaches RTSPManager to RtspOverHttp, making use of OnBeforeSend and OnBeforeReceive.
            </summary>
            <exception cref="T:System.Exception">    Thrown when an exception error condition occurs. </exception>
            <param name="manager">  . </param>
            -------------------------------------------------------------------------------------------------
        </member>
        <member name="M:StreamCoders.Rtsp.Extensions.RtspOverHttp.Close">
            -------------------------------------------------------------------------------------------------
            <summary>
                Closes the RTSP/HTTP POST channel.
            </summary>
            -------------------------------------------------------------------------------------------------
        </member>
        <member name="T:StreamCoders.Rtsp.Extensions.RtspOverHttpErrorEventArgs">
            <summary>
                Error event for RTSP over HTTP TransportModifier
            </summary>
        </member>
        <member name="T:StreamCoders.Rtsp.Extensions.RtspPrimitives">
            -------------------------------------------------------------------------------------------------
            <summary>
                Handles basic operations such as creating sessions, aggregate / non-aggregate
                communication, teardown. RtspPrimitives uses a bulk transactional model (see
                <b>BulkTransaction</b>), that allows it to pair single or multiple requests with their
                respective response.
            </summary>
            -------------------------------------------------------------------------------------------------
        </member>
        <member name="F:StreamCoders.Rtsp.Extensions.RtspPrimitives.Configuration">
            -------------------------------------------------------------------------------------------------
            <summary>
                Contains configuration details.
            </summary>
            -------------------------------------------------------------------------------------------------
        </member>
        <member name="F:StreamCoders.Rtsp.Extensions.RtspPrimitives.DefaultTransactionWaitTimeout">
            -------------------------------------------------------------------------------------------------
            <summary>
                The amount of time to wait for each transaction to complete.
            </summary>
            -------------------------------------------------------------------------------------------------
        </member>
        <member name="F:StreamCoders.Rtsp.Extensions.RtspPrimitives.DiscoverWaitReplyTimeout">
            -------------------------------------------------------------------------------------------------
            <summary>
                The amount of time to wait for a reply on the initial Discover (Describe).
            </summary>
            -------------------------------------------------------------------------------------------------
        </member>
        <member name="F:StreamCoders.Rtsp.Extensions.RtspPrimitives.SetupWaitReplyTimeout">
            -------------------------------------------------------------------------------------------------
            <summary>
                The amount of time to wait for a reply for a Setup request.
            </summary>
            -------------------------------------------------------------------------------------------------
        </member>
        <member name="F:StreamCoders.Rtsp.Extensions.RtspPrimitives.TearDownWaitReplyTimeout">
            -------------------------------------------------------------------------------------------------
            <summary>
                The amount of time to wait for a reply to a Teardown request.
            </summary>
            -------------------------------------------------------------------------------------------------
        </member>
        <member name="M:StreamCoders.Rtsp.Extensions.RtspPrimitives.#ctor">
            -------------------------------------------------------------------------------------------------
            <summary>
                Default constructor.
            </summary>
            -------------------------------------------------------------------------------------------------
        </member>
        <member name="E:StreamCoders.Rtsp.Extensions.RtspPrimitives.OnLog">
            -------------------------------------------------------------------------------------------------
            <summary>
                Event queue for all listeners interested in OnLog events.
            </summary>
            -------------------------------------------------------------------------------------------------
        </member>
        <member name="E:StreamCoders.Rtsp.Extensions.RtspPrimitives.InterleaveDataReceived">
            -------------------------------------------------------------------------------------------------
            <summary>
                Event queue for all listeners interested in OnInterleaveData events.
            </summary>
            -------------------------------------------------------------------------------------------------
        </member>
        <member name="E:StreamCoders.Rtsp.Extensions.RtspPrimitives.OnResponseReceived">
            -------------------------------------------------------------------------------------------------
            <summary>
                Event queue for all listeners interested in OnResponseReceived events.
            </summary>
            -------------------------------------------------------------------------------------------------
        </member>
        <member name="E:StreamCoders.Rtsp.Extensions.RtspPrimitives.OnRequestReceived">
            -------------------------------------------------------------------------------------------------
            <summary>
                Event queue for all listeners interested in OnRequestReceived events.
            </summary>
            -------------------------------------------------------------------------------------------------
        </member>
        <member name="E:StreamCoders.Rtsp.Extensions.RtspPrimitives.DisconnectOccured">
            -------------------------------------------------------------------------------------------------
            <summary>
                Event queue for all listeners interested in OnDisconnect events.
            </summary>
            -------------------------------------------------------------------------------------------------
        </member>
        <member name="M:StreamCoders.Rtsp.Extensions.RtspPrimitives.Open">
            -------------------------------------------------------------------------------------------------
            <summary>
                Opens communication channel with remote endpoint. This function must be called before
                creating a session.
            </summary>
            <returns>
                Returns true if connection to the remote endpoint was successful, otherwise false.
            </returns>
            -------------------------------------------------------------------------------------------------
        </member>
        <member name="M:StreamCoders.Rtsp.Extensions.RtspPrimitives.Close">
            -------------------------------------------------------------------------------------------------
            <summary>
                Closes connection to remote endpoint.
            </summary>
            -------------------------------------------------------------------------------------------------
        </member>
        <member name="M:StreamCoders.Rtsp.Extensions.RtspPrimitives.Discover">
            -------------------------------------------------------------------------------------------------
            <summary>
                Attempts to discover remote resource.
            </summary>
            <returns>
                Returns track information and media capability of remote resource.
            </returns>
            -------------------------------------------------------------------------------------------------
        </member>
        <member name="M:StreamCoders.Rtsp.Extensions.RtspPrimitives.CreateTcpInterleaveSession(System.Collections.Generic.IEnumerable{StreamCoders.Rtsp.Extensions.RtspSubStream})">
            -------------------------------------------------------------------------------------------------
            <summary>
                Attempts to create an RTSP session given a collection of <b>SubStream</b> objects. The
                interleave channels used, are provided by the values by
                <b>Configuration.NextInterleaveChannel</b> and
                <b>Configuration.UseRtcpInterleaveChannel</b>.
            </summary>
            <exception cref="T:System.Exception">    Thrown when an exception error condition occurs. </exception>
            <param name="subStreams">   SubStream objects to use. </param>
            <returns>
                Returns true on success, otherwise false.
            </returns>
            -------------------------------------------------------------------------------------------------
        </member>
        <member name="M:StreamCoders.Rtsp.Extensions.RtspPrimitives.CreateUdpSession(System.Collections.Generic.IEnumerable{StreamCoders.Rtsp.Extensions.RtspSubStream},System.Int32)">
            -------------------------------------------------------------------------------------------------
            <summary>
                Creates an UDP transport session. given a collection of <b>SubStream</b> objects.
            </summary>
            <exception cref="T:System.Exception">    Thrown when an exception error condition occurs. </exception>
            <param name="subStreams">   SubStream objects to use. </param>
            <param name="mediaPort">    The RTP transport port. RTCP will receive mediaPort + 1. </param>
            <returns>
                Returns true on success, otherwise false.
            </returns>
            -------------------------------------------------------------------------------------------------
        </member>
        <member name="M:StreamCoders.Rtsp.Extensions.RtspPrimitives.CreateMulticastSession(System.Collections.Generic.IEnumerable{StreamCoders.Rtsp.Extensions.RtspSubStream},System.Int32)">
            -------------------------------------------------------------------------------------------------
            <summary>
                Creates an UDP multicast transport session. given a collection of <b>SubStream</b>
                objects. If this function succeeds, the multicast group endpoint track information will
                be updated (<b>MulticastGroupRtpEndpoint</b> and <b>MulticastGroupRtcpEndpoint</b>).
            </summary>
            <exception cref="T:System.Exception">    Thrown when an exception error condition occurs. </exception>
            <param name="subStreams">   SubStream objects to use. </param>
            <param name="mediaPort">    The RTP transport port. RTCP will receive mediaPort + 1. </param>
            <returns>
                Returns true on success, otherwise false.
            </returns>
            -------------------------------------------------------------------------------------------------
        </member>
        <member name="M:StreamCoders.Rtsp.Extensions.RtspPrimitives.ExecuteSessionNonAggregate(StreamCoders.Rtsp.MethodType,System.Collections.Generic.IEnumerable{StreamCoders.Rtsp.Extensions.RtspSubStream},StreamCoders.Rtsp.RangeParameters)">
            -------------------------------------------------------------------------------------------------
            <summary>
                Executes a non-aggregate method on a number of substreams.
            </summary>
            <remarks>
                If successful the RTP-Info header will be set in MediaCapability.InfoHeader.
            </remarks>
            <param name="method">
                Currently supportedd methods: Play, Pause (RESUME, SEEK)
            </param>
            <param name="subStreams">       Substreams to use. </param>
            <param name="rangeParameters">  Applies custom defined range parameter (Play). </param>
            <returns>
                Returns true on success, otherwise false.
            </returns>
            -------------------------------------------------------------------------------------------------
        </member>
        <member name="M:StreamCoders.Rtsp.Extensions.RtspPrimitives.ExecuteAggregate(StreamCoders.Rtsp.MethodType,StreamCoders.Rtsp.Transaction@)">
            -------------------------------------------------------------------------------------------------
            <summary>
                Executes aggregated request on session.
            </summary>
            <param name="method">   Currently supported methods: GetParameter, Pause, Play. </param>
            <returns>
                Returns true on success, otherwise false.
            </returns>
            -------------------------------------------------------------------------------------------------
        </member>
        <member name="M:StreamCoders.Rtsp.Extensions.RtspPrimitives.ExecuteAggregate(StreamCoders.Rtsp.MethodType,StreamCoders.Rtsp.RangeParameters,StreamCoders.Rtsp.Transaction@)">
            -------------------------------------------------------------------------------------------------
            <summary>
                Executes aggregated request on session.
            </summary>
            <param name="method">
                Currently supported methods: GetParameter, Pause, Play.
            </param>
            <param name="rangeParameters">  Options for controlling the range. </param>
            <returns>
                Returns true on success, otherwise false.
            </returns>
            -------------------------------------------------------------------------------------------------
        </member>
        <member name="M:StreamCoders.Rtsp.Extensions.RtspPrimitives.TearDownSession">
            -------------------------------------------------------------------------------------------------
            <summary>
                Attemps to tear down an RTSP session by sending a <b>Teardown</b> request.
            </summary>
            <remarks>
                An <b>OnDisconnect</b> event will be raised.
            </remarks>
            <returns>
                Returns true on success, otherwise false.
            </returns>
            -------------------------------------------------------------------------------------------------
        </member>
        <member name="T:StreamCoders.Rtsp.Extensions.RtspSession">
            -------------------------------------------------------------------------------------------------
            <summary>
                Encapsulates the concept of an RTSP session.
            </summary>
            -------------------------------------------------------------------------------------------------
        </member>
        <member name="F:StreamCoders.Rtsp.Extensions.RtspSession.KeepAliveTimeout">
            -------------------------------------------------------------------------------------------------
            <summary>
                Defines the interval at which a keep-alive message is sent to the server.
            </summary>
            -------------------------------------------------------------------------------------------------
        </member>
        <member name="F:StreamCoders.Rtsp.Extensions.RtspSession.RtspSubStreams">
            -------------------------------------------------------------------------------------------------
            <summary>
                List of all SubStream objects contained in this session.
            </summary>
            -------------------------------------------------------------------------------------------------
        </member>
        <member name="F:StreamCoders.Rtsp.Extensions.RtspSession.SessionId">
            -------------------------------------------------------------------------------------------------
            <summary>
                Unique ID identifying this session.
            </summary>
            -------------------------------------------------------------------------------------------------
        </member>
        <member name="M:StreamCoders.Rtsp.Extensions.RtspSession.#ctor(System.Collections.ObjectModel.ReadOnlyCollection{StreamCoders.Rtsp.RtspTrackInfo},StreamCoders.Rtsp.Extensions.RtspPrimitives)">
            -------------------------------------------------------------------------------------------------
            <summary>
                Creates an RtspSession object based on track information provided by an earlier discovery
                of an RTSP resource. By concept, each <b>RtspTrackInfo</b> object is used to create a
                <b>SubStream</b>, which gives <b>RtspPrimitives</b> an interface to allow for aggregation
                and non-aggregation. Each request and response are paired into transaction objects that
                are waitable and abortable (See <b>Transaction</b> or <b>BulkTransaction</b> class).
            </summary>
            <param name="Tracks">    The tracks to use in this session. </param>
            <param name="primitives">       The RtspPrimitives instance to use. </param>
            -------------------------------------------------------------------------------------------------
        </member>
        <member name="P:StreamCoders.Rtsp.Extensions.RtspSession.KeepAliveMethodType">
            -------------------------------------------------------------------------------------------------
            <summary>
                Gets or sets the type of the keep alive method. Valid values are <c>GetParmeter</c> and <c>Options</c>
            </summary>
            <value>
                The type of the keep alive method.
            </value>
            -------------------------------------------------------------------------------------------------
        </member>
        <member name="E:StreamCoders.Rtsp.Extensions.RtspSession.OnRequestReceived">
            -------------------------------------------------------------------------------------------------
            <summary>
                Event queue for all listeners interested in OnRequestReceived events.
            </summary>
            -------------------------------------------------------------------------------------------------
        </member>
        <member name="E:StreamCoders.Rtsp.Extensions.RtspSession.OnResponseReceived">
            -------------------------------------------------------------------------------------------------
            <summary>
                Event queue for all listeners interested in OnResponseReceived events.
            </summary>
            -------------------------------------------------------------------------------------------------
        </member>
        <member name="E:StreamCoders.Rtsp.Extensions.RtspSession.DisconnectOccured">
            -------------------------------------------------------------------------------------------------
            <summary>
                Event queue for all listeners interested in OnDisconnect events.
            </summary>
            -------------------------------------------------------------------------------------------------
        </member>
        <member name="M:StreamCoders.Rtsp.Extensions.RtspSession.SetupTcpInterleaveSubStreams(System.Collections.Generic.List{StreamCoders.Rtsp.Extensions.RtspSubStream})">
            -------------------------------------------------------------------------------------------------
            <summary>
                Attempts to progress the session to set up (<b>Setup</b>) individual substreams. (See
                also <b>RtspPrimitives.CreateTcpInterleaveSession</b>)
            </summary>
            <param name="subs"> A list of <b>SubStream</b> objects to use. </param>
            <returns>
                Returns true on success, otherwise false.
            </returns>
            -------------------------------------------------------------------------------------------------
        </member>
        <member name="M:StreamCoders.Rtsp.Extensions.RtspSession.SetupUdpUnicastSubStreams(System.Collections.Generic.List{StreamCoders.Rtsp.Extensions.RtspSubStream},System.Int32)">
            -------------------------------------------------------------------------------------------------
            <summary>
                Attempts to progress the session to set up (<b>Setup</b>) individual substreams. (See
                also <b>RtspPrimitives.CreateUdpSession</b>)
            </summary>
            <param name="subs">         A list of <b>SubStream</b> objects to use. </param>
            <param name="mediaport">    The mediaport. </param>
            <returns>
                Returns true on success, otherwise false.
            </returns>
            -------------------------------------------------------------------------------------------------
        </member>
        <member name="M:StreamCoders.Rtsp.Extensions.RtspSession.SetupUdpMulticastSubStreams(System.Collections.Generic.List{StreamCoders.Rtsp.Extensions.RtspSubStream},System.Int32)">
            -------------------------------------------------------------------------------------------------
            <summary>
                Attempts to progress the session to set up (<b>Setup</b>) individual substreams. (See
                also <b>RtspPrimitives.CreateMulticastSession</b>)
            </summary>
            <param name="subs">         A list of <b>SubStream</b> objects to use. </param>
            <param name="mediaport">    The mediaport. </param>
            <returns>
                Returns true on success, otherwise false.
            </returns>
            -------------------------------------------------------------------------------------------------
        </member>
        <member name="M:StreamCoders.Rtsp.Extensions.RtspSession.PlaySubStreams(System.Collections.Generic.List{StreamCoders.Rtsp.Extensions.RtspSubStream})">
            -------------------------------------------------------------------------------------------------
            <summary>
                Attempts to progress the session to a play state (<b>Play</b>) on indivual substreams.
                (See also <b>RtspPrimitives.ExecuteSessionNonAggregate</b>)
            </summary>
            <param name="subs"> A list of <b>SubStream</b> objects to use. </param>
            <returns>
                Returns true on success, otherwise false.
            </returns>
            -------------------------------------------------------------------------------------------------
        </member>
        <member name="M:StreamCoders.Rtsp.Extensions.RtspSession.Play(StreamCoders.Rtsp.RangeParameters,StreamCoders.Rtsp.Transaction@)">
            -------------------------------------------------------------------------------------------------
            <summary>
                Attempts to progress the session to a play state (<b>Play</b>) by using aggregation. (See
                also <b>RtspPrimitives.ExecuteAggregate</b>)
            </summary>
            <param name="rangeParameters">The requested start position of the session</param>
            <param name="transaction">The transaction affiliated with the request.</param>
            <returns>
                Returns true on success, otherwise false.
            </returns>
            -------------------------------------------------------------------------------------------------
        </member>
        <member name="M:StreamCoders.Rtsp.Extensions.RtspSession.Pause">
            -------------------------------------------------------------------------------------------------
            <summary>
                Attempts to progress the session to a pause state (<b>Pause</b>) by using aggregation.
                (See also <b>RtspPrimitives.ExecuteAggregate</b>)
            </summary>
            <returns>
                Returns true on success, otherwise false.
            </returns>
            -------------------------------------------------------------------------------------------------
        </member>
        <member name="M:StreamCoders.Rtsp.Extensions.RtspSession.Pause(StreamCoders.Rtsp.Transaction@)">
            -------------------------------------------------------------------------------------------------
            <summary>
                Attempts to progress the session to a pause state (<b>Pause</b>) by using aggregation.
                (See also <b>RtspPrimitives.ExecuteAggregate</b>)
            </summary>
            <returns>
                Returns true on success, otherwise false.
            </returns>
            -------------------------------------------------------------------------------------------------
        </member>
        <member name="M:StreamCoders.Rtsp.Extensions.RtspSession.PauseSubStreams(System.Collections.Generic.List{StreamCoders.Rtsp.Extensions.RtspSubStream})">
            -------------------------------------------------------------------------------------------------
            <summary>
                Attempts to progress the session to a pause state (<b>Pause</b>) on indivual substreams.
                (See also <b>RtspPrimitives.ExecuteSessionNonAggregate</b>)
            </summary>
            <param name="subs"> A list of <b>SubStream</b> objects to use. </param>
            <returns>
                Returns true on success, otherwise false.
            </returns>
            -------------------------------------------------------------------------------------------------
        </member>
        <member name="M:StreamCoders.Rtsp.Extensions.RtspSession.ResumeSubStreams(System.Collections.Generic.List{StreamCoders.Rtsp.Extensions.RtspSubStream})">
            -------------------------------------------------------------------------------------------------
            <summary>
                Attempts to progress the session to a play state (<b>Play</b>) on indivual substreams.
                This method should only be used for live streams, as it uses the open interval with
                <b>Now</b> to play/resume a session. See <b>Seek</b> for VOD. (See also
                <b>RtspPrimitives.ExecuteSessionNonAggregate</b>)
            </summary>
            <param name="subs"> A list of <b>SubStream</b> objects to use. </param>
            <returns>
                Returns true on success, otherwise false.
            </returns>
            -------------------------------------------------------------------------------------------------
        </member>
        <member name="M:StreamCoders.Rtsp.Extensions.RtspSession.Seek(StreamCoders.Rtsp.RangeParameters,StreamCoders.Rtsp.RangeParameters@)">
            -------------------------------------------------------------------------------------------------
            <summary>
                Attempts to progress the session to a play state (<b>Play</b>) by supplying time offset.
                The session can either be paused or in play state. (See also
                <b>RtspPrimitives.ExecuteAggregate</b>)
            </summary>
            <param name="rangeParameters">The range requested to seek to.</param>
            <param name="effectiveNewRange">The range returned by the server.</param>
            <returns>
                Returns true on success, otherwise false.
            </returns>
            -------------------------------------------------------------------------------------------------
        </member>
        <member name="M:StreamCoders.Rtsp.Extensions.RtspSession.Seek(StreamCoders.Rtsp.RangeParameters,StreamCoders.Rtsp.Transaction@)">
            -------------------------------------------------------------------------------------------------
            <summary>
                Attempts to progress the session to a play state (<b>Play</b>) by supplying time offset.
                The session can either be paused or in play state. (See also
                <b>RtspPrimitives.ExecuteAggregate</b>)
            </summary>
            <param name="rangeParameters">The range requested to seek to.</param>
            <param name="transaction">The transaction affiliated with the request.</param>
            <returns>
                Returns true on success, otherwise false.
            </returns>
            -------------------------------------------------------------------------------------------------
        </member>
        <member name="M:StreamCoders.Rtsp.Extensions.RtspSession.SeekSubStreams(System.Collections.Generic.List{StreamCoders.Rtsp.Extensions.RtspSubStream},StreamCoders.Rtsp.RangeParameters)">
            -------------------------------------------------------------------------------------------------
            <summary>
                Attempts to progress the session to a play state (<b>Play</b>) by supplying time offset.
                The session can either be paused or in play state. (See also
                <b>RtspPrimitives.ExecuteSessionNonAggregate</b>)
            </summary>
            <param name="subs">     A list of <b>SubStream</b> objects to use. </param>
            <param name="rangeParameters">The range requested to seek to.</param>
            <returns>
                Returns true on success, otherwise false.
            </returns>
            -------------------------------------------------------------------------------------------------
        </member>
        <member name="M:StreamCoders.Rtsp.Extensions.RtspSession.SendKeepAlive">
            -------------------------------------------------------------------------------------------------
            <summary>
                Sends an RTSP request to keep session alive. The type of keep alive sent out depends on the value in
                <c>KeepAliveMethodType</c>
            </summary>
            <returns>
                Returns true on success, otherwise false.
            </returns>
            -------------------------------------------------------------------------------------------------
        </member>
        <member name="M:StreamCoders.Rtsp.Extensions.RtspSession.SendKeepAlive(StreamCoders.Rtsp.Transaction@)">
            -------------------------------------------------------------------------------------------------
            <summary>
                Sends an RTSP request to keep session alive. The type of keep alive sent out depends on the value in
                <c>KeepAliveMethodType</c>
            </summary>
            <param name="transaction">Transaction to signal</param>
            <returns>
                Returns true on success, otherwise false.
            </returns>
            -------------------------------------------------------------------------------------------------
        </member>
        <member name="M:StreamCoders.Rtsp.Extensions.RtspSession.Teardown">
            -------------------------------------------------------------------------------------------------
            <summary>
                Attempts to tear down the session by sending an RTSP <b>Teardown</b> request. If
                <b>KeepAliveTimeout</b> was specified, the corresponding timer will always be disposed.
            </summary>
            <returns>
                Returns true on success, otherwise false.
            </returns>
            -------------------------------------------------------------------------------------------------
        </member>
        <member name="M:StreamCoders.Rtsp.Extensions.RtspSession.OnDisconnectOccured(StreamCoders.Network.TransportOperationCompleteEventArgs)">
            <summary>
                Invokes the DisconnectOccured event.
            </summary>
            <param name="e"></param>
        </member>
        <member name="T:StreamCoders.Rtsp.Extensions.RtspSessionManager">
            -------------------------------------------------------------------------------------------------
            <summary>
                Represents a simple way to set up and tear down an RtspSession instance.
            </summary>
            -------------------------------------------------------------------------------------------------
        </member>
        <member name="P:StreamCoders.Rtsp.Extensions.RtspSessionManager.DiscoveryReport">
            -------------------------------------------------------------------------------------------------
            <summary>   Gets or sets the discovery report. </summary>
            <value> The discovery report. </value>
            -------------------------------------------------------------------------------------------------
        </member>
        <member name="P:StreamCoders.Rtsp.Extensions.RtspSessionManager.DefaultWaitTimeout">
            -------------------------------------------------------------------------------------------------
            <summary>
                The default timeout on all request/response transaction, if not overspecified by another
                property.
            </summary>
            <value> The default wait timeout. </value>
            -------------------------------------------------------------------------------------------------
        </member>
        <member name="P:StreamCoders.Rtsp.Extensions.RtspSessionManager.DiscoverWaitReplyTimeout">
            -------------------------------------------------------------------------------------------------
            <summary>
                Overrides DefaultWaitTimeout. The timeout used to specifically wait for initial
                (<b>Describe</b>) reply.
            </summary>
            <value>
                The discover wait reply timeout.
            </value>
            -------------------------------------------------------------------------------------------------
        </member>
        <member name="P:StreamCoders.Rtsp.Extensions.RtspSessionManager.SetupWaitReplyTimeout">
            -------------------------------------------------------------------------------------------------
            <summary>
                Overrides DefaultWaitTimeout. The timeout used to specifically wait for session setup
                (<b>Setup</b>) reply.
            </summary>
            <value>
                The setup wait reply timeout.
            </value>
            -------------------------------------------------------------------------------------------------
        </member>
        <member name="P:StreamCoders.Rtsp.Extensions.RtspSessionManager.TearDownWaitReplyTimeout">
            -------------------------------------------------------------------------------------------------
            <summary>
                Overrides DefaultWaitTimeout. The timeout used to specifically wait for session teardown
                (<b>Teardown</b>) reply.
            </summary>
            <value> The tear down wait reply timeout. </value>
            -------------------------------------------------------------------------------------------------
        </member>
        <member name="P:StreamCoders.Rtsp.Extensions.RtspSessionManager.KeepAliveMethodType">
            -------------------------------------------------------------------------------------------------
            <summary>
                Gets or sets the type of the keep alive method. Valid values are <c>GetParmeter</c> and <c>Options</c>
            </summary>
            <value>
                The type of the keep alive method.
            </value>
            -------------------------------------------------------------------------------------------------
        </member>
        <member name="M:StreamCoders.Rtsp.Extensions.RtspSessionManager.AddTransportModifier(StreamCoders.Rtsp.Extensions.TransportModifier)">
            -------------------------------------------------------------------------------------------------
            <summary>
                Optional. Set the transport modifier for this session, to allow access to the underlying
                RTSPManager object.
            </summary>
            <remarks>
                This function must be called before <c>Discover</c> is called.
            </remarks>
            <param name="modifier"> Modifier to use. </param>
            -------------------------------------------------------------------------------------------------
        </member>
        <member name="E:StreamCoders.Rtsp.Extensions.RtspSessionManager.DisconnectOccured">
            -------------------------------------------------------------------------------------------------
            <summary>
                Event raised when the underlying transport of this session was disconnected.
            </summary>
            -------------------------------------------------------------------------------------------------
        </member>
        <member name="M:StreamCoders.Rtsp.Extensions.RtspSessionManager.Discover(StreamCoders.Rtsp.Url,System.Net.EndPoint,System.String,System.String)">
            -------------------------------------------------------------------------------------------------
            <summary>   Attempts to discover an RTSP resource. </summary>
            <param name="url">      RTSP URI. </param>
            <param name="proxy">    Optional proxy endpoint. Set to null if not used. </param>
            <param name="userName"> Optional username. Set to null or empty if not used. </param>
            <param name="password"> Optional password. Set to null or empty if not used. </param>
            <returns>
                Returns an <b>RtspSession</b> which is used to proceed working with the RTSP resource. If
                the discovery was unsuccessful (TCP connection attemps failed, authentication problems,
                404) or the resource doesn't produce compatible <b>RtspTrackInfo</b> objects (due to
                incompatible/invalid media attributes), the return value may also be null.
            </returns>
            -------------------------------------------------------------------------------------------------
        </member>
        <member name="M:StreamCoders.Rtsp.Extensions.RtspSessionManager.TearDownSession">
            -------------------------------------------------------------------------------------------------
            <summary>
                Attempts to tear down (<b>Teardown</b>) the RTSP session.
            </summary>
            -------------------------------------------------------------------------------------------------
        </member>
        <member name="T:StreamCoders.Rtsp.Extensions.RtspSubStream">
            -------------------------------------------------------------------------------------------------
            <summary>
                Represents a single track in an RTSP session.
            </summary>
            <remarks>
                Note:
                - MediaStreamSources subscribe to packets arrived. So if a MediaStreamSource is disposed
                the packets are conserved as the Observable is disposed.
                - Presentation times are now calculated on arrival.
            </remarks>
            -------------------------------------------------------------------------------------------------
        </member>
        <member name="F:StreamCoders.Rtsp.Extensions.RtspSubStream.Configuration">
            -------------------------------------------------------------------------------------------------
            <summary>
                Contains additional configuration to the sub stream.
            </summary>
            -------------------------------------------------------------------------------------------------
        </member>
        <member name="F:StreamCoders.Rtsp.Extensions.RtspSubStream.HasDisconnectIndication">
            -------------------------------------------------------------------------------------------------
            <summary>
                Is set to true of OnDisconnect event was received.
            </summary>
            -------------------------------------------------------------------------------------------------
        </member>
        <member name="F:StreamCoders.Rtsp.Extensions.RtspSubStream.RtspTrackInfo">
            -------------------------------------------------------------------------------------------------
            <summary>
                Track information of sub-stream giving detailed information of media.
            </summary>
            -------------------------------------------------------------------------------------------------
        </member>
        <member name="F:StreamCoders.Rtsp.Extensions.RtspSubStream.State">
            -------------------------------------------------------------------------------------------------
            <summary>
                Play-back state of stream.
            </summary>
            -------------------------------------------------------------------------------------------------
        </member>
        <member name="F:StreamCoders.Rtsp.Extensions.RtspSubStream.UseSubStream">
            -------------------------------------------------------------------------------------------------
            <summary>
                Indication whether this sub-stream is used by the session or ignored.
            </summary>
            -------------------------------------------------------------------------------------------------
        </member>
        <member name="M:StreamCoders.Rtsp.Extensions.RtspSubStream.#ctor(StreamCoders.Rtsp.Extensions.RtspSession,StreamCoders.Rtsp.RtspTrackInfo)">
            -------------------------------------------------------------------------------------------------
            <summary>
                Creates a SubStream object. SubStream objects represent a single tracks of an RTSP
                resource and are normally created automatically via the RtspSession constructor.
            </summary>
            <param name="parentSession">   Session parent of this SubStream. </param>
            <param name="RtspTrackInfo">       RTSP track information. </param>
            -------------------------------------------------------------------------------------------------
        </member>
        <member name="M:StreamCoders.Rtsp.Extensions.RtspSubStream.Play">
            -------------------------------------------------------------------------------------------------
            <summary>
                Plays and inherently (VCR) resumes playback.
            </summary>
            <remarks>
                If successful the Configuration will contain the timestamp part of the RTP-Info header
                for this particular track.
            </remarks>
            <returns>
                True if Play/Resume transition was successful, otherwise false.
            </returns>
            -------------------------------------------------------------------------------------------------
        </member>
        <member name="M:StreamCoders.Rtsp.Extensions.RtspSubStream.Pause">
            -------------------------------------------------------------------------------------------------
            <summary>
                Transitions a stream to Pause state.
            </summary>
            <returns>
                True if pause transition was successful, otherwise false.
            </returns>
            -------------------------------------------------------------------------------------------------
        </member>
        <member name="M:StreamCoders.Rtsp.Extensions.RtspSubStream.Seek(StreamCoders.Rtsp.RangeParameters)">
            -------------------------------------------------------------------------------------------------
            <summary>
                Seeks to a specific position in time.
            </summary>
            <param name="position"> Position providing the time units to seek to. </param>
            <returns>
                true if it succeeds, false if it fails.
            </returns>
            -------------------------------------------------------------------------------------------------
        </member>
        <member name="M:StreamCoders.Rtsp.Extensions.RtspSubStream.Setup(System.Int32,StreamCoders.Rtsp.Extensions.DeliveryMethod)">
            -------------------------------------------------------------------------------------------------
            <summary>
                Attempts to set up an RTSP track.
            </summary>
            <param name="rtpMediaPort">
                Local RTP port in case of unicast or multicast, otherwise 0. RTCP is inferred to be
                RTP-PORT + 1.
            </param>
            <param name="method">       Effectively the <b>Transport</b> type of the media stream. </param>
            <returns>
                true if it succeeds, false if it fails.
            </returns>
            -------------------------------------------------------------------------------------------------
        </member>
        <member name="E:StreamCoders.Rtsp.Extensions.RtspSubStream.OnInterleaveData">
            -------------------------------------------------------------------------------------------------
            <summary>
                Event queue for all listeners interested in OnInterleaveData events.
            </summary>
            -------------------------------------------------------------------------------------------------
        </member>
        <member name="E:StreamCoders.Rtsp.Extensions.RtspSubStream.OnEndOfStreamIndication">
            -------------------------------------------------------------------------------------------------
            <summary>
                Event queue for all listeners interested in OnEndOfStreamIndication events. This implements the special
                <c>END-OF-STREAM</c> indicator specified in draft  draft-zeng-mmusic-00
            </summary>
            -------------------------------------------------------------------------------------------------
        </member>
        <member name="E:StreamCoders.Rtsp.Extensions.RtspSubStream.DisconnectOccured">
            -------------------------------------------------------------------------------------------------
            <summary>
                Event queue for all listeners interested in OnDisconnect events.
            </summary>
            -------------------------------------------------------------------------------------------------
        </member>
        <member name="M:StreamCoders.Rtsp.Extensions.RtspSubStream.AddSlice(StreamCoders.Rtsp.InterleaveSlice)">
            -------------------------------------------------------------------------------------------------
            <summary>
                Adds an interleave slice to the sub stream. The function further determines whether the
                slice is RTP or RTCP. In case of <b>Configuration.MaintainJitter</b> an RTP packet is
                created and added to the jitter. In case of RTCP SR, the <b>PlayoutBuffer</b> is updated
                with the RTCP Sender Report metrics. If subscribed, this function also raises the
                <b>OnInterleave</b> event.
            </summary>
            <param name="slice">    Interleave slice to add. </param>
            -------------------------------------------------------------------------------------------------
        </member>
        <member name="M:StreamCoders.Rtsp.Extensions.RtspSubStream.CreateRtpFromSlice(StreamCoders.Rtsp.InterleaveSlice)">
            -------------------------------------------------------------------------------------------------
            <summary>
                Creates an RTP packet from an interleave slice object.
            </summary>
            <param name="slice">    Slice to create RTP packet from. </param>
            <returns>
                The new rtp from slice.
            </returns>
            -------------------------------------------------------------------------------------------------
        </member>
        <member name="M:StreamCoders.Rtsp.Extensions.RtspSubStream.CreateRtcpFromSlice(StreamCoders.Rtsp.InterleaveSlice)">
            -------------------------------------------------------------------------------------------------
            <summary>
                Creates an RTCP compound packet from an interleave slice.
            </summary>
            <param name="slice">    Slice to create RTCP compound packet from. </param>
            <returns>
                The new rtcp from slice.
            </returns>
            -------------------------------------------------------------------------------------------------
        </member>
        <member name="T:StreamCoders.Rtsp.Extensions.SubStreamConfiguration">
            -------------------------------------------------------------------------------------------------
            <summary>
                Contains additional configuration to a <b>Substream</b> object.
            </summary>
            -------------------------------------------------------------------------------------------------
        </member>
        <member name="F:StreamCoders.Rtsp.Extensions.SubStreamConfiguration.MaintainJitter">
            -------------------------------------------------------------------------------------------------
            <summary>
                If a TCP interleave session is active, setting this to true will have the SubStream
                object maintain a basic jitter and playout buffer. Subscribing to OnFrameComplete will
                allow the application to receive complete frames without having to maintain such buffers
                itself.
            </summary>
            -------------------------------------------------------------------------------------------------
        </member>
        <member name="F:StreamCoders.Rtsp.Extensions.SubStreamConfiguration.MinimumFrameAge">
            -------------------------------------------------------------------------------------------------
            <summary>
                Time the frame is forced to stay in buffer, due to jitter.
            </summary>
            -------------------------------------------------------------------------------------------------
        </member>
        <member name="F:StreamCoders.Rtsp.Extensions.SubStreamConfiguration.RtpInfoInitialTimestamp">
            -------------------------------------------------------------------------------------------------
            <summary>
                Initial timestamp of 0.0 position in RTP timestamps (calibration).
            </summary>
            -------------------------------------------------------------------------------------------------
        </member>
        <member name="F:StreamCoders.Rtsp.Extensions.SubStreamConfiguration.RtpInfoInitialTimestampPresent">
            -------------------------------------------------------------------------------------------------
            <summary>
                Indicates whether RtpInfoInitialTimestamp has a valid timestamp set.
            </summary>
            -------------------------------------------------------------------------------------------------
        </member>
        <member name="F:StreamCoders.Rtsp.Extensions.SubStreamConfiguration.TotalFramesComplete">
            -------------------------------------------------------------------------------------------------
            <summary>
                The total frames complete.
            </summary>
            -------------------------------------------------------------------------------------------------
        </member>
        <member name="F:StreamCoders.Rtsp.Extensions.SubStreamConfiguration.TotalPacketsReceived">
            -------------------------------------------------------------------------------------------------
            <summary>
                The total packets received.
            </summary>
            -------------------------------------------------------------------------------------------------
        </member>
        <member name="T:StreamCoders.Rtsp.Extensions.TransportModifierErrorEventArgs">
            <summary>
                Abstract base class for error events in the TransportModifier
            </summary>
        </member>
        <member name="T:StreamCoders.Rtsp.BaseMessage">
            -------------------------------------------------------------------------------------------------
            <summary>
                Abstract base class for all RTSP messages.
                Messages contain headers (standardized and generic) and content (SDP or custom).
            </summary>
            -------------------------------------------------------------------------------------------------
        </member>
        <member name="P:StreamCoders.Rtsp.BaseMessage.MessageType">
            -------------------------------------------------------------------------------------------------
            <summary>
                Gets or sets the type of the message.
            </summary>
            <value>
                The type of the message.
            </value>
            ###
            <param name="stringToParse">    String to parse. </param>
            -------------------------------------------------------------------------------------------------
        </member>
        <member name="P:StreamCoders.Rtsp.BaseMessage.HasMessageContent">
            -------------------------------------------------------------------------------------------------
            <summary>
                Gets or sets a value indicating whether this object has content.
            </summary>
            <value>
                true if this object has content, false if not.
            </value>
            ###
            <param name="stringToParse">    String to parse. </param>
            -------------------------------------------------------------------------------------------------
        </member>
        <member name="P:StreamCoders.Rtsp.BaseMessage.Content">
            -------------------------------------------------------------------------------------------------
            <summary>
                Gets or sets the content.
            </summary>
            <value>
                The content.
            </value>
            ###
            <param name="stringToParse">    String to parse. </param>
            -------------------------------------------------------------------------------------------------
        </member>
        <member name="M:StreamCoders.Rtsp.BaseMessage.Parse(System.String)">
            -------------------------------------------------------------------------------------------------
            <summary>
                Parses.
            </summary>
            <param name="stringToparse">    String to parse. </param>
            <returns>
                true if it succeeds, false if it fails.
            </returns>
            -------------------------------------------------------------------------------------------------
        </member>
        <member name="M:StreamCoders.Rtsp.BaseMessage.ToString">
            -------------------------------------------------------------------------------------------------
            <summary>
                Convert this object into a string representation.
            </summary>
            <returns>
                This object as a string.
            </returns>
            ###
            <param name="stringToParse">    String to parse. </param>
            -------------------------------------------------------------------------------------------------
        </member>
        <member name="M:StreamCoders.Rtsp.BaseMessage.ParseHeaderStringList(System.String)">
            -------------------------------------------------------------------------------------------------
            <summary>
                Parse header string list.
            </summary>
            <param name="stringToParse">    String to parse. </param>
            -------------------------------------------------------------------------------------------------
        </member>
        <member name="M:StreamCoders.Rtsp.BaseMessage.ParseHeader(System.String)">
            -------------------------------------------------------------------------------------------------
            <summary>
                Parses a string containing a header and creates a <b>BaseHeader</b> instance from it.
            </summary>
            <param name="stringToParse">    String to parse. </param>
            <returns>
                Returns the new created <b>BaseHeader</b> object, otherwise null.
            </returns>
            -------------------------------------------------------------------------------------------------
        </member>
        <member name="M:StreamCoders.Rtsp.BaseMessage.FindHeader(StreamCoders.Rtsp.HeaderType)">
            -------------------------------------------------------------------------------------------------
            <summary>
                Attempts to find a header in the message.
            </summary>
            <param name="hType">    Type of header to find. </param>
            <returns>
                Returns the found header, otherwise null.
            </returns>
            -------------------------------------------------------------------------------------------------
        </member>
        <member name="M:StreamCoders.Rtsp.BaseMessage.FindHeader``1(StreamCoders.Rtsp.HeaderType)">
            <summary>
                Attempts to find a header in the message.
            </summary>
            <typeparam name="T">BaseHeader type to cast to</typeparam>
            <param name="hType">Type of header to find.</param>
            <returns>Returns the found header, otherwise null.</returns>
            -------------------------------------------------------------------------------------------------
            -------------------------------------------------------------------------------------------------
        </member>
        <member name="M:StreamCoders.Rtsp.BaseMessage.DeleteHeader(StreamCoders.Rtsp.HeaderType)">
            -------------------------------------------------------------------------------------------------
            <summary>
                Removes header from the message.
            </summary>
            <param name="htype">    Header to remove. </param>
            <returns>
                Returns true if found and deleted, otherwise false.
            </returns>
            -------------------------------------------------------------------------------------------------
        </member>
        <member name="M:StreamCoders.Rtsp.BaseMessage.DeleteGenericHeader(StreamCoders.Rtsp.GenericHeader)">
            -------------------------------------------------------------------------------------------------
            <summary>
                Deletes a generic message from the message. A generic header is a header
                custom/proprietary header that is not part of the original RTSP specification.
            </summary>
            <param name="gh">   Header to delete. </param>
            <returns>
                Returns true in found and deleted, otherwise false.
            </returns>
            -------------------------------------------------------------------------------------------------
        </member>
        <member name="M:StreamCoders.Rtsp.BaseMessage.GetCSeq">
            -------------------------------------------------------------------------------------------------
            <summary>
                Helper function that returns the CSeq header in a message.
            </summary>
            <returns>
                Returns CSeq header, otherwise null.
            </returns>
            -------------------------------------------------------------------------------------------------
        </member>
        <member name="T:StreamCoders.Rtsp.BeforeReceiveCallback">
            -------------------------------------------------------------------------------------------------
            <summary>
                Callback, called before any packet is parsed or passed on.
            </summary>
            <param name="sender">           Source of the event. </param>
            <param name="client">           The client. </param>
            <param name="data">             The data. </param>
            <param name="receivePacket">    [in,out] Message describing the receive. </param>
            -------------------------------------------------------------------------------------------------
        </member>
        <member name="T:StreamCoders.Rtsp.BeforeSendCallBack">
            -------------------------------------------------------------------------------------------------
            <summary>
                Callback, called before the TCP client sends a packet to the remote endpoint.
            </summary>
            <param name="sender">           Source of the event. </param>
            <param name="client">           The client. </param>
            <param name="rawData">          Information describing the raw. </param>
            <param name="message">          The message. </param>
            <param name="associatedTrack">  The associated track. </param>
            <param name="sendPacket">       [in,out] Message describing the send. </param>
            -------------------------------------------------------------------------------------------------
        </member>
        <member name="T:StreamCoders.Rtsp.BulkTransactions">
            <summary>
                A collection of <b>Transaction</b> objects.
            </summary>
        </member>
        <member name="P:StreamCoders.Rtsp.BulkTransactions.AreResponsesOk">
            <summary>
                Check whether all responses in the stored transactions are 200 OK
            </summary>
        </member>
        <member name="T:StreamCoders.Rtsp.RtspConstants">
            -------------------------------------------------------------------------------------------------
            <summary>
                RtspConstants.
            </summary>
            -------------------------------------------------------------------------------------------------
        </member>
        <member name="P:StreamCoders.Rtsp.RtspConstants.RtspVersion">
            -------------------------------------------------------------------------------------------------
            <summary>
                Gets the RTSP version.
            </summary>
            <value>
                The RTSP version.
            </value>
            -------------------------------------------------------------------------------------------------
        </member>
        <member name="T:StreamCoders.Rtsp.MessageType">
            -------------------------------------------------------------------------------------------------
            <summary>
                Values that represent either request, response or an interleaved message.
            </summary>
            -------------------------------------------------------------------------------------------------
        </member>
        <member name="T:StreamCoders.Rtsp.MethodType">
            -------------------------------------------------------------------------------------------------
            <summary>
                Enumeration of supported RTSP method types.
            </summary>
            -------------------------------------------------------------------------------------------------
        </member>
        <member name="T:StreamCoders.Rtsp.AuthenticationType">
            -------------------------------------------------------------------------------------------------
            <summary>
                Enumeration of supported authentication types.
            </summary>
            -------------------------------------------------------------------------------------------------
        </member>
        <member name="T:StreamCoders.Rtsp.HeaderType">
            -------------------------------------------------------------------------------------------------
            <summary>
                Enumeration of support header types.
            </summary>
            -------------------------------------------------------------------------------------------------
        </member>
        <member name="T:StreamCoders.Rtsp.Date">
            -------------------------------------------------------------------------------------------------
            <summary>
                Represents the Date Header in an RTSP message.
            </summary>
            <seealso cref="T:StreamCoders.Rtsp.BaseHeader" />
            -------------------------------------------------------------------------------------------------
        </member>
        <member name="M:StreamCoders.Rtsp.Date.#ctor">
            -------------------------------------------------------------------------------------------------
            <summary>
                Constructor.
            </summary>
            -------------------------------------------------------------------------------------------------
        </member>
        <member name="P:StreamCoders.Rtsp.Date.HttpTime">
            -------------------------------------------------------------------------------------------------
            <summary>
                Gets or sets the time of the http.
            </summary>
            <value>
                The time of the http.
            </value>
            -------------------------------------------------------------------------------------------------
        </member>
        <member name="M:StreamCoders.Rtsp.Date.ToString">
            -------------------------------------------------------------------------------------------------
            <summary>
                Serializes object to text.
            </summary>
            <returns>
                This object as a string.
            </returns>
            -------------------------------------------------------------------------------------------------
        </member>
        <member name="M:StreamCoders.Rtsp.Date.Parse(System.String)">
            -------------------------------------------------------------------------------------------------
            <summary>
                Parses Header.
            </summary>
            <param name="line"> The line. </param>
            <returns>
                true if it succeeds, false if it fails.
            </returns>
            -------------------------------------------------------------------------------------------------
        </member>
        <member name="T:StreamCoders.Rtsp.EosReason">
            -------------------------------------------------------------------------------------------------
            <summary>
                eos-reason (draft-ietf-mmusic-rtsp-announce-01)
            </summary>
            <seealso cref="T:StreamCoders.Rtsp.BaseHeader" />
            -------------------------------------------------------------------------------------------------
        </member>
        <member name="M:StreamCoders.Rtsp.EosReason.#ctor">
            -------------------------------------------------------------------------------------------------
            <summary>
                Constructor.
            </summary>
            -------------------------------------------------------------------------------------------------
        </member>
        <member name="P:StreamCoders.Rtsp.EosReason.Content">
            -------------------------------------------------------------------------------------------------
            <summary>
                Gets or sets the content.
            </summary>
            <value>
                The content.
            </value>
            -------------------------------------------------------------------------------------------------
        </member>
        <member name="M:StreamCoders.Rtsp.EosReason.ToString">
            -------------------------------------------------------------------------------------------------
            <summary>
                Serializes object to text.
            </summary>
            <returns>
                This object as a string.
            </returns>
            -------------------------------------------------------------------------------------------------
        </member>
        <member name="M:StreamCoders.Rtsp.EosReason.Parse(System.String)">
            -------------------------------------------------------------------------------------------------
            <summary>
                Parses Header.
            </summary>
            <param name="line"> The line. </param>
            <returns>
                true if it succeeds, false if it fails.
            </returns>
            -------------------------------------------------------------------------------------------------
        </member>
        <member name="T:StreamCoders.Rtsp.EventType">
            -------------------------------------------------------------------------------------------------
            <summary>
                Event-Type header (draft-ietf-mmusic-rtsp-announce-01)
            </summary>
            <seealso cref="T:StreamCoders.Rtsp.BaseHeader" />
            -------------------------------------------------------------------------------------------------
        </member>
        <member name="M:StreamCoders.Rtsp.EventType.#ctor">
            -------------------------------------------------------------------------------------------------
            <summary>
                Constructor.
            </summary>
            -------------------------------------------------------------------------------------------------
        </member>
        <member name="P:StreamCoders.Rtsp.EventType.Content">
            -------------------------------------------------------------------------------------------------
            <summary>
                Gets or sets the content.
            </summary>
            <value>
                The content.
            </value>
            -------------------------------------------------------------------------------------------------
        </member>
        <member name="M:StreamCoders.Rtsp.EventType.ToString">
            -------------------------------------------------------------------------------------------------
            <summary>
                Serializes object to text.
            </summary>
            <returns>
                This object as a string.
            </returns>
            -------------------------------------------------------------------------------------------------
        </member>
        <member name="M:StreamCoders.Rtsp.EventType.Parse(System.String)">
            -------------------------------------------------------------------------------------------------
            <summary>
                Parses Header.
            </summary>
            <param name="line"> The line. </param>
            <returns>
                true if it succeeds, false if it fails.
            </returns>
            -------------------------------------------------------------------------------------------------
        </member>
        <member name="T:StreamCoders.Rtsp.Expires">
            -------------------------------------------------------------------------------------------------
            <summary>
                The Expires entity-header field gives a date and time after which the description or
                media-stream should be considered stale. The interpretation depends on the method:
                <br />
                Describe response: The Expires header indicates a date and time after which the
                description should be considered stale.
                <br />
                A stale cache entry may not normally be returned by a cache (either a proxy cache or an
                user agent cache) unless it is first validated with the origin server (or with an
                intermediate cache that has a fresh copy of the entity). See section 13 for further
                discussion of the expiration model.
                <br />
                The presence of an Expires field does not imply that the original resource will change or
                cease to exist at, before, or after that time.
                <br />
                To mark a response as "already expired," an origin server should use an Expires date that
                is equal to the Date header value. To mark a response as "never expires," an origin
                server should use an Expires date approximately one year from the time the response is
                sent. RTSP/1.0 servers should not send Expires dates more than one year in the future.
                <br />
                The presence of an Expires header field with a date value of some time in the future on a
                media stream that otherwise would by default be non-cacheable indicates that the media
                stream is cacheable, unless indicated otherwise by a Cache-Control header field.
            </summary>
            <seealso cref="T:StreamCoders.Rtsp.BaseHeader" />
            -------------------------------------------------------------------------------------------------
        </member>
        <member name="M:StreamCoders.Rtsp.Expires.#ctor">
            -------------------------------------------------------------------------------------------------
            <summary>
                Constructor.
            </summary>
            -------------------------------------------------------------------------------------------------
        </member>
        <member name="P:StreamCoders.Rtsp.Expires.HttpTime">
            -------------------------------------------------------------------------------------------------
            <summary>
                Gets or sets or Sets the HttpTime property.
            </summary>
            <value>
                The time field of the Expires header.
            </value>
            -------------------------------------------------------------------------------------------------
        </member>
        <member name="M:StreamCoders.Rtsp.Expires.ToString">
            -------------------------------------------------------------------------------------------------
            <summary>
                Serializes object to text.
            </summary>
            <returns>
                This object as a string.
            </returns>
            -------------------------------------------------------------------------------------------------
        </member>
        <member name="M:StreamCoders.Rtsp.Expires.Parse(System.String)">
            -------------------------------------------------------------------------------------------------
            <summary>
                Parses Header.
            </summary>
            <param name="line"> The line. </param>
            <returns>
                true if it succeeds, false if it fails.
            </returns>
            -------------------------------------------------------------------------------------------------
        </member>
        <member name="T:StreamCoders.Rtsp.GenericHeader">
            -------------------------------------------------------------------------------------------------
            <summary>
                Represents a generic header. Generic headers are headers with names that are not defined
                in the protocol standard. They allow for proprietary information to be transported. A
                generic header can have an arbitrary name and value.
            </summary>
            -------------------------------------------------------------------------------------------------
        </member>
        <member name="P:StreamCoders.Rtsp.GenericHeader.HeaderName">
            -------------------------------------------------------------------------------------------------
            <summary>
                Gets or sets the name of the header.
            </summary>
            <value>
                The name of the header.
            </value>
            -------------------------------------------------------------------------------------------------
        </member>
        <member name="P:StreamCoders.Rtsp.GenericHeader.HeaderValue">
            -------------------------------------------------------------------------------------------------
            <summary>
                Gets or sets the header value.
            </summary>
            <value>
                The header value.
            </value>
            -------------------------------------------------------------------------------------------------
        </member>
        <member name="M:StreamCoders.Rtsp.GenericHeader.Parse(System.String)">
            -------------------------------------------------------------------------------------------------
            <summary>
                Parses.
            </summary>
            <param name="stringToParse">    The string to parse. </param>
            <returns>
                true if it succeeds, false if it fails.
            </returns>
            -------------------------------------------------------------------------------------------------
        </member>
        <member name="M:StreamCoders.Rtsp.GenericHeader.ToString">
            -------------------------------------------------------------------------------------------------
            <summary>
                Convert this object into a string representation.
            </summary>
            <returns>
                This object as a string.
            </returns>
            -------------------------------------------------------------------------------------------------
        </member>
        <member name="T:StreamCoders.Rtsp.HeaderFactory">
            <summary>
                An extensible RTSP header factory that allows for fully typed RTSP headers. This should preferably be used to
                generic headers.
            </summary>
        </member>
        <member name="M:StreamCoders.Rtsp.HeaderFactory.GetInstance(System.String)">
            <summary>
            Creates an instance of a header give the name.
            </summary>
            <param name="headerName">The name of the header to instantiate.</param>
            <returns>Returns an instance of the header implementation. If the header implementation is not found, then null is returned.</returns>
        </member>
        <member name="M:StreamCoders.Rtsp.HeaderFactory.AddHeader``1(System.String)">
            <summary>
                Adds a new header type to the factory.
            </summary>
            <typeparam name="T">Type parameter of RTSP header. The header needs to be derived from <c>BaseHeader</c></typeparam>
            <param name="headerName">The name of the header. For example <c>X-VERSION</c></param>
        </member>
        <member name="M:StreamCoders.Rtsp.HeaderFactory.DeleteHeader(System.String)">
            <summary>
            Removes a header given the header name.
            </summary>
            <param name="headerName">The header name to remove</param>
            <returns>Returns true if the header was found and removed, otherwise false.</returns>
        </member>
        <member name="T:StreamCoders.Rtsp.Accept">
            -------------------------------------------------------------------------------------------------
            <summary>
                The Accept request-header field can be used to specify certain presentation description
                content types which are acceptable for the response.
            </summary>
            <seealso cref="T:StreamCoders.Rtsp.BaseHeader" />
            -------------------------------------------------------------------------------------------------
        </member>
        <member name="M:StreamCoders.Rtsp.Accept.#ctor">
            -------------------------------------------------------------------------------------------------
            <summary>
                Constructor.
            </summary>
            -------------------------------------------------------------------------------------------------
        </member>
        <member name="P:StreamCoders.Rtsp.Accept.Content">
            -------------------------------------------------------------------------------------------------
            <summary>
                Gets or sets or Sets the Content property.
            </summary>
            <value>
                The content.
            </value>
            -------------------------------------------------------------------------------------------------
        </member>
        <member name="M:StreamCoders.Rtsp.Accept.ToString">
            -------------------------------------------------------------------------------------------------
            <summary>
                Serializes object to text.
            </summary>
            <returns>
                This object as a string.
            </returns>
            -------------------------------------------------------------------------------------------------
        </member>
        <member name="M:StreamCoders.Rtsp.Accept.Parse(System.String)">
            -------------------------------------------------------------------------------------------------
            <summary>
                Parses Header.
            </summary>
            <param name="line"> The line. </param>
            <returns>
                true if it succeeds, false if it fails.
            </returns>
            -------------------------------------------------------------------------------------------------
        </member>
        <member name="T:StreamCoders.Rtsp.Allow">
            -------------------------------------------------------------------------------------------------
            <summary>
                The Allow response header field lists the methods supported by the resource identified by
                the request-URI. The purpose of this field is to strictly inform the recipient of valid
                methods associated with the resource. An Allow header field must be present in a 405
                (Method not allowed) response.
            </summary>
            <seealso cref="T:StreamCoders.Rtsp.BaseHeader" />
            -------------------------------------------------------------------------------------------------
        </member>
        <member name="M:StreamCoders.Rtsp.Allow.#ctor">
            -------------------------------------------------------------------------------------------------
            <summary>
                Default constructor.
            </summary>
            -------------------------------------------------------------------------------------------------
        </member>
        <member name="P:StreamCoders.Rtsp.Allow.Content">
            -------------------------------------------------------------------------------------------------
            <summary>
                The content of the header.
            </summary>
            <value>
                The content.
            </value>
            ###
            <example>
                <code>
                             Allow allow = new Allow();
                             allow.Content = "Options, Describe, Setup, Play";
                 </code>
            </example>
            -------------------------------------------------------------------------------------------------
        </member>
        <member name="M:StreamCoders.Rtsp.Allow.ToString">
            -------------------------------------------------------------------------------------------------
            <summary>
                Serializes object to text.
            </summary>
            <returns>
                This object as a string.
            </returns>
            -------------------------------------------------------------------------------------------------
        </member>
        <member name="M:StreamCoders.Rtsp.Allow.Parse(System.String)">
            -------------------------------------------------------------------------------------------------
            <summary>
                Parses Header.
            </summary>
            <param name="line"> The line. </param>
            <returns>
                true if it succeeds, false if it fails.
            </returns>
            -------------------------------------------------------------------------------------------------
        </member>
        <member name="T:StreamCoders.Rtsp.Authorization">
            -------------------------------------------------------------------------------------------------
            <summary>
                Provides Basic and Digest authentication.
            </summary>
            <seealso cref="T:StreamCoders.Rtsp.BaseHeader" />
            -------------------------------------------------------------------------------------------------
        </member>
        <member name="M:StreamCoders.Rtsp.Authorization.#ctor">
            -------------------------------------------------------------------------------------------------
            <summary>
                Default constructor.
            </summary>
            -------------------------------------------------------------------------------------------------
        </member>
        <member name="M:StreamCoders.Rtsp.Authorization.#ctor(StreamCoders.Rtsp.WwwAuth,StreamCoders.Rtsp.RequestHeader,System.String,System.String)">
            -------------------------------------------------------------------------------------------------
            <summary>
                Constructor.
            </summary>
            <param name="wwwHeader">        The www header. </param>
            <param name="requestHeader">    The request header. </param>
            <param name="username">         The username. </param>
            <param name="password">         The password. </param>
            -------------------------------------------------------------------------------------------------
        </member>
        <member name="P:StreamCoders.Rtsp.Authorization.AuthenticationType">
            -------------------------------------------------------------------------------------------------
            <summary>
                Gets or sets the type of the authentication.
            </summary>
            <value>
                The type of the authentication.
            </value>
            -------------------------------------------------------------------------------------------------
        </member>
        <member name="P:StreamCoders.Rtsp.Authorization.Realm">
            -------------------------------------------------------------------------------------------------
            <summary>
                Gets or sets the realm.
            </summary>
            <value>
                The realm.
            </value>
            -------------------------------------------------------------------------------------------------
        </member>
        <member name="P:StreamCoders.Rtsp.Authorization.Nonce">
            -------------------------------------------------------------------------------------------------
            <summary>
                Gets or sets the nonce.
            </summary>
            <value>
                The nonce.
            </value>
            -------------------------------------------------------------------------------------------------
        </member>
        <member name="P:StreamCoders.Rtsp.Authorization.Uri">
            -------------------------------------------------------------------------------------------------
            <summary>
                Gets or sets URI of the document.
            </summary>
            <value>
                The uri.
            </value>
            -------------------------------------------------------------------------------------------------
        </member>
        <member name="P:StreamCoders.Rtsp.Authorization.Response">
            -------------------------------------------------------------------------------------------------
            <summary>
                Gets or sets the response.
            </summary>
            <value>
                The response.
            </value>
            -------------------------------------------------------------------------------------------------
        </member>
        <member name="P:StreamCoders.Rtsp.Authorization.Username">
            -------------------------------------------------------------------------------------------------
            <summary>
                Gets or sets the username.
            </summary>
            <value>
                The username.
            </value>
            -------------------------------------------------------------------------------------------------
        </member>
        <member name="P:StreamCoders.Rtsp.Authorization.Password">
            -------------------------------------------------------------------------------------------------
            <summary>
                Gets or sets the password.
            </summary>
            <value>
                The password.
            </value>
            -------------------------------------------------------------------------------------------------
        </member>
        <member name="P:StreamCoders.Rtsp.Authorization.Method">
            -------------------------------------------------------------------------------------------------
            <summary>
                Gets or sets the RTSP method (e.g. Describe) to use for hashing.
            </summary>
            <value>
                The method.
            </value>
            -------------------------------------------------------------------------------------------------
        </member>
        <member name="M:StreamCoders.Rtsp.Authorization.ToString">
            -------------------------------------------------------------------------------------------------
            <summary>
                Serializes object to text.
            </summary>
            <returns>
                This object as a string.
            </returns>
            -------------------------------------------------------------------------------------------------
        </member>
        <member name="M:StreamCoders.Rtsp.Authorization.GenerateResponse">
            -------------------------------------------------------------------------------------------------
            <summary>
                Generates a response.
            </summary>
            <returns>
                The response.
            </returns>
            -------------------------------------------------------------------------------------------------
        </member>
        <member name="M:StreamCoders.Rtsp.Authorization.Parse(System.String)">
            -------------------------------------------------------------------------------------------------
            <summary>
                Parses.
            </summary>
            <param name="line"> The line. </param>
            <returns>
                true if it succeeds, false if it fails.
            </returns>
            -------------------------------------------------------------------------------------------------
        </member>
        <member name="T:StreamCoders.Rtsp.BaseHeader">
            -------------------------------------------------------------------------------------------------
            <summary>
                Abstract base class for all RTSP headers.
            </summary>
            -------------------------------------------------------------------------------------------------
        </member>
        <member name="P:StreamCoders.Rtsp.BaseHeader.HeaderType">
            -------------------------------------------------------------------------------------------------
            <summary>
                Gets or sets the type of the RTSP header.
            </summary>
            <value>
                The type of the header.
            </value>
            -------------------------------------------------------------------------------------------------
        </member>
        <member name="M:StreamCoders.Rtsp.BaseHeader.ToString">
            -------------------------------------------------------------------------------------------------
            <summary>
                Serializes object to text.
            </summary>
            <returns>
                This object as a string.
            </returns>
            -------------------------------------------------------------------------------------------------
        </member>
        <member name="M:StreamCoders.Rtsp.BaseHeader.Parse(System.String)">
            -------------------------------------------------------------------------------------------------
            <summary>
                Parses Header.
            </summary>
            <param name="line"> The line. </param>
            <returns>
                true if it succeeds, false if it fails.
            </returns>
            -------------------------------------------------------------------------------------------------
        </member>
        <member name="T:StreamCoders.Rtsp.CacheControl">
            -------------------------------------------------------------------------------------------------
            <summary>
                The Cache-Control general header field is used to specify directives that MUST be obeyed
                by all caching mechanisms along the request/response chain.
                <br />
                Cache directives must be passed through by a proxy or gateway application, regardless of
                their significance to that application, since the directives may be applicable to all
                recipients along the request/response chain. It is not possible to specify a cache-
                directive for a specific cache.
            </summary>
            <seealso cref="T:StreamCoders.Rtsp.BaseHeader" />
            -------------------------------------------------------------------------------------------------
        </member>
        <member name="M:StreamCoders.Rtsp.CacheControl.#ctor">
            -------------------------------------------------------------------------------------------------
            <summary>
                Constructor.
            </summary>
            -------------------------------------------------------------------------------------------------
        </member>
        <member name="P:StreamCoders.Rtsp.CacheControl.Content">
            -------------------------------------------------------------------------------------------------
            <summary>
                Gets or sets or Sets the Content property.
            </summary>
            <value>
                Cache control values for requests: "no-cache", "max-stale", "min-fresh", "only-if-cached",
                cache-extension
                <br />
                Cache Control for responses: "public", "private", "no-cache",  "no-transform", "must-
                revalidate", "proxy-revalidate", "max-age" "=" delta-seconds.
            </value>
            -------------------------------------------------------------------------------------------------
        </member>
        <member name="M:StreamCoders.Rtsp.CacheControl.ToString">
            -------------------------------------------------------------------------------------------------
            <summary>
                Serializes object to text.
            </summary>
            <returns>
                This object as a string.
            </returns>
            -------------------------------------------------------------------------------------------------
        </member>
        <member name="M:StreamCoders.Rtsp.CacheControl.Parse(System.String)">
            -------------------------------------------------------------------------------------------------
            <summary>
                Parses Header.
            </summary>
            <param name="line"> The line. </param>
            <returns>
                true if it succeeds, false if it fails.
            </returns>
            -------------------------------------------------------------------------------------------------
        </member>
        <member name="T:StreamCoders.Rtsp.ContentBase">
            -------------------------------------------------------------------------------------------------
            <summary>
                Represents the Content-Base Header in an RTSP message.
            </summary>
            <seealso cref="T:StreamCoders.Rtsp.BaseHeader" />
            -------------------------------------------------------------------------------------------------
        </member>
        <member name="M:StreamCoders.Rtsp.ContentBase.#ctor">
            -------------------------------------------------------------------------------------------------
            <summary>
                Constructor.
            </summary>
            -------------------------------------------------------------------------------------------------
        </member>
        <member name="P:StreamCoders.Rtsp.ContentBase.Url">
            -------------------------------------------------------------------------------------------------
            <summary>
                Gets or sets URL of the document.
            </summary>
            <value>
                The url.
            </value>
            -------------------------------------------------------------------------------------------------
        </member>
        <member name="M:StreamCoders.Rtsp.ContentBase.ToString">
            -------------------------------------------------------------------------------------------------
            <summary>
                Serializes object to text.
            </summary>
            <returns>
                This object as a string.
            </returns>
            -------------------------------------------------------------------------------------------------
        </member>
        <member name="M:StreamCoders.Rtsp.ContentBase.Parse(System.String)">
            -------------------------------------------------------------------------------------------------
            <summary>
                Parses Header.
            </summary>
            <param name="line"> The line. </param>
            <returns>
                true if it succeeds, false if it fails.
            </returns>
            -------------------------------------------------------------------------------------------------
        </member>
        <member name="T:StreamCoders.Rtsp.ContentLength">
            -------------------------------------------------------------------------------------------------
            <summary>
                Represents the Content-Length Header in an RTSP message. This field contains the length
                of the content of the method. Unlike HTTP, it MUST be included in all messages that carry
                content beyond the header portion of the message. If it is missing, a default value of
                zero is assumed.
            </summary>
            <seealso cref="T:StreamCoders.Rtsp.BaseHeader" />
            -------------------------------------------------------------------------------------------------
        </member>
        <member name="M:StreamCoders.Rtsp.ContentLength.#ctor">
            -------------------------------------------------------------------------------------------------
            <summary>
                Constructor.
            </summary>
            -------------------------------------------------------------------------------------------------
        </member>
        <member name="P:StreamCoders.Rtsp.ContentLength.Length">
            -------------------------------------------------------------------------------------------------
            <summary>
                Gets or sets the length.
            </summary>
            <value>
                The length.
            </value>
            -------------------------------------------------------------------------------------------------
        </member>
        <member name="M:StreamCoders.Rtsp.ContentLength.ToString">
            -------------------------------------------------------------------------------------------------
            <summary>
                Serializes object to text.
            </summary>
            <returns>
                This object as a string.
            </returns>
            -------------------------------------------------------------------------------------------------
        </member>
        <member name="M:StreamCoders.Rtsp.ContentLength.Parse(System.String)">
            -------------------------------------------------------------------------------------------------
            <summary>
                Parses Header.
            </summary>
            <param name="line"> The line. </param>
            <returns>
                true if it succeeds, false if it fails.
            </returns>
            -------------------------------------------------------------------------------------------------
        </member>
        <member name="T:StreamCoders.Rtsp.ContentLocation">
            -------------------------------------------------------------------------------------------------
            <summary>
                Represents the Content-Location Header in an RTSP message.
            </summary>
            <seealso cref="T:StreamCoders.Rtsp.BaseHeader" />
            -------------------------------------------------------------------------------------------------
        </member>
        <member name="M:StreamCoders.Rtsp.ContentLocation.#ctor">
            -------------------------------------------------------------------------------------------------
            <summary>
                Constructor.
            </summary>
            -------------------------------------------------------------------------------------------------
        </member>
        <member name="P:StreamCoders.Rtsp.ContentLocation.Url">
            -------------------------------------------------------------------------------------------------
            <summary>
                Gets or sets URL of the document.
            </summary>
            <value>
                The url.
            </value>
            -------------------------------------------------------------------------------------------------
        </member>
        <member name="M:StreamCoders.Rtsp.ContentLocation.ToString">
            -------------------------------------------------------------------------------------------------
            <summary>
                Serializes object to text.
            </summary>
            <returns>
                This object as a string.
            </returns>
            -------------------------------------------------------------------------------------------------
        </member>
        <member name="M:StreamCoders.Rtsp.ContentLocation.Parse(System.String)">
            -------------------------------------------------------------------------------------------------
            <summary>
                Parses Header.
            </summary>
            <param name="line"> The line. </param>
            <returns>
                true if it succeeds, false if it fails.
            </returns>
            -------------------------------------------------------------------------------------------------
        </member>
        <member name="T:StreamCoders.Rtsp.ContentType">
            -------------------------------------------------------------------------------------------------
            <summary>
                Represents the Content-Type Header in an RTSP message.
            </summary>
            <seealso cref="T:StreamCoders.Rtsp.BaseHeader" />
            -------------------------------------------------------------------------------------------------
        </member>
        <member name="M:StreamCoders.Rtsp.ContentType.#ctor">
            -------------------------------------------------------------------------------------------------
            <summary>
                Constructor.
            </summary>
            -------------------------------------------------------------------------------------------------
        </member>
        <member name="P:StreamCoders.Rtsp.ContentType.Content">
            -------------------------------------------------------------------------------------------------
            <summary>
                Gets or sets the content.
            </summary>
            <value>
                The content.
            </value>
            -------------------------------------------------------------------------------------------------
        </member>
        <member name="M:StreamCoders.Rtsp.ContentType.ToString">
            -------------------------------------------------------------------------------------------------
            <summary>
                Serializes object to text.
            </summary>
            <returns>
                This object as a string.
            </returns>
            -------------------------------------------------------------------------------------------------
        </member>
        <member name="M:StreamCoders.Rtsp.ContentType.Parse(System.String)">
            -------------------------------------------------------------------------------------------------
            <summary>
                Parses Header.
            </summary>
            <param name="line"> The line. </param>
            <returns>
                true if it succeeds, false if it fails.
            </returns>
            -------------------------------------------------------------------------------------------------
        </member>
        <member name="T:StreamCoders.Rtsp.IfModifiedSince">
            -------------------------------------------------------------------------------------------------
            <summary>
                The If-Modified-Since request-header field is used with the Describe and Setup methods to
                make them conditional. If the requested variant has not been modified since the time
                specified in this field, a description will not be returned from the server (Describe) or
                a stream will not be set up (Setup). Instead, a 304 (not modified)
                response will be returned without any message-body.
            </summary>
            <seealso cref="T:StreamCoders.Rtsp.BaseHeader" />
            -------------------------------------------------------------------------------------------------
        </member>
        <member name="M:StreamCoders.Rtsp.IfModifiedSince.#ctor">
            -------------------------------------------------------------------------------------------------
            <summary>
                Constructor.
            </summary>
            -------------------------------------------------------------------------------------------------
        </member>
        <member name="P:StreamCoders.Rtsp.IfModifiedSince.HttpTime">
            -------------------------------------------------------------------------------------------------
            <summary>
                Gets or sets or Sets the HttpTime property.
            </summary>
            <value>
                The time field of the If-Modified-Since header.
            </value>
            -------------------------------------------------------------------------------------------------
        </member>
        <member name="M:StreamCoders.Rtsp.IfModifiedSince.ToString">
            -------------------------------------------------------------------------------------------------
            <summary>
                Serializes object to text.
            </summary>
            <returns>
                This object as a string.
            </returns>
            -------------------------------------------------------------------------------------------------
        </member>
        <member name="M:StreamCoders.Rtsp.IfModifiedSince.Parse(System.String)">
            -------------------------------------------------------------------------------------------------
            <summary>
                Parses Header.
            </summary>
            <param name="line"> The line. </param>
            <returns>
                true if it succeeds, false if it fails.
            </returns>
            -------------------------------------------------------------------------------------------------
        </member>
        <member name="T:StreamCoders.Rtsp.LastModified">
            -------------------------------------------------------------------------------------------------
            <summary>
                The Last-Modified entity-header field indicates the date and time at which the origin
                server believes the presentation description or media stream was last modified. See
                [H14.29]. For the methods Describe or Announce, the header field indicates the last
                modification date and time of the description, for Setup that of the media stream.
            </summary>
            <seealso cref="T:StreamCoders.Rtsp.BaseHeader" />
            -------------------------------------------------------------------------------------------------
        </member>
        <member name="M:StreamCoders.Rtsp.LastModified.#ctor">
            -------------------------------------------------------------------------------------------------
            <summary>
                Constructor.
            </summary>
            -------------------------------------------------------------------------------------------------
        </member>
        <member name="P:StreamCoders.Rtsp.LastModified.HttpTime">
            -------------------------------------------------------------------------------------------------
            <summary>
                Gets or sets or Sets the HttpTime property.
            </summary>
            <value>
                The time field of the LastModified header.
            </value>
            -------------------------------------------------------------------------------------------------
        </member>
        <member name="M:StreamCoders.Rtsp.LastModified.ToString">
            -------------------------------------------------------------------------------------------------
            <summary>
                Serializes object to text.
            </summary>
            <returns>
                This object as a string.
            </returns>
            -------------------------------------------------------------------------------------------------
        </member>
        <member name="M:StreamCoders.Rtsp.LastModified.Parse(System.String)">
            -------------------------------------------------------------------------------------------------
            <summary>
                Parses Header.
            </summary>
            <param name="line"> The line. </param>
            <returns>
                true if it succeeds, false if it fails.
            </returns>
            -------------------------------------------------------------------------------------------------
        </member>
        <member name="T:StreamCoders.Rtsp.Location">
            -------------------------------------------------------------------------------------------------
            <summary>
                Represents the Location Header in an RTSP message.
            </summary>
            <seealso cref="T:StreamCoders.Rtsp.BaseHeader" />
            -------------------------------------------------------------------------------------------------
        </member>
        <member name="M:StreamCoders.Rtsp.Location.#ctor">
            -------------------------------------------------------------------------------------------------
            <summary>
                Constructor.
            </summary>
            -------------------------------------------------------------------------------------------------
        </member>
        <member name="P:StreamCoders.Rtsp.Location.Url">
            -------------------------------------------------------------------------------------------------
            <summary>
                Gets or sets URL of the document.
            </summary>
            <value>
                The url.
            </value>
            -------------------------------------------------------------------------------------------------
        </member>
        <member name="M:StreamCoders.Rtsp.Location.ToString">
            -------------------------------------------------------------------------------------------------
            <summary>
                Serializes object to text.
            </summary>
            <returns>
                This object as a string.
            </returns>
            -------------------------------------------------------------------------------------------------
        </member>
        <member name="M:StreamCoders.Rtsp.Location.Parse(System.String)">
            -------------------------------------------------------------------------------------------------
            <summary>
                Parses Header.
            </summary>
            <param name="line"> The line. </param>
            <returns>
                true if it succeeds, false if it fails.
            </returns>
            -------------------------------------------------------------------------------------------------
        </member>
        <member name="T:StreamCoders.Rtsp.RangeDefinition">
            -------------------------------------------------------------------------------------------------
            <summary>
                Values that represent RangeDefinition types for RTSP range header.
            </summary>
            -------------------------------------------------------------------------------------------------
        </member>
        <member name="F:StreamCoders.Rtsp.RangeDefinition.Now">
            <summary>
                npt=now-
            </summary>
        </member>
        <member name="F:StreamCoders.Rtsp.RangeDefinition.Interval">
            <summary>
                npt=From-To
            </summary>
        </member>
        <member name="F:StreamCoders.Rtsp.RangeDefinition.NoRange">
            <summary>
                Omits creation
            </summary>
        </member>
        <member name="F:StreamCoders.Rtsp.RangeDefinition.UtcClock">
            <summary>
                Represents an ISO 8601 clock representation
            </summary>
        </member>
        <member name="T:StreamCoders.Rtsp.RangeParameters">
            -------------------------------------------------------------------------------------------------
            <summary>
                Range parameters are used to initialize the Range Header object. RangeParameters can both represent relative
                (interval) and
                absolute points in time (UtcClock).
            </summary>
            -------------------------------------------------------------------------------------------------
        </member>
        <member name="P:StreamCoders.Rtsp.RangeParameters.FromTime">
            -------------------------------------------------------------------------------------------------
            <summary>
                Time from.
            </summary>
            -------------------------------------------------------------------------------------------------
        </member>
        <member name="P:StreamCoders.Rtsp.RangeParameters.RangeType">
            -------------------------------------------------------------------------------------------------
            <summary>
                Type of the range.
            </summary>
            -------------------------------------------------------------------------------------------------
        </member>
        <member name="P:StreamCoders.Rtsp.RangeParameters.ToTime">
            -------------------------------------------------------------------------------------------------
            <summary>
                Time to.
            </summary>
            -------------------------------------------------------------------------------------------------
        </member>
        <member name="P:StreamCoders.Rtsp.RangeParameters.Clock">
            <summary>
                Absolute time use for UTC time clock where <c>RangeType</c> equals <c>UtcClock</c>
            </summary>
        </member>
        <member name="P:StreamCoders.Rtsp.RangeParameters.DefaultZeroInterval">
            <summary>
                Creates a default range of FromTime = ToTime = TimeSpan.Zero;
            </summary>
        </member>
        <member name="P:StreamCoders.Rtsp.RangeParameters.DefaultUtcNow">
            <summary>
                Creates a default range of Clock = DateTime.UtcNow;
            </summary>
        </member>
        <member name="T:StreamCoders.Rtsp.Range">
            -------------------------------------------------------------------------------------------------
            <summary>
                This request and response header field specifies a range of time. The range can be
                specified in a number of units.
                <br />
                Ranges are half-open intervals, including the lower point, but excluding the upper point.
                In other words, a range of a-b starts exactly at time a, but stops just before b. Only
                the start time of a media unit such as a video or audio frame is relevant. As an example,
                assume that video frames are generated every 40 ms. A range of 10.0- 10.1 would include a
                video frame starting at 10.0 or later time and would include a video frame starting at
                10.08, even though it lasted beyond the interval. A range of 10.0-10.08, on the other
                hand, would exclude the frame at 10.08.
            </summary>
            <seealso cref="T:StreamCoders.Rtsp.BaseHeader" />
            -------------------------------------------------------------------------------------------------
        </member>
        <member name="P:StreamCoders.Rtsp.Range.Clock">
            <summary>
                Absolute time for UTC clock when <c>RangeType</c> equals <c>UtcClock</c>
            </summary>
        </member>
        <member name="M:StreamCoders.Rtsp.Range.Parse(System.String)">
            <summary>
                Deserializes the Range header.
            </summary>
            <param name="line">Header string to parse.</param>
            <returns>Returns true if successful, otherwise false.</returns>
        </member>
        <member name="M:StreamCoders.Rtsp.Range.ToString">
            <summary>
                Serializes the Range Header
            </summary>
            <returns>Returns a string representation of the header.</returns>
        </member>
        <member name="M:StreamCoders.Rtsp.Range.Create(StreamCoders.Rtsp.RangeParameters)">
            <summary>
                Creates a Range header object from RangeParameters
            </summary>
            <param name="rangeParameters">The RangeParameter object to create the Range header.</param>
            <returns>Returns a Range object if successful, otherwise null.</returns>
        </member>
        <member name="T:StreamCoders.Rtsp.Require">
            -------------------------------------------------------------------------------------------------
            <summary>
                The Require header is used by clients to query the server about options that it may or
                may not support. The server MUST respond to this header by using the Unsupported header
                to negatively acknowledge those options which are NOT supported.
                <br />
                This is to make sure that the client-server interaction will proceed without delay when
                all options are understood by both sides, and only slow down if options are not
                understood (as in the case above). For a well-matched client-server pair, the interaction
                proceeds quickly, saving a round-trip often required by negotiation mechanisms. In
                addition, it also removes state ambiguity when the client requires features that the
                server does not understand.
            </summary>
            <seealso cref="T:StreamCoders.Rtsp.BaseHeader" />
            -------------------------------------------------------------------------------------------------
        </member>
        <member name="M:StreamCoders.Rtsp.Require.#ctor">
            -------------------------------------------------------------------------------------------------
            <summary>
                Constructor.
            </summary>
            -------------------------------------------------------------------------------------------------
        </member>
        <member name="P:StreamCoders.Rtsp.Require.Content">
            -------------------------------------------------------------------------------------------------
            <summary>
                Gets or sets the content.
            </summary>
            <value>
                The content.
            </value>
            -------------------------------------------------------------------------------------------------
        </member>
        <member name="M:StreamCoders.Rtsp.Require.ToString">
            -------------------------------------------------------------------------------------------------
            <summary>
                Serializes object to text.
            </summary>
            <returns>
                This object as a string.
            </returns>
            -------------------------------------------------------------------------------------------------
        </member>
        <member name="M:StreamCoders.Rtsp.Require.Parse(System.String)">
            -------------------------------------------------------------------------------------------------
            <summary>
                Parses Header.
            </summary>
            <param name="line"> The line. </param>
            <returns>
                true if it succeeds, false if it fails.
            </returns>
            -------------------------------------------------------------------------------------------------
        </member>
        <member name="T:StreamCoders.Rtsp.RtpInfoStreamUrl">
            -------------------------------------------------------------------------------------------------
            <summary>
                Makes up the inputStream-URL part of RTP-Info Header, containing track information, RTP base
                timestamp and sequence number. <br />
            </summary>
            -------------------------------------------------------------------------------------------------
        </member>
        <member name="P:StreamCoders.Rtsp.RtpInfoStreamUrl.Url">
            -------------------------------------------------------------------------------------------------
            <summary>
                Gets or sets the URL of the particular track.
            </summary>
            <value>
                Holds the URL this particular track holds information to.
            </value>
            -------------------------------------------------------------------------------------------------
        </member>
        <member name="P:StreamCoders.Rtsp.RtpInfoStreamUrl.Sequence">
            -------------------------------------------------------------------------------------------------
            <summary>
                Gets or sets the initial Sequence number of this particular track.
            </summary>
            <value>
                Holds the Sequence number the track will initially have.
            </value>
            -------------------------------------------------------------------------------------------------
        </member>
        <member name="P:StreamCoders.Rtsp.RtpInfoStreamUrl.RtpTime">
            -------------------------------------------------------------------------------------------------
            <summary>
                Gets or sets the initial Timestamp the of this particular track.
            </summary>
            <value>
                Holds the Timestamp the track will initially have. The Timestamp correlates with the
                Range NPT (initial or after seek) value.
            </value>
            -------------------------------------------------------------------------------------------------
        </member>
        <member name="M:StreamCoders.Rtsp.RtpInfoStreamUrl.Parse(System.String)">
            -------------------------------------------------------------------------------------------------
            <summary>
                Parses URL, sequence and rtptime part.
            </summary>
            <param name="line"> . </param>
            <returns>
                true if it succeeds, false if it fails.
            </returns>
            -------------------------------------------------------------------------------------------------
        </member>
        <member name="M:StreamCoders.Rtsp.RtpInfoStreamUrl.ToString">
            -------------------------------------------------------------------------------------------------
            <summary>
                Convert this object into a string representation.
            </summary>
            <returns>
                This object as a string.
            </returns>
            -------------------------------------------------------------------------------------------------
        </member>
        <member name="T:StreamCoders.Rtsp.RtpInfo">
            -------------------------------------------------------------------------------------------------
            <summary>
                This field is used to set RTP-specific parameters in the Play response.
                <br />
                A mapping from RTP timestamps to NTP timestamps (wall clock) is available via RTCP.
                However, this information is not sufficient to generate a mapping from RTP timestamps to
                NPT. Furthermore, in order to ensure that this information is available at the necessary
                time (immediately at startup or after a seek), and that it is delivered reliably, this
                mapping is placed in the RTSP control channel.
                <br />
                In order to compensate for drift for long, uninterrupted presentations, RTSP clients
                should additionally map NPT to NTP, using initial RTCP sender reports to do the mapping,
                and later reports to check drift against the mapping.
            </summary>
            <seealso cref="T:StreamCoders.Rtsp.BaseHeader" />
            -------------------------------------------------------------------------------------------------
        </member>
        <member name="M:StreamCoders.Rtsp.RtpInfo.#ctor">
            -------------------------------------------------------------------------------------------------
            <summary>
                Default constructor.
            </summary>
            -------------------------------------------------------------------------------------------------
        </member>
        <member name="P:StreamCoders.Rtsp.RtpInfo.Tracks">
            -------------------------------------------------------------------------------------------------
            <summary>
                Gets or sets the Track List of RTP-Info.
            </summary>
            <value>
                Holds RTPInfoStreamURL objects which provide information on the initial properties of
                each tracks RTP stream. This includes url, initial sequence number and initial timestamp.
            </value>
            -------------------------------------------------------------------------------------------------
        </member>
        <member name="M:StreamCoders.Rtsp.RtpInfo.ToString">
            -------------------------------------------------------------------------------------------------
            <summary>
                Convert this object into a string representation.
            </summary>
            <returns>
                This object as a string.
            </returns>
            -------------------------------------------------------------------------------------------------
        </member>
        <member name="M:StreamCoders.Rtsp.RtpInfo.Parse(System.String)">
            -------------------------------------------------------------------------------------------------
            <summary>
                Parses Header.
            </summary>
            <param name="line"> The line. </param>
            <returns>
                true if it succeeds, false if it fails.
            </returns>
            -------------------------------------------------------------------------------------------------
        </member>
        <member name="M:StreamCoders.Rtsp.RtpInfo.FindTrack(StreamCoders.Rtsp.Url)">
            -------------------------------------------------------------------------------------------------
            <summary>
                Finds a track with a particular stream URL.
            </summary>
            <param name="streamUrl">    inputStream URL to look for. </param>
            <returns>
                Returns <b>RTPInfoStreamURL</b> object if found.
            </returns>
            -------------------------------------------------------------------------------------------------
        </member>
        <member name="T:StreamCoders.Rtsp.Scale">
            -------------------------------------------------------------------------------------------------
            <summary>
                A scale value of 1 indicates normal play or record at the normal forward viewing rate. If
                not 1, the value corresponds to the rate with respect to normal viewing rate. For example,
                a ratio of 2 indicates twice the normal viewing rate ("fast forward") and a ratio of 0.5
                indicates half the normal viewing rate. In other words, a ratio of 2 has normal play time
                increase at twice the wallclock rate. For every second of elapsed (wallclock) time, 2
                seconds of content will be delivered. A negative value indicates reverse direction.
                <br />
                Unless requested otherwise by the Speed parameter, the data rate SHOULD not be changed.
                Implementation of scale changes depends on the server and media type. For video, a server
                may, for example, deliver only key frames or selected key frames. For audio, it may time-
                scale the audio while preserving pitch or, less desirably, deliver fragments of audio.
                <br />
                The server should try to approximate the viewing rate, but may restrict the range of
                scale values that it supports. The response MUST contain the actual scale value chosen by
                the server.
                <br />
                If the request contains a Range parameter, the new scale value will take effect at that
                time.
            </summary>
            <seealso cref="T:StreamCoders.Rtsp.BaseHeader" />
            -------------------------------------------------------------------------------------------------
        </member>
        <member name="M:StreamCoders.Rtsp.Scale.#ctor">
            -------------------------------------------------------------------------------------------------
            <summary>
                Constructor.
            </summary>
            -------------------------------------------------------------------------------------------------
        </member>
        <member name="P:StreamCoders.Rtsp.Scale.Content">
            -------------------------------------------------------------------------------------------------
            <summary>
                Gets or sets the content.
            </summary>
            <value>
                The content.
            </value>
            -------------------------------------------------------------------------------------------------
        </member>
        <member name="M:StreamCoders.Rtsp.Scale.ToString">
            -------------------------------------------------------------------------------------------------
            <summary>
                Serializes object to text.
            </summary>
            <returns>
                This object as a string.
            </returns>
            -------------------------------------------------------------------------------------------------
        </member>
        <member name="M:StreamCoders.Rtsp.Scale.Parse(System.String)">
            -------------------------------------------------------------------------------------------------
            <summary>
                Parses Header.
            </summary>
            <param name="line"> The line. </param>
            <returns>
                true if it succeeds, false if it fails.
            </returns>
            -------------------------------------------------------------------------------------------------
        </member>
        <member name="T:StreamCoders.Rtsp.CSeq">
            -------------------------------------------------------------------------------------------------
            <summary>
                Represents the CSeq header in an RTSP message. The CSeq field specifies the sequence
                number for an RTSP request- response pair. This field MUST be present in all requests and
                responses. For every RTSP request containing the given sequence number, there will be a
                corresponding response having the same number.  Any retransmitted request must contain
                the same sequence number as the original (i.e. the sequence number is not incremented for
                retransmissions of the same request).
            </summary>
            <seealso cref="T:StreamCoders.Rtsp.BaseHeader" />
            -------------------------------------------------------------------------------------------------
        </member>
        <member name="M:StreamCoders.Rtsp.CSeq.#ctor">
            -------------------------------------------------------------------------------------------------
            <summary>
                Constructor.
            </summary>
            -------------------------------------------------------------------------------------------------
        </member>
        <member name="P:StreamCoders.Rtsp.CSeq.SequenceNumber">
            -------------------------------------------------------------------------------------------------
            <summary>
                The sequence number. This field should monotonically increase for each unique request.
            </summary>
            <value>
                The sequence number.
            </value>
            -------------------------------------------------------------------------------------------------
        </member>
        <member name="M:StreamCoders.Rtsp.CSeq.ToString">
            -------------------------------------------------------------------------------------------------
            <summary>
                Serializes object to text.
            </summary>
            <returns>
                This object as a string.
            </returns>
            -------------------------------------------------------------------------------------------------
        </member>
        <member name="M:StreamCoders.Rtsp.CSeq.Equals(System.Object)">
            -------------------------------------------------------------------------------------------------
            <summary>
                Tests if this object is considered equal to another.
            </summary>
            <param name="obj">  The object to compare to this object. </param>
            <returns>
                true if the objects are considered equal, false if they are not.
            </returns>
            -------------------------------------------------------------------------------------------------
        </member>
        <member name="M:StreamCoders.Rtsp.CSeq.GetHashCode">
            -------------------------------------------------------------------------------------------------
            <summary>
                Calculates the hash code for this object.
            </summary>
            <returns>
                The hash code for this object.
            </returns>
            -------------------------------------------------------------------------------------------------
        </member>
        <member name="M:StreamCoders.Rtsp.CSeq.Equals(StreamCoders.Rtsp.CSeq)">
            -------------------------------------------------------------------------------------------------
            <summary>
                Tests if this CSeq is considered equal to another.
            </summary>
            <param name="seq">  The c sequence to compare to this object. </param>
            <returns>
                true if the objects are considered equal, false if they are not.
            </returns>
            -------------------------------------------------------------------------------------------------
        </member>
        <member name="M:StreamCoders.Rtsp.CSeq.op_Equality(StreamCoders.Rtsp.CSeq,StreamCoders.Rtsp.CSeq)">
            -------------------------------------------------------------------------------------------------
            <summary>
                Equality operator.
            </summary>
            <param name="a">    The first instance to compare. </param>
            <param name="b">    The second instance to compare. </param>
            <returns>
                true if the parameters are considered equivalent.
            </returns>
            -------------------------------------------------------------------------------------------------
        </member>
        <member name="M:StreamCoders.Rtsp.CSeq.op_Inequality(StreamCoders.Rtsp.CSeq,StreamCoders.Rtsp.CSeq)">
            -------------------------------------------------------------------------------------------------
            <summary>
                Inequality operator.
            </summary>
            <param name="a">    The first instance to compare. </param>
            <param name="b">    The second instance to compare. </param>
            <returns>
                true if the parameters are not considered equivalent.
            </returns>
            -------------------------------------------------------------------------------------------------
        </member>
        <member name="M:StreamCoders.Rtsp.CSeq.Parse(System.String)">
            -------------------------------------------------------------------------------------------------
            <summary>
                Parses Header.
            </summary>
            <param name="line"> The line. </param>
            <returns>
                true if it succeeds, false if it fails.
            </returns>
            -------------------------------------------------------------------------------------------------
        </member>
        <member name="T:StreamCoders.Rtsp.Server">
            -------------------------------------------------------------------------------------------------
            <summary>
                Server header.
            </summary>
            <seealso cref="T:StreamCoders.Rtsp.BaseHeader" />
            -------------------------------------------------------------------------------------------------
        </member>
        <member name="M:StreamCoders.Rtsp.Server.#ctor">
            -------------------------------------------------------------------------------------------------
            <summary>
                Constructor.
            </summary>
            -------------------------------------------------------------------------------------------------
        </member>
        <member name="P:StreamCoders.Rtsp.Server.Content">
            -------------------------------------------------------------------------------------------------
            <summary>
                Gets or sets the content.
            </summary>
            <value>
                The content.
            </value>
            -------------------------------------------------------------------------------------------------
        </member>
        <member name="M:StreamCoders.Rtsp.Server.ToString">
            -------------------------------------------------------------------------------------------------
            <summary>
                Serializes object to text.
            </summary>
            <returns>
                This object as a string.
            </returns>
            -------------------------------------------------------------------------------------------------
        </member>
        <member name="M:StreamCoders.Rtsp.Server.Parse(System.String)">
            -------------------------------------------------------------------------------------------------
            <summary>
                Parses Header.
            </summary>
            <param name="line"> The line. </param>
            <returns>
                true if it succeeds, false if it fails.
            </returns>
            -------------------------------------------------------------------------------------------------
        </member>
        <member name="T:StreamCoders.Rtsp.Session">
            -------------------------------------------------------------------------------------------------
            <summary>
                This request and response header field identifies an RTSP session started by the media
                server in a Setup response and concluded by Teardown on the presentation URL. The session
                identifier is chosen by the media server (see Section 3.4). Once a client receives a
                Session identifier, it MUST return it for any request related to that session.  A server
                does not have to set up a session identifier if it has other means of identifying a
                session, such as dynamically generated URLs.
            </summary>
            <seealso cref="T:StreamCoders.Rtsp.BaseHeader" />
            -------------------------------------------------------------------------------------------------
        </member>
        <member name="M:StreamCoders.Rtsp.Session.#ctor">
            -------------------------------------------------------------------------------------------------
            <summary>
                Constructor.
            </summary>
            -------------------------------------------------------------------------------------------------
        </member>
        <member name="P:StreamCoders.Rtsp.Session.SessionId">
            -------------------------------------------------------------------------------------------------
            <summary>
                This request and response header field identifies an RTSP session started by the media
                server in a Setup response and concluded by Teardown on the presentation URL. The session
                identifier is chosen by the media server.
            </summary>
            <value>
                The identifier of the session.
            </value>
            -------------------------------------------------------------------------------------------------
        </member>
        <member name="P:StreamCoders.Rtsp.Session.SessionIdInt">
            -------------------------------------------------------------------------------------------------
            <summary>
                Gets or sets or Sets the SessionID_Int property.
            </summary>
            <value>
                For convenvience, the Session ID in integer form.
            </value>
            -------------------------------------------------------------------------------------------------
        </member>
        <member name="P:StreamCoders.Rtsp.Session.TimeoutSeconds">
            -------------------------------------------------------------------------------------------------
            <summary>
                The timeout parameter is only allowed in a response header. The server uses it to
                indicate to the client how long the server is prepared to wait between RTSP commands
                before closing the session due to lack of activity, measured in seconds.
            </summary>
            <value>
                The timeout seconds.
            </value>
            -------------------------------------------------------------------------------------------------
        </member>
        <member name="M:StreamCoders.Rtsp.Session.ToString">
            -------------------------------------------------------------------------------------------------
            <summary>
                Serializes object to text.
            </summary>
            <returns>
                This object as a string.
            </returns>
            -------------------------------------------------------------------------------------------------
        </member>
        <member name="M:StreamCoders.Rtsp.Session.Parse(System.String)">
            -------------------------------------------------------------------------------------------------
            <summary>
                Parses.
            </summary>
            <param name="line"> The line. </param>
            <returns>
                true if it succeeds, false if it fails.
            </returns>
            -------------------------------------------------------------------------------------------------
        </member>
        <member name="T:StreamCoders.Rtsp.Speed">
            -------------------------------------------------------------------------------------------------
            <summary>
                Represents the Speed Header in an RTSP message. This request header fields parameter
                requests the server to deliver data to the client at a particular speed, contingent on
                the server's ability and desire to serve the media stream at the given speed.
                Implementation by the server is OPTIONAL. The default is the bit rate of the stream.
            </summary>
            <seealso cref="T:StreamCoders.Rtsp.BaseHeader" />
            -------------------------------------------------------------------------------------------------
        </member>
        <member name="M:StreamCoders.Rtsp.Speed.#ctor">
            -------------------------------------------------------------------------------------------------
            <summary>
                Default constructor.
            </summary>
            -------------------------------------------------------------------------------------------------
        </member>
        <member name="P:StreamCoders.Rtsp.Speed.Factor">
            -------------------------------------------------------------------------------------------------
            <summary>
                Default: "1.0" (unused)
            </summary>
            <value>
                The factor.
            </value>
            -------------------------------------------------------------------------------------------------
        </member>
        <member name="M:StreamCoders.Rtsp.Speed.ToString">
            -------------------------------------------------------------------------------------------------
            <summary>
                Serializes object to text.
            </summary>
            <returns>
                This object as a string.
            </returns>
            -------------------------------------------------------------------------------------------------
        </member>
        <member name="M:StreamCoders.Rtsp.Speed.Parse(System.String)">
            -------------------------------------------------------------------------------------------------
            <summary>
                Parses Header.
            </summary>
            <param name="line"> The line. </param>
            <returns>
                true if it succeeds, false if it fails.
            </returns>
            -------------------------------------------------------------------------------------------------
        </member>
        <member name="T:StreamCoders.Rtsp.Timestamp">
            -------------------------------------------------------------------------------------------------
            <summary>
                The timestamp general header describes when the client sent the request to the server.
                The value of the timestamp is of significance only to the client and may use any
                timescale. The server MUST echo the exact same value and MAY, if it has accurate
                information about this, add a floating point number indicating the number of seconds that
                has elapsed since it has received the request. The timestamp is used by the client to
                compute the round-trip time to the server so that it can adjust the timeout value for
                retransmissions.
            </summary>
            <seealso cref="T:StreamCoders.Rtsp.BaseHeader" />
            -------------------------------------------------------------------------------------------------
        </member>
        <member name="M:StreamCoders.Rtsp.Timestamp.#ctor">
            -------------------------------------------------------------------------------------------------
            <summary>
                Constructor.
            </summary>
            -------------------------------------------------------------------------------------------------
        </member>
        <member name="P:StreamCoders.Rtsp.Timestamp.Time">
            -------------------------------------------------------------------------------------------------
            <summary>
                Gets or sets the time.
            </summary>
            <value>
                The time.
            </value>
            -------------------------------------------------------------------------------------------------
        </member>
        <member name="P:StreamCoders.Rtsp.Timestamp.Delay">
            -------------------------------------------------------------------------------------------------
            <summary>
                Gets or sets the delay.
            </summary>
            <value>
                The delay.
            </value>
            -------------------------------------------------------------------------------------------------
        </member>
        <member name="M:StreamCoders.Rtsp.Timestamp.ToString">
            -------------------------------------------------------------------------------------------------
            <summary>
                Serializes object to text.
            </summary>
            <returns>
                This object as a string.
            </returns>
            -------------------------------------------------------------------------------------------------
        </member>
        <member name="M:StreamCoders.Rtsp.Timestamp.Parse(System.String)">
            -------------------------------------------------------------------------------------------------
            <summary>
                Parses Header.
            </summary>
            <param name="line"> The line. </param>
            <returns>
                true if it succeeds, false if it fails.
            </returns>
            -------------------------------------------------------------------------------------------------
        </member>
        <member name="T:StreamCoders.Rtsp.Transport">
            -------------------------------------------------------------------------------------------------
            <summary>
                This request header indicates which transport protocol is to be used and configures its
                parameters such as destination address, compression, multicast time-to-live and
                destination port for a single stream. It sets those values not already determined by a
                presentation description.
            </summary>
            <seealso cref="T:StreamCoders.Rtsp.BaseHeader" />
            -------------------------------------------------------------------------------------------------
        </member>
        <member name="M:StreamCoders.Rtsp.Transport.#ctor">
            -------------------------------------------------------------------------------------------------
            <summary>
                Default constructor.
            </summary>
            -------------------------------------------------------------------------------------------------
        </member>
        <member name="P:StreamCoders.Rtsp.Transport.Ttl">
            -------------------------------------------------------------------------------------------------
            <summary>
                multicast time-to-live.
            </summary>
            <value>
                The ttl.
            </value>
            -------------------------------------------------------------------------------------------------
        </member>
        <member name="P:StreamCoders.Rtsp.Transport.Interleaved">
            -------------------------------------------------------------------------------------------------
            <summary>
                The interleaved parameter implies mixing the media stream with the control stream in
                whatever protocol is being used by the control stream, using the mechanism defined in
                Section 10.12. The argument provides the channel number to be used in the $ statement.
                This parameter may be specified as a range, e.g., interleaved=4-5 in cases where the
                transport choice for the media stream requires it.
            </summary>
            <value>
                The interleaved.
            </value>
            -------------------------------------------------------------------------------------------------
        </member>
        <member name="P:StreamCoders.Rtsp.Transport.Destination">
            -------------------------------------------------------------------------------------------------
            <summary>
                The address to which a stream will be sent. The client may specify the multicast address
                with the destination parameter. To avoid becoming the unwitting perpetrator of a remote-
                controlled denial-of-service attack, a server SHOULD authenticate the client and SHOULD
                log such attempts before allowing the client to direct a media stream to an address not
                chosen by the server. This is particularly important if RTSP commands are issued via UDP,
                but implementations cannot rely on TCP as reliable means of client identification by
                itself. A server SHOULD not allow a client to direct media streams to an address that
                differs from the address commands are coming from.
            </summary>
            <value>
                The destination.
            </value>
            -------------------------------------------------------------------------------------------------
        </member>
        <member name="P:StreamCoders.Rtsp.Transport.Port">
            -------------------------------------------------------------------------------------------------
            <summary>
                This parameter provides the RTP/RTCP port pair for a multicast session. It is specified
                as a range, e.g., port=3456-3457.
            </summary>
            <value>
                The port.
            </value>
            -------------------------------------------------------------------------------------------------
        </member>
        <member name="P:StreamCoders.Rtsp.Transport.Ssrc">
            -------------------------------------------------------------------------------------------------
            <summary>
                The ssrc parameter indicates the RTP Ssrc value that should be (request) or will be
                (response) used by the media server. This parameter is only valid for unicast
                transmission. It identifies the synchronization source to be associated with the media
                stream.
            </summary>
            <value>
                The ssrc.
            </value>
            -------------------------------------------------------------------------------------------------
        </member>
        <member name="P:StreamCoders.Rtsp.Transport.Source">
            -------------------------------------------------------------------------------------------------
            <summary>
                If the source address for the stream is different than what can be derived from the RTSP
                endpoint address (the server in playback or the client in recording), the source MAY be
                specified.
            </summary>
            <value>
                The source.
            </value>
            -------------------------------------------------------------------------------------------------
        </member>
        <member name="P:StreamCoders.Rtsp.Transport.ServerPort">
            -------------------------------------------------------------------------------------------------
            <summary>
                This parameter provides the unicast RTP/RTCP port pair on which the server has chosen to
                receive media data and control information.  It is specified as a pair, e.g.,
                server_port=3456-3457.
            </summary>
            <value>
                The server port.
            </value>
            -------------------------------------------------------------------------------------------------
        </member>
        <member name="P:StreamCoders.Rtsp.Transport.ClientPort">
            -------------------------------------------------------------------------------------------------
            <summary>
                This parameter provides the unicast RTP/RTCP port pair on which the client has chosen to
                receive media data and control information.  It is specified as a pair, e.g.,
                client_port=3456-3457.
            </summary>
            <value>
                The client port.
            </value>
            -------------------------------------------------------------------------------------------------
        </member>
        <member name="P:StreamCoders.Rtsp.Transport.Mode">
            -------------------------------------------------------------------------------------------------
            <summary>
                The mode parameter indicates the methods to be supported for this session. Valid values
                are Play and Record. If not provided, the default is Play.
            </summary>
            <value>
                The mode.
            </value>
            -------------------------------------------------------------------------------------------------
        </member>
        <member name="P:StreamCoders.Rtsp.Transport.Scheme">
            -------------------------------------------------------------------------------------------------
            <summary>
                mutually exclusive indication of whether unicast or multicast
                delivery will be attempted. Default value is multicast. Clients that are capable of
                handling both unicast and multicast transmission MUST indicate such capability by
                including two full transport-specs with separate parameters for each.
            </summary>
            <value>
                The scheme.
            </value>
            -------------------------------------------------------------------------------------------------
        </member>
        <member name="P:StreamCoders.Rtsp.Transport.TransportProtocol">
            -------------------------------------------------------------------------------------------------
            <summary>
                The default value for the "lower-transport" parameters is specific to the profile.
                Default: "RTP/AVP".
            </summary>
            <value>
                The transport protocol.
            </value>
            -------------------------------------------------------------------------------------------------
        </member>
        <member name="M:StreamCoders.Rtsp.Transport.ToString">
            -------------------------------------------------------------------------------------------------
            <summary>
                Serializes object to text.
            </summary>
            <returns>
                This object as a string.
            </returns>
            -------------------------------------------------------------------------------------------------
        </member>
        <member name="M:StreamCoders.Rtsp.Transport.Parse(System.String)">
            -------------------------------------------------------------------------------------------------
            <summary>
                Parses Header.
            </summary>
            <param name="line"> The line. </param>
            <returns>
                true if it succeeds, false if it fails.
            </returns>
            -------------------------------------------------------------------------------------------------
        </member>
        <member name="T:StreamCoders.Rtsp.UserAgent">
            -------------------------------------------------------------------------------------------------
            <summary>
                Header contains the name of the user agent.
            </summary>
            <seealso cref="T:StreamCoders.Rtsp.BaseHeader" />
            -------------------------------------------------------------------------------------------------
        </member>
        <member name="M:StreamCoders.Rtsp.UserAgent.#ctor">
            -------------------------------------------------------------------------------------------------
            <summary>
                Default constructor.
            </summary>
            -------------------------------------------------------------------------------------------------
        </member>
        <member name="P:StreamCoders.Rtsp.UserAgent.Name">
            -------------------------------------------------------------------------------------------------
            <summary>
                Default: "Streamcoders RTSP".
            </summary>
            <value>
                The name.
            </value>
            -------------------------------------------------------------------------------------------------
        </member>
        <member name="M:StreamCoders.Rtsp.UserAgent.ToString">
            -------------------------------------------------------------------------------------------------
            <summary>
                Serializes object to text.
            </summary>
            <returns>
                This object as a string.
            </returns>
            -------------------------------------------------------------------------------------------------
        </member>
        <member name="M:StreamCoders.Rtsp.UserAgent.Parse(System.String)">
            -------------------------------------------------------------------------------------------------
            <summary>
                Parses Header.
            </summary>
            <param name="line"> The line. </param>
            <returns>
                true if it succeeds, false if it fails.
            </returns>
            -------------------------------------------------------------------------------------------------
        </member>
        <member name="T:StreamCoders.Rtsp.WwwAuth">
            -------------------------------------------------------------------------------------------------
            <summary>
                WWW authentication header is used to authenticate a client with a server.
                Both Basic and Digest authentication are support.
            </summary>
            <seealso cref="T:StreamCoders.Rtsp.BaseHeader" />
            -------------------------------------------------------------------------------------------------
        </member>
        <member name="M:StreamCoders.Rtsp.WwwAuth.ToString">
            <summary>
                Serializes object to text
            </summary>
        </member>
        <member name="M:StreamCoders.Rtsp.WwwAuth.Parse(System.String)">
            <summary>
                Parses Header
            </summary>
        </member>
        <member name="T:StreamCoders.Rtsp.HeaderTypeDescriptor`1">
            <summary>
                Describes an RTSP header. This is used in conjunction with HeaderFactory to allow for extensible header types.
            </summary>
            <typeparam name="T">RTSP header type parameter.</typeparam>
        </member>
        <member name="T:StreamCoders.Rtsp.InterleaveBuffer">
            -------------------------------------------------------------------------------------------------
            <summary>
                Extracts data from an RTSP interleave stream and saves them in a queue. Usage: Use
                AddBuffer to add data to the internal buffer. Then call ParseData as long as return value
                is true, to create InterleaveSlices. After that call GetSlice to retrieve the individual
                slices containing the payloads.
            </summary>
            -------------------------------------------------------------------------------------------------
        </member>
        <member name="M:StreamCoders.Rtsp.InterleaveBuffer.#ctor(System.Int32,System.Int32)">
            -------------------------------------------------------------------------------------------------
            <summary>
                Constructs an object of InterleaveBuffer.
            </summary>
            <param name="bufferSize">
                The initial size of the buffer that holds the interleaved data stream.
            </param>
            <param name="growSize">     The amount of bytes the buffer grows by when more buffer space is needed. </param>
            -------------------------------------------------------------------------------------------------
        </member>
        <member name="M:StreamCoders.Rtsp.InterleaveBuffer.Finalize">
            -------------------------------------------------------------------------------------------------
            <summary>
                Finalizer.
            </summary>
            -------------------------------------------------------------------------------------------------
        </member>
        <member name="M:StreamCoders.Rtsp.InterleaveBuffer.AddBuffer(System.Byte[],System.Int32,System.Int32)">
            -------------------------------------------------------------------------------------------------
            <summary>
                Adds data to the internal interleave buffer, so it can be parsed.
            </summary>
            <param name="buffer">
                The buffer to be added.
            </param>
            <param name="bufferOffset">
                The offset into the buffer passed.
            </param>
            <param name="bufferLength">
                The number of valid bytes in the buffer.
            </param>
            -------------------------------------------------------------------------------------------------
        </member>
        <member name="M:StreamCoders.Rtsp.InterleaveBuffer.AddBuffer(System.ArraySegment{System.Byte})">
            -------------------------------------------------------------------------------------------------
            <summary>
                Adds data to the internal interleave buffer, so it can be parsed.
            </summary>
            <param name="buffer">
                The buffer to be added.
            </param>
            -------------------------------------------------------------------------------------------------
        </member>
        <member name="M:StreamCoders.Rtsp.InterleaveBuffer.AddBuffer(StreamCoders.OffsetBuffer{System.Byte})">
            -------------------------------------------------------------------------------------------------
            <summary>
                Adds data to the internal interleave buffer, so it can be parsed.
            </summary>
            <param name="buffer">
                The buffer to be added.
            </param>
            -------------------------------------------------------------------------------------------------
        </member>
        <member name="M:StreamCoders.Rtsp.InterleaveBuffer.ParseData">
            -------------------------------------------------------------------------------------------------
            <summary>
                Parses interleave data and creates InterleaveSlice objects containing the data, types and
                channels.
            </summary>
            <remarks>
                When the function returns true, it could mean that there is more data pending. One should
                iterate over the function until it returns false.
            </remarks>
            <returns>
                Returns true if a new <c>InterleaveSlice</c> has been created, otherwise false.
            </returns>
            -------------------------------------------------------------------------------------------------
        </member>
        <member name="M:StreamCoders.Rtsp.InterleaveBuffer.GetSlice">
            -------------------------------------------------------------------------------------------------
            <summary>
                Retrieves slice from the internal queue.
            </summary>
            <returns>
                Returns a valid InterleaveSlice object, otherwise null.
            </returns>
            -------------------------------------------------------------------------------------------------
        </member>
        <member name="T:StreamCoders.Rtsp.InterleaveContentType">
            -------------------------------------------------------------------------------------------------
            <summary>
                The types of data an <c>InterleaveSlice</c> can contain.
            </summary>
            -------------------------------------------------------------------------------------------------
        </member>
        <member name="F:StreamCoders.Rtsp.InterleaveContentType.Signaling">
            <summary>
                Indicates that the content contains an RTSP message.
            </summary>
        </member>
        <member name="F:StreamCoders.Rtsp.InterleaveContentType.Payload">
            <summary>
                Indicates that the content contains RTP or RTCP packet.
            </summary>
        </member>
        <member name="T:StreamCoders.Rtsp.InterleaveSlice">
            -------------------------------------------------------------------------------------------------
            <summary>
                Represents a data unit sent to a specific channel using RTSP interleave mode. This class
                may produce 2 distinct types of data: <c>InterleaveContentType.Signaling</c> and
                <c>InterleaveContentType.Payload</c>.
                <c>Signaling</c> is used to represent RTSP an message or <c>Payload</c> is used to
                represent RTP/RTCP packets.
            </summary>
            -------------------------------------------------------------------------------------------------
        </member>
        <member name="M:StreamCoders.Rtsp.InterleaveSlice.#ctor(System.Byte[],System.Byte,StreamCoders.Rtsp.InterleaveContentType)">
            -------------------------------------------------------------------------------------------------
            <summary>
                Constructs an object of InterleaveSlice.
            </summary>
            <param name="sliceBuffer">  Buffer containing the slice data. </param>
            <param name="channel">      The channel this data is meant for. </param>
            <param name="sliceType">    The type of payload this slice contains. </param>
            -------------------------------------------------------------------------------------------------
        </member>
        <member name="M:StreamCoders.Rtsp.InterleaveSlice.#ctor(System.ArraySegment{System.Byte},System.Byte,StreamCoders.Rtsp.InterleaveContentType)">
            -------------------------------------------------------------------------------------------------
            <summary>
                Constructs an object of InterleaveSlice.
            </summary>
            <param name="sliceBuffer">  Buffer containing the slice data. </param>
            <param name="channel">      The channel this data is meant for. </param>
            <param name="sliceType">    The type of payload this slice contains. </param>
            -------------------------------------------------------------------------------------------------
        </member>
        <member name="M:StreamCoders.Rtsp.InterleaveSlice.#ctor(StreamCoders.OffsetBuffer{System.Byte},System.Byte,StreamCoders.Rtsp.InterleaveContentType)">
            -------------------------------------------------------------------------------------------------
            <summary>
                Constructs an object of InterleaveSlice.
            </summary>
            <param name="sliceBuffer">  Buffer containing the slice data. </param>
            <param name="channel">      The channel this data is meant for. </param>
            <param name="sliceType">    The type of payload this slice contains. </param>
            -------------------------------------------------------------------------------------------------
        </member>
        <member name="P:StreamCoders.Rtsp.InterleaveSlice.Buffer">
            -------------------------------------------------------------------------------------------------
            <summary>
                Gets or sets the data buffer.
            </summary>
            <value>
                OggBuffer containing the slice data.
            </value>
            -------------------------------------------------------------------------------------------------
        </member>
        <member name="P:StreamCoders.Rtsp.InterleaveSlice.ChannelId">
            -------------------------------------------------------------------------------------------------
            <summary>
                Gets or sets the ChannelId.
            </summary>
            <value>
                The interleave channel this slice represents.
            </value>
            -------------------------------------------------------------------------------------------------
        </member>
        <member name="P:StreamCoders.Rtsp.InterleaveSlice.SliceType">
            -------------------------------------------------------------------------------------------------
            <summary>
                Gets or sets the SliceType.
            </summary>
            <value>
                The type of data this slice contains.
            </value>
            -------------------------------------------------------------------------------------------------
        </member>
        <member name="P:StreamCoders.Rtsp.InterleaveSlice.ArrivalTime">
            -------------------------------------------------------------------------------------------------
            <summary>
                Gets or sets the Arrival-time of the packet.
            </summary>
            <value>
                The time the slice was created by the <c>InterleaveBuffer.ParseData</c> function.
            </value>
            -------------------------------------------------------------------------------------------------
        </member>
        <member name="M:StreamCoders.Rtsp.InterleaveSlice.ToByteArray">
            -------------------------------------------------------------------------------------------------
            <summary>
                Creates (serializes) an RTSP interleave packet from InterleaveSlice object. SliceType
                must be regular payload (SliceType must be Payload).
            </summary>
            <exception cref="T:System.Exception">    Thrown when an exception error condition occurs. </exception>
            <returns>
                Returns byte array.
            </returns>
            -------------------------------------------------------------------------------------------------
        </member>
        <member name="T:StreamCoders.Rtsp.LogEventCallback">
            -------------------------------------------------------------------------------------------------
            <summary>
                Reference Implementation of an RTSP Client using RTSP.NET<br />
                Manages RTSP Sessions and encapsulates useful functions to easily accomplish common tasks
                needed when working with RTSP. <br />
            </summary>
            <param name="sender">       Source of the event. </param>
            <param name="logMessage">   Message describing the log. </param>
            -------------------------------------------------------------------------------------------------
        </member>
        <member name="T:StreamCoders.Rtsp.RtspAnnounce">
            -------------------------------------------------------------------------------------------------
            <summary>
                The Announce method serves two purposes:
                <br />
                When sent from client to server, Announce posts the description of a presentation or
                media object identified by the request URL to a server. When sent from server to client,
                Announce updates the session description in real-time.
                <br />
                If a new media stream is added to a presentation (e.g., during a live presentation), the
                whole presentation description should be sent again, rather than just the additional
                components, so that components can be deleted.
            </summary>
            <seealso cref="T:StreamCoders.Rtsp.RtspRequest" />
            -------------------------------------------------------------------------------------------------
        </member>
        <member name="M:StreamCoders.Rtsp.RtspAnnounce.#ctor">
            -------------------------------------------------------------------------------------------------
            <summary>
                Default constructor.
            </summary>
            -------------------------------------------------------------------------------------------------
        </member>
        <member name="M:StreamCoders.Rtsp.RtspAnnounce.#ctor(StreamCoders.Rtsp.Url)">
            -------------------------------------------------------------------------------------------------
            <summary>
                Constructor. Initializes the Request with valid Request Header.
            </summary>
            <param name="url">  URL of Resource to request. </param>
            -------------------------------------------------------------------------------------------------
        </member>
        <member name="T:StreamCoders.Rtsp.RtspDescribe">
            -------------------------------------------------------------------------------------------------
            <summary>
                The Describe method retrieves the description of a presentation or media object
                identified by the request URL from a server. It may use the Accept header to specify the
                description formats that the client understands. The server responds with a description
                of the requested resource. The Describe reply-response pair constitutes the media
                initialization phase of RTSP.
            </summary>
            <seealso cref="T:StreamCoders.Rtsp.RtspRequest" />
            -------------------------------------------------------------------------------------------------
        </member>
        <member name="M:StreamCoders.Rtsp.RtspDescribe.#ctor">
            -------------------------------------------------------------------------------------------------
            <summary>
                Default constructor.
            </summary>
            -------------------------------------------------------------------------------------------------
        </member>
        <member name="M:StreamCoders.Rtsp.RtspDescribe.#ctor(StreamCoders.Rtsp.Url)">
            -------------------------------------------------------------------------------------------------
            <summary>
                Constructor. Initializes the Request with valid Request Header.
            </summary>
            <param name="url">  URL of Resource to request. </param>
            -------------------------------------------------------------------------------------------------
        </member>
        <member name="T:StreamCoders.Rtsp.RtspGetParameter">
            -------------------------------------------------------------------------------------------------
            <summary>
                A GetParameter request may be issued at any time, e.g., if the client is about to try a
                nonstandard request. It does not influence server state.
            </summary>
            <seealso cref="T:StreamCoders.Rtsp.RtspRequest" />
            -------------------------------------------------------------------------------------------------
        </member>
        <member name="M:StreamCoders.Rtsp.RtspGetParameter.#ctor">
            -------------------------------------------------------------------------------------------------
            <summary>
                Default constructor.
            </summary>
            -------------------------------------------------------------------------------------------------
        </member>
        <member name="M:StreamCoders.Rtsp.RtspGetParameter.#ctor(StreamCoders.Rtsp.Url)">
            -------------------------------------------------------------------------------------------------
            <summary>
                Constructor. Initializes the Request with valid Request Header.
            </summary>
            <param name="url">  URL of the document. </param>
            -------------------------------------------------------------------------------------------------
        </member>
        <member name="T:StreamCoders.Rtsp.RtspOptions">
            -------------------------------------------------------------------------------------------------
            <summary>
                An Options  request may be issued at any time, e.g., if the client is about to try a
                nonstandard request. It does not influence server state.
            </summary>
            <seealso cref="T:StreamCoders.Rtsp.RtspRequest" />
            -------------------------------------------------------------------------------------------------
        </member>
        <member name="M:StreamCoders.Rtsp.RtspOptions.#ctor">
            -------------------------------------------------------------------------------------------------
            <summary>
                Default constructor.
            </summary>
            -------------------------------------------------------------------------------------------------
        </member>
        <member name="M:StreamCoders.Rtsp.RtspOptions.#ctor(StreamCoders.Rtsp.Url)">
            -------------------------------------------------------------------------------------------------
            <summary>
                Constructor. Initializes the Request with valid Request Header.
            </summary>
            <param name="url">  URL of the document. </param>
            -------------------------------------------------------------------------------------------------
        </member>
        <member name="T:StreamCoders.Rtsp.RtspPause">
            -------------------------------------------------------------------------------------------------
            <summary>
                The Pause request causes the stream delivery to be interrupted (halted) temporarily. If
                the request URL names a stream, only playback and recording of that stream is halted. For
                example, for audio, this is equivalent to muting. If the request URL names a presentation
                or group of streams, delivery of all currently active streams within the presentation or
                group is halted. After resuming playback or recording, synchronization of the tracks MUST
                be maintained. Any server resources are kept, though servers MAY close the session and
                free resources after being paused for the duration specified with the timeout parameter
                of the Session header in the Setup message. <br />
                The Pause request may contain a Range header specifying when the stream or presentation
                is to be halted. We refer to this point as the "pause point". The header must contain
                exactly one value rather than a time range. The normal play time for the stream is set to
                the pause point. The pause request becomes effective the first time the server is
                encountering the time point specified in any of the currently pending Play requests. If
                the Range header specifies a time outside any currently pending Play requests, the error
                "457 Invalid Range" is returned. If a media unit (such as an audio or video frame) starts
                presentation at exactly the pause point, it is not played or recorded.  If the Range
                header is missing, stream delivery is interrupted immediately on receipt of the message
                and the pause point is set to the current normal play time.
                <br />
                A Pause request discards all queued Play requests. However, the pause point in the media
                stream MUST be maintained. A subsequent Play request without Range header resumes from
                the pause point.
                <br />
            </summary>
            <seealso cref="T:StreamCoders.Rtsp.RtspRequest" />
            -------------------------------------------------------------------------------------------------
        </member>
        <member name="M:StreamCoders.Rtsp.RtspPause.#ctor">
            -------------------------------------------------------------------------------------------------
            <summary>
                Default constructor.
            </summary>
            -------------------------------------------------------------------------------------------------
        </member>
        <member name="M:StreamCoders.Rtsp.RtspPause.#ctor(StreamCoders.Rtsp.Url)">
            -------------------------------------------------------------------------------------------------
            <summary>
                Constructor. Initializes the Request with valid Request Header.
            </summary>
            <param name="url">  URL of Resource to request. </param>
            -------------------------------------------------------------------------------------------------
        </member>
        <member name="T:StreamCoders.Rtsp.RtspPlay">
            -------------------------------------------------------------------------------------------------
            <summary>
                The Play method tells the server to start sending data via the mechanism specified in
                Setup. A client MUST NOT issue a Play request until any outstanding Setup requests have
                been acknowledged as successful.
                <br />
                The Play request positions the normal play time to the beginning of the range specified
                and delivers stream data until the end of the range is reached. Play requests may be
                pipelined (queued); a server MUST queue Play requests to be executed in order. That is, a
                Play request arriving while a previous Play request is still active is delayed until the
                first has been completed.
            </summary>
            <seealso cref="T:StreamCoders.Rtsp.RtspRequest" />
            -------------------------------------------------------------------------------------------------
        </member>
        <member name="M:StreamCoders.Rtsp.RtspPlay.#ctor">
            -------------------------------------------------------------------------------------------------
            <summary>
                Default constructor.
            </summary>
            -------------------------------------------------------------------------------------------------
        </member>
        <member name="M:StreamCoders.Rtsp.RtspPlay.#ctor(StreamCoders.Rtsp.Url)">
            -------------------------------------------------------------------------------------------------
            <summary>
                Constructor. Initializes the Request with valid Request Header.
            </summary>
            <param name="url">  URL of Resource to request. </param>
            -------------------------------------------------------------------------------------------------
        </member>
        <member name="T:StreamCoders.Rtsp.RtspRecord">
            -------------------------------------------------------------------------------------------------
            <summary>
                This method initiates recording a range of media data according to the presentation
                description. The timestamp reflects start and end time (UTC). If no time range is given,
                use the start or end time provided in the presentation description. If the session has
                already started, commence recording immediately.
                <br />
                The server decides whether to store the recorded data under the request-URI or another
                URI. If the server does not use the request- URI, the response SHOULD be 201 (Created)
                and contain an entity which describes the status of the request and refers to the new
                resource, and a Location header.
            </summary>
            <seealso cref="T:StreamCoders.Rtsp.RtspRequest" />
            -------------------------------------------------------------------------------------------------
        </member>
        <member name="M:StreamCoders.Rtsp.RtspRecord.#ctor">
            -------------------------------------------------------------------------------------------------
            <summary>
                Default constructor.
            </summary>
            -------------------------------------------------------------------------------------------------
        </member>
        <member name="M:StreamCoders.Rtsp.RtspRecord.#ctor(StreamCoders.Rtsp.Url)">
            -------------------------------------------------------------------------------------------------
            <summary>
                Constructor. Initializes the Request with valid Request Header.
            </summary>
            <param name="url">  URL of Resource to request. </param>
            -------------------------------------------------------------------------------------------------
        </member>
        <member name="T:StreamCoders.Rtsp.RtspRedirect">
            -------------------------------------------------------------------------------------------------
            <summary>
                A redirect request informs the client that it must connect to another server location. It
                contains the mandatory header Location, which indicates that the client should issue
                requests for that URL. It may contain the parameter Range, which indicates when the
                redirection takes effect. If the client wants to continue to send or receive media for
                this URI, the client MUST issue a Teardown request for the current session and a Setup
                for the new session at the designated host.
            </summary>
            <seealso cref="T:StreamCoders.Rtsp.RtspRequest" />
            -------------------------------------------------------------------------------------------------
        </member>
        <member name="M:StreamCoders.Rtsp.RtspRedirect.#ctor">
            -------------------------------------------------------------------------------------------------
            <summary>
                Default constructor.
            </summary>
            -------------------------------------------------------------------------------------------------
        </member>
        <member name="M:StreamCoders.Rtsp.RtspRedirect.#ctor(StreamCoders.Rtsp.Url)">
            -------------------------------------------------------------------------------------------------
            <summary>
                Constructor. Initializes the Request with valid Request Header.
            </summary>
            <param name="url">  URL of Resource to request. </param>
            -------------------------------------------------------------------------------------------------
        </member>
        <member name="M:StreamCoders.Rtsp.RtspSetParameter.#ctor">
            -------------------------------------------------------------------------------------------------
            <summary>
                Default constructor.
            </summary>
            -------------------------------------------------------------------------------------------------
        </member>
        <member name="M:StreamCoders.Rtsp.RtspSetParameter.#ctor(StreamCoders.Rtsp.Url)">
            -------------------------------------------------------------------------------------------------
            <summary>
                Constructor. Initializes the Request with valid Request Header.
            </summary>
            <param name="url">  URL of the document. </param>
            -------------------------------------------------------------------------------------------------
        </member>
        <member name="T:StreamCoders.Rtsp.RtspSetup">
            -------------------------------------------------------------------------------------------------
            <summary>
                The Setup request for a URI specifies the transport mechanism to be used for the streamed
                media. A client can issue a Setup request for a stream that is already playing to change
                transport parameters, which a server MAY allow. If it does not allow this, it MUST
                respond with error "455 Method Not Valid In This State". For the benefit of any
                intervening firewalls, a client must indicate the transport parameters even if it has no
                influence over these parameters, for example, where the server advertises a fixed
                multicast address.
                <br />
                Since Setup includes all transport initialization information, firewalls and other
                intermediate network devices (which need this information) are spared the more arduous
                task of parsing the Describe response, which has been reserved for media initialization.
            </summary>
            <seealso cref="T:StreamCoders.Rtsp.RtspRequest" />
            -------------------------------------------------------------------------------------------------
        </member>
        <member name="M:StreamCoders.Rtsp.RtspSetup.#ctor">
            -------------------------------------------------------------------------------------------------
            <summary>
                Default constructor.
            </summary>
            -------------------------------------------------------------------------------------------------
        </member>
        <member name="M:StreamCoders.Rtsp.RtspSetup.#ctor(StreamCoders.Rtsp.Url)">
            -------------------------------------------------------------------------------------------------
            <summary>
                Constructor. Initializes the Request with valid Request Header.
            </summary>
            <param name="url">  URL of Resource to request. </param>
            -------------------------------------------------------------------------------------------------
        </member>
        <member name="T:StreamCoders.Rtsp.RtspTeardown">
            -------------------------------------------------------------------------------------------------
            <summary>
                The Teardown request stops the stream delivery for the given URI, freeing the resources
                associated with it. If the URI is the presentation URI for this presentation, any RTSP
                session identifier associated with the session is no longer valid. Unless all transport
                parameters are defined by the session description, a Setup request has to be issued
                before the session can be played again.
            </summary>
            <seealso cref="T:StreamCoders.Rtsp.RtspRequest" />
            -------------------------------------------------------------------------------------------------
        </member>
        <member name="M:StreamCoders.Rtsp.RtspTeardown.#ctor">
            -------------------------------------------------------------------------------------------------
            <summary>
                Default constructor.
            </summary>
            -------------------------------------------------------------------------------------------------
        </member>
        <member name="M:StreamCoders.Rtsp.RtspTeardown.#ctor(StreamCoders.Rtsp.Url)">
            -------------------------------------------------------------------------------------------------
            <summary>
                Constructor. Initializes the Request with valid Request Header.
            </summary>
            <param name="url">  URL of Resource to request. </param>
            -------------------------------------------------------------------------------------------------
        </member>
        <member name="T:StreamCoders.Rtsp.ParserHelper">
            -------------------------------------------------------------------------------------------------
            <summary>
                RTSP parser helper class.
            </summary>
            -------------------------------------------------------------------------------------------------
        </member>
        <member name="M:StreamCoders.Rtsp.ParserHelper.StripStringFromTerminationCharacters(System.String)">
            -------------------------------------------------------------------------------------------------
            <summary>
                Strip string from termination characters (CR/LF only).
            </summary>
            <param name="stringToStrip">
                The string to strip.
            </param>
            <returns>
                A string.
            </returns>
            -------------------------------------------------------------------------------------------------
        </member>
        <member name="T:StreamCoders.Rtsp.PublicHeader">
            -------------------------------------------------------------------------------------------------
            <summary>
                Represents the Public Header in an RTSP message.
            </summary>
            <seealso cref="T:StreamCoders.Rtsp.BaseHeader" />
            -------------------------------------------------------------------------------------------------
        </member>
        <member name="M:StreamCoders.Rtsp.PublicHeader.#ctor">
            -------------------------------------------------------------------------------------------------
            <summary>
                Default constructor.
            </summary>
            -------------------------------------------------------------------------------------------------
        </member>
        <member name="P:StreamCoders.Rtsp.PublicHeader.Content">
            -------------------------------------------------------------------------------------------------
            <summary>
                Gets or sets the content.
            </summary>
            <value>
                The content.
            </value>
            -------------------------------------------------------------------------------------------------
        </member>
        <member name="M:StreamCoders.Rtsp.PublicHeader.ToString">
            -------------------------------------------------------------------------------------------------
            <summary>
                Serializes object to text.
            </summary>
            <returns>
                This object as a string.
            </returns>
            -------------------------------------------------------------------------------------------------
        </member>
        <member name="M:StreamCoders.Rtsp.PublicHeader.Parse(System.String)">
            -------------------------------------------------------------------------------------------------
            <summary>
                Parses Header.
            </summary>
            <param name="line"> The line. </param>
            <returns>
                true if it succeeds, false if it fails.
            </returns>
            -------------------------------------------------------------------------------------------------
        </member>
        <member name="T:StreamCoders.Rtsp.RequestHeader">
            -------------------------------------------------------------------------------------------------
            <summary>
                Represents the header part of a request message.
            </summary>
            <seealso cref="T:StreamCoders.Rtsp.BaseHeader" />
            -------------------------------------------------------------------------------------------------
        </member>
        <member name="M:StreamCoders.Rtsp.RequestHeader.#ctor">
            -------------------------------------------------------------------------------------------------
            <summary>
                Default constructor.
            </summary>
            -------------------------------------------------------------------------------------------------
        </member>
        <member name="P:StreamCoders.Rtsp.RequestHeader.MethodName">
            -------------------------------------------------------------------------------------------------
            <summary>
                Gets or sets the name of the method.
            </summary>
            <value>
                The name of the method.
            </value>
            -------------------------------------------------------------------------------------------------
        </member>
        <member name="P:StreamCoders.Rtsp.RequestHeader.RequestUrl">
            -------------------------------------------------------------------------------------------------
            <summary>
                Gets or sets URL of the request.
            </summary>
            <value>
                The request url.
            </value>
            -------------------------------------------------------------------------------------------------
        </member>
        <member name="P:StreamCoders.Rtsp.RequestHeader.Version">
            -------------------------------------------------------------------------------------------------
            <summary>
                Gets or sets the version.
            </summary>
            <value>
                The version.
            </value>
            -------------------------------------------------------------------------------------------------
        </member>
        <member name="M:StreamCoders.Rtsp.RequestHeader.ToString">
            -------------------------------------------------------------------------------------------------
            <summary>
                Convert this object into a string representation.
            </summary>
            <returns>
                This object as a string.
            </returns>
            -------------------------------------------------------------------------------------------------
        </member>
        <member name="M:StreamCoders.Rtsp.RequestHeader.Parse(System.String)">
            -------------------------------------------------------------------------------------------------
            <summary>
                Parses.
            </summary>
            <param name="line"> The line. </param>
            <returns>
                true if it succeeds, false if it fails.
            </returns>
            -------------------------------------------------------------------------------------------------
        </member>
        <member name="T:StreamCoders.Rtsp.ResponseHeader">
            -------------------------------------------------------------------------------------------------
            <summary>
                Represents the response header of a response message.
            </summary>
            <seealso cref="T:StreamCoders.Rtsp.BaseHeader" />
            -------------------------------------------------------------------------------------------------
        </member>
        <member name="M:StreamCoders.Rtsp.ResponseHeader.#ctor">
            -------------------------------------------------------------------------------------------------
            <summary>
                Default constructor.
            </summary>
            -------------------------------------------------------------------------------------------------
        </member>
        <member name="P:StreamCoders.Rtsp.ResponseHeader.Version">
            -------------------------------------------------------------------------------------------------
            <summary>
                Gets or sets the version.
            </summary>
            <value>
                The version.
            </value>
            -------------------------------------------------------------------------------------------------
        </member>
        <member name="P:StreamCoders.Rtsp.ResponseHeader.ResponseCode">
            -------------------------------------------------------------------------------------------------
            <summary>
                Gets or sets the response code.
            </summary>
            <value>
                The response code.
            </value>
            -------------------------------------------------------------------------------------------------
        </member>
        <member name="P:StreamCoders.Rtsp.ResponseHeader.ResponseString">
            -------------------------------------------------------------------------------------------------
            <summary>
                Gets or sets the response string.
            </summary>
            <value>
                The response string.
            </value>
            -------------------------------------------------------------------------------------------------
        </member>
        <member name="M:StreamCoders.Rtsp.ResponseHeader.ToString">
            -------------------------------------------------------------------------------------------------
            <summary>
                Convert this object into a string representation.
            </summary>
            <returns>
                This object as a string.
            </returns>
            -------------------------------------------------------------------------------------------------
        </member>
        <member name="M:StreamCoders.Rtsp.ResponseHeader.Parse(System.String)">
            -------------------------------------------------------------------------------------------------
            <summary>
                Parses.
            </summary>
            <param name="line"> The line. </param>
            <returns>
                true if it succeeds, false if it fails.
            </returns>
            -------------------------------------------------------------------------------------------------
        </member>
        <member name="M:StreamCoders.Rtsp.ResponseHeader.GetResponseCodeText(System.Int32)">
            -------------------------------------------------------------------------------------------------
            <summary>
                Looks up the text to an RTSP response code.
            </summary>
            <param name="responseCode"> The response code to look up. </param>
            <returns>
                Returns the text to a response code, otherwise an empty string.
            </returns>
            -------------------------------------------------------------------------------------------------
        </member>
        <member name="M:StreamCoders.Rtsp.ResponseHeader.Create(System.Int32)">
            -------------------------------------------------------------------------------------------------
            <summary>
                Creates this object.
            </summary>
            <param name="responseCode"> The response code. </param>
            <returns>
                .
            </returns>
            -------------------------------------------------------------------------------------------------
        </member>
        <member name="T:StreamCoders.Rtsp.RtspInterleaveDataEventArgs">
            <summary>
                Event is created when RTSP interleave data is received.
            </summary>
            <seealso cref="T:System.EventArgs" />
        </member>
        <member name="P:StreamCoders.Rtsp.RtspInterleaveDataEventArgs.Slices">
            <summary>
                Interleave slices that where reconstructed
            </summary>
        </member>
        <member name="T:StreamCoders.Rtsp.RtspManager">
            -------------------------------------------------------------------------------------------------
            <summary>
                RTSPManager is the base class for RTSP related activity.
            </summary>
            -------------------------------------------------------------------------------------------------
        </member>
        <member name="M:StreamCoders.Rtsp.RtspManager.#ctor">
            -------------------------------------------------------------------------------------------------
            <summary>
                Default constructor.
            </summary>
            -------------------------------------------------------------------------------------------------
        </member>
        <member name="P:StreamCoders.Rtsp.RtspManager.SessionInfo">
            -------------------------------------------------------------------------------------------------
            <summary>
                Gets or sets the information describing the session.
            </summary>
            <value>
                Information describing the session.
            </value>
            -------------------------------------------------------------------------------------------------
        </member>
        <member name="P:StreamCoders.Rtsp.RtspManager.Tracks">
            -------------------------------------------------------------------------------------------------
            <summary>
                Returns a list of available tracks in the RTSP resource.
            </summary>
            <value>
                A List of track informations.
            </value>
            -------------------------------------------------------------------------------------------------
        </member>
        <member name="P:StreamCoders.Rtsp.RtspManager.UserAgentName">
            -------------------------------------------------------------------------------------------------
            <summary>
                The User-Agent name, passed in the User-Agent header.
            </summary>
            <value>
                The name of the user agent.
            </value>
            -------------------------------------------------------------------------------------------------
        </member>
        <member name="P:StreamCoders.Rtsp.RtspManager.CurrentAuthenticationAttempts">
            -------------------------------------------------------------------------------------------------
            <summary>
                Returns the number of authentication attempts.
            </summary>
            <value>
                The current authentication attempts.
            </value>
            -------------------------------------------------------------------------------------------------
        </member>
        <member name="P:StreamCoders.Rtsp.RtspManager.MaximumAuthenticationAttempts">
            -------------------------------------------------------------------------------------------------
            <summary>
                The maximum number of authentication attempts. Default: 2.
            </summary>
            <value>
                The maximum authentication attempts.
            </value>
            -------------------------------------------------------------------------------------------------
        </member>
        <member name="P:StreamCoders.Rtsp.RtspManager.AutomaticAuthentication">
            -------------------------------------------------------------------------------------------------
            <summary>
                If enabled the RTSP Manager will authenticate itself automatically, provided that
                username and password were set via SetCredentials. Default: true.
            </summary>
            <value>
                true if automatic authentication, false if not.
            </value>
            -------------------------------------------------------------------------------------------------
        </member>
        <member name="P:StreamCoders.Rtsp.RtspManager.CredentialsAvailable">
            -------------------------------------------------------------------------------------------------
            <summary>
                Indicates whether credentials are available, when they have been set via the
                SetCredentials function.
            </summary>
            <value>
                true if credentials available, false if not.
            </value>
            -------------------------------------------------------------------------------------------------
        </member>
        <member name="P:StreamCoders.Rtsp.RtspManager.RemoteEndpoint">
            -------------------------------------------------------------------------------------------------
            <summary>
                Indicates the remote endpoint of the RTSP TCP connection.
            </summary>
            <value>
                The remote endpoint.
            </value>
            -------------------------------------------------------------------------------------------------
        </member>
        <member name="E:StreamCoders.Rtsp.RtspManager.OnLog">
            -------------------------------------------------------------------------------------------------
            <summary>
                For debugging purposes to output logging of states &amp; events.
            </summary>
            -------------------------------------------------------------------------------------------------
        </member>
        <member name="E:StreamCoders.Rtsp.RtspManager.InterleaveData">
            -------------------------------------------------------------------------------------------------
            <summary>
                Callback used to receive RTP payloads from interleaved transport.
            </summary>
            -------------------------------------------------------------------------------------------------
        </member>
        <member name="E:StreamCoders.Rtsp.RtspManager.DisconnectOccured">
            -------------------------------------------------------------------------------------------------
            <summary>
                Is called when the underlying TCP connection to the RTSP server is terminated.
            </summary>
            -------------------------------------------------------------------------------------------------
        </member>
        <member name="E:StreamCoders.Rtsp.RtspManager.ErrorOccured">
            -------------------------------------------------------------------------------------------------
            <summary>
                Is called when the underlying TCP connection encounters an error.
            </summary>
            -------------------------------------------------------------------------------------------------
        </member>
        <member name="E:StreamCoders.Rtsp.RtspManager.OnBeforeSend">
            -------------------------------------------------------------------------------------------------
            <summary>
                Event queue for all listeners interested in OnBeforeSend events.
            </summary>
            -------------------------------------------------------------------------------------------------
        </member>
        <member name="E:StreamCoders.Rtsp.RtspManager.OnBeforeReceive">
            -------------------------------------------------------------------------------------------------
            <summary>
                Event queue for all listeners interested in OnBeforeReceive events.
            </summary>
            -------------------------------------------------------------------------------------------------
        </member>
        <member name="M:StreamCoders.Rtsp.RtspManager.Close">
            -------------------------------------------------------------------------------------------------
            <summary>
                Closes the underlying transport connection to the RTSP server.
            </summary>
            <remarks>
                This function does not send a Teardown request before disconnecting.
            </remarks>
            -------------------------------------------------------------------------------------------------
        </member>
        <member name="M:StreamCoders.Rtsp.RtspManager.Finalize">
            -------------------------------------------------------------------------------------------------
            <summary>
                Finaliser.
            </summary>
            -------------------------------------------------------------------------------------------------
        </member>
        <member name="M:StreamCoders.Rtsp.RtspManager.Init(System.Net.EndPoint,System.String)">
            -------------------------------------------------------------------------------------------------
            <summary>
                Initializes the RTSP Manager, initializes local socket interfaces and resolves remote
                host.
            </summary>
            <param name="proxyEndpoint">
                When going through a proxy, this represents the endpoint. Otherwise set to null.
            </param>
            <param name="rtspUrl">        RTSP resource URI. </param>
            <returns>
                Returns true if successful, otherwise false.
            </returns>
            -------------------------------------------------------------------------------------------------
        </member>
        <member name="M:StreamCoders.Rtsp.RtspManager.SetCredentials(System.String,System.String)">
            -------------------------------------------------------------------------------------------------
            <summary>
                Sets the credentials used in case when an authentication is requested.
            </summary>
            <param name="username"> The user name set for the credentials of this session. </param>
            <param name="password"> The password set for the credentials of this session. </param>
            -------------------------------------------------------------------------------------------------
        </member>
        <member name="M:StreamCoders.Rtsp.RtspManager.CreateOptions">
            -------------------------------------------------------------------------------------------------
            <summary>
                Creates an Options request. Headers included: Request Line, CSeq and Session-ID (if
                available)
            </summary>
            <returns>
                The new options.
            </returns>
            -------------------------------------------------------------------------------------------------
        </member>
        <member name="M:StreamCoders.Rtsp.RtspManager.CreateGetParameter">
            -------------------------------------------------------------------------------------------------
            <summary>
                Creates a GetParameter request. Headers included: Request Line, CSeq and Session-ID (if
                available)
            </summary>
            <returns>
                The new get parameter.
            </returns>
            -------------------------------------------------------------------------------------------------
        </member>
        <member name="M:StreamCoders.Rtsp.RtspManager.CreateSetParameter">
            -------------------------------------------------------------------------------------------------
            <summary>
                Creates a SetParameter request. Headers included: Request Line, CSeq and Session-ID (if
                available)
            </summary>
            <returns>
                The new set parameter.
            </returns>
            -------------------------------------------------------------------------------------------------
        </member>
        <member name="M:StreamCoders.Rtsp.RtspManager.CreateDescribe">
            -------------------------------------------------------------------------------------------------
            <summary>
                Creates a Describe request. Headers included: Request Line, CSeq.
            </summary>
            <returns>
                The new describe.
            </returns>
            -------------------------------------------------------------------------------------------------
        </member>
        <member name="M:StreamCoders.Rtsp.RtspManager.CreateAnnounce(StreamCoders.Sdp.SdpMessage)">
            <summary>
                Creates an announce messages containing default session and authorization headers.
            </summary>
            <param name="sdp"></param>
            <returns></returns>
        </member>
        <member name="M:StreamCoders.Rtsp.RtspManager.CreateRecord">
            <summary>
                Creates a record messages containing default session and authorization headers.
            </summary>
            <returns></returns>
        </member>
        <member name="M:StreamCoders.Rtsp.RtspManager.CreateSetup(StreamCoders.Rtsp.RtspTrackInfo,System.UInt32)">
            -------------------------------------------------------------------------------------------------
            <summary>
                Creates a unicast Setup request for specific track and media port. Headers included:
                Request Line, CSeq, Transport.
            </summary>
            <param name="trackInfo">           The RtspTrackInfo. </param>
            <param name="mediaport">    The mediaport. </param>
            <returns>
                The new setup.
            </returns>
            -------------------------------------------------------------------------------------------------
        </member>
        <member name="M:StreamCoders.Rtsp.RtspManager.CreateMulticastSetup(StreamCoders.Rtsp.RtspTrackInfo,System.UInt32)">
            -------------------------------------------------------------------------------------------------
            <summary>
                Creates a multicast Setup request for specific track and media port. Headers included:
                Request Line, CSeq, Transport.
            </summary>
            <param name="trackInfo">           The RtspTrackInfo. </param>
            <param name="mediaport">    The mediaport. </param>
            <returns>
                The new multicast setup.
            </returns>
            -------------------------------------------------------------------------------------------------
        </member>
        <member name="M:StreamCoders.Rtsp.RtspManager.CreateInterleaveSetup(StreamCoders.Rtsp.RtspTrackInfo,System.UInt32)">
            -------------------------------------------------------------------------------------------------
            <summary>
                Creates Setup message for interleave mode.
            </summary>
            <remarks>
                This method will by default include RTCP channel suggestion (suggestedChannel + 1)
            </remarks>
            <param name="trackInfo">               The track information containing URL and TrackID. </param>
            <param name="suggestedChannel">
                The channel for interleave operation. The channel is suggested to the server and may
                differ in the response message.
            </param>
            <returns>
                Returns an object of type RTSPSetup.
            </returns>
            -------------------------------------------------------------------------------------------------
        </member>
        <member name="M:StreamCoders.Rtsp.RtspManager.CreateInterleaveSetup(StreamCoders.Rtsp.RtspTrackInfo,System.UInt32,System.Boolean)">
            -------------------------------------------------------------------------------------------------
            <summary>
                Creates Setup message for interleave mode.
            </summary>
            <remarks>
                The transport scheme "unicast" will be included. This is for compatibility reason to
                various servers that require it. The standard seems to be ambiguous about it.
            </remarks>
            <param name="RtspTrackInfo">
                The track information containing URL and TrackID.
            </param>
            <param name="suggestedChannel">
                The channel for interleave operation. The channel is suggested to the server and may
                differ in the response message.
            </param>
            <param name="offerRtcpInterleaveChannel">
                Whether to include interleave channel request for RTCP (suggestedChannel + 1)
            </param>
            <returns>
                Returns an object of type RTSPSetup.
            </returns>
            -------------------------------------------------------------------------------------------------
        </member>
        <member name="M:StreamCoders.Rtsp.RtspManager.CreatePlay(StreamCoders.Rtsp.RangeParameters)">
            -------------------------------------------------------------------------------------------------
            <summary>
                Creates an aggregated Play request for this session.
                Passed is a range in absolute or relative time points that will make up the <c>Range</c> header.
                Headers included: Request Line,
                CSeq, Session, Range.
            </summary>
            <param name="rangeParameters">
                Range or position. This is optional. If null is passed, then a relative open interval of
                0->INF is assumed.
            </param>
            <returns>
                The new play.
            </returns>
            -------------------------------------------------------------------------------------------------
        </member>
        <member name="M:StreamCoders.Rtsp.RtspManager.CreatePlay(StreamCoders.Rtsp.RtspTrackInfo,StreamCoders.Rtsp.RangeParameters)">
            -------------------------------------------------------------------------------------------------
            <summary>
                Creates a non-aggregate Play request on track resource.
            </summary>
            <param name="trackInfo">               Track to play. </param>
            <param name="rangeParameters">
                Parameters definition the range to play. Passing null omits the range header.
            </param>
            <returns>
                Returns an instance of RTSPPlay.
            </returns>
            -------------------------------------------------------------------------------------------------
        </member>
        <member name="M:StreamCoders.Rtsp.RtspManager.CreatePause(StreamCoders.Rtsp.RtspTrackInfo)">
            -------------------------------------------------------------------------------------------------
            <summary>
                Creates a non-aggregated pause.
            </summary>
            <param name="trackInfo">   The specific track to pause. </param>
            <returns>
                Returns the message.
            </returns>
            -------------------------------------------------------------------------------------------------
        </member>
        <member name="M:StreamCoders.Rtsp.RtspManager.CreatePause">
            -------------------------------------------------------------------------------------------------
            <summary>
                Creates an aggregated pause.
            </summary>
            <returns>
                The new pause.
            </returns>
            -------------------------------------------------------------------------------------------------
        </member>
        <member name="M:StreamCoders.Rtsp.RtspManager.CreateTeardown">
            -------------------------------------------------------------------------------------------------
            <summary>
                Creates a Teardown request for this session. Headers included: Request Line, CSeq,
                Session.
            </summary>
            <returns>
                The new teardown.
            </returns>
            -------------------------------------------------------------------------------------------------
        </member>
        <member name="M:StreamCoders.Rtsp.RtspManager.CreateResponse(StreamCoders.Rtsp.RtspRequest,System.Int32,StreamCoders.Sdp.SdpMessage)">
            -------------------------------------------------------------------------------------------------
            <summary>
                Creates a standard response to a request in a stateful dialog (session).
            </summary>
            <param name="request">      The request to create a response for. </param>
            <param name="responseCode"> The status code for the response. </param>
            <param name="sdp">          SDP object or null. </param>
            <returns>
                The response object.
            </returns>
            -------------------------------------------------------------------------------------------------
        </member>
        <member name="M:StreamCoders.Rtsp.RtspManager.SendOptions">
            -------------------------------------------------------------------------------------------------
            <summary>
                Debug Function! Create and send Options request.
            </summary>
            -------------------------------------------------------------------------------------------------
        </member>
        <member name="M:StreamCoders.Rtsp.RtspManager.SendDescribe">
            -------------------------------------------------------------------------------------------------
            <summary>
                Debug Function! Create and send Describe request.
            </summary>
            -------------------------------------------------------------------------------------------------
        </member>
        <member name="M:StreamCoders.Rtsp.RtspManager.Start">
            -------------------------------------------------------------------------------------------------
            <summary>
                Starts internal threading for receiver and dispatcher. Call this method after a
                successful call to Init(). Stopping allows the instance to be reused. Use Close() instead
                to also tear down the connection.
            </summary>
            <returns>
                Returns true if successful, otherwise false.
            </returns>
            -------------------------------------------------------------------------------------------------
        </member>
        <member name="M:StreamCoders.Rtsp.RtspManager.Stop">
            -------------------------------------------------------------------------------------------------
            <summary>
                Stops internal threading for receiver and dispatcher.
            </summary>
            -------------------------------------------------------------------------------------------------
        </member>
        <member name="M:StreamCoders.Rtsp.RtspManager.Send(StreamCoders.Rtsp.BaseMessage,StreamCoders.Rtsp.RtspTrackInfo)">
            -------------------------------------------------------------------------------------------------
            <summary>
                Sends a Message (Request or Response) to remote server.
            </summary>
            <param name="message">              The message. </param>
            <param name="associatedTrack">  The associated track. </param>
            <returns>
                Returns true if successful, otherwise false.
            </returns>
            -------------------------------------------------------------------------------------------------
        </member>
        <member name="M:StreamCoders.Rtsp.RtspManager.Send(StreamCoders.Rtsp.BaseMessage)">
            -------------------------------------------------------------------------------------------------
            <summary>
                Send this message.
            </summary>
            <param name="message">  The message. </param>
            <returns>
                .
            </returns>
            -------------------------------------------------------------------------------------------------
        </member>
        <member name="M:StreamCoders.Rtsp.RtspManager.Send(System.Byte[],System.Byte)">
            -------------------------------------------------------------------------------------------------
            <summary>
                Sends a buffer through an interleave channel to the remote endpoint.
            </summary>
            <param name="msg">                  The buffer to be sent. </param>
            <param name="interleaveChannel">
                The interleave channel on which the buffer is to be sent.
            </param>
            <returns>
                Returns true on success, otherwise false.
            </returns>
            -------------------------------------------------------------------------------------------------
            <exception cref="T:System.OverflowException">
                The array is multidimensional and contains more than
                <see cref="F:System.Int32.MaxValue" /> elements.
            </exception>
        </member>
        <member name="E:StreamCoders.Rtsp.RtspManager.OnRequestReceived">
            -------------------------------------------------------------------------------------------------
            <summary>
                Callback to receive incoming request providing a proposed response (200 OK). (Optional)
            </summary>
            -------------------------------------------------------------------------------------------------
        </member>
        <member name="E:StreamCoders.Rtsp.RtspManager.OnResponseReceived">
            -------------------------------------------------------------------------------------------------
            <summary>
                Callback to receive incoming responses. (Optional)
            </summary>
            -------------------------------------------------------------------------------------------------
        </member>
        <member name="M:StreamCoders.Rtsp.RtspManager.FindRequest(StreamCoders.Rtsp.RtspResponse)">
            -------------------------------------------------------------------------------------------------
            <summary>
                Finds a request based on a response.
            </summary>
            <param name="response">  The message. </param>
            <returns>
                The found request.
            </returns>
            -------------------------------------------------------------------------------------------------
        </member>
        <member name="M:StreamCoders.Rtsp.RtspManager.FindResponse(StreamCoders.Rtsp.RtspRequest)">
            -------------------------------------------------------------------------------------------------
            <summary>
                Find a response to a specific request.
            </summary>
            <param name="request">  The request to find the response to. </param>
            <returns>
                Returns the response, otherwise null.
            </returns>
            -------------------------------------------------------------------------------------------------
        </member>
        <member name="M:StreamCoders.Rtsp.RtspManager.FindTransaction(StreamCoders.Rtsp.BaseMessage)">
            -------------------------------------------------------------------------------------------------
            <summary>
                Searches for the first transaction.
            </summary>
            <param name="message">  The message. </param>
            <returns>
                The found transaction.
            </returns>
            -------------------------------------------------------------------------------------------------
        </member>
        <member name="M:StreamCoders.Rtsp.RtspManager.Remove(StreamCoders.Rtsp.Transaction)">
            -------------------------------------------------------------------------------------------------
            <summary>
                <para>Removes a transaction from the internal transaction list.</para>
                <para>
                    When frequent calls to certain method requests are made (e.g. GetParameter in
                    custom scenarios) while a session is active, this can be useful to
                    reduce memory consumption over time.
                </para>
            </summary>
            <remarks>
                RtspManager automatically deletes Options transactions that contain a session header, in
                order to avoid unnecessary memory usage.
            </remarks>
            <param name="transaction">  The Transaction to remove. </param>
            -------------------------------------------------------------------------------------------------
        </member>
        <member name="M:StreamCoders.Rtsp.RtspManager.Remove(StreamCoders.Rtsp.BulkTransactions)">
            -------------------------------------------------------------------------------------------------
            <summary>
                Removes a bulkTransaction transaction from internal transaction list.
            </summary>
            <param name="bulkTransaction"> The BulkTransactions to remove. </param>
            -------------------------------------------------------------------------------------------------
        </member>
        <member name="M:StreamCoders.Rtsp.RtspManager.LogMessage(System.String)">
            -------------------------------------------------------------------------------------------------
            <summary>
                Raises an RtspManager.OnLog event.
            </summary>
            <param name="message">  The message. </param>
            -------------------------------------------------------------------------------------------------
        </member>
        <member name="M:StreamCoders.Rtsp.RtspManager.OnInterleaveData(StreamCoders.Rtsp.RtspInterleaveDataEventArgs)">
            <summary>
                Invokes the InterleaveData event
            </summary>
            <param name="e"></param>
        </member>
        <member name="M:StreamCoders.Rtsp.RtspManager.OnDisconnectOccured(StreamCoders.Network.TransportOperationCompleteEventArgs)">
            <summary>
                Invokes the DisconnectOccured event
            </summary>
            <param name="e"></param>
        </member>
        <member name="M:StreamCoders.Rtsp.RtspManager.OnErrorOccured(StreamCoders.Network.TransportOperationErrorEventArgs)">
            <summary>
                Invokes the ErrorOccured event
            </summary>
            <param name="e"></param>
        </member>
        <member name="T:StreamCoders.Rtsp.RtspMessage">
            -------------------------------------------------------------------------------------------------
            <summary>
                RTSP message encapsulates both request and response as well as interleaved messages.
            </summary>
            -------------------------------------------------------------------------------------------------
        </member>
        <member name="P:StreamCoders.Rtsp.RtspMessage.MessageType">
            -------------------------------------------------------------------------------------------------
            <summary>
                Gets or sets the type of the message.
            </summary>
            <value>
                The type of the message.
            </value>
            -------------------------------------------------------------------------------------------------
        </member>
        <member name="P:StreamCoders.Rtsp.RtspMessage.Request">
            -------------------------------------------------------------------------------------------------
            <summary>
                Gets or sets the request.
            </summary>
            <value>
                The request.
            </value>
            -------------------------------------------------------------------------------------------------
        </member>
        <member name="P:StreamCoders.Rtsp.RtspMessage.Response">
            -------------------------------------------------------------------------------------------------
            <summary>
                Gets or sets the response.
            </summary>
            <value>
                The response.
            </value>
            -------------------------------------------------------------------------------------------------
        </member>
        <member name="M:StreamCoders.Rtsp.RtspMessage.Parse(System.String)">
            -------------------------------------------------------------------------------------------------
            <summary>
                Parses.
            </summary>
            <param name="stringToParse">    The string to parse. </param>
            <returns>
                true if it succeeds, false if it fails.
            </returns>
            -------------------------------------------------------------------------------------------------
        </member>
        <member name="M:StreamCoders.Rtsp.RtspMessage.ToString">
            -------------------------------------------------------------------------------------------------
            <summary>
                Convert this object into a string representation.
            </summary>
            <returns>
                This object as a string.
            </returns>
            -------------------------------------------------------------------------------------------------
        </member>
        <member name="M:StreamCoders.Rtsp.RtspMessage.DeepCopy">
            -------------------------------------------------------------------------------------------------
            <summary>
                Deep Copy of RTSP Message.
            </summary>
            <returns>
                New object, otherwise null.
            </returns>
            -------------------------------------------------------------------------------------------------
        </member>
        <member name="T:StreamCoders.Rtsp.RtspRequest">
            -------------------------------------------------------------------------------------------------
            <summary>
                Represents an RTSP request.
            </summary>
            <seealso cref="T:StreamCoders.Rtsp.BaseMessage" />
            -------------------------------------------------------------------------------------------------
        </member>
        <member name="M:StreamCoders.Rtsp.RtspRequest.#ctor">
            -------------------------------------------------------------------------------------------------
            <summary>
                Default constructor.
            </summary>
            -------------------------------------------------------------------------------------------------
        </member>
        <member name="P:StreamCoders.Rtsp.RtspRequest.MethodInfo">
            -------------------------------------------------------------------------------------------------
            <summary>
                Gets or sets the type of the method.
            </summary>
            <value>
                The type of the method.
            </value>
            -------------------------------------------------------------------------------------------------
        </member>
        <member name="P:StreamCoders.Rtsp.RtspRequest.RequestLine">
            -------------------------------------------------------------------------------------------------
            <summary>
                Gets or sets the request line.
            </summary>
            <value>
                The request line.
            </value>
            -------------------------------------------------------------------------------------------------
        </member>
        <member name="P:StreamCoders.Rtsp.RtspRequest.Sdp">
            -------------------------------------------------------------------------------------------------
            <summary>
                Gets or sets the SDP message appendix.
            </summary>
            <value>
                The SDP object.
            </value>
            -------------------------------------------------------------------------------------------------
        </member>
        <member name="M:StreamCoders.Rtsp.RtspRequest.Parse(System.String)">
            -------------------------------------------------------------------------------------------------
            <summary>
                Parses a string to an RTSP request.
            </summary>
            <param name="stringToparse">    String to parse. </param>
            <returns>
                true if it succeeds, false if it fails.
            </returns>
            <seealso cref="M:StreamCoders.Rtsp.BaseMessage.Parse(System.String)" />
            -------------------------------------------------------------------------------------------------
        </member>
        <member name="M:StreamCoders.Rtsp.RtspRequest.ToString">
            -------------------------------------------------------------------------------------------------
            <summary>
                Convert this object into a string representation.
            </summary>
            <returns>
                This object as a string.
            </returns>
            <seealso cref="M:StreamCoders.Rtsp.BaseMessage.ToString" />
            -------------------------------------------------------------------------------------------------
        </member>
        <member name="T:StreamCoders.Rtsp.RtspRequestReceivedCallback">
            -------------------------------------------------------------------------------------------------
            <summary>
                Callback, called when the a new request is received.
            </summary>
            <param name="sender">           Source of the event. </param>
            <param name="request">          The request. </param>
            <param name="proposedResponse"> [in,out] The proposed response. </param>
            -------------------------------------------------------------------------------------------------
        </member>
        <member name="T:StreamCoders.Rtsp.RtspResponse">
            -------------------------------------------------------------------------------------------------
            <summary>
                Represents an RTSP response.
            </summary>
            <seealso cref="T:StreamCoders.Rtsp.BaseMessage" />
            -------------------------------------------------------------------------------------------------
        </member>
        <member name="M:StreamCoders.Rtsp.RtspResponse.#ctor">
            -------------------------------------------------------------------------------------------------
            <summary>
                Default constructor.
            </summary>
            -------------------------------------------------------------------------------------------------
        </member>
        <member name="P:StreamCoders.Rtsp.RtspResponse.ResponseLine">
            -------------------------------------------------------------------------------------------------
            <summary>
                Gets or sets the response line.
            </summary>
            <value>
                The response line.
            </value>
            -------------------------------------------------------------------------------------------------
        </member>
        <member name="P:StreamCoders.Rtsp.RtspResponse.Sdp">
            -------------------------------------------------------------------------------------------------
            <summary>
                Gets or sets the sdp.
            </summary>
            <value>
                The sdp.
            </value>
            -------------------------------------------------------------------------------------------------
        </member>
        <member name="P:StreamCoders.Rtsp.RtspResponse.IsOk">
            -------------------------------------------------------------------------------------------------
            <summary>
                Returns true if the response is a 200 OK.
            </summary>
            <value>
                true if this object is ok, false if not.
            </value>
            -------------------------------------------------------------------------------------------------
        </member>
        <member name="M:StreamCoders.Rtsp.RtspResponse.Parse(System.String)">
            -------------------------------------------------------------------------------------------------
            <summary>
                Parses.
            </summary>
            <param name="stringToparse">    String to parse. </param>
            <returns>
                true if it succeeds, false if it fails.
            </returns>
            <seealso cref="M:StreamCoders.Rtsp.BaseMessage.Parse(System.String)" />
            -------------------------------------------------------------------------------------------------
        </member>
        <member name="M:StreamCoders.Rtsp.RtspResponse.ToString">
            -------------------------------------------------------------------------------------------------
            <summary>
                Convert this object into a string representation.
            </summary>
            <returns>
                This object as a string.
            </returns>
            <seealso cref="M:StreamCoders.Rtsp.BaseMessage.ToString" />
            -------------------------------------------------------------------------------------------------
        </member>
        <member name="M:StreamCoders.Rtsp.RtspResponse.CreateFrom(StreamCoders.Rtsp.RtspRequest,System.Int32,StreamCoders.Sdp.SdpMessage,StreamCoders.Rtsp.BaseHeader[])">
            -------------------------------------------------------------------------------------------------
            <summary>
                Creates an RTSP response from a request, a specific response code and optional SDP.
            </summary>
            <param name="request">
                Request to create response from.
            </param>
            <param name="responseCode">
                Response code.
            </param>
            <param name="optionalSdp">
                Optional SDP.
            </param>
            <param name="optionalHeaders">
                A variable-length parameters list containing optional RTSP headers to add to the response.
            </param>
            <returns>
                The new from.
            </returns>
            -------------------------------------------------------------------------------------------------
        </member>
        <member name="T:StreamCoders.Rtsp.RtspResponseReceivedCallback">
            -------------------------------------------------------------------------------------------------
            <summary>
                Callback, called when a new response is received.
            </summary>
            <param name="sender">   Source of the event. </param>
            <param name="response"> The response. </param>
            -------------------------------------------------------------------------------------------------
        </member>
        <member name="T:StreamCoders.Rtsp.RtspSessionInformation">
            -------------------------------------------------------------------------------------------------
            <summary>
                Contains session information about on ongoing RTSP session.
            </summary>
            -------------------------------------------------------------------------------------------------
        </member>
        <member name="P:StreamCoders.Rtsp.RtspSessionInformation.AggregateUrl">
            -------------------------------------------------------------------------------------------------
            <summary>
                Contains the aggregation URL built from information contained in session description.
            </summary>
            -------------------------------------------------------------------------------------------------
        </member>
        <member name="P:StreamCoders.Rtsp.RtspSessionInformation.BaseUrl">
            -------------------------------------------------------------------------------------------------
            <summary>
                Contains the base URL of the current RTSP session.
            </summary>
            -------------------------------------------------------------------------------------------------
        </member>
        <member name="P:StreamCoders.Rtsp.RtspSessionInformation.RequestUrl">
            -------------------------------------------------------------------------------------------------
            <summary>
                Contains the original request URL of the current RTSP session.
            </summary>
            -------------------------------------------------------------------------------------------------
        </member>
        <member name="P:StreamCoders.Rtsp.RtspSessionInformation.SessionId">
            -------------------------------------------------------------------------------------------------
            <summary>
                Contains the session ID of the current RTSP session.
            </summary>
            -------------------------------------------------------------------------------------------------
        </member>
        <member name="T:StreamCoders.Rtsp.RtspTrackInfo">
            -------------------------------------------------------------------------------------------------
            <summary>
                Stores information of a media track control. An RTSP Session may have multiple tracks
                such as Audio and Video.
            </summary>
            -------------------------------------------------------------------------------------------------
        </member>
        <member name="F:StreamCoders.Rtsp.RtspTrackInfo.SyncSource">
            -------------------------------------------------------------------------------------------------
            <summary>
                The Ssrc (synchronization source) of the sender.
            </summary>
            -------------------------------------------------------------------------------------------------
        </member>
        <member name="P:StreamCoders.Rtsp.RtspTrackInfo.ChannelId">
            -------------------------------------------------------------------------------------------------
            <summary>
                Sets the ChannelId ID if TCP interleaving is used.
            </summary>
            ###
            <value>
                The interleave channel ID of this track.
            </value>
            -------------------------------------------------------------------------------------------------
        </member>
        <member name="P:StreamCoders.Rtsp.RtspTrackInfo.InterleavePresent">
            -------------------------------------------------------------------------------------------------
            <summary>
                Indicates whether the server response (Setup-200) included TCP interleave information. If
                this feature was requested by the client setup, then this field indicates whether the
                server supports this feature.
            </summary>
            -------------------------------------------------------------------------------------------------
        </member>
        <member name="P:StreamCoders.Rtsp.RtspTrackInfo.MediaAttribute">
            -------------------------------------------------------------------------------------------------
            <summary>
                Contains the SDP media attribute selected for this particular track.
            </summary>
            -------------------------------------------------------------------------------------------------
        </member>
        <member name="P:StreamCoders.Rtsp.RtspTrackInfo.MulticastGroupRtcpEndpoint">
            -------------------------------------------------------------------------------------------------
            <summary>
                In case of multicast stream setup, this will contain the RTCP Group IP:port pair.
            </summary>
            -------------------------------------------------------------------------------------------------
        </member>
        <member name="P:StreamCoders.Rtsp.RtspTrackInfo.MulticastGroupRtpEndpoint">
            -------------------------------------------------------------------------------------------------
            <summary>
                In case of multicast stream setup, this will contain the RTP Group IP:port pair.
            </summary>
            -------------------------------------------------------------------------------------------------
        </member>
        <member name="P:StreamCoders.Rtsp.RtspTrackInfo.MulticastPresent">
            -------------------------------------------------------------------------------------------------
            <summary>
                Indicates whether the server response (Setup-200) included multicast information. If this
                feature was requested by the client setup, then this field indicates whether the server
                supports this feature.
            </summary>
            -------------------------------------------------------------------------------------------------
        </member>
        <member name="P:StreamCoders.Rtsp.RtspTrackInfo.SdpSessionOwnerAddress">
            -------------------------------------------------------------------------------------------------
            <summary>
                Contains the address of the SDP session owner.
            </summary>
            -------------------------------------------------------------------------------------------------
        </member>
        <member name="P:StreamCoders.Rtsp.RtspTrackInfo.SyncSourceProvided">
            -------------------------------------------------------------------------------------------------
            <summary>
                Indicates whether a valid <b>SyncSource</b> was received.
            </summary>
            -------------------------------------------------------------------------------------------------
        </member>
        <member name="P:StreamCoders.Rtsp.RtspTrackInfo.TrackUrl">
            -------------------------------------------------------------------------------------------------
            <summary>
                Sets the Track ID.
            </summary>
            ###
            <value>
                The track id is provided by the server side to distinguish between different streams
                available through an RTSP session.
            </value>
            -------------------------------------------------------------------------------------------------
        </member>
        <member name="P:StreamCoders.Rtsp.RtspTrackInfo.UdpRtcpServerPort">
            -------------------------------------------------------------------------------------------------
            <summary>
                Server side UDP/RTCP port if UDP unicast mode.
            </summary>
            -------------------------------------------------------------------------------------------------
        </member>
        <member name="P:StreamCoders.Rtsp.RtspTrackInfo.UdpRtpServerPort">
            -------------------------------------------------------------------------------------------------
            <summary>
                Server side UDP/RTP port if UDP unicast mode.
            </summary>
            -------------------------------------------------------------------------------------------------
        </member>
        <member name="P:StreamCoders.Rtsp.RtspTrackInfo.PayloadType">
            <summary>
                Payload type of RTP packets
            </summary>
        </member>
        <member name="P:StreamCoders.Rtsp.RtspTrackInfo.InfoHeader">
            <summary>
                RTSP Info Header
            </summary>
        </member>
        <member name="T:StreamCoders.Rtsp.ContentTypeDeclaration">
            -------------------------------------------------------------------------------------------------
            <summary>
                Content type declaration.
            </summary>
            -------------------------------------------------------------------------------------------------
        </member>
        <member name="T:StreamCoders.Rtsp.StaticConfiguration">
            -------------------------------------------------------------------------------------------------
            <summary>
                Static configuration for RTSP message contents.
            </summary>
            -------------------------------------------------------------------------------------------------
        </member>
        <member name="F:StreamCoders.Rtsp.StaticConfiguration.ContentTypeDeclarations">
            -------------------------------------------------------------------------------------------------
            <summary>
                Holds a list of custom defined message contents. By default the list contains
                "application/sdp" with <b>SDPMessage</b> as implementation. To define a new content, one
                must derive a class from IMessageAppendix to reflect the content needed and add it along
                with the MIME type to this list.
            </summary>
            -------------------------------------------------------------------------------------------------
        </member>
        <member name="M:StreamCoders.Rtsp.StaticConfiguration.ContentTypeExists(System.String)">
            -------------------------------------------------------------------------------------------------
            <summary>
                Queries if a given content type exists.
            </summary>
            <param name="declaredName"> Name of the declared. </param>
            <returns>
                true if it succeeds, false if it fails.
            </returns>
            -------------------------------------------------------------------------------------------------
        </member>
        <member name="M:StreamCoders.Rtsp.StaticConfiguration.CreateContentTypeInstance(System.String)">
            -------------------------------------------------------------------------------------------------
            <summary>
                Creates a content type instance.
            </summary>
            <param name="declaredName"> Name of the declared. </param>
            <returns>
                The new content type instance.
            </returns>
            -------------------------------------------------------------------------------------------------
        </member>
        <member name="T:StreamCoders.Rtsp.Transaction">
            -------------------------------------------------------------------------------------------------
            <summary>
                A single transaction pairing a request with a response. Transactions are waitable objects
                that success or fail as a whole. Transactions can also be aborted.
            </summary>
            -------------------------------------------------------------------------------------------------
        </member>
        <member name="P:StreamCoders.Rtsp.Transaction.AssociatedTrack">
            -------------------------------------------------------------------------------------------------
            <summary>
                If this request is nonaggregated it can be associated with a track.
            </summary>
            -------------------------------------------------------------------------------------------------
        </member>
        <member name="P:StreamCoders.Rtsp.Transaction.IsAborted">
            -------------------------------------------------------------------------------------------------
            <summary>
                Indicates whether the transaction was aborted.
            </summary>
            -------------------------------------------------------------------------------------------------
        </member>
        <member name="P:StreamCoders.Rtsp.Transaction.Request">
            -------------------------------------------------------------------------------------------------
            <summary>
                The request.
            </summary>
            -------------------------------------------------------------------------------------------------
        </member>
        <member name="P:StreamCoders.Rtsp.Transaction.Response">
            -------------------------------------------------------------------------------------------------
            <summary>
                The response.
            </summary>
            -------------------------------------------------------------------------------------------------
        </member>
        <member name="P:StreamCoders.Rtsp.Transaction.SequenceNumber">
            -------------------------------------------------------------------------------------------------
            <summary>
                The sequence number.
            </summary>
            -------------------------------------------------------------------------------------------------
        </member>
        <member name="P:StreamCoders.Rtsp.Transaction.TransactionId">
            -------------------------------------------------------------------------------------------------
            <summary>
                Identifier for the transaction.
            </summary>
            -------------------------------------------------------------------------------------------------
        </member>
        <member name="M:StreamCoders.Rtsp.Transaction.#ctor">
            -------------------------------------------------------------------------------------------------
            <summary>
                Default constructor.
            </summary>
            -------------------------------------------------------------------------------------------------
        </member>
        <member name="P:StreamCoders.Rtsp.Transaction.IsComplete">
            -------------------------------------------------------------------------------------------------
            <summary>
                Gets a value indicating whether this object is complete.
            </summary>
            <value>
                true if this object is complete, false if not.
            </value>
            -------------------------------------------------------------------------------------------------
        </member>
        <member name="P:StreamCoders.Rtsp.Transaction.IsResponseOk">
            -------------------------------------------------------------------------------------------------
            <summary>
                Returns true when the response is a 200 OK and the transaction has not been aborted.
            </summary>
            <value>
                true if this object is response ok, false if not.
            </value>
            -------------------------------------------------------------------------------------------------
        </member>
        <member name="M:StreamCoders.Rtsp.Transaction.Set(StreamCoders.Rtsp.BaseMessage)">
            -------------------------------------------------------------------------------------------------
            <summary>
                Sets.
            </summary>
            <param name="msg">  The BaseMessage to set. </param>
            -------------------------------------------------------------------------------------------------
        </member>
        <member name="M:StreamCoders.Rtsp.Transaction.Abort">
            -------------------------------------------------------------------------------------------------
            <summary>
                Aborts transaction by setting event to signaled. So checking sanity would be to receive a
                WaitComplete = true but IsComplete = false.
            </summary>
            -------------------------------------------------------------------------------------------------
        </member>
        <member name="M:StreamCoders.Rtsp.Transaction.WaitComplete(System.TimeSpan,System.Threading.WaitHandle)">
            <summary>
                Waits for transaction to complete.
            </summary>
            <param name="timeout">Time to wait for transaction to complete</param>
            <param name="abortHandle">
                Additional abort handle that aborts the transaction that when signaled, <c>IsAborted</c> will
                be set to true.
            </param>
            <returns>Returns true if transaction is complete, otherwise false.</returns>
        </member>
        <member name="M:StreamCoders.Rtsp.Transaction.WaitMultiple(System.Collections.Generic.IEnumerable{StreamCoders.Rtsp.Transaction},System.TimeSpan)">
            -------------------------------------------------------------------------------------------------
            <summary>
                Waits for all of multiple transactions.
            </summary>
            <param name="transactions"> The transactions. </param>
            <param name="timeout">      . </param>
            <returns>
                true if it succeeds, false if it fails.
            </returns>
            -------------------------------------------------------------------------------------------------
        </member>
        <member name="M:StreamCoders.Rtsp.Url.AddPathElement(System.String)">
            <summary>
                Adds a path element to the URL.
            </summary>
            <param name="element"></param>
        </member>
        <member name="T:StreamCoders.Sdp.AttributeKeyValue">
            -------------------------------------------------------------------------------------------------
            <summary>
                Attribute key value.
            </summary>
            -------------------------------------------------------------------------------------------------
        </member>
        <member name="M:StreamCoders.Sdp.AttributeKeyValue.#ctor">
            -------------------------------------------------------------------------------------------------
            <summary>
                Default constructor.
            </summary>
            -------------------------------------------------------------------------------------------------
        </member>
        <member name="P:StreamCoders.Sdp.AttributeKeyValue.Key">
            -------------------------------------------------------------------------------------------------
            <summary>
                Gets or sets the key.
            </summary>
            <value>
                The key.
            </value>
            -------------------------------------------------------------------------------------------------
        </member>
        <member name="P:StreamCoders.Sdp.AttributeKeyValue.Value">
            -------------------------------------------------------------------------------------------------
            <summary>
                Gets or sets the value.
            </summary>
            <value>
                The value.
            </value>
            -------------------------------------------------------------------------------------------------
        </member>
        <member name="T:StreamCoders.Sdp.IMessageAppendix">
            -------------------------------------------------------------------------------------------------
            <summary>
                Interface for message appendix.
            </summary>
            <remarks>
                This interface is used to implement custom content types for messages that correspond to
                a particular MIME type. See StaticConfiguration on how to add a custom message content.
            </remarks>
            -------------------------------------------------------------------------------------------------
        </member>
        <member name="M:StreamCoders.Sdp.IMessageAppendix.Parse(System.String)">
            -------------------------------------------------------------------------------------------------
            <summary>
                Parses.
            </summary>
            <param name="stringToParse">    The string to parse. </param>
            <returns>
                true if it succeeds, false if it fails.
            </returns>
            -------------------------------------------------------------------------------------------------
        </member>
        <member name="M:StreamCoders.Sdp.IMessageAppendix.ToString">
            -------------------------------------------------------------------------------------------------
            <summary>
                Convert this object into a string representation.
            </summary>
            <returns>
                This object as a string.
            </returns>
            -------------------------------------------------------------------------------------------------
        </member>
        <member name="T:StreamCoders.Sdp.SdpAttribute">
            -------------------------------------------------------------------------------------------------
            <summary>
                Represents an SDP attribute.
            </summary>
            <seealso cref="T:StreamCoders.Sdp.SdpBaseField" />
            -------------------------------------------------------------------------------------------------
        </member>
        <member name="M:StreamCoders.Sdp.SdpAttribute.#ctor">
            -------------------------------------------------------------------------------------------------
            <summary>
                Default constructor.
            </summary>
            -------------------------------------------------------------------------------------------------
        </member>
        <member name="P:StreamCoders.Sdp.SdpAttribute.KeyValue">
            -------------------------------------------------------------------------------------------------
            <summary>
                Gets or sets or Sets the KeyValue property.
            </summary>
            <value>
                Consists of key/value pair. If <c>IsProperty</c> is false, key and value will be
                serialized as "a=key:value", otherwise if <c>IsProperty</c> is true "a=value".
            </value>
            -------------------------------------------------------------------------------------------------
        </member>
        <member name="P:StreamCoders.Sdp.SdpAttribute.KeyValueList">
            -------------------------------------------------------------------------------------------------
            <summary>
                Gets the KeyValueList property.
            </summary>
            <value>
                Contains a list of <c>AttributeKeyValue</c> and are serialized after the
                SDPAttribute.KeyValue property. Example: a=[SDPAttribute.KeyValue] [KeyValueList].
            </value>
            -------------------------------------------------------------------------------------------------
        </member>
        <member name="P:StreamCoders.Sdp.SdpAttribute.IsProperty">
            -------------------------------------------------------------------------------------------------
            <summary>
                Gets or sets or Sets whether SDPAttribute.KeyValue will be serialized as Key:Value or
                simply as Value.
            </summary>
            <value>
                Set to true to have only the Value of SDPAttribute.KeyValue serialized, otherwise false.
            </value>
            -------------------------------------------------------------------------------------------------
        </member>
        <member name="M:StreamCoders.Sdp.SdpAttribute.Parse(System.String)">
            -------------------------------------------------------------------------------------------------
            <summary>
                Parses.
            </summary>
            <param name="stringToParse">    The string to parse. </param>
            <returns>
                true if it succeeds, false if it fails.
            </returns>
            <seealso cref="M:StreamCoders.Sdp.SdpBaseField.Parse(System.String)" />
            -------------------------------------------------------------------------------------------------
        </member>
        <member name="M:StreamCoders.Sdp.SdpAttribute.ToString">
            -------------------------------------------------------------------------------------------------
            <summary>
                Convert this object into a string representation.
            </summary>
            <returns>
                This object as a string.
            </returns>
            <seealso cref="M:StreamCoders.Sdp.SdpBaseField.ToString" />
            -------------------------------------------------------------------------------------------------
        </member>
        <member name="M:StreamCoders.Sdp.SdpAttribute.FindKeyValue(System.String)">
            -------------------------------------------------------------------------------------------------
            <summary>
                Searches for the first key value.
            </summary>
            <param name="key">  The key. </param>
            <returns>
                The found key value.
            </returns>
            -------------------------------------------------------------------------------------------------
        </member>
        <member name="M:StreamCoders.Sdp.SdpAttribute.CreateKeyValue(System.String,System.String)">
            -------------------------------------------------------------------------------------------------
            <summary>
                Creates a key value.
            </summary>
            <param name="key">      The key. </param>
            <param name="@value">   The value. </param>
            <returns>
                The new key value.
            </returns>
            -------------------------------------------------------------------------------------------------
        </member>
        <member name="T:StreamCoders.Sdp.SdpBandwidth">
            -------------------------------------------------------------------------------------------------
            <summary>
                Sdp bandwidth.
            </summary>
            <seealso cref="T:StreamCoders.Sdp.SdpBaseField" />
            -------------------------------------------------------------------------------------------------
        </member>
        <member name="M:StreamCoders.Sdp.SdpBandwidth.#ctor">
            -------------------------------------------------------------------------------------------------
            <summary>
                Default constructor.
            </summary>
            -------------------------------------------------------------------------------------------------
        </member>
        <member name="P:StreamCoders.Sdp.SdpBandwidth.Modifier">
            -------------------------------------------------------------------------------------------------
            <summary>
                Gets or sets the modifier.
            </summary>
            <value>
                The modifier.
            </value>
            -------------------------------------------------------------------------------------------------
        </member>
        <member name="P:StreamCoders.Sdp.SdpBandwidth.Value">
            -------------------------------------------------------------------------------------------------
            <summary>
                Gets or sets the value.
            </summary>
            <value>
                The value.
            </value>
            -------------------------------------------------------------------------------------------------
        </member>
        <member name="M:StreamCoders.Sdp.SdpBandwidth.Parse(System.String)">
            -------------------------------------------------------------------------------------------------
            <summary>
                Parses.
            </summary>
            <param name="stringToParse">    The string to parse. </param>
            <returns>
                true if it succeeds, false if it fails.
            </returns>
            -------------------------------------------------------------------------------------------------
        </member>
        <member name="M:StreamCoders.Sdp.SdpBandwidth.ToString">
            -------------------------------------------------------------------------------------------------
            <summary>
                Convert this object into a string representation.
            </summary>
            <returns>
                This object as a string.
            </returns>
            -------------------------------------------------------------------------------------------------
        </member>
        <member name="T:StreamCoders.Sdp.SdpBaseField">
            -------------------------------------------------------------------------------------------------
            <summary>
                Abstract base class for all SDP fields.
            </summary>
            -------------------------------------------------------------------------------------------------
        </member>
        <member name="P:StreamCoders.Sdp.SdpBaseField.FieldType">
            -------------------------------------------------------------------------------------------------
            <summary>
                Gets or sets the type of the field.
            </summary>
            <value>
                The type of the field.
            </value>
            -------------------------------------------------------------------------------------------------
        </member>
        <member name="M:StreamCoders.Sdp.SdpBaseField.ToString">
            -------------------------------------------------------------------------------------------------
            <summary>
                Convert this object into a string representation.
            </summary>
            <returns>
                This object as a string.
            </returns>
            -------------------------------------------------------------------------------------------------
        </member>
        <member name="M:StreamCoders.Sdp.SdpBaseField.Parse(System.String)">
            -------------------------------------------------------------------------------------------------
            <summary>
                Parses.
            </summary>
            <param name="stringToParse">    The string to parse. </param>
            <returns>
                true if it succeeds, false if it fails.
            </returns>
            -------------------------------------------------------------------------------------------------
        </member>
        <member name="T:StreamCoders.Sdp.SdpConnection">
            -------------------------------------------------------------------------------------------------
            <summary>
                A session announcement must contain one Connection field in each media description (see
                below) or a Connection field at the session-level.  It may contain a session-level
                Connection field and one additional Connection field per media description, in which case
                the per-media values override the session-level settings for the relevant media.
            </summary>
            <seealso cref="T:StreamCoders.Sdp.SdpBaseField" />
            -------------------------------------------------------------------------------------------------
        </member>
        <member name="M:StreamCoders.Sdp.SdpConnection.#ctor">
            -------------------------------------------------------------------------------------------------
            <summary>
                Default constructor.
            </summary>
            -------------------------------------------------------------------------------------------------
        </member>
        <member name="P:StreamCoders.Sdp.SdpConnection.NetworkType">
            -------------------------------------------------------------------------------------------------
            <summary>
                Gets or sets or Sets the NetworkType property.
            </summary>
            <value>
                The network type, which is a text string giving the type of network.  Initially "IN" is
                defined to have the meaning "Internet".
            </value>
            -------------------------------------------------------------------------------------------------
        </member>
        <member name="P:StreamCoders.Sdp.SdpConnection.AddressType">
            -------------------------------------------------------------------------------------------------
            <summary>
                Gets or sets or Sets the AddressType property.
            </summary>
            <value>
                The address type.  This allows SDP to be used for sessions that are not IP based.
                Currently only IP4 is defined.
            </value>
            -------------------------------------------------------------------------------------------------
        </member>
        <member name="P:StreamCoders.Sdp.SdpConnection.Address">
            -------------------------------------------------------------------------------------------------
            <summary>
                Gets or sets or Sets the Address property.
            </summary>
            <value>
                For IP4 addresses, the connection address is defined as follows:<br />
                o Typically the connection address will be a class-D IP multicast
                group address.  If the session is not multicast, then the connection address contains the
                fully-qualified domain name or the unicast IP address of the expected data source or data
                relay or data sink as determined by additional attribute fields. It is not expected that
                fully-qualified domain names or unicast addresses
                will be given in a session description that is communicated by a multicast announcement,
                though this is not prohibited.  If a unicast data stream is to pass through a network
                address translator, the use of a fully-qualified domain name rather than an unicast IP
                address is RECOMMENDED.  In other cases, the use of an IP address to specify a particular
                interface on a multi-homed host might be required.  Thus this specification leaves the
                decision as to which to use up to the individual application, but all applications MUST
                be able to cope with receiving both formats. <br />
                o Conferences using an IP multicast connection address must also have a time to live
                (TTL) value present in addition to the multicast address.  The TTL and the address
                together define the scope with which multicast packets sent in this conference will be
                sent. TTL values must be in the range 0-255. <br />
            </value>
            -------------------------------------------------------------------------------------------------
        </member>
        <member name="M:StreamCoders.Sdp.SdpConnection.Parse(System.String)">
            -------------------------------------------------------------------------------------------------
            <summary>
                Parses.
            </summary>
            <param name="stringToParse">    The string to parse. </param>
            <returns>
                true if it succeeds, false if it fails.
            </returns>
            -------------------------------------------------------------------------------------------------
        </member>
        <member name="M:StreamCoders.Sdp.SdpConnection.ToString">
            -------------------------------------------------------------------------------------------------
            <summary>
                Convert this object into a string representation.
            </summary>
            <returns>
                This object as a string.
            </returns>
            -------------------------------------------------------------------------------------------------
        </member>
        <member name="T:StreamCoders.Sdp.SdpEmail">
            -------------------------------------------------------------------------------------------------
            <summary>
                Contact Type Email.
            </summary>
            <seealso cref="T:StreamCoders.Sdp.SdpBaseField" />
            -------------------------------------------------------------------------------------------------
        </member>
        <member name="M:StreamCoders.Sdp.SdpEmail.#ctor">
            -------------------------------------------------------------------------------------------------
            <summary>
                Default constructor.
            </summary>
            -------------------------------------------------------------------------------------------------
        </member>
        <member name="P:StreamCoders.Sdp.SdpEmail.EmailAddress">
            <summary>
                Gets or sets the Email address.
            </summary>
            <value>
                These specify contact information for the person responsible for
                the conference.  This is not necessarily the same person that
                created the conference announcement.
                o Either an email field or a phone field must be specified.
                Additional email and phone fields are allowed.
                o If these are present, they should be specified before the first
                media field.
                o More than one email or phone field can be given for a session
                description.
                o Phone numbers should be given in the conventional international
                format - preceded by a "+ and the international country code.
                There must be a space or a hyphen ("-") between the country code
                and the rest of the phone number.  Spaces and hyphens may be used
                to split up a phone field to aid readability if desired. For
                example:
                packet=+44-171-380-7777 or packet=+1 617 253 6011
                o Both email addresses and phone numbers can have an optional free
                text string associated with them, normally giving the name of the
                person who may be contacted.  This should be enclosed in
                parenthesis if it is present.
            </value>
        </member>
        <member name="M:StreamCoders.Sdp.SdpEmail.Parse(System.String)">
            -------------------------------------------------------------------------------------------------
            <summary>
                Parses.
            </summary>
            <param name="stringToParse">    The string to parse. </param>
            <returns>
                true if it succeeds, false if it fails.
            </returns>
            -------------------------------------------------------------------------------------------------
        </member>
        <member name="M:StreamCoders.Sdp.SdpEmail.ToString">
            -------------------------------------------------------------------------------------------------
            <summary>
                Convert this object into a string representation.
            </summary>
            <returns>
                This object as a string.
            </returns>
            -------------------------------------------------------------------------------------------------
        </member>
        <member name="T:StreamCoders.Sdp.SdpFieldType">
            -------------------------------------------------------------------------------------------------
            <summary>
                Values that represent the available fields in an SDP message.
            </summary>
            -------------------------------------------------------------------------------------------------
        </member>
        <member name="T:StreamCoders.Sdp.SdpInfo">
            -------------------------------------------------------------------------------------------------
            <summary>
                The Info field is information about the session.  There may be at most one session-level
                "i=" field per session description, and at most one Info field per media. Although it may
                be omitted, this is discouraged for session announcements, and user interfaces for
                composing sessions should require text to be entered.  If it is present it must contain
                ISO 10646 characters (but see also the 'charset' attribute below).
                <br />
                A single Info field can also be used for each media definition.  In media definitions,
                Info fields are primarily intended for labeling media streams. As such, they are most
                likely to be useful when a single session has more than one distinct media stream of the
                same media type.  An example would be two different whiteboards, one for slides and one
                for feedback and questions.
            </summary>
            <seealso cref="T:StreamCoders.Sdp.SdpBaseField" />
            -------------------------------------------------------------------------------------------------
        </member>
        <member name="M:StreamCoders.Sdp.SdpInfo.#ctor">
            -------------------------------------------------------------------------------------------------
            <summary>
                Default constructor.
            </summary>
            -------------------------------------------------------------------------------------------------
        </member>
        <member name="P:StreamCoders.Sdp.SdpInfo.Title">
            -------------------------------------------------------------------------------------------------
            <summary>
                Gets or sets or Sets the Title property.
            </summary>
            <value>
                The title of the Info field.
            </value>
            -------------------------------------------------------------------------------------------------
        </member>
        <member name="M:StreamCoders.Sdp.SdpInfo.Parse(System.String)">
            -------------------------------------------------------------------------------------------------
            <summary>
                Parses.
            </summary>
            <param name="stringToParse">    The string to parse. </param>
            <returns>
                true if it succeeds, false if it fails.
            </returns>
            -------------------------------------------------------------------------------------------------
        </member>
        <member name="M:StreamCoders.Sdp.SdpInfo.ToString">
            -------------------------------------------------------------------------------------------------
            <summary>
                Convert this object into a string representation.
            </summary>
            <returns>
                This object as a string.
            </returns>
            -------------------------------------------------------------------------------------------------
        </member>
        <member name="T:StreamCoders.Sdp.SdpMedia">
            -------------------------------------------------------------------------------------------------
            <summary>
                A session description may contain a number of media descriptions. Each media description
                starts with an "m=" field, and is terminated by either the next "m=" field or by the end
                of the session description.
            </summary>
            <seealso cref="T:StreamCoders.Sdp.SdpBaseField" />
            -------------------------------------------------------------------------------------------------
        </member>
        <member name="M:StreamCoders.Sdp.SdpMedia.#ctor">
            -------------------------------------------------------------------------------------------------
            <summary>
                Default constructor.
            </summary>
            -------------------------------------------------------------------------------------------------
        </member>
        <member name="P:StreamCoders.Sdp.SdpMedia.Media">
            -------------------------------------------------------------------------------------------------
            <summary>
                Gets or sets the Media Field.
            </summary>
            <value>
                Currently defined media are "audio", "video", "application", "data" and "control", though
                this list may be extended as new communication modalities emerge (e.g., telepresense).
                The difference between "application" and "data" is that the former is a media flow such
                as whiteboard information, and the latter is bulk-data transfer such as multicasting of
                program executables which will not typically be displayed to the user. "control" is used
                to specify an additional conference control channel for the session.
            </value>
            -------------------------------------------------------------------------------------------------
        </member>
        <member name="P:StreamCoders.Sdp.SdpMedia.Port">
            -------------------------------------------------------------------------------------------------
            <summary>
                Gets or sets the Port Field.
            </summary>
            <value>
                The meaning of the transport port depends on the network being used as specified in the
                relevant "c" field and on the transport protocol defined in the third sub-field.  Other
                ports used by the media application (such as the RTCP port, see [2]) should be derived
                algorithmically from the base media port.
                Note: For transports based on UDP, the value should be in the range 1024 to 65535
                inclusive.  For RTP compliance it should be an even number.
            </value>
            -------------------------------------------------------------------------------------------------
        </member>
        <member name="P:StreamCoders.Sdp.SdpMedia.Transport">
            -------------------------------------------------------------------------------------------------
            <summary>
                Gets or sets the Transport Field.
            </summary>
            <value>
                The transport protocol values are dependent on the address-type field in the "c=" fields.
                Thus a "c=" field of IP4 defines that the transport protocol runs over IP4.  For IP4, it
                is normally expected that most media traffic will be carried as RTP over UDP.  The
                following transport protocols are preliminarily defined, but may be extended through
                registration of new protocols with IANA:
                - RTP/AVP - the IETF's Realtime Transport Protocol using the Audio/Video profile carried
                over UDP.
                - udp - User Datagram Protocol.
            </value>
            -------------------------------------------------------------------------------------------------
        </member>
        <member name="P:StreamCoders.Sdp.SdpMedia.MediaFormats">
            -------------------------------------------------------------------------------------------------
            <summary>
                Gets the MediaFormats.
            </summary>
            <value>
                Contains payload types specified in the attributes hierarchically under the SDPMedia
                field. See <c>SubFields</c>
            </value>
            -------------------------------------------------------------------------------------------------
        </member>
        <member name="P:StreamCoders.Sdp.SdpMedia.SubFields">
            -------------------------------------------------------------------------------------------------
            <summary>
                Gets the SubFields of SDPMedia.
            </summary>
            <value>
                Contains attributes describing various payloads and configurations.
            </value>
            -------------------------------------------------------------------------------------------------
        </member>
        <member name="M:StreamCoders.Sdp.SdpMedia.Parse(System.String)">
            -------------------------------------------------------------------------------------------------
            <summary>
                Parses.
            </summary>
            <param name="stringToParse">    The string to parse. </param>
            <returns>
                true if it succeeds, false if it fails.
            </returns>
            <seealso cref="M:StreamCoders.Sdp.SdpBaseField.Parse(System.String)" />
            -------------------------------------------------------------------------------------------------
        </member>
        <member name="M:StreamCoders.Sdp.SdpMedia.ToString">
            -------------------------------------------------------------------------------------------------
            <summary>
                Convert this object into a string representation.
            </summary>
            <returns>
                This object as a string.
            </returns>
            <seealso cref="M:StreamCoders.Sdp.SdpBaseField.ToString" />
            -------------------------------------------------------------------------------------------------
        </member>
        <member name="M:StreamCoders.Sdp.SdpMedia.FindRtpMap(System.Int32)">
            -------------------------------------------------------------------------------------------------
            <summary>
                Searches for "rtpmap" attribute in the <c>SubFields</c> belong to a certain payloadtype
                containing in <c>MediaFormats</c>
            </summary>
            <param name="mediaFormat">  The media format/payloadtype of the attribute. </param>
            <returns>
                Returns the attribute for the payloadtype, otherwise null.
            </returns>
            -------------------------------------------------------------------------------------------------
        </member>
        <member name="M:StreamCoders.Sdp.SdpMedia.FindAttribute(System.String)">
            -------------------------------------------------------------------------------------------------
            <summary>
                Search for a [key] in SubFields. E.g. a=rtpmap:96 ... ; The key here is "rtpmap".
            </summary>
            <param name="key">  The key to search for. </param>
            <returns>
                Returns the attribute matching the key, otherwise null.
            </returns>
            -------------------------------------------------------------------------------------------------
        </member>
        <member name="T:StreamCoders.Sdp.SDPMediaHelper">
            <summary>
                Provides the creation of SDPMedia objects by passing video or audio encoder interfaces.
            </summary>
        </member>
        <member name="M:StreamCoders.Sdp.SDPMediaHelper.GetVideoDecoderConfigurationString(StreamCoders.Encoder.AVideoEncoderBase)">
            <summary>
                Returns an SDP friendly string representation of a video decoder configuration, if necessary.
                Some decoders don't require out of band initialization, and then the return value will be an empty string.
            </summary>
            <param name="encoder">Initialized Encoder object to query.</param>
            <returns>Returns decoder configuration. </returns>
        </member>
        <member name="M:StreamCoders.Sdp.SDPMediaHelper.CreateFrom(StreamCoders.Encoder.AVideoEncoderBase,System.Int32,System.Int32)">
            <summary>
                Attempts to create an SDPMedia object from a VideoEncoderBase interface instance.
            </summary>
            <param name="encoder">Encoder instance.</param>
            <param name="trackId">SDP control track for media description.</param>
            <param name="payloadType">Payload type of media.</param>
            <returns>Returns SDPMedia object on success, otherwise null.</returns>
            <remarks>
                CreateFrom currently supports MPEG-4.2 and MPEG-4.10 (H.264, AVC) encoder instances.
            </remarks>
        </member>
        <member name="M:StreamCoders.Sdp.SDPMediaHelper.CreateFrom(StreamCoders.Encoder.AAudioEncoderBase,System.Int32,System.Int32)">
            <summary>
                Attempts to create an SDPMedia object from a AudioEncoderBase interface instance.
            </summary>
            <param name="encoder">Encoder instance.</param>
            <param name="trackId">SDP control track for media description.</param>
            <param name="payloadType">Payload type of media.</param>
            <returns>Returns SDPMedia object on success, otherwise null.</returns>
            <remarks>
                CreateFrom currently supports AACEncoder instances.
            </remarks>
        </member>
        <member name="M:StreamCoders.Sdp.SDPMediaHelper.CreateFrom(StreamCoders.Encoder.ISpeechEncoder,System.Int32)">
            <summary>
                Attempts to create an SDPMedia object from a SpeechEncoder instance.
                Currently supported codecs: AMR-NB, AMR-WB, G.711A, G.711U, Speex-nb, Speex-wb, G.723, G.722, G.729(A), G.728
            </summary>
            <param name="encoder">Encoder instance.</param>
            <param name="trackId">SDP control track for media description.</param>
            <returns></returns>
        </member>
        <member name="M:StreamCoders.Sdp.SDPMediaHelper.ParseToAvcConfigurationRecord(StreamCoders.Sdp.SdpMedia,System.Int32)">
            -------------------------------------------------------------------------------------------------
            <summary>
                Parses SDP Media attribute to AVC/H.264 Configuration record need to initialize containers.
            </summary>
            <param name="media">
                The SDP Media attribute. Must be of type "video".
            </param>
            <param name="payloadType">
                The payload type to parse.
            </param>
            <returns>
                Returns an instance of AVCDecoderConfigurationRecord.
            </returns>
            -------------------------------------------------------------------------------------------------
        </member>
        <member name="M:StreamCoders.Sdp.SDPMediaHelper.FindStartCode(StreamCoders.MediaBuffer{System.Byte},System.Byte)">
            <summary>
                Finds MPEG-4 specific start code e.g. 0x0 0x0 0x01 0xCode
            </summary>
            <param name="buffer">Buffer to analyze</param>
            <param name="code">Start code to look for</param>
            <returns>Returns the location of Code</returns>
        </member>
        <member name="T:StreamCoders.Sdp.SdpMessage">
            -------------------------------------------------------------------------------------------------
            <summary>
                SDPMessage is responsible for parsing or compiling all Fields contained in a SDP Message.
            </summary>
            <remarks>
                This class also contains helper functions, such as <c>Create</c>, <c>Find</c> to make
                working with SDP easier.
            </remarks>
            <seealso cref="T:StreamCoders.Sdp.IMessageAppendix" />
            -------------------------------------------------------------------------------------------------
        </member>
        <member name="M:StreamCoders.Sdp.SdpMessage.#ctor">
            -------------------------------------------------------------------------------------------------
            <summary>
                Constructor.
            </summary>
            -------------------------------------------------------------------------------------------------
        </member>
        <member name="P:StreamCoders.Sdp.SdpMessage.Fields">
            -------------------------------------------------------------------------------------------------
            <summary>
                Is a list which contains all SDP Message Fields (BaseFields) in a SDP Message.
            </summary>
            <value>
                The fields.
            </value>
            -------------------------------------------------------------------------------------------------
        </member>
        <member name="M:StreamCoders.Sdp.SdpMessage.Create(System.String)">
            <summary>
                Creates an SdpMessage object given a string containing an SDP message.
            </summary>
            <param name="sdpMessage">String containing an SDP message</param>
            <returns></returns>
        </member>
        <member name="M:StreamCoders.Sdp.SdpMessage.Create(System.Boolean,System.Boolean)">
            -------------------------------------------------------------------------------------------------
            <summary>
                Creates a generic SDPMessage containing version, origin, connection, time, control, range
                and optional audio/video fields.
            </summary>
            <param name="hasVideo"> Pass true to include video media fields. </param>
            <param name="hasAudio"> Pass true to include audio media fields. </param>
            <returns>
                Return SDPMessage object.
            </returns>
            -------------------------------------------------------------------------------------------------
        </member>
        <member name="M:StreamCoders.Sdp.SdpMessage.Create(System.Collections.Generic.IEnumerable{StreamCoders.Sdp.SdpMedia},System.String,System.Double)">
            -------------------------------------------------------------------------------------------------
            <summary>
                Creates an SDPMessage from pre-created SDPMedia objects.
            </summary>
            <param name="mediaDescriptions">    List of SDPMedia objects. </param>
            <param name="originIP">             IP address of originator. </param>
            <param name="duration">             (optional) the duration. </param>
            <returns>
                Returns newly created SDPMessage object.
            </returns>
            -------------------------------------------------------------------------------------------------
        </member>
        <member name="M:StreamCoders.Sdp.SdpMessage.FindMedia(System.String)">
            -------------------------------------------------------------------------------------------------
            <summary>
                Gets an SDPMedia object that has media types such as "audio" or "video" Example: SDPMedia
                videoMedia = FindMedia("video");
            </summary>
            <param name="mediaType">    Type of the media. </param>
            <returns>
                The found media.
            </returns>
            -------------------------------------------------------------------------------------------------
        </member>
        <member name="M:StreamCoders.Sdp.SdpMessage.GetAllMedia">
            <summary>
            Gets all media fields in the SDP
            </summary>
            <returns>Returns a list of all media fields.</returns>
        </member>
        <member name="M:StreamCoders.Sdp.SdpMessage.GetAllMedia(System.String)">
            <summary>
            Gets all media fields in the SDP of a certain type
            </summary>
            <param name="mediaType">Media type to look for.</param>
            <returns>Returns a list of all media fields.</returns>
        </member>
        <member name="M:StreamCoders.Sdp.SdpMessage.DeleteMedia(System.String)">
            -------------------------------------------------------------------------------------------------
            <summary>
                Removes an SDPMedia object.
            </summary>
            <param name="mediaType">    Media type to remove. </param>
            <returns>
                Returns true if removal was successful, otherwise false.
            </returns>
            -------------------------------------------------------------------------------------------------
        </member>
        <member name="M:StreamCoders.Sdp.SdpMessage.FindAttribute(System.String)">
            -------------------------------------------------------------------------------------------------
            <summary>
                Attempts to find an SDP attribute with a particular key name (e.g. "a=control" where
                "control" is the attribute key name of the control key/value pair).
            </summary>
            <param name="key">  Key name of attribute. </param>
            <returns>
                Returns attribute if successful, otherwise false.
            </returns>
            -------------------------------------------------------------------------------------------------
        </member>
        <member name="M:StreamCoders.Sdp.SdpMessage.FindField(StreamCoders.Sdp.SdpFieldType)">
            -------------------------------------------------------------------------------------------------
            <summary>
                Attempts to find one or more Field types in an SDP. (e.g. FindField(FieldTypes.Attribute)
                will return all field starting with "a=" in an SDP).
            </summary>
            <param name="fieldName">    Name of field to find. </param>
            <returns>
                Returns a list of BaseField objects.
            </returns>
            -------------------------------------------------------------------------------------------------
        </member>
        <member name="M:StreamCoders.Sdp.SdpMessage.FindFirstField(StreamCoders.Sdp.SdpFieldType)">
            -------------------------------------------------------------------------------------------------
            <summary>
                Attempts to find first occurance of a field.
            </summary>
            <param name="fieldName">    Name of field to find. </param>
            <returns>
                Returns BaseField object if found, otherwise null.
            </returns>
            -------------------------------------------------------------------------------------------------
        </member>
        <member name="M:StreamCoders.Sdp.SdpMessage.GetTypeByFieldName(System.Char)">
            -------------------------------------------------------------------------------------------------
            <summary>
                Gets the class Type based on the field character.
            </summary>
            <param name="f">    The field character to lookup. </param>
            <returns>
                Returns class Type of field character, otherwise null.
            </returns>
            -------------------------------------------------------------------------------------------------
        </member>
        <member name="M:StreamCoders.Sdp.SdpMessage.Parse(System.String)">
            -------------------------------------------------------------------------------------------------
            <summary>
                Parses.
            </summary>
            <param name="stringToParse">    The string to parse. </param>
            <returns>
                true if successful, otherwise false.
            </returns>
            -------------------------------------------------------------------------------------------------
        </member>
        <member name="M:StreamCoders.Sdp.SdpMessage.ToString">
            -------------------------------------------------------------------------------------------------
            <summary>
                Convert this object into a string representation.
            </summary>
            <returns>
                This object as a string.
            </returns>
            -------------------------------------------------------------------------------------------------
        </member>
        <member name="T:StreamCoders.Sdp.SdpOrigin">
            -------------------------------------------------------------------------------------------------
            <summary>
                The Origin field gives the originator of the session (their username
                and the address of the user's host) plus a session id and session version number.
            </summary>
            <seealso cref="T:StreamCoders.Sdp.SdpBaseField" />
            -------------------------------------------------------------------------------------------------
        </member>
        <member name="M:StreamCoders.Sdp.SdpOrigin.#ctor">
            -------------------------------------------------------------------------------------------------
            <summary>
                Default constructor.
            </summary>
            -------------------------------------------------------------------------------------------------
        </member>
        <member name="P:StreamCoders.Sdp.SdpOrigin.Username">
            -------------------------------------------------------------------------------------------------
            <summary>
                Gets or sets the Username.
            </summary>
            <value>
                &lt;username&gt; is the user's login on the originating host, or it is "-" if the
                originating host does not support the concept of user ids. &lt;username&gt; must not
                contain spaces.  &lt;session id&gt; is a numeric string such that the tuple of &lt;
                username&gt;, &lt;session id&gt;, &lt;network type&gt;, &lt;address type&gt; and &lt;
                address&gt; form a globally unique identifier for the session.
            </value>
            -------------------------------------------------------------------------------------------------
        </member>
        <member name="P:StreamCoders.Sdp.SdpOrigin.SessionID">
            -------------------------------------------------------------------------------------------------
            <summary>
                Gets or sets the SessionID.
            </summary>
            <value>
                The "s=" field is the session name.  There must be one and only one "s=" field per
                session description, and it must contain ISO 10646 characters (but see also the 'charset'
                attribute below).
            </value>
            -------------------------------------------------------------------------------------------------
        </member>
        <member name="P:StreamCoders.Sdp.SdpOrigin.Version">
            -------------------------------------------------------------------------------------------------
            <summary>
                Gets or sets the Version.
            </summary>
            <value>
                &lt;version&gt; is a version number for this announcement.  It is needed[] for proxy
                announcements to detect which of several announcements for the same session is the most
                recent.  Again its usage is up to the
                creating tool, so long as &lt;version&gt; is increased when a modification is made to the
                session data.  Again, it is recommended (but not mandatory) that an NTP timestamp is used.
            </value>
            -------------------------------------------------------------------------------------------------
        </member>
        <member name="P:StreamCoders.Sdp.SdpOrigin.NetworkType">
            -------------------------------------------------------------------------------------------------
            <summary>
                Gets or sets the Network Type.
            </summary>
            <value>
                &lt;network type&gt; is a text string giving the type of network. Initially "IN" is
                defined to have the meaning "Internet".
            </value>
            -------------------------------------------------------------------------------------------------
        </member>
        <member name="P:StreamCoders.Sdp.SdpOrigin.AddressType">
            -------------------------------------------------------------------------------------------------
            <summary>
                Gets or sets the Address Type. Default value is <c>AddressFamily.InterNetwork</c>.
            </summary>
            <value>
                <c>AddressType</c> is declared as type <c>Socket.AddressFamily</c> representing IP4 and IP6.
            </value>
            -------------------------------------------------------------------------------------------------
        </member>
        <member name="P:StreamCoders.Sdp.SdpOrigin.Address">
            -------------------------------------------------------------------------------------------------
            <summary>
                Gets or sets the Adress field.
            </summary>
            <value>
                &lt;address&gt; is the globally unique address of the machine from which the session was
                created. For an address type of IP4, this is either the fully-qualified domain name of
                the machine, or the dotted-decimal representation of the IP version 4 address of the
                machine.  For an address type of IP6, this is either the fully-qualified domain name of
                the machine, or the compressed textual representation of the IP version 6 address of the
                machine.  For both IP4 and IP6, the fully-qualified domain name is the form that SHOULD
                be given unless this is unavailable, in which case the globally unique address may be
                substituted.  A local IP address MUST NOT be used in any context where the SDP
                description might leave the scope in which the address is meaningful.
            </value>
            -------------------------------------------------------------------------------------------------
        </member>
        <member name="M:StreamCoders.Sdp.SdpOrigin.Parse(System.String)">
            -------------------------------------------------------------------------------------------------
            <summary>
                Parses.
            </summary>
            <param name="stringToParse">    The string to parse. </param>
            <returns>
                true if it succeeds, false if it fails.
            </returns>
            -------------------------------------------------------------------------------------------------
        </member>
        <member name="M:StreamCoders.Sdp.SdpOrigin.ToString">
            -------------------------------------------------------------------------------------------------
            <summary>
                Convert this object into a string representation.
            </summary>
            <returns>
                This object as a string.
            </returns>
            -------------------------------------------------------------------------------------------------
        </member>
        <member name="T:StreamCoders.Sdp.SdpPhone">
            -------------------------------------------------------------------------------------------------
            <summary>
                Contact Type Phone.
            </summary>
            <seealso cref="T:StreamCoders.Sdp.SdpBaseField" />
            -------------------------------------------------------------------------------------------------
        </member>
        <member name="M:StreamCoders.Sdp.SdpPhone.#ctor">
            -------------------------------------------------------------------------------------------------
            <summary>
                Default constructor.
            </summary>
            -------------------------------------------------------------------------------------------------
        </member>
        <member name="P:StreamCoders.Sdp.SdpPhone.PhoneNumber">
            <summary>
                Gets or sets the Phone number.
            </summary>
            <value>
                These specify contact information for the person responsible for
                the conference.  This is not necessarily the same person that
                created the conference announcement.
                o Either an email field or a phone field must be specified.
                Additional email and phone fields are allowed.
                o If these are present, they should be specified before the first
                media field.
                o More than one email or phone field can be given for a session
                description.
                o Phone numbers should be given in the conventional international
                format - preceded by a "+ and the international country code.
                There must be a space or a hyphen ("-") between the country code
                and the rest of the phone number.  Spaces and hyphens may be used
                to split up a phone field to aid readability if desired. For
                example:
                packet=+44-171-380-7777 or packet=+1 617 253 6011
                o Both email addresses and phone numbers can have an optional free
                text string associated with them, normally giving the name of the
                person who may be contacted.  This should be enclosed in
                parenthesis if it is present.
            </value>
        </member>
        <member name="M:StreamCoders.Sdp.SdpPhone.Parse(System.String)">
            -------------------------------------------------------------------------------------------------
            <summary>
                Parses.
            </summary>
            <param name="stringToParse">    The string to parse. </param>
            <returns>
                true if it succeeds, false if it fails.
            </returns>
            -------------------------------------------------------------------------------------------------
        </member>
        <member name="M:StreamCoders.Sdp.SdpPhone.ToString">
            -------------------------------------------------------------------------------------------------
            <summary>
                Convert this object into a string representation.
            </summary>
            <returns>
                This object as a string.
            </returns>
            -------------------------------------------------------------------------------------------------
        </member>
        <member name="T:StreamCoders.Sdp.SdpSession">
            -------------------------------------------------------------------------------------------------
            <summary>
                The Session field is the session name.  There must be one and only one Session field per
                session description, and it must contain ISO 10646 characters (but see also the `charset'
                attribute below).
            </summary>
            <seealso cref="T:StreamCoders.Sdp.SdpBaseField" />
            -------------------------------------------------------------------------------------------------
        </member>
        <member name="M:StreamCoders.Sdp.SdpSession.#ctor">
            -------------------------------------------------------------------------------------------------
            <summary>
                Default constructor.
            </summary>
            -------------------------------------------------------------------------------------------------
        </member>
        <member name="P:StreamCoders.Sdp.SdpSession.Name">
            -------------------------------------------------------------------------------------------------
            <summary>
                Gets or sets the Name Field.
            </summary>
            <value>
                The name of the session.
            </value>
            -------------------------------------------------------------------------------------------------
        </member>
        <member name="M:StreamCoders.Sdp.SdpSession.Parse(System.String)">
            -------------------------------------------------------------------------------------------------
            <summary>
                Parses.
            </summary>
            <param name="stringToParse">    The string to parse. </param>
            <returns>
                true if it succeeds, false if it fails.
            </returns>
            -------------------------------------------------------------------------------------------------
        </member>
        <member name="M:StreamCoders.Sdp.SdpSession.ToString">
            -------------------------------------------------------------------------------------------------
            <summary>
                Convert this object into a string representation.
            </summary>
            <returns>
                This object as a string.
            </returns>
            -------------------------------------------------------------------------------------------------
        </member>
        <member name="T:StreamCoders.Sdp.SdpTime">
            -------------------------------------------------------------------------------------------------
            <summary>
                Time fields specify the start and stop times for a conference session.  Multiple "t="
                fields may be used if a session is active at multiple irregularly spaced times; each
                additional "t=" field specifies an additional period of time for which the session will
                be active.  If the session is active at regular times, an "r=" field (see below) should
                be used in addition to and following a "t=" field - in which case the "t=" field
                specifies the start and stop times of the repeat sequence.
            </summary>
            <seealso cref="T:StreamCoders.Sdp.SdpBaseField" />
            -------------------------------------------------------------------------------------------------
        </member>
        <member name="M:StreamCoders.Sdp.SdpTime.#ctor">
            -------------------------------------------------------------------------------------------------
            <summary>
                Default constructor.
            </summary>
            -------------------------------------------------------------------------------------------------
        </member>
        <member name="P:StreamCoders.Sdp.SdpTime.StartTime">
            -------------------------------------------------------------------------------------------------
            <summary>
                Gets or sets the Start time.
            </summary>
            <value>
                These values are the decimal representation of Network Time Protocol (NTP) time values in
                seconds [1].  To convert these values to UNIX time, subtract decimal 2208988800.
            </value>
            -------------------------------------------------------------------------------------------------
        </member>
        <member name="P:StreamCoders.Sdp.SdpTime.StopTime">
            -------------------------------------------------------------------------------------------------
            <summary>
                Gets or sets the Stop time.
            </summary>
            <value>
                These values are the decimal representation of Network Time Protocol (NTP) time values in
                seconds [1].  To convert these values to UNIX time, subtract decimal 2208988800. If the
                stop-time is set to zero, then the session is not bounded, though it will not become
                active until after the start-time.  If the start-time is also zero, the session is
                regarded as permanent.
                User interfaces should strongly discourage the creation of unbounded and permanent
                sessions as they give no information about when the session is actually going to
                terminate, and so make scheduling difficult.
            </value>
            -------------------------------------------------------------------------------------------------
        </member>
        <member name="M:StreamCoders.Sdp.SdpTime.Parse(System.String)">
            -------------------------------------------------------------------------------------------------
            <summary>
                Parses.
            </summary>
            <param name="stringToParse">    The string to parse. </param>
            <returns>
                true if it succeeds, false if it fails.
            </returns>
            -------------------------------------------------------------------------------------------------
        </member>
        <member name="M:StreamCoders.Sdp.SdpTime.ToString">
            -------------------------------------------------------------------------------------------------
            <summary>
                Convert this object into a string representation.
            </summary>
            <returns>
                This object as a string.
            </returns>
            -------------------------------------------------------------------------------------------------
        </member>
        <member name="T:StreamCoders.Sdp.SdpUri">
            -------------------------------------------------------------------------------------------------
            <summary>
                o A URI is a Universal Resource Identifier as used by WWW clients   <br />
                o The URI should be a pointer to additional information about the conference<br />
                o This field is optional, but if it is present it should be specified before the first
                media field<br />
                o No more than one URI field is allowed per session description<br />
            </summary>
            <seealso cref="T:StreamCoders.Sdp.SdpBaseField" />
            -------------------------------------------------------------------------------------------------
        </member>
        <member name="M:StreamCoders.Sdp.SdpUri.#ctor">
            -------------------------------------------------------------------------------------------------
            <summary>
                Default constructor.
            </summary>
            -------------------------------------------------------------------------------------------------
        </member>
        <member name="P:StreamCoders.Sdp.SdpUri.Uri">
            -------------------------------------------------------------------------------------------------
            <summary>
                Gets or sets URI of the document.
            </summary>
            <value>
                The uri.
            </value>
            -------------------------------------------------------------------------------------------------
        </member>
        <member name="M:StreamCoders.Sdp.SdpUri.Parse(System.String)">
            -------------------------------------------------------------------------------------------------
            <summary>
                Parses.
            </summary>
            <param name="stringToParse">    The string to parse. </param>
            <returns>
                true if it succeeds, false if it fails.
            </returns>
            -------------------------------------------------------------------------------------------------
        </member>
        <member name="M:StreamCoders.Sdp.SdpUri.ToString">
            -------------------------------------------------------------------------------------------------
            <summary>
                Convert this object into a string representation.
            </summary>
            <returns>
                This object as a string.
            </returns>
            -------------------------------------------------------------------------------------------------
        </member>
        <member name="T:StreamCoders.Sdp.SdpVersion">
            -------------------------------------------------------------------------------------------------
            <summary>
                The Version field gives the version of the Session Description Protocol. There is no
                minor version number. <br />
            </summary>
            <seealso cref="T:StreamCoders.Sdp.SdpBaseField" />
            -------------------------------------------------------------------------------------------------
        </member>
        <member name="M:StreamCoders.Sdp.SdpVersion.#ctor">
            -------------------------------------------------------------------------------------------------
            <summary>
                Default constructor.
            </summary>
            -------------------------------------------------------------------------------------------------
        </member>
        <member name="P:StreamCoders.Sdp.SdpVersion.Version">
            -------------------------------------------------------------------------------------------------
            <summary>
                Gets or sets or Sets the Version property.
            </summary>
            <value>
                Default: 0.
            </value>
            -------------------------------------------------------------------------------------------------
        </member>
        <member name="M:StreamCoders.Sdp.SdpVersion.Parse(System.String)">
            -------------------------------------------------------------------------------------------------
            <summary>
                Parses.
            </summary>
            <param name="stringToParse">    The string to parse. </param>
            <returns>
                true if it succeeds, false if it fails.
            </returns>
            -------------------------------------------------------------------------------------------------
        </member>
        <member name="M:StreamCoders.Sdp.SdpVersion.ToString">
            -------------------------------------------------------------------------------------------------
            <summary>
                Convert this object into a string representation.
            </summary>
            <returns>
                This object as a string.
            </returns>
            -------------------------------------------------------------------------------------------------
        </member>
        <member name="T:StreamCoders.IReader">
            -------------------------------------------------------------------------------------------------
            <summary>
                Interface for container readers.
            </summary>
            <seealso cref="T:System.IDisposable" />
            -------------------------------------------------------------------------------------------------
        </member>
        <member name="P:StreamCoders.IReader.Position">
            -------------------------------------------------------------------------------------------------
            <summary>
                Gets or sets the position.
            </summary>
            <value>
                The position.
            </value>
            -------------------------------------------------------------------------------------------------
        </member>
        <member name="P:StreamCoders.IReader.Tracks">
            -------------------------------------------------------------------------------------------------
            <summary>
                Gets the tracks.
            </summary>
            <value>
                The tracks.
            </value>
            -------------------------------------------------------------------------------------------------
        </member>
        <member name="M:StreamCoders.IReader.GetNextFrame(StreamCoders.TrackInfo)">
            -------------------------------------------------------------------------------------------------
            <summary>
                Gets the next frame.
            </summary>
            <param name="track">    The trackInfo. </param>
            <returns>
                The next frame.
            </returns>
            -------------------------------------------------------------------------------------------------
        </member>
        <member name="M:StreamCoders.IReader.GetTrackStatus(StreamCoders.TrackInfo)">
            -------------------------------------------------------------------------------------------------
            <summary>
                Gets the status of a trackInfo.
            </summary>
            <param name="trackInfo">    The trackInfo. </param>
            <returns>
                The trackInfo status.
            </returns>
            -------------------------------------------------------------------------------------------------
        </member>
        <member name="M:StreamCoders.IReader.Init(System.String)">
            -------------------------------------------------------------------------------------------------
            <summary>
                Initialises this instance given a filename.
            </summary>
            <returns>
                true if it succeeds, false if it fails.
            </returns>
            -------------------------------------------------------------------------------------------------
        </member>
        <member name="M:StreamCoders.IReader.Init(System.IO.Stream)">
            -------------------------------------------------------------------------------------------------
            <summary>
                Initialises this instance given a stream.
            </summary>
            <param name="inputStream">   The stream. </param>
            <returns>
                true if it succeeds, false if it fails.
            </returns>
            -------------------------------------------------------------------------------------------------
        </member>
        <member name="T:StreamCoders.SpeechStreamType">
            -------------------------------------------------------------------------------------------------
            <summary>
                Type of format the speech stream has.
            </summary>
            <remarks>This is currently only significant for the AMR speech codec.</remarks>
            -------------------------------------------------------------------------------------------------
        </member>
        <member name="F:StreamCoders.SpeechStreamType.StorageFormat">
            <summary>
                Storage format RFC 3267
            </summary>
        </member>
        <member name="F:StreamCoders.SpeechStreamType.Raw">
            <summary>
                Raw stream
            </summary>
        </member>
        <member name="T:StreamCoders.AudioTrackDescriptor">
            -------------------------------------------------------------------------------------------------
            <summary>
                Contains audio information of a track in a container.
            </summary>
            -------------------------------------------------------------------------------------------------
        </member>
        <member name="M:StreamCoders.AudioTrackDescriptor.#ctor">
            -------------------------------------------------------------------------------------------------
            <summary>
                Default constructor.
            </summary>
            -------------------------------------------------------------------------------------------------
        </member>
        <member name="P:StreamCoders.AudioTrackDescriptor.Bitrate">
            -------------------------------------------------------------------------------------------------
            <summary>
                Gets or sets the bitrate.
            </summary>
            <value>
                The bitrate.
            </value>
            -------------------------------------------------------------------------------------------------
        </member>
        <member name="P:StreamCoders.AudioTrackDescriptor.BitsPerSample">
            -------------------------------------------------------------------------------------------------
            <summary>
                Gets or sets the bits per sample.
            </summary>
            <value>
                The bits per sample.
            </value>
            -------------------------------------------------------------------------------------------------
        </member>
        <member name="P:StreamCoders.AudioTrackDescriptor.Channels">
            -------------------------------------------------------------------------------------------------
            <summary>
                Gets or sets the number of channels.
            </summary>
            <value>
                The channels.
            </value>
            -------------------------------------------------------------------------------------------------
        </member>
        <member name="P:StreamCoders.AudioTrackDescriptor.BlockAlignment">
            -------------------------------------------------------------------------------------------------
            <summary>
                Gets or sets the block alignment of audio frames. This may be a necessary configuration
                for some audio types (e.g. WMA Pro).
            </summary>
            <value>
                The block alignment.
            </value>
            -------------------------------------------------------------------------------------------------
        </member>
        <member name="T:StreamCoders.DecoderSpecificData">
            <summary>
                Holds information used to initialize decoders
            </summary>
        </member>
        <member name="M:StreamCoders.DecoderSpecificData.#ctor(System.String)">
            <summary>
                Constructor using string representation
            </summary>
            <param name="stringRepresentation">
                String representation (must be a string containing hex values without spacing,
                dashes or dots)
            </param>
        </member>
        <member name="M:StreamCoders.DecoderSpecificData.#ctor(System.Byte[])">
            <summary>
                Constructor using binary representation
            </summary>
            <param name="binaryRepresentation">Buffer containing form of decoder specific data</param>
        </member>
        <member name="M:StreamCoders.DecoderSpecificData.#ctor(StreamCoders.OffsetBuffer{System.Byte})">
            <summary>
                Constructor using binary representation
            </summary>
            <param name="binaryPresentation">Buffer containing form of decoder specific data</param>
        </member>
        <member name="M:StreamCoders.DecoderSpecificData.ToStringRepresentation(StreamCoders.DecoderSpecificDataOutputType)">
            <summary>
                Converts the decoder specific data to a string representation.
            </summary>
            <param name="outputType">Type of the output.</param>
            <returns>System.String.</returns>
        </member>
        <member name="M:StreamCoders.DecoderSpecificData.ToBinaryRepresentation(StreamCoders.DecoderSpecificDataOutputType)">
            <summary>
                Converts the decoder specific data to a binary representation.
            </summary>
            <param name="outputType">Type of the output.</param>
            <returns>OffsetBuffer&lt;System.Byte&gt;.</returns>
        </member>
        <member name="T:StreamCoders.DecoderSpecificDataOutputType">
            <summary>
                Represents the type the type of structure that is returned by DecoderSpecificData.
            </summary>
        </member>
        <member name="F:StreamCoders.DecoderSpecificDataOutputType.Storage">
            <summary>
                Indicates that the data structure to be returned should be in storage type format.
                <para>
                    For H.264 and H.265 these will be (H)AVCConfigurationRecord
                </para>
                <para>
                    For all other codecs <c>Storage</c> and <c>Stream</c> have the same meaning.
                </para>
            </summary>
        </member>
        <member name="F:StreamCoders.DecoderSpecificDataOutputType.Stream">
            <summary>
                Indicates that the data structure to be returned should be in a raw unstructured form.
                <para>
                    For H.264 and H.265 these will be (VPS)/SPS/PPS
                </para>
                <para>
                    For all other codecs <c>Storage</c> and <c>Stream</c> have the same meaning.
                </para>
            </summary>
        </member>
        <member name="F:StreamCoders.DecoderSpecificDataOutputType.StreamEscaped">
            <summary>
                Indicates that the data structure to be returned should be in a raw but escaped form.
                <para>For H.264 this means start codes.</para>
                <para>For all other codecs <c>Stream</c> and <c>StreamEscaped</c> are identical</para>
            </summary>
        </member>
        <member name="T:StreamCoders.H264DecoderSpecificData">
            <summary>
                Specialization of DecoderSpecificData for H.264. It handles SPS/PPS and AVCDecoderConfigurationRecord.
            </summary>
        </member>
        <member name="M:StreamCoders.H264DecoderSpecificData.#ctor(System.String)">
            -------------------------------------------------------------------------------------------------
            <summary>
                Constructor which takes SPS/PPS as string representation.
            </summary>
            <param name="stringRepresentation">
                The string representation of SPS/PPS.
            </param>
            -------------------------------------------------------------------------------------------------
        </member>
        <member name="M:StreamCoders.H264DecoderSpecificData.#ctor(StreamCoders.OffsetBuffer{System.Byte},StreamCoders.H264DecoderSpecificDataInputType)">
            <summary>
                Constructs object using binary form of either SPS/PPS or AVCDecoderConfigurationRecord.
            </summary>
            <param name="binaryRepresentation">Buffer containing decoder specific data</param>
            <param name="binaryType">Type contained within the buffer</param>
        </member>
        <member name="M:StreamCoders.H264DecoderSpecificData.#ctor(StreamCoders.Container.MP4.AVCDecoderConfigurationRecord)">
            -------------------------------------------------------------------------------------------------
            <summary>
                Constructor which takes AVC configuration record.
            </summary>
            <param name="avcC">
                The AVC configuration record.
            </param>
            -------------------------------------------------------------------------------------------------
        </member>
        <member name="M:StreamCoders.H264DecoderSpecificData.ToStringRepresentation(StreamCoders.DecoderSpecificDataOutputType)">
            <summary>
                Returns DecoderConfiguration in either Stream (SPS/PPS) or Storage (AVCDecoderConfigurationRecord)
            </summary>
            <param name="outputType">Type to return</param>
            <returns>Returns requested decoder specific data.</returns>
        </member>
        <member name="M:StreamCoders.H264DecoderSpecificData.ToBinaryRepresentation(StreamCoders.DecoderSpecificDataOutputType)">
            <summary>
                Returns DecoderConfiguration in either Stream (SPS/PPS) or Storage (AVCDecoderConfigurationRecord)
            </summary>
            <param name="outputType">Type to return</param>
            <returns>Returns requested decoder specific data.</returns>
        </member>
        <member name="M:StreamCoders.H264DecoderSpecificData.ToAvcDecoderConfigurationRecord">
            <summary>
                Gets AVCDecoderConfigurationRecord
            </summary>
            <returns>Returns an instance of AVCDecoderConfigurationRecord</returns>
        </member>
        <member name="M:StreamCoders.H264DecoderSpecificData.ToSpsPpsSdpString">
            <summary>
                Gets the SDP form of an SPS/PPS
            </summary>
            <returns>Returns a string containing SPS/PPS</returns>
        </member>
        <member name="T:StreamCoders.H264DecoderSpecificDataInputType">
            <summary>
                Specifies type of format used to pass an H.264 decoder specific data input.
            </summary>
        </member>
        <member name="M:StreamCoders.H265DecoderSpecificData.ToBinaryRepresentation(StreamCoders.DecoderSpecificDataOutputType)">
            <summary>
                Returns DecoderConfiguration in either Stream (SPS/PPS) or Storage (AVCDecoderConfigurationRecord)
            </summary>
            <param name="outputType">Type to return</param>
            <returns>Returns requested decoder specific data.</returns>
        </member>
        <member name="T:StreamCoders.H265DecoderSpecificDataInputType">
            <summary>
                Specifies type of format used to pass an H.265 decoder specific data input.
            </summary>
        </member>
        <member name="T:StreamCoders.HintTrackDescriptor">
            -------------------------------------------------------------------------------------------------
            <summary>
                Describes an RTP Hint track.
            </summary>
            -------------------------------------------------------------------------------------------------
        </member>
        <member name="F:StreamCoders.HintTrackDescriptor.ReferenceTrackNumber">
            -------------------------------------------------------------------------------------------------
            <summary>
                Each hint track points to a reference track number that contains the actual samples to be convoluted.
            </summary>
            -------------------------------------------------------------------------------------------------
        </member>
        <member name="F:StreamCoders.HintTrackDescriptor.Sdp">
            -------------------------------------------------------------------------------------------------
            <summary>
                Contains the SDP for this track.
            </summary>
            -------------------------------------------------------------------------------------------------
        </member>
        <member name="F:StreamCoders.HintTrackDescriptor.Timescale">
            -------------------------------------------------------------------------------------------------
            <summary>
                Time scale (Clock resolution) of media
            </summary>
            -------------------------------------------------------------------------------------------------
        </member>
        <member name="T:StreamCoders.IDecoderSpecificData">
            -------------------------------------------------------------------------------------------------
            <summary>
                Interface for decoder specific data.
            </summary>
            -------------------------------------------------------------------------------------------------
        </member>
        <member name="T:StreamCoders.ITrackDescriptor">
            <summary>
                Used to describe different media types (audio, video, text) when working with containers.
            </summary>
        </member>
        <member name="P:StreamCoders.ITrackDescriptor.Duration">
            -------------------------------------------------------------------------------------------------
            <summary>
                Gets or sets the duration.
            </summary>
            <value>
                The duration.
            </value>
            -------------------------------------------------------------------------------------------------
        </member>
        <member name="P:StreamCoders.ITrackDescriptor.SampleFrequency">
            -------------------------------------------------------------------------------------------------
            <summary>
                Gets or sets the sample frequency.
            </summary>
            <value>
                The sample frequency.
            </value>
            -------------------------------------------------------------------------------------------------
        </member>
        <member name="P:StreamCoders.ITrackDescriptor.DecoderSpecificData">
            -------------------------------------------------------------------------------------------------
            <summary>
                Gets or sets the decoder specific information.
            </summary>
            <value>
                Information describing the decoder.
            </value>
            -------------------------------------------------------------------------------------------------
        </member>
        <member name="T:StreamCoders.MediaContentType">
            -------------------------------------------------------------------------------------------------
            <summary>
                Indicates the general category of a track. E.g. Video, Audio or Text.
            </summary>
            -------------------------------------------------------------------------------------------------
        </member>
        <member name="F:StreamCoders.MediaContentType.Unknown">
            <summary>
                Unknown
            </summary>
        </member>
        <member name="F:StreamCoders.MediaContentType.Audio">
            <summary>
                The track contains audio.
            </summary>
        </member>
        <member name="F:StreamCoders.MediaContentType.Video">
            <summary>
                The track contains video.
            </summary>
        </member>
        <member name="F:StreamCoders.MediaContentType.Dvd">
            <summary>
                The track contains DVD content.
            </summary>
        </member>
        <member name="F:StreamCoders.MediaContentType.Text">
            <summary>
                The track contains text/sub-titles.
            </summary>
        </member>
        <member name="F:StreamCoders.MediaContentType.Hint">
            <summary>
                The track contains RTP hints.
            </summary>
        </member>
        <member name="T:StreamCoders.TrackInfo">
            -------------------------------------------------------------------------------------------------
            <summary>
                Contains information about a track in a container.
            </summary>
            -------------------------------------------------------------------------------------------------
        </member>
        <member name="M:StreamCoders.TrackInfo.#ctor">
            -------------------------------------------------------------------------------------------------
            <summary>
                Default constructor.
            </summary>
            -------------------------------------------------------------------------------------------------
        </member>
        <member name="M:StreamCoders.TrackInfo.#ctor(StreamCoders.MediaContentType)">
            -------------------------------------------------------------------------------------------------
            <summary>
                Constructor.
            </summary>
            <param name="category">
                Based on the category the AudioTrack or VideoTrack properties are instantiated.
            </param>
            -------------------------------------------------------------------------------------------------
        </member>
        <member name="P:StreamCoders.TrackInfo.MediaContentType">
            <summary>
                Contains general category of this track
            </summary>
        </member>
        <member name="P:StreamCoders.TrackInfo.TrackNumber">
            <summary>
                The track number uniquely identifies the track in a container.
            </summary>
        </member>
        <member name="P:StreamCoders.TrackInfo.Codec">
            <summary>
                The codec used in this particular track.
            </summary>
        </member>
        <member name="P:StreamCoders.TrackInfo.Media">
            <summary>
                Contains codec specific configuration.
            </summary>
        </member>
        <member name="M:StreamCoders.TrackInfo.ShallowCopy">
            <summary>
                Creates a shallow copy of TrackInfo using <c>MemberwiseClone</c>
            </summary>
            <returns>Returns a shallow copy of TrackInfo</returns>
        </member>
        <member name="T:StreamCoders.TrackStatus">
            -------------------------------------------------------------------------------------------------
            <summary>
                Indicates the status of a track within a container.
            </summary>
            -------------------------------------------------------------------------------------------------
        </member>
        <member name="F:StreamCoders.TrackStatus.Unknown">
            <summary>
                The track is in an unknown or initial state.
            </summary>
        </member>
        <member name="F:StreamCoders.TrackStatus.Ok">
            <summary>
                The tracks in operational and more data can be retrieved.
            </summary>
        </member>
        <member name="F:StreamCoders.TrackStatus.StreamEnd">
            <summary>
                The track has ended. The no more data available for retrieval.
            </summary>
        </member>
        <member name="F:StreamCoders.TrackStatus.InsufficientData">
            <summary>
                The track is in a state that would currently produce insufficient data.
                This could be the case when data is streamed over HTTP and a size indicator is greater than the available amount of
                data.
            </summary>
        </member>
        <member name="T:StreamCoders.VideoTrackDescriptor">
            -------------------------------------------------------------------------------------------------
            <summary>
                Contains video information of a track in a container.
            </summary>
            -------------------------------------------------------------------------------------------------
        </member>
        <member name="P:StreamCoders.VideoTrackDescriptor.Bitrate">
            -------------------------------------------------------------------------------------------------
            <summary>
                Gets or sets the bitrate.
            </summary>
            <value>
                The bitrate.
            </value>
            -------------------------------------------------------------------------------------------------
        </member>
        <member name="P:StreamCoders.VideoTrackDescriptor.Framerate">
            -------------------------------------------------------------------------------------------------
            <summary>
                Gets or sets the framerate.
            </summary>
            <value>
                The framerate.
            </value>
            -------------------------------------------------------------------------------------------------
        </member>
        <member name="P:StreamCoders.VideoTrackDescriptor.Height">
            -------------------------------------------------------------------------------------------------
            <summary>
                Gets or sets the height.
            </summary>
            <value>
                The height.
            </value>
            -------------------------------------------------------------------------------------------------
        </member>
        <member name="P:StreamCoders.VideoTrackDescriptor.Width">
            -------------------------------------------------------------------------------------------------
            <summary>
                Gets or sets the width.
            </summary>
            <value>
                The width.
            </value>
            -------------------------------------------------------------------------------------------------
        </member>
        <member name="T:StreamCoders.ATransformProcessor">
            -------------------------------------------------------------------------------------------------
            <summary>
                Abstract based class for all classes implementing codec operations.
            </summary>
            -------------------------------------------------------------------------------------------------
        </member>
        <member name="M:StreamCoders.ATransformProcessor.Transform(StreamCoders.MediaBuffer{System.Byte})">
            -------------------------------------------------------------------------------------------------
            <summary>
                Transforms input buffer and returns the resulting status of the operations. Audio &amp;
                Video codecs are derived from this interface.
            </summary>
            <param name="inputBuffer">
                Buffer for input data.
            </param>
            <returns>
                Returns the status of the Operation.
            </returns>
            <seealso cref="M:StreamCoders.ITransform.Transform(MediaBuffer{byte})" />
            -------------------------------------------------------------------------------------------------
        </member>
        <member name="P:StreamCoders.ATransformProcessor.OutputQueue">
            -------------------------------------------------------------------------------------------------
            <summary>
                Output queue that contains the results of the previous transformation.
            </summary>
            <value>
                A Queue of outputs of a transformation.
            </value>
            <seealso cref="P:StreamCoders.ITransform.OutputQueue" />
            -------------------------------------------------------------------------------------------------
        </member>
        <member name="T:StreamCoders.ITransform">
            -------------------------------------------------------------------------------------------------
            <summary>
                Interface for all transforms.
            </summary>
            -------------------------------------------------------------------------------------------------
        </member>
        <member name="P:StreamCoders.ITransform.OutputQueue">
            -------------------------------------------------------------------------------------------------
            <summary>
                Output queue that contains the results of the previous transformation.
            </summary>
            <value>
                A Queue of outputs of a transformation.
            </value>
            -------------------------------------------------------------------------------------------------
        </member>
        <member name="M:StreamCoders.ITransform.Transform(StreamCoders.MediaBuffer{System.Byte})">
            -------------------------------------------------------------------------------------------------
            <summary>
                Transforms input buffer and returns the resulting status of the operations. Audio &amp;
                Video codecs are derived from this interface.
            </summary>
            <param name="inputBuffer">
                Buffer for input data.
            </param>
            <returns>
                Returns the status of the Operation.
            </returns>
            -------------------------------------------------------------------------------------------------
        </member>
        <member name="T:StreamCoders.PictureTransformConfiguration">
            -------------------------------------------------------------------------------------------------
            <summary>
                Is used to configuration classes that derive from PictureTransformProcessor or
                VideoTransformProcessor.
            </summary>
            -------------------------------------------------------------------------------------------------
        </member>
        <member name="P:StreamCoders.PictureTransformConfiguration.InputWidth">
            -------------------------------------------------------------------------------------------------
            <summary>
                Gets or sets the width of input pictures.
            </summary>
            <value>
                The width.
            </value>
            -------------------------------------------------------------------------------------------------
        </member>
        <member name="P:StreamCoders.PictureTransformConfiguration.InputHeight">
            -------------------------------------------------------------------------------------------------
            <summary>
                Gets or sets the height of input pictures.
            </summary>
            <value>
                The height.
            </value>
            -------------------------------------------------------------------------------------------------
        </member>
        <member name="T:StreamCoders.VideoFrameType">
            -------------------------------------------------------------------------------------------------
            <summary>
                Video frame types.
            </summary>
            -------------------------------------------------------------------------------------------------
        </member>
        <member name="F:StreamCoders.VideoFrameType.Unknown">
            <summary>
                Unknown frame type
            </summary>
        </member>
        <member name="F:StreamCoders.VideoFrameType.IFrame">
            <summary>
                Intra frame
            </summary>
        </member>
        <member name="F:StreamCoders.VideoFrameType.PFrame">
            <summary>
                Predictive frame
            </summary>
        </member>
        <member name="F:StreamCoders.VideoFrameType.BFrame">
            <summary>
                Bi-predictive frame
            </summary>
        </member>
        <member name="F:StreamCoders.VideoFrameType.SFrame">
            <summary>
                MPEG-4 sprite frame
            </summary>
        </member>
        <member name="F:StreamCoders.VideoFrameType.Configuration">
            <summary>
                Decoder specific configuration data or frame
            </summary>
        </member>
        <member name="T:StreamCoders.IWriter">
            -------------------------------------------------------------------------------------------------
            <summary>
                Interface for streamWriter. This interface is used by all containers that write to a stream.
            </summary>
            <seealso cref="T:System.IDisposable" />
            -------------------------------------------------------------------------------------------------
        </member>
        <member name="M:StreamCoders.IWriter.AddTrack(StreamCoders.TrackInfo)">
            -------------------------------------------------------------------------------------------------
            <summary>
                Adds a track.
            </summary>
            <param name="track">    The track. </param>
            <returns>
                .
            </returns>
            -------------------------------------------------------------------------------------------------
        </member>
        <member name="M:StreamCoders.IWriter.EndTrack(StreamCoders.TrackInfo)">
            -------------------------------------------------------------------------------------------------
            <summary>
                Ends a track.
            </summary>
            <param name="track">    The track. </param>
            -------------------------------------------------------------------------------------------------
        </member>
        <member name="M:StreamCoders.IWriter.Init(System.String)">
            -------------------------------------------------------------------------------------------------
            <summary>
                Initialises this object.
            </summary>
            <param name="filename"> The filename to use for the stream. </param>
            <returns>
                true if it succeeds, false if it fails.
            </returns>
            -------------------------------------------------------------------------------------------------
        </member>
        <member name="M:StreamCoders.IWriter.Init(System.IO.Stream)">
            <summary>
                Initializes the writer with an already existing stream.
            </summary>
            <param name="inputStream">Stream to write to</param>
            <returns></returns>
        </member>
        <member name="M:StreamCoders.IWriter.WriteTrack(StreamCoders.TrackInfo,StreamCoders.MediaBuffer{System.Byte})">
            -------------------------------------------------------------------------------------------------
            <summary>
                Writes buffer to a track.
            </summary>
            <param name="track">
                The track to write the samples to.
            </param>
            <param name="inputBuffer">
                The input buffer containing media frames.
            </param>
            <returns>
                true if it succeeds, false if it fails.
            </returns>
            -------------------------------------------------------------------------------------------------
        </member>
        <member name="T:ProtoBuf.BclHelpers">
            <summary>
                Provides support for common .NET types that do not have a direct representation
                in protobuf, using the definitions from bcl.proto
            </summary>
        </member>
        <member name="M:ProtoBuf.BclHelpers.GetUninitializedObject(System.Type)">
            <summary>
                Creates a new instance of the specified type, bypassing the constructor.
            </summary>
            <param name="type">The type to create</param>
            <returns>The new instance</returns>
            <exception cref="T:System.NotSupportedException">If the platform does not support constructor-skipping</exception>
        </member>
        <member name="M:ProtoBuf.BclHelpers.WriteTimeSpan(System.TimeSpan,ProtoBuf.ProtoWriter)">
            <summary>
                Writes a TimeSpan to a protobuf stream
            </summary>
        </member>
        <member name="M:ProtoBuf.BclHelpers.ReadTimeSpan(ProtoBuf.ProtoReader)">
            <summary>
                Parses a TimeSpan from a protobuf stream
            </summary>
        </member>
        <member name="M:ProtoBuf.BclHelpers.ReadDateTime(ProtoBuf.ProtoReader)">
            <summary>
                Parses a DateTime from a protobuf stream
            </summary>
        </member>
        <member name="M:ProtoBuf.BclHelpers.WriteDateTime(System.DateTime,ProtoBuf.ProtoWriter)">
            <summary>
                Writes a DateTime to a protobuf stream
            </summary>
        </member>
        <member name="M:ProtoBuf.BclHelpers.ReadDecimal(ProtoBuf.ProtoReader)">
            <summary>
                Parses a decimal from a protobuf stream
            </summary>
        </member>
        <member name="M:ProtoBuf.BclHelpers.WriteDecimal(System.Decimal,ProtoBuf.ProtoWriter)">
            <summary>
                Writes a decimal to a protobuf stream
            </summary>
        </member>
        <member name="M:ProtoBuf.BclHelpers.WriteGuid(System.Guid,ProtoBuf.ProtoWriter)">
            <summary>
                Writes a Guid to a protobuf stream
            </summary>
        </member>
        <member name="M:ProtoBuf.BclHelpers.ReadGuid(ProtoBuf.ProtoReader)">
            <summary>
                Parses a Guid from a protobuf stream
            </summary>
        </member>
        <member name="T:ProtoBuf.BclHelpers.NetObjectOptions">
            <summary>
                Optional behaviours that introduce .NET-specific functionality
            </summary>
        </member>
        <member name="F:ProtoBuf.BclHelpers.NetObjectOptions.None">
            <summary>
                No special behaviour
            </summary>
        </member>
        <member name="F:ProtoBuf.BclHelpers.NetObjectOptions.AsReference">
            <summary>
                Enables full object-tracking/full-graph support.
            </summary>
        </member>
        <member name="F:ProtoBuf.BclHelpers.NetObjectOptions.DynamicType">
            <summary>
                Embeds the type information into the stream, allowing usage with types not known in advance.
            </summary>
        </member>
        <member name="F:ProtoBuf.BclHelpers.NetObjectOptions.UseConstructor">
            <summary>
                If false, the constructor for the type is bypassed during deserialization, meaning any field initializers
                or other initialization code is skipped.
            </summary>
        </member>
        <member name="F:ProtoBuf.BclHelpers.NetObjectOptions.LateSet">
            <summary>
                Should the object index be reserved, rather than creating an object promptly
            </summary>
        </member>
        <member name="M:ProtoBuf.BclHelpers.ReadNetObject(System.Object,ProtoBuf.ProtoReader,System.Int32,System.Type,ProtoBuf.BclHelpers.NetObjectOptions)">
            <summary>
                Reads an *implementation specific* bundled .NET object, including (as options) type-metadata, identity/re-use, etc.
            </summary>
        </member>
        <member name="M:ProtoBuf.BclHelpers.WriteNetObject(System.Object,ProtoBuf.ProtoWriter,System.Int32,ProtoBuf.BclHelpers.NetObjectOptions)">
            <summary>
                Writes an *implementation specific* bundled .NET object, including (as options) type-metadata, identity/re-use,
                etc.
            </summary>
        </member>
        <member name="T:ProtoBuf.BufferExtension">
            <summary>
                Provides a simple buffer-based implementation of an <see cref="T:ProtoBuf.IExtension">extension</see> object.
            </summary>
        </member>
        <member name="T:ProtoBuf.ProtoBeforeSerializationAttribute">
            <summary>Specifies a method on the root-contract in an hierarchy to be invoked before serialization.</summary>
        </member>
        <member name="T:ProtoBuf.ProtoAfterSerializationAttribute">
            <summary>Specifies a method on the root-contract in an hierarchy to be invoked after serialization.</summary>
        </member>
        <member name="T:ProtoBuf.ProtoBeforeDeserializationAttribute">
            <summary>Specifies a method on the root-contract in an hierarchy to be invoked before deserialization.</summary>
        </member>
        <member name="T:ProtoBuf.ProtoAfterDeserializationAttribute">
            <summary>Specifies a method on the root-contract in an hierarchy to be invoked after deserialization.</summary>
        </member>
        <member name="T:ProtoBuf.DataFormat">
            <summary>
                Sub-format to use when serializing/deserializing data
            </summary>
        </member>
        <member name="F:ProtoBuf.DataFormat.Default">
            <summary>
                Uses the default encoding for the data-type.
            </summary>
        </member>
        <member name="F:ProtoBuf.DataFormat.ZigZag">
            <summary>
                When applied to signed integer-based data (including Decimal), this
                indicates that zigzag variant encoding will be used. This means that values
                with small magnitude (regardless of sign) take a small amount
                of space to encode.
            </summary>
        </member>
        <member name="F:ProtoBuf.DataFormat.TwosComplement">
            <summary>
                When applied to signed integer-based data (including Decimal), this
                indicates that two's-complement variant encoding will be used.
                This means that any -ve number will take 10 bytes (even for 32-bit),
                so should only be used for compatibility.
            </summary>
        </member>
        <member name="F:ProtoBuf.DataFormat.FixedSize">
            <summary>
                When applied to signed integer-based data (including Decimal), this
                indicates that a fixed amount of space will be used.
            </summary>
        </member>
        <member name="F:ProtoBuf.DataFormat.Group">
            <summary>
                When applied to a sub-message, indicates that the value should be treated
                as group-delimited.
            </summary>
        </member>
        <member name="T:ProtoBuf.Extensible">
            <summary>
                Simple base class for supporting unexpected fields allowing
                for loss-less round-tips/merge, even if the data is not understod.
                The additional fields are (by default) stored in-memory in a buffer.
            </summary>
            <remarks>
                As an example of an alternative implementation, you might
                choose to use the file system (temporary files) as the back-end, tracking
                only the paths [such an object would ideally be IDisposable and use
                a finalizer to ensure that the files are removed].
            </remarks>
            <seealso cref="T:ProtoBuf.IExtensible" />
        </member>
        <member name="M:ProtoBuf.Extensible.GetExtensionObject(System.Boolean)">
            <summary>
                Retrieves the <see cref="T:ProtoBuf.IExtension">extension</see> object for the current
                instance, optionally creating it if it does not already exist.
            </summary>
            <param name="createIfMissing">
                Should a new extension object be
                created if it does not already exist?
            </param>
            <returns>
                The extension object if it exists (or was created), or null
                if the extension object does not exist or is not available.
            </returns>
            <remarks>
                The <c>createIfMissing</c> argument is false during serialization,
                and true during deserialization upon encountering unexpected fields.
            </remarks>
        </member>
        <member name="M:ProtoBuf.Extensible.GetExtensionObject(ProtoBuf.IExtension@,System.Boolean)">
            <summary>
                Provides a simple, default implementation for <see cref="T:ProtoBuf.IExtension">extension</see> support,
                optionally creating it if it does not already exist. Designed to be called by
                classes implementing <see cref="T:ProtoBuf.IExtensible" />.
            </summary>
            <param name="createIfMissing">
                Should a new extension object be
                created if it does not already exist?
            </param>
            <param name="extensionObject">The extension field to check (and possibly update).</param>
            <returns>
                The extension object if it exists (or was created), or null
                if the extension object does not exist or is not available.
            </returns>
            <remarks>
                The <c>createIfMissing</c> argument is false during serialization,
                and true during deserialization upon encountering unexpected fields.
            </remarks>
        </member>
        <member name="M:ProtoBuf.Extensible.TryGetValue(ProtoBuf.Meta.TypeModel,System.Type,ProtoBuf.IExtensible,System.Int32,ProtoBuf.DataFormat,System.Boolean,System.Object@)">
            <summary>
                Queries an extensible object for an additional (unexpected) data-field for the instance.
                The value returned (in "value") is the composed value after merging any duplicated content;
                if the value is "repeated" (a list), then use GetValues instead.
            </summary>
            <param name="type">The data-type of the field.</param>
            <param name="model">The model to use for configuration.</param>
            <param name="value">The effective value of the field, or the default value if not found.</param>
            <param name="instance">The extensible object to obtain the value from.</param>
            <param name="tag">The field identifier; the tag should not be defined as a known data-field for the instance.</param>
            <param name="format">The data-format to use when decoding the value.</param>
            <param name="allowDefinedTag">
                Allow tags that are present as part of the definition; for example, to query unknown enum
                values.
            </param>
            <returns>True if data for the field was present, false otherwise.</returns>
        </member>
        <member name="M:ProtoBuf.Extensible.GetValues(ProtoBuf.Meta.TypeModel,System.Type,ProtoBuf.IExtensible,System.Int32,ProtoBuf.DataFormat)">
            <summary>
                Queries an extensible object for an additional (unexpected) data-field for the instance.
                Each occurrence of the field is yielded separately, making this usage suitable for "repeated"
                (list) fields.
            </summary>
            <remarks>The extended data is processed lazily as the enumerator is iterated.</remarks>
            <param name="model">The model to use for configuration.</param>
            <param name="type">The data-type of the field.</param>
            <param name="instance">The extensible object to obtain the value from.</param>
            <param name="tag">The field identifier; the tag should not be defined as a known data-field for the instance.</param>
            <param name="format">The data-format to use when decoding the value.</param>
            <returns>An enumerator that yields each occurrence of the field.</returns>
        </member>
        <member name="M:ProtoBuf.Extensible.AppendValue(ProtoBuf.Meta.TypeModel,ProtoBuf.IExtensible,System.Int32,ProtoBuf.DataFormat,System.Object)">
            <summary>
                Appends the value as an additional (unexpected) data-field for the instance.
                Note that for non-repeated sub-objects, this equates to a merge operation;
                for repeated sub-objects this adds a new instance to the set; for simple
                values the new value supercedes the old value.
            </summary>
            <remarks>
                Note that appending a value does not remove the old value from
                the stream; avoid repeatedly appending values for the same field.
            </remarks>
            <param name="model">The model to use for configuration.</param>
            <param name="format">The data-format to use when encoding the value.</param>
            <param name="instance">The extensible object to append the value to.</param>
            <param name="tag">The field identifier; the tag should not be defined as a known data-field for the instance.</param>
            <param name="value">The value to append.</param>
        </member>
        <member name="M:ProtoBuf.Extensible.AppendValue``1(ProtoBuf.IExtensible,System.Int32,``0)">
            <summary>
                Appends the value as an additional (unexpected) data-field for the instance.
                Note that for non-repeated sub-objects, this equates to a merge operation;
                for repeated sub-objects this adds a new instance to the set; for simple
                values the new value supercedes the old value.
            </summary>
            <remarks>
                Note that appending a value does not remove the old value from
                the stream; avoid repeatedly appending values for the same field.
            </remarks>
            <typeparam name="TValue">The type of the value to append.</typeparam>
            <param name="instance">The extensible object to append the value to.</param>
            <param name="tag">The field identifier; the tag should not be defined as a known data-field for the instance.</param>
            <param name="value">The value to append.</param>
        </member>
        <member name="M:ProtoBuf.Extensible.AppendValue``1(ProtoBuf.IExtensible,System.Int32,ProtoBuf.DataFormat,``0)">
            <summary>
                Appends the value as an additional (unexpected) data-field for the instance.
                Note that for non-repeated sub-objects, this equates to a merge operation;
                for repeated sub-objects this adds a new instance to the set; for simple
                values the new value supercedes the old value.
            </summary>
            <remarks>
                Note that appending a value does not remove the old value from
                the stream; avoid repeatedly appending values for the same field.
            </remarks>
            <typeparam name="TValue">The data-type of the field.</typeparam>
            <param name="format">The data-format to use when encoding the value.</param>
            <param name="instance">The extensible object to append the value to.</param>
            <param name="tag">The field identifier; the tag should not be defined as a known data-field for the instance.</param>
            <param name="value">The value to append.</param>
        </member>
        <member name="M:ProtoBuf.Extensible.GetValue``1(ProtoBuf.IExtensible,System.Int32)">
            <summary>
                Queries an extensible object for an additional (unexpected) data-field for the instance.
                The value returned is the composed value after merging any duplicated content; if the
                value is "repeated" (a list), then use GetValues instead.
            </summary>
            <typeparam name="TValue">The data-type of the field.</typeparam>
            <param name="instance">The extensible object to obtain the value from.</param>
            <param name="tag">The field identifier; the tag should not be defined as a known data-field for the instance.</param>
            <returns>The effective value of the field, or the default value if not found.</returns>
        </member>
        <member name="M:ProtoBuf.Extensible.GetValue``1(ProtoBuf.IExtensible,System.Int32,ProtoBuf.DataFormat)">
            <summary>
                Queries an extensible object for an additional (unexpected) data-field for the instance.
                The value returned is the composed value after merging any duplicated content; if the
                value is "repeated" (a list), then use GetValues instead.
            </summary>
            <typeparam name="TValue">The data-type of the field.</typeparam>
            <param name="instance">The extensible object to obtain the value from.</param>
            <param name="tag">The field identifier; the tag should not be defined as a known data-field for the instance.</param>
            <param name="format">The data-format to use when decoding the value.</param>
            <returns>The effective value of the field, or the default value if not found.</returns>
        </member>
        <member name="M:ProtoBuf.Extensible.TryGetValue``1(ProtoBuf.IExtensible,System.Int32,``0@)">
            <summary>
                Queries an extensible object for an additional (unexpected) data-field for the instance.
                The value returned (in "value") is the composed value after merging any duplicated content;
                if the value is "repeated" (a list), then use GetValues instead.
            </summary>
            <typeparam name="TValue">The data-type of the field.</typeparam>
            <param name="value">The effective value of the field, or the default value if not found.</param>
            <param name="instance">The extensible object to obtain the value from.</param>
            <param name="tag">The field identifier; the tag should not be defined as a known data-field for the instance.</param>
            <returns>True if data for the field was present, false otherwise.</returns>
        </member>
        <member name="M:ProtoBuf.Extensible.TryGetValue``1(ProtoBuf.IExtensible,System.Int32,ProtoBuf.DataFormat,``0@)">
            <summary>
                Queries an extensible object for an additional (unexpected) data-field for the instance.
                The value returned (in "value") is the composed value after merging any duplicated content;
                if the value is "repeated" (a list), then use GetValues instead.
            </summary>
            <typeparam name="TValue">The data-type of the field.</typeparam>
            <param name="value">The effective value of the field, or the default value if not found.</param>
            <param name="instance">The extensible object to obtain the value from.</param>
            <param name="tag">The field identifier; the tag should not be defined as a known data-field for the instance.</param>
            <param name="format">The data-format to use when decoding the value.</param>
            <returns>True if data for the field was present, false otherwise.</returns>
        </member>
        <member name="M:ProtoBuf.Extensible.TryGetValue``1(ProtoBuf.IExtensible,System.Int32,ProtoBuf.DataFormat,System.Boolean,``0@)">
            <summary>
                Queries an extensible object for an additional (unexpected) data-field for the instance.
                The value returned (in "value") is the composed value after merging any duplicated content;
                if the value is "repeated" (a list), then use GetValues instead.
            </summary>
            <typeparam name="TValue">The data-type of the field.</typeparam>
            <param name="value">The effective value of the field, or the default value if not found.</param>
            <param name="instance">The extensible object to obtain the value from.</param>
            <param name="tag">The field identifier; the tag should not be defined as a known data-field for the instance.</param>
            <param name="format">The data-format to use when decoding the value.</param>
            <param name="allowDefinedTag">
                Allow tags that are present as part of the definition; for example, to query unknown enum
                values.
            </param>
            <returns>True if data for the field was present, false otherwise.</returns>
        </member>
        <member name="M:ProtoBuf.Extensible.GetValues``1(ProtoBuf.IExtensible,System.Int32)">
            <summary>
                Queries an extensible object for an additional (unexpected) data-field for the instance.
                Each occurrence of the field is yielded separately, making this usage suitable for "repeated"
                (list) fields.
            </summary>
            <remarks>The extended data is processed lazily as the enumerator is iterated.</remarks>
            <typeparam name="TValue">The data-type of the field.</typeparam>
            <param name="instance">The extensible object to obtain the value from.</param>
            <param name="tag">The field identifier; the tag should not be defined as a known data-field for the instance.</param>
            <returns>An enumerator that yields each occurrence of the field.</returns>
        </member>
        <member name="M:ProtoBuf.Extensible.GetValues``1(ProtoBuf.IExtensible,System.Int32,ProtoBuf.DataFormat)">
            <summary>
                Queries an extensible object for an additional (unexpected) data-field for the instance.
                Each occurrence of the field is yielded separately, making this usage suitable for "repeated"
                (list) fields.
            </summary>
            <remarks>The extended data is processed lazily as the enumerator is iterated.</remarks>
            <typeparam name="TValue">The data-type of the field.</typeparam>
            <param name="instance">The extensible object to obtain the value from.</param>
            <param name="tag">The field identifier; the tag should not be defined as a known data-field for the instance.</param>
            <param name="format">The data-format to use when decoding the value.</param>
            <returns>An enumerator that yields each occurrence of the field.</returns>
        </member>
        <member name="T:ProtoBuf.ExtensibleUtil">
            <summary>
                This class acts as an internal wrapper allowing us to do a dynamic
                methodinfo invoke; an't put into Serializer as don't want on public
                API; can't put into Serializer&lt;T&gt; since we need to invoke
                accross classes, which isn't allowed in Silverlight)
            </summary>
        </member>
        <member name="M:ProtoBuf.ExtensibleUtil.GetExtendedValues``1(ProtoBuf.IExtensible,System.Int32,ProtoBuf.DataFormat,System.Boolean,System.Boolean)">
            <summary>
                All this does is call GetExtendedValuesTyped with the correct type for "instance";
                this ensures that we don't get issues with subclasses declaring conflicting types -
                the caller must respect the fields defined for the type they pass in.
            </summary>
        </member>
        <member name="M:ProtoBuf.ExtensibleUtil.GetExtendedValues(ProtoBuf.Meta.TypeModel,System.Type,ProtoBuf.IExtensible,System.Int32,ProtoBuf.DataFormat,System.Boolean,System.Boolean)">
            <summary>
                All this does is call GetExtendedValuesTyped with the correct type for "instance";
                this ensures that we don't get issues with subclasses declaring conflicting types -
                the caller must respect the fields defined for the type they pass in.
            </summary>
        </member>
        <member name="M:ProtoBuf.ExtensibleUtil.AppendExtendValueTyped``2(ProtoBuf.Meta.TypeModel,``0,System.Int32,ProtoBuf.DataFormat,``1)">
            <summary>
                Stores the given value into the instance's stream; the serializer
                is inferred from TValue and format.
            </summary>
            <remarks>Needs to be public to be callable thru reflection in Silverlight</remarks>
        </member>
        <member name="T:ProtoBuf.Helpers">
            <summary>
                Not all frameworks are created equal (fx1.1 vs fx2.0,
                micro-framework, compact-framework,
                silverlight, etc). This class simply wraps up a few things that would
                otherwise make the real code unnecessarily messy, providing fallback
                implementations if necessary.
            </summary>
        </member>
        <member name="T:ProtoBuf.ProtoTypeCode">
            <summary>
                Intended to be a direct map to regular TypeCode, but:
                - with missing types
                - existing on WinRT
            </summary>
        </member>
        <member name="T:ProtoBuf.IExtensible">
            <summary>
                Indicates that the implementing type has support for protocol-buffer
                <see cref="T:ProtoBuf.IExtension">extensions</see>.
            </summary>
            <remarks>Can be implemented by deriving from Extensible.</remarks>
        </member>
        <member name="M:ProtoBuf.IExtensible.GetExtensionObject(System.Boolean)">
            <summary>
                Retrieves the <see cref="T:ProtoBuf.IExtension">extension</see> object for the current
                instance, optionally creating it if it does not already exist.
            </summary>
            <param name="createIfMissing">
                Should a new extension object be
                created if it does not already exist?
            </param>
            <returns>
                The extension object if it exists (or was created), or null
                if the extension object does not exist or is not available.
            </returns>
            <remarks>
                The <c>createIfMissing</c> argument is false during serialization,
                and true during deserialization upon encountering unexpected fields.
            </remarks>
        </member>
        <member name="T:ProtoBuf.IExtension">
            <summary>
                Provides addition capability for supporting unexpected fields during
                protocol-buffer serialization/deserialization. This allows for loss-less
                round-trip/merge, even when the data is not fully understood.
            </summary>
        </member>
        <member name="M:ProtoBuf.IExtension.BeginAppend">
            <summary>
                Requests a stream into which any unexpected fields can be persisted.
            </summary>
            <returns>A new stream suitable for storing data.</returns>
        </member>
        <member name="M:ProtoBuf.IExtension.EndAppend(System.IO.Stream,System.Boolean)">
            <summary>
                Indicates that all unexpected fields have now been stored. The
                implementing class is responsible for closing the stream. If
                "commit" is not true the data may be discarded.
            </summary>
            <param name="stream">The stream originally obtained by BeginAppend.</param>
            <param name="commit">True if the append operation completed successfully.</param>
        </member>
        <member name="M:ProtoBuf.IExtension.BeginQuery">
            <summary>
                Requests a stream of the unexpected fields previously stored.
            </summary>
            <returns>A prepared stream of the unexpected fields.</returns>
        </member>
        <member name="M:ProtoBuf.IExtension.EndQuery(System.IO.Stream)">
            <summary>
                Indicates that all unexpected fields have now been read. The
                implementing class is responsible for closing the stream.
            </summary>
            <param name="stream">The stream originally obtained by BeginQuery.</param>
        </member>
        <member name="M:ProtoBuf.IExtension.GetLength">
            <summary>
                Requests the length of the raw binary stream; this is used
                when serializing sub-entities to indicate the expected size.
            </summary>
            <returns>The length of the binary stream representing unexpected data.</returns>
        </member>
        <member name="T:ProtoBuf.ImplicitFields">
            <summary>
                Specifies the method used to infer field tags for members of the type
                under consideration. Tags are deduced using the invariant alphabetic
                sequence of the members' names; this makes implicit field tags very brittle,
                and susceptible to changes such as field names (normally an isolated
                change).
            </summary>
        </member>
        <member name="F:ProtoBuf.ImplicitFields.None">
            <summary>
                No members are serialized implicitly; all members require a suitable
                attribute such as [ProtoMember]. This is the recmomended mode for
                most scenarios.
            </summary>
        </member>
        <member name="F:ProtoBuf.ImplicitFields.AllPublic">
            <summary>
                Public properties and fields are eligible for implicit serialization;
                this treats the public API as a contract. Ordering beings from ImplicitFirstTag.
            </summary>
        </member>
        <member name="F:ProtoBuf.ImplicitFields.AllFields">
            <summary>
                Public and non-public fields are eligible for implicit serialization;
                this acts as a state/implementation serializer. Ordering beings from ImplicitFirstTag.
            </summary>
        </member>
        <member name="T:ProtoBuf.Meta.CallbackSet">
            <summary>
                Represents the set of serialization callbacks to be used when serializing/deserializing a type.
            </summary>
        </member>
        <member name="P:ProtoBuf.Meta.CallbackSet.BeforeSerialize">
            <summary>Called before serializing an instance</summary>
        </member>
        <member name="P:ProtoBuf.Meta.CallbackSet.BeforeDeserialize">
            <summary>Called before deserializing an instance</summary>
        </member>
        <member name="P:ProtoBuf.Meta.CallbackSet.AfterSerialize">
            <summary>Called after serializing an instance</summary>
        </member>
        <member name="P:ProtoBuf.Meta.CallbackSet.AfterDeserialize">
            <summary>Called after deserializing an instance</summary>
        </member>
        <member name="P:ProtoBuf.Meta.CallbackSet.NonTrivial">
            <summary>
                True if any callback is set, else False
            </summary>
        </member>
        <member name="T:ProtoBuf.Meta.MetaType">
            <summary>
                Represents a type at runtime for use with protobuf, allowing the field mappings (etc) to be defined
            </summary>
        </member>
        <member name="M:ProtoBuf.Meta.MetaType.ToString">
            <summary>
                Get the name of the type being represented
            </summary>
        </member>
        <member name="P:ProtoBuf.Meta.MetaType.BaseType">
            <summary>
                Gets the base-type for this type
            </summary>
        </member>
        <member name="P:ProtoBuf.Meta.MetaType.IncludeSerializerMethod">
            <summary>
                When used to compile a model, should public serialization/deserialzation methods
                be included for this type?
            </summary>
        </member>
        <member name="P:ProtoBuf.Meta.MetaType.AsReferenceDefault">
            <summary>
                Should this type be treated as a reference by default?
            </summary>
        </member>
        <member name="M:ProtoBuf.Meta.MetaType.AddSubType(System.Int32,System.Type)">
            <summary>
                Adds a known sub-type to the inheritance model
            </summary>
        </member>
        <member name="M:ProtoBuf.Meta.MetaType.AddSubType(System.Int32,System.Type,ProtoBuf.DataFormat)">
            <summary>
                Adds a known sub-type to the inheritance model
            </summary>
        </member>
        <member name="P:ProtoBuf.Meta.MetaType.HasCallbacks">
            <summary>
                Indicates whether the current type has defined callbacks
            </summary>
        </member>
        <member name="P:ProtoBuf.Meta.MetaType.HasSubtypes">
            <summary>
                Indicates whether the current type has defined subtypes
            </summary>
        </member>
        <member name="P:ProtoBuf.Meta.MetaType.Callbacks">
            <summary>
                Returns the set of callbacks defined for this type
            </summary>
        </member>
        <member name="M:ProtoBuf.Meta.MetaType.SetCallbacks(System.Reflection.MethodInfo,System.Reflection.MethodInfo,System.Reflection.MethodInfo,System.Reflection.MethodInfo)">
            <summary>
                Assigns the callbacks to use during serialiation/deserialization.
            </summary>
            <param name="beforeSerialize">The method (or null) called before serialization begins.</param>
            <param name="afterSerialize">The method (or null) called when serialization is complete.</param>
            <param name="beforeDeserialize">
                The method (or null) called before deserialization begins (or when a new instance is
                created during deserialization).
            </param>
            <param name="afterDeserialize">The method (or null) called when deserialization is complete.</param>
            <returns>The set of callbacks.</returns>
        </member>
        <member name="M:ProtoBuf.Meta.MetaType.SetCallbacks(System.String,System.String,System.String,System.String)">
            <summary>
                Assigns the callbacks to use during serialiation/deserialization.
            </summary>
            <param name="beforeSerialize">The name of the method (or null) called before serialization begins.</param>
            <param name="afterSerialize">The name of the method (or null) called when serialization is complete.</param>
            <param name="beforeDeserialize">
                The name of the method (or null) called before deserialization begins (or when a new
                instance is created during deserialization).
            </param>
            <param name="afterDeserialize">The name of the method (or null) called when deserialization is complete.</param>
            <returns>The set of callbacks.</returns>
        </member>
        <member name="P:ProtoBuf.Meta.MetaType.Name">
            <summary>
                Gets or sets the name of this contract.
            </summary>
        </member>
        <member name="M:ProtoBuf.Meta.MetaType.SetFactory(System.Reflection.MethodInfo)">
            <summary>
                Designate a factory-method to use to create instances of this type
            </summary>
        </member>
        <member name="M:ProtoBuf.Meta.MetaType.SetFactory(System.String)">
            <summary>
                Designate a factory-method to use to create instances of this type
            </summary>
        </member>
        <member name="M:ProtoBuf.Meta.MetaType.ThrowIfFrozen">
            <summary>
                Throws an exception if the type has been made immutable
            </summary>
        </member>
        <member name="P:ProtoBuf.Meta.MetaType.Type">
            <summary>
                The runtime type that the meta-type represents
            </summary>
        </member>
        <member name="M:ProtoBuf.Meta.MetaType.Add(System.Int32,System.String)">
            <summary>
                Adds a member (by name) to the MetaType
            </summary>
        </member>
        <member name="M:ProtoBuf.Meta.MetaType.AddField(System.Int32,System.String)">
            <summary>
                Adds a member (by name) to the MetaType, returning the ValueMember rather than the fluent API.
                This is otherwise identical to Add.
            </summary>
        </member>
        <member name="P:ProtoBuf.Meta.MetaType.UseConstructor">
            <summary>
                Gets or sets whether the type should use a parameterless constructor (the default),
                or whether the type should skip the constructor completely. This option is not supported
                on compact-framework.
            </summary>
        </member>
        <member name="P:ProtoBuf.Meta.MetaType.ConstructType">
            <summary>
                The concrete type to create when a new instance of this type is needed; this may be useful when dealing
                with dynamic proxies, or with interface-based APIs
            </summary>
        </member>
        <member name="M:ProtoBuf.Meta.MetaType.Add(System.String)">
            <summary>
                Adds a member (by name) to the MetaType
            </summary>
        </member>
        <member name="M:ProtoBuf.Meta.MetaType.SetSurrogate(System.Type)">
            <summary>
                Performs serialization of this type via a surrogate; all
                other serialization options are ignored and handled
                by the surrogate's configuration.
            </summary>
        </member>
        <member name="M:ProtoBuf.Meta.MetaType.Add(System.String[])">
            <summary>
                Adds a set of members (by name) to the MetaType
            </summary>
        </member>
        <member name="M:ProtoBuf.Meta.MetaType.Add(System.Int32,System.String,System.Object)">
            <summary>
                Adds a member (by name) to the MetaType
            </summary>
        </member>
        <member name="M:ProtoBuf.Meta.MetaType.Add(System.Int32,System.String,System.Type,System.Type)">
            <summary>
                Adds a member (by name) to the MetaType, including an itemType and defaultType for representing lists
            </summary>
        </member>
        <member name="M:ProtoBuf.Meta.MetaType.AddField(System.Int32,System.String,System.Type,System.Type)">
            <summary>
                Adds a member (by name) to the MetaType, including an itemType and defaultType for representing lists, returning
                the ValueMember rather than the fluent API.
                This is otherwise identical to Add.
            </summary>
        </member>
        <member name="P:ProtoBuf.Meta.MetaType.Item(System.Int32)">
            <summary>
                Returns the ValueMember that matchs a given field number, or null if not found
            </summary>
        </member>
        <member name="P:ProtoBuf.Meta.MetaType.Item(System.Reflection.MemberInfo)">
            <summary>
                Returns the ValueMember that matchs a given member (property/field), or null if not found
            </summary>
        </member>
        <member name="M:ProtoBuf.Meta.MetaType.GetFields">
            <summary>
                Returns the ValueMember instances associated with this type
            </summary>
        </member>
        <member name="M:ProtoBuf.Meta.MetaType.GetSubtypes">
            <summary>
                Returns the SubType instances associated with this type
            </summary>
        </member>
        <member name="P:ProtoBuf.Meta.MetaType.EnumPassthru">
            <summary>
                Gets or sets a value indicating that an enum should be treated directly as an int/short/etc, rather
                than enforcing .proto enum rules. This is useful *in particul* for [Flags] enums.
            </summary>
        </member>
        <member name="P:ProtoBuf.Meta.MetaType.IgnoreListHandling">
            <summary>
                Gets or sets a value indicating that this type should NOT be treated as a list, even if it has
                familiar list-like characteristics (enumerable, add, etc)
            </summary>
        </member>
        <member name="T:ProtoBuf.Meta.RuntimeTypeModel">
            <summary>
                Provides protobuf serialization support for a number of types that can be defined at runtime
            </summary>
        </member>
        <member name="P:ProtoBuf.Meta.RuntimeTypeModel.InferTagFromNameDefault">
            <summary>
                Global default that
                enables/disables automatic tag generation based on the existing name / order
                of the defined members. See <seealso cref="P:ProtoBuf.ProtoContractAttribute.InferTagFromName" />
                for usage and <b>important warning</b> / explanation.
                You must set the global default before attempting to serialize/deserialize any
                impacted type.
            </summary>
        </member>
        <member name="P:ProtoBuf.Meta.RuntimeTypeModel.AutoAddProtoContractTypesOnly">
            <summary>
                Global default that determines whether types are considered serializable
                if they have [DataContract] / [XmlType]. With this enabled, <b>ONLY</b>
                types marked as [ProtoContract] are added automatically.
            </summary>
        </member>
        <member name="P:ProtoBuf.Meta.RuntimeTypeModel.UseImplicitZeroDefaults">
            <summary>
                Global switch that enables or disables the implicit
                handling of "zero defaults"; meanning: if no other default is specified,
                it assumes bools always default to false, integers to zero, etc.
                If this is disabled, no such assumptions are made and only *explicit*
                default values are processed. This is enabled by default to
                preserve similar logic to v1.
            </summary>
        </member>
        <member name="P:ProtoBuf.Meta.RuntimeTypeModel.AllowParseableTypes">
            <summary>
                Global switch that determines whether types with a <c>.ToString()</c> and a <c>Parse(string)</c>
                should be serialized as strings.
            </summary>
        </member>
        <member name="P:ProtoBuf.Meta.RuntimeTypeModel.Default">
            <summary>
                The default model, used to support ProtoBuf.Serializer
            </summary>
        </member>
        <member name="M:ProtoBuf.Meta.RuntimeTypeModel.GetTypes">
            <summary>
                Returns a sequence of the Type instances that can be
                processed by this model.
            </summary>
        </member>
        <member name="M:ProtoBuf.Meta.RuntimeTypeModel.GetSchema(System.Type)">
            <summary>
                Suggest a .proto definition for the given type
            </summary>
            <param name="type">
                The type to generate a .proto definition for, or <c>null</c> to generate a .proto that represents
                the entire model
            </param>
            <returns>The .proto definition as a string</returns>
        </member>
        <member name="P:ProtoBuf.Meta.RuntimeTypeModel.Item(System.Type)">
            <summary>
                Obtains the MetaType associated with a given Type for the current model,
                allowing additional configuration.
            </summary>
        </member>
        <member name="M:ProtoBuf.Meta.RuntimeTypeModel.Add(System.Type,System.Boolean)">
            <summary>
                Adds support for an additional type in this model, optionally
                appplying inbuilt patterns. If the type is already known to the
                model, the existing type is returned **without** applying
                any additional behaviour.
            </summary>
            <remarks>
                Inbuilt patterns include:
                [ProtoContract]/[ProtoMember(n)]
                [DataContract]/[DataMember(Order=n)]
                [XmlType]/[XmlElement(Order=n)]
                [On{Des|S}erializ{ing|ed}]
                ShouldSerialize*/*Specified
            </remarks>
            <param name="type">The type to be supported</param>
            <param name="applyDefaultBehaviour">
                Whether to apply the inbuilt configuration patterns (via attributes etc), or
                just add the type with no additional configuration (the type must then be manually configured).
            </param>
            <returns>
                The MetaType representing this type, allowing
                further configuration.
            </returns>
        </member>
        <member name="P:ProtoBuf.Meta.RuntimeTypeModel.AutoAddMissingTypes">
            <summary>
                Should support for unexpected types be added automatically?
                If false, an exception is thrown when unexpected types
                are encountered.
            </summary>
        </member>
        <member name="M:ProtoBuf.Meta.RuntimeTypeModel.ThrowIfFrozen">
            <summary>
                Verifies that the model is still open to changes; if not, an exception is thrown
            </summary>
        </member>
        <member name="M:ProtoBuf.Meta.RuntimeTypeModel.Freeze">
            <summary>
                Prevents further changes to this model
            </summary>
        </member>
        <member name="M:ProtoBuf.Meta.RuntimeTypeModel.GetKeyImpl(System.Type)">
            <summary>
                Provides the key that represents a given type in the current model.
            </summary>
        </member>
        <member name="M:ProtoBuf.Meta.RuntimeTypeModel.Serialize(System.Int32,System.Object,ProtoBuf.ProtoWriter)">
            <summary>
                Writes a protocol-buffer representation of the given instance to the supplied stream.
            </summary>
            <param name="key">Represents the type (including inheritance) to consider.</param>
            <param name="value">The existing instance to be serialized (cannot be null).</param>
            <param name="dest">The destination stream to write to.</param>
        </member>
        <member name="M:ProtoBuf.Meta.RuntimeTypeModel.Deserialize(System.Int32,System.Object,ProtoBuf.ProtoReader)">
            <summary>
                Applies a protocol-buffer stream to an existing instance (which may be null).
            </summary>
            <param name="key">Represents the type (including inheritance) to consider.</param>
            <param name="value">The existing instance to be modified (can be null).</param>
            <param name="source">The binary stream to apply to the instance (cannot be null).</param>
            <returns>
                The updated instance; this may be different to the instance argument if
                either the original instance was null, or the stream defines a known sub-type of the
                original instance.
            </returns>
        </member>
        <member name="P:ProtoBuf.Meta.RuntimeTypeModel.MetadataTimeoutMilliseconds">
            <summary>
                The amount of time to wait if there are concurrent metadata access operations
            </summary>
        </member>
        <member name="P:ProtoBuf.Meta.RuntimeTypeModel.LockCount">
            <summary>
                Gets how many times a model lock was taken
            </summary>
        </member>
        <member name="E:ProtoBuf.Meta.RuntimeTypeModel.LockContended">
            <summary>
                If a lock-contention is detected, this event signals the *owner* of the lock responsible for the blockage,
                indicating
                what caused the problem; this is only raised if the lock-owning code successfully completes.
            </summary>
        </member>
        <member name="M:ProtoBuf.Meta.RuntimeTypeModel.SetDefaultFactory(System.Reflection.MethodInfo)">
            <summary>
                Designate a factory-method to use to create instances of any type; note that this only affect types seen by the
                serializer *after* setting the factory.
            </summary>
        </member>
        <member name="T:ProtoBuf.Meta.LockContentedEventArgs">
            <summary>
                Contains the stack-trace of the owning code when a lock-contention scenario is detected
            </summary>
        </member>
        <member name="P:ProtoBuf.Meta.LockContentedEventArgs.OwnerStackTrace">
            <summary>
                The stack-trace of the code that owned the lock when a lock-contention scenario occurred
            </summary>
        </member>
        <member name="T:ProtoBuf.Meta.LockContentedEventHandler">
            <summary>
                Event-type that is raised when a lock-contention scenario is detected
            </summary>
        </member>
        <member name="T:ProtoBuf.Meta.SubType">
            <summary>
                Represents an inherited type in a type hierarchy.
            </summary>
        </member>
        <member name="M:ProtoBuf.Meta.SubType.#ctor(System.Int32,ProtoBuf.Meta.MetaType,ProtoBuf.DataFormat)">
            <summary>
                Creates a new SubType instance.
            </summary>
            <param name="fieldNumber">
                The field-number that is used to encapsulate the data (as a nested
                message) for the derived dype.
            </param>
            <param name="derivedType">The sub-type to be considered.</param>
            <param name="format">
                Specific encoding style to use; in particular, Grouped can be used to avoid buffering, but is not
                the default.
            </param>
        </member>
        <member name="P:ProtoBuf.Meta.SubType.FieldNumber">
            <summary>
                The field-number that is used to encapsulate the data (as a nested
                message) for the derived dype.
            </summary>
        </member>
        <member name="P:ProtoBuf.Meta.SubType.DerivedType">
            <summary>
                The sub-type to be considered.
            </summary>
        </member>
        <member name="T:ProtoBuf.Meta.TypeFormatEventArgs">
            <summary>
                Event arguments needed to perform type-formatting functions; this could be resolving a Type to a string suitable
                for serialization, or could
                be requesting a Type from a string. If no changes are made, a default implementation will be used (from the
                assembly-qualified names).
            </summary>
        </member>
        <member name="P:ProtoBuf.Meta.TypeFormatEventArgs.Type">
            <summary>
                The type involved in this map; if this is initially null, a Type is expected to be provided for the string in
                FormattedName.
            </summary>
        </member>
        <member name="P:ProtoBuf.Meta.TypeFormatEventArgs.FormattedName">
            <summary>
                The formatted-name involved in this map; if this is initially null, a formatted-name is expected from the type in
                Type.
            </summary>
        </member>
        <member name="T:ProtoBuf.Meta.TypeFormatEventHandler">
            <summary>
                Delegate type used to perform type-formatting functions; the sender originates as the type-model.
            </summary>
        </member>
        <member name="T:ProtoBuf.Meta.TypeModel">
            <summary>
                Provides protobuf serialization support for a number of types
            </summary>
        </member>
        <member name="M:ProtoBuf.Meta.TypeModel.MapType(System.Type)">
            <summary>
                Resolve a System.Type to the compiler-specific type
            </summary>
        </member>
        <member name="M:ProtoBuf.Meta.TypeModel.MapType(System.Type,System.Boolean)">
            <summary>
                Resolve a System.Type to the compiler-specific type
            </summary>
        </member>
        <member name="M:ProtoBuf.Meta.TypeModel.TrySerializeAuxiliaryType(ProtoBuf.ProtoWriter,System.Type,ProtoBuf.DataFormat,System.Int32,System.Object,System.Boolean)">
            <summary>
                This is the more "complete" version of Serialize, which handles single instances of mapped types.
                The value is written as a complete field, including field-header and (for sub-objects) a
                length-prefix
                In addition to that, this provides support for:
                - basic values; individual int / string / Guid / etc
                - IEnumerable sequences of any type handled by TrySerializeAuxiliaryType
            </summary>
        </member>
        <member name="M:ProtoBuf.Meta.TypeModel.Serialize(System.IO.Stream,System.Object)">
            <summary>
                Writes a protocol-buffer representation of the given instance to the supplied stream.
            </summary>
            <param name="value">The existing instance to be serialized (cannot be null).</param>
            <param name="dest">The destination stream to write to.</param>
        </member>
        <member name="M:ProtoBuf.Meta.TypeModel.Serialize(System.IO.Stream,System.Object,ProtoBuf.SerializationContext)">
            <summary>
                Writes a protocol-buffer representation of the given instance to the supplied stream.
            </summary>
            <param name="value">The existing instance to be serialized (cannot be null).</param>
            <param name="dest">The destination stream to write to.</param>
            <param name="context">Additional information about this serialization operation.</param>
        </member>
        <member name="M:ProtoBuf.Meta.TypeModel.Serialize(ProtoBuf.ProtoWriter,System.Object)">
            <summary>
                Writes a protocol-buffer representation of the given instance to the supplied streamWriter.
            </summary>
            <param name="value">The existing instance to be serialized (cannot be null).</param>
            <param name="dest">The destination streamWriter to write to.</param>
        </member>
        <member name="M:ProtoBuf.Meta.TypeModel.DeserializeWithLengthPrefix(System.IO.Stream,System.Object,System.Type,ProtoBuf.PrefixStyle,System.Int32)">
            <summary>
                Applies a protocol-buffer stream to an existing instance (or null), using length-prefixed
                data - useful with network IO.
            </summary>
            <param name="type">The type being merged.</param>
            <param name="value">The existing instance to be modified (can be null).</param>
            <param name="source">The binary stream to apply to the instance (cannot be null).</param>
            <param name="style">How to encode the length prefix.</param>
            <param name="fieldNumber">The tag used as a prefix to each record (only used with base-128 style prefixes).</param>
            <returns>
                The updated instance; this may be different to the instance argument if
                either the original instance was null, or the stream defines a known sub-type of the
                original instance.
            </returns>
        </member>
        <member name="M:ProtoBuf.Meta.TypeModel.DeserializeWithLengthPrefix(System.IO.Stream,System.Object,System.Type,ProtoBuf.PrefixStyle,System.Int32,ProtoBuf.Serializer.TypeResolver)">
            <summary>
                Applies a protocol-buffer stream to an existing instance (or null), using length-prefixed
                data - useful with network IO.
            </summary>
            <param name="type">The type being merged.</param>
            <param name="value">The existing instance to be modified (can be null).</param>
            <param name="source">The binary stream to apply to the instance (cannot be null).</param>
            <param name="style">How to encode the length prefix.</param>
            <param name="expectedField">The tag used as a prefix to each record (only used with base-128 style prefixes).</param>
            <param name="resolver">Used to resolve types on a per-field basis.</param>
            <returns>
                The updated instance; this may be different to the instance argument if
                either the original instance was null, or the stream defines a known sub-type of the
                original instance.
            </returns>
        </member>
        <member name="M:ProtoBuf.Meta.TypeModel.DeserializeWithLengthPrefix(System.IO.Stream,System.Object,System.Type,ProtoBuf.PrefixStyle,System.Int32,ProtoBuf.Serializer.TypeResolver,System.Int32@)">
            <summary>
                Applies a protocol-buffer stream to an existing instance (or null), using length-prefixed
                data - useful with network IO.
            </summary>
            <param name="type">The type being merged.</param>
            <param name="value">The existing instance to be modified (can be null).</param>
            <param name="source">The binary stream to apply to the instance (cannot be null).</param>
            <param name="style">How to encode the length prefix.</param>
            <param name="expectedField">The tag used as a prefix to each record (only used with base-128 style prefixes).</param>
            <param name="resolver">Used to resolve types on a per-field basis.</param>
            <param name="bytesRead">
                Returns the number of bytes consumed by this operation (includes length-prefix overheads and
                any skipped data).
            </param>
            <returns>
                The updated instance; this may be different to the instance argument if
                either the original instance was null, or the stream defines a known sub-type of the
                original instance.
            </returns>
        </member>
        <member name="M:ProtoBuf.Meta.TypeModel.DeserializeItems(System.IO.Stream,System.Type,ProtoBuf.PrefixStyle,System.Int32,ProtoBuf.Serializer.TypeResolver)">
            <summary>
                Reads a sequence of consecutive length-prefixed items from a stream, using
                either base-128 or fixed-length prefixes. Base-128 prefixes with a tag
                are directly comparable to serializing multiple items in succession
                (use the <see cref="F:ProtoBuf.Serializer.ListItemTag" /> tag to emulate the implicit behavior
                when serializing a list/array). When a tag is
                specified, any records with different tags are silently omitted. The
                tag is ignored. The tag is ignores for fixed-length prefixes.
            </summary>
            <param name="source">The binary stream containing the serialized records.</param>
            <param name="style">The prefix style used in the data.</param>
            <param name="expectedField">
                The tag of records to return (if non-positive, then no tag is
                expected and all records are returned).
            </param>
            <param name="resolver">
                On a field-by-field basis, the type of object to deserialize (can be null if "type" is
                specified).
            </param>
            <param name="type">The type of object to deserialize (can be null if "resolver" is specified).</param>
            <returns>The sequence of deserialized objects.</returns>
        </member>
        <member name="M:ProtoBuf.Meta.TypeModel.DeserializeItems(System.IO.Stream,System.Type,ProtoBuf.PrefixStyle,System.Int32,ProtoBuf.Serializer.TypeResolver,ProtoBuf.SerializationContext)">
            <summary>
                Reads a sequence of consecutive length-prefixed items from a stream, using
                either base-128 or fixed-length prefixes. Base-128 prefixes with a tag
                are directly comparable to serializing multiple items in succession
                (use the <see cref="F:ProtoBuf.Serializer.ListItemTag" /> tag to emulate the implicit behavior
                when serializing a list/array). When a tag is
                specified, any records with different tags are silently omitted. The
                tag is ignored. The tag is ignores for fixed-length prefixes.
            </summary>
            <param name="source">The binary stream containing the serialized records.</param>
            <param name="style">The prefix style used in the data.</param>
            <param name="expectedField">
                The tag of records to return (if non-positive, then no tag is
                expected and all records are returned).
            </param>
            <param name="resolver">
                On a field-by-field basis, the type of object to deserialize (can be null if "type" is
                specified).
            </param>
            <param name="type">The type of object to deserialize (can be null if "resolver" is specified).</param>
            <returns>The sequence of deserialized objects.</returns>
            <param name="context">Additional information about this serialization operation.</param>
        </member>
        <member name="M:ProtoBuf.Meta.TypeModel.DeserializeItems``1(System.IO.Stream,ProtoBuf.PrefixStyle,System.Int32)">
            <summary>
                Reads a sequence of consecutive length-prefixed items from a stream, using
                either base-128 or fixed-length prefixes. Base-128 prefixes with a tag
                are directly comparable to serializing multiple items in succession
                (use the <see cref="F:ProtoBuf.Serializer.ListItemTag" /> tag to emulate the implicit behavior
                when serializing a list/array). When a tag is
                specified, any records with different tags are silently omitted. The
                tag is ignored. The tag is ignores for fixed-length prefixes.
            </summary>
            <typeparam name="T">The type of object to deserialize.</typeparam>
            <param name="source">The binary stream containing the serialized records.</param>
            <param name="style">The prefix style used in the data.</param>
            <param name="expectedField">
                The tag of records to return (if non-positive, then no tag is
                expected and all records are returned).
            </param>
            <returns>The sequence of deserialized objects.</returns>
        </member>
        <member name="M:ProtoBuf.Meta.TypeModel.DeserializeItems``1(System.IO.Stream,ProtoBuf.PrefixStyle,System.Int32,ProtoBuf.SerializationContext)">
            <summary>
                Reads a sequence of consecutive length-prefixed items from a stream, using
                either base-128 or fixed-length prefixes. Base-128 prefixes with a tag
                are directly comparable to serializing multiple items in succession
                (use the <see cref="F:ProtoBuf.Serializer.ListItemTag" /> tag to emulate the implicit behavior
                when serializing a list/array). When a tag is
                specified, any records with different tags are silently omitted. The
                tag is ignored. The tag is ignores for fixed-length prefixes.
            </summary>
            <typeparam name="T">The type of object to deserialize.</typeparam>
            <param name="source">The binary stream containing the serialized records.</param>
            <param name="style">The prefix style used in the data.</param>
            <param name="expectedField">
                The tag of records to return (if non-positive, then no tag is
                expected and all records are returned).
            </param>
            <returns>The sequence of deserialized objects.</returns>
            <param name="context">Additional information about this serialization operation.</param>
        </member>
        <member name="M:ProtoBuf.Meta.TypeModel.SerializeWithLengthPrefix(System.IO.Stream,System.Object,System.Type,ProtoBuf.PrefixStyle,System.Int32)">
            <summary>
                Writes a protocol-buffer representation of the given instance to the supplied stream,
                with a length-prefix. This is useful for socket programming,
                as DeserializeWithLengthPrefix can be used to read the single object back
                from an ongoing stream.
            </summary>
            <param name="type">The type being serialized.</param>
            <param name="value">The existing instance to be serialized (cannot be null).</param>
            <param name="style">How to encode the length prefix.</param>
            <param name="dest">The destination stream to write to.</param>
            <param name="fieldNumber">The tag used as a prefix to each record (only used with base-128 style prefixes).</param>
        </member>
        <member name="M:ProtoBuf.Meta.TypeModel.SerializeWithLengthPrefix(System.IO.Stream,System.Object,System.Type,ProtoBuf.PrefixStyle,System.Int32,ProtoBuf.SerializationContext)">
            <summary>
                Writes a protocol-buffer representation of the given instance to the supplied stream,
                with a length-prefix. This is useful for socket programming,
                as DeserializeWithLengthPrefix can be used to read the single object back
                from an ongoing stream.
            </summary>
            <param name="type">The type being serialized.</param>
            <param name="value">The existing instance to be serialized (cannot be null).</param>
            <param name="style">How to encode the length prefix.</param>
            <param name="dest">The destination stream to write to.</param>
            <param name="fieldNumber">The tag used as a prefix to each record (only used with base-128 style prefixes).</param>
            <param name="context">Additional information about this serialization operation.</param>
        </member>
        <member name="M:ProtoBuf.Meta.TypeModel.Deserialize(System.IO.Stream,System.Object,System.Type)">
            <summary>
                Applies a protocol-buffer stream to an existing instance (which may be null).
            </summary>
            <param name="type">The type (including inheritance) to consider.</param>
            <param name="value">The existing instance to be modified (can be null).</param>
            <param name="source">The binary stream to apply to the instance (cannot be null).</param>
            <returns>
                The updated instance; this may be different to the instance argument if
                either the original instance was null, or the stream defines a known sub-type of the
                original instance.
            </returns>
        </member>
        <member name="M:ProtoBuf.Meta.TypeModel.Deserialize(System.IO.Stream,System.Object,System.Type,ProtoBuf.SerializationContext)">
            <summary>
                Applies a protocol-buffer stream to an existing instance (which may be null).
            </summary>
            <param name="type">The type (including inheritance) to consider.</param>
            <param name="value">The existing instance to be modified (can be null).</param>
            <param name="source">The binary stream to apply to the instance (cannot be null).</param>
            <returns>
                The updated instance; this may be different to the instance argument if
                either the original instance was null, or the stream defines a known sub-type of the
                original instance.
            </returns>
            <param name="context">Additional information about this serialization operation.</param>
        </member>
        <member name="M:ProtoBuf.Meta.TypeModel.Deserialize(System.IO.Stream,System.Object,System.Type,System.Int32)">
            <summary>
                Applies a protocol-buffer stream to an existing instance (which may be null).
            </summary>
            <param name="type">The type (including inheritance) to consider.</param>
            <param name="value">The existing instance to be modified (can be null).</param>
            <param name="source">The binary stream to apply to the instance (cannot be null).</param>
            <param name="length">The number of bytes to consume.</param>
            <returns>
                The updated instance; this may be different to the instance argument if
                either the original instance was null, or the stream defines a known sub-type of the
                original instance.
            </returns>
        </member>
        <member name="M:ProtoBuf.Meta.TypeModel.Deserialize(System.IO.Stream,System.Object,System.Type,System.Int32,ProtoBuf.SerializationContext)">
            <summary>
                Applies a protocol-buffer stream to an existing instance (which may be null).
            </summary>
            <param name="type">The type (including inheritance) to consider.</param>
            <param name="value">The existing instance to be modified (can be null).</param>
            <param name="source">The binary stream to apply to the instance (cannot be null).</param>
            <param name="length">The number of bytes to consume (or -1 to read to the end of the stream).</param>
            <returns>
                The updated instance; this may be different to the instance argument if
                either the original instance was null, or the stream defines a known sub-type of the
                original instance.
            </returns>
            <param name="context">Additional information about this serialization operation.</param>
        </member>
        <member name="M:ProtoBuf.Meta.TypeModel.Deserialize(ProtoBuf.ProtoReader,System.Object,System.Type)">
            <summary>
                Applies a protocol-buffer reader to an existing instance (which may be null).
            </summary>
            <param name="type">The type (including inheritance) to consider.</param>
            <param name="value">The existing instance to be modified (can be null).</param>
            <param name="source">The reader to apply to the instance (cannot be null).</param>
            <returns>
                The updated instance; this may be different to the instance argument if
                either the original instance was null, or the stream defines a known sub-type of the
                original instance.
            </returns>
        </member>
        <member name="M:ProtoBuf.Meta.TypeModel.TryDeserializeAuxiliaryType(ProtoBuf.ProtoReader,ProtoBuf.DataFormat,System.Int32,System.Type,System.Object@,System.Boolean,System.Boolean,System.Boolean,System.Boolean)">
            <summary>
                This is the more "complete" version of Deserialize, which handles single instances of mapped types.
                The value is read as a complete field, including field-header and (for sub-objects) a
                length-prefix..kmc
                In addition to that, this provides support for:
                - basic values; individual int / string / Guid / etc
                - IList sets of any type handled by TryDeserializeAuxiliaryType
            </summary>
        </member>
        <member name="M:ProtoBuf.Meta.TypeModel.Create">
            <summary>
                Creates a new runtime model, to which the caller
                can add support for a range of types. A model
                can be used "as is", or can be compiled for
                optimal performance.
            </summary>
        </member>
        <member name="M:ProtoBuf.Meta.TypeModel.ResolveProxies(System.Type)">
            <summary>
                Applies common proxy scenarios, resolving the actual type to consider
            </summary>
        </member>
        <member name="M:ProtoBuf.Meta.TypeModel.IsDefined(System.Type)">
            <summary>
                Indicates whether the supplied type is explicitly modelled by the model
            </summary>
        </member>
        <member name="M:ProtoBuf.Meta.TypeModel.GetKey(System.Type@)">
            <summary>
                Provides the key that represents a given type in the current model.
                The type is also normalized for proxies at the same time.
            </summary>
        </member>
        <member name="M:ProtoBuf.Meta.TypeModel.GetKeyImpl(System.Type)">
            <summary>
                Provides the key that represents a given type in the current model.
            </summary>
        </member>
        <member name="M:ProtoBuf.Meta.TypeModel.Serialize(System.Int32,System.Object,ProtoBuf.ProtoWriter)">
            <summary>
                Writes a protocol-buffer representation of the given instance to the supplied stream.
            </summary>
            <param name="key">Represents the type (including inheritance) to consider.</param>
            <param name="value">The existing instance to be serialized (cannot be null).</param>
            <param name="dest">The destination stream to write to.</param>
        </member>
        <member name="M:ProtoBuf.Meta.TypeModel.Deserialize(System.Int32,System.Object,ProtoBuf.ProtoReader)">
            <summary>
                Applies a protocol-buffer stream to an existing instance (which may be null).
            </summary>
            <param name="key">Represents the type (including inheritance) to consider.</param>
            <param name="value">The existing instance to be modified (can be null).</param>
            <param name="source">The binary stream to apply to the instance (cannot be null).</param>
            <returns>
                The updated instance; this may be different to the instance argument if
                either the original instance was null, or the stream defines a known sub-type of the
                original instance.
            </returns>
        </member>
        <member name="T:ProtoBuf.Meta.TypeModel.CallbackType">
            <summary>
                Indicates the type of callback to be used
            </summary>
        </member>
        <member name="F:ProtoBuf.Meta.TypeModel.CallbackType.BeforeSerialize">
            <summary>
                Invoked before an object is serialized
            </summary>
        </member>
        <member name="F:ProtoBuf.Meta.TypeModel.CallbackType.AfterSerialize">
            <summary>
                Invoked after an object is serialized
            </summary>
        </member>
        <member name="F:ProtoBuf.Meta.TypeModel.CallbackType.BeforeDeserialize">
            <summary>
                Invoked before an object is deserialized (or when a new instance is created)
            </summary>
        </member>
        <member name="F:ProtoBuf.Meta.TypeModel.CallbackType.AfterDeserialize">
            <summary>
                Invoked after an object is deserialized
            </summary>
        </member>
        <member name="M:ProtoBuf.Meta.TypeModel.DeepClone(System.Object)">
            <summary>
                Create a deep clone of the supplied instance; any sub-items are also cloned.
            </summary>
        </member>
        <member name="M:ProtoBuf.Meta.TypeModel.ThrowUnexpectedSubtype(System.Type,System.Type)">
            <summary>
                Indicates that while an inheritance tree exists, the exact type encountered was not
                specified in that hierarchy and cannot be processed.
            </summary>
        </member>
        <member name="M:ProtoBuf.Meta.TypeModel.ThrowUnexpectedType(System.Type)">
            <summary>
                Indicates that the given type was not expected, and cannot be processed.
            </summary>
        </member>
        <member name="M:ProtoBuf.Meta.TypeModel.ThrowCannotCreateInstance(System.Type)">
            <summary>
                Indicates that the given type cannot be constructed; it may still be possible to
                deserialize into existing instances.
            </summary>
        </member>
        <member name="M:ProtoBuf.Meta.TypeModel.CanSerializeContractType(System.Type)">
            <summary>
                Returns true if the type supplied is either a recognised contract type,
                or a *list* of a recognised contract type.
            </summary>
            <remarks>
                Note that primitives always return false, even though the engine
                will, if forced, try to serialize such
            </remarks>
            <returns>True if this type is recognised as a serializable entity, else false</returns>
        </member>
        <member name="M:ProtoBuf.Meta.TypeModel.CanSerialize(System.Type)">
            <summary>
                Returns true if the type supplied is a basic type with inbuilt handling,
                a recognised contract type, or a *list* of a basic / contract type.
            </summary>
        </member>
        <member name="M:ProtoBuf.Meta.TypeModel.CanSerializeBasicType(System.Type)">
            <summary>
                Returns true if the type supplied is a basic type with inbuilt handling,
                or a *list* of a basic type with inbuilt handling
            </summary>
        </member>
        <member name="M:ProtoBuf.Meta.TypeModel.GetSchema(System.Type)">
            <summary>
                Suggest a .proto definition for the given type
            </summary>
            <param name="type">
                The type to generate a .proto definition for, or <c>null</c> to generate a .proto that represents
                the entire model
            </param>
            <returns>The .proto definition as a string</returns>
        </member>
        <member name="E:ProtoBuf.Meta.TypeModel.DynamicTypeFormatting">
            <summary>
                Used to provide custom services for writing and parsing type names when using dynamic types. Both parsing and
                formatting
                are provided on a single API as it is essential that both are mapped identically at all times.
            </summary>
        </member>
        <member name="P:ProtoBuf.Meta.TypeModel.ForwardsOnly">
            <summary>
                If true, buffering of nested objects is disabled
            </summary>
        </member>
        <member name="T:ProtoBuf.Meta.ValueMember">
            <summary>
                Represents a member (property/field) that is mapped to a protobuf field
            </summary>
        </member>
        <member name="M:ProtoBuf.Meta.ValueMember.#ctor(ProtoBuf.Meta.RuntimeTypeModel,System.Type,System.Int32,System.Reflection.MemberInfo,System.Type,System.Type,System.Type,ProtoBuf.DataFormat,System.Object)">
            <summary>
                Creates a new ValueMember instance
            </summary>
        </member>
        <member name="M:ProtoBuf.Meta.ValueMember.#ctor(ProtoBuf.Meta.RuntimeTypeModel,System.Int32,System.Type,System.Type,System.Type,ProtoBuf.DataFormat)">
            <summary>
                Creates a new ValueMember instance
            </summary>
        </member>
        <member name="P:ProtoBuf.Meta.ValueMember.FieldNumber">
            <summary>
                The number that identifies this member in a protobuf stream
            </summary>
        </member>
        <member name="P:ProtoBuf.Meta.ValueMember.Member">
            <summary>
                Gets the member (field/property) which this member relates to.
            </summary>
        </member>
        <member name="P:ProtoBuf.Meta.ValueMember.ItemType">
            <summary>
                Within a list / array / etc, the type of object for each item in the list (especially useful with ArrayList)
            </summary>
        </member>
        <member name="P:ProtoBuf.Meta.ValueMember.MemberType">
            <summary>
                The underlying type of the member
            </summary>
        </member>
        <member name="P:ProtoBuf.Meta.ValueMember.DefaultType">
            <summary>
                For abstract types (IList etc), the type of concrete object to create (if required)
            </summary>
        </member>
        <member name="P:ProtoBuf.Meta.ValueMember.ParentType">
            <summary>
                The type the defines the member
            </summary>
        </member>
        <member name="P:ProtoBuf.Meta.ValueMember.DefaultValue">
            <summary>
                The default value of the item (members with this value will not be serialized)
            </summary>
        </member>
        <member name="P:ProtoBuf.Meta.ValueMember.DataFormat">
            <summary>
                Specifies the rules used to process the field; this is used to determine the most appropriate
                wite-type, but also to describe subtypes <i>within</i> that wire-type (such as SignedVariant)
            </summary>
        </member>
        <member name="P:ProtoBuf.Meta.ValueMember.IsStrict">
            <summary>
                Indicates whether this field should follow strict encoding rules; this means (for example) that if a "fixed32"
                is encountered when "variant" is defined, then it will fail (throw an exception) when parsing. Note that
                when serializing the defined type is always used.
            </summary>
        </member>
        <member name="P:ProtoBuf.Meta.ValueMember.IsPacked">
            <summary>
                Indicates whether this field should use packed encoding (which can save lots of space for repeated primitive
                values).
                This option only applies to list/array data of primitive types (int, double, etc).
            </summary>
        </member>
        <member name="P:ProtoBuf.Meta.ValueMember.OverwriteList">
            <summary>
                Indicates whether this field should *repace* existing values (the default is false, meaning *append*).
                This option only applies to list/array data.
            </summary>
        </member>
        <member name="P:ProtoBuf.Meta.ValueMember.IsRequired">
            <summary>
                Indicates whether this field is mandatory.
            </summary>
        </member>
        <member name="P:ProtoBuf.Meta.ValueMember.AsReference">
            <summary>
                Enables full object-tracking/full-graph support.
            </summary>
        </member>
        <member name="P:ProtoBuf.Meta.ValueMember.DynamicType">
            <summary>
                Embeds the type information into the stream, allowing usage with types not known in advance.
            </summary>
        </member>
        <member name="P:ProtoBuf.Meta.ValueMember.Name">
            <summary>
                Gets the logical name for this member in the schema (this is not critical for binary serialization, but may be used
                when inferring a schema).
            </summary>
        </member>
        <member name="P:ProtoBuf.Meta.ValueMember.SupportNull">
            <summary>
                Should lists have extended support for null values? Note this makes the serialization less efficient.
            </summary>
        </member>
        <member name="M:ProtoBuf.Meta.ValueMember.SetSpecified(System.Reflection.MethodInfo,System.Reflection.MethodInfo)">
            <summary>
                Specifies methods for working with optional data members.
            </summary>
            <param name="getSpecified">
                Provides a method (null for none) to query whether this member should
                be serialized; it must be of the form "bool {Method}()". The member is only serialized if the
                method returns true.
            </param>
            <param name="setSpecified">
                Provides a method (null for none) to indicate that a member was
                deserialized; it must be of the form "void {Method}(bool)", and will be called with "true"
                when data is found.
            </param>
        </member>
        <member name="T:ProtoBuf.PrefixStyle">
            <summary>
                Specifies the type of prefix that should be applied to messages.
            </summary>
        </member>
        <member name="F:ProtoBuf.PrefixStyle.None">
            <summary>
                No length prefix is applied to the data; the data is terminated only be the end of the stream.
            </summary>
        </member>
        <member name="F:ProtoBuf.PrefixStyle.Base128">
            <summary>
                A base-128 length prefix is applied to the data (efficient for short messages).
            </summary>
        </member>
        <member name="F:ProtoBuf.PrefixStyle.Fixed32">
            <summary>
                A fixed-length (little-endian) length prefix is applied to the data (useful for compatibility).
            </summary>
        </member>
        <member name="F:ProtoBuf.PrefixStyle.Fixed32BigEndian">
            <summary>
                A fixed-length (big-endian) length prefix is applied to the data (useful for compatibility).
            </summary>
        </member>
        <member name="T:ProtoBuf.ProtoContractAttribute">
            <summary>
                Indicates that a type is defined for protocol-buffer serialization.
            </summary>
        </member>
        <member name="P:ProtoBuf.ProtoContractAttribute.Name">
            <summary>
                Gets or sets the defined name of the type.
            </summary>
        </member>
        <member name="P:ProtoBuf.ProtoContractAttribute.ImplicitFirstTag">
            <summary>
                Gets or sets the fist offset to use with implicit field tags;
                only uesd if ImplicitFields is set.
            </summary>
        </member>
        <member name="P:ProtoBuf.ProtoContractAttribute.UseProtoMembersOnly">
            <summary>
                If specified, alternative contract markers (such as markers for XmlSerailizer or DataContractSerializer) are
                ignored.
            </summary>
        </member>
        <member name="P:ProtoBuf.ProtoContractAttribute.IgnoreListHandling">
            <summary>
                If specified, do NOT treat this type as a list, even if it looks like one.
            </summary>
        </member>
        <member name="P:ProtoBuf.ProtoContractAttribute.ImplicitFields">
            <summary>
                Gets or sets the mechanism used to automatically infer field tags
                for members. This option should be used in advanced scenarios only.
                Please review the important notes against the ImplicitFields enumeration.
            </summary>
        </member>
        <member name="P:ProtoBuf.ProtoContractAttribute.InferTagFromName">
            <summary>
                Enables/disables automatic tag generation based on the existing name / order
                of the defined members. This option is not used for members marked
                with ProtoMemberAttribute, as intended to provide compatibility with
                WCF serialization. WARNING: when adding new fields you must take
                care to increase the Order for new elements, otherwise data corruption
                may occur.
            </summary>
            <remarks>If not explicitly specified, the default is assumed from Serializer.GlobalOptions.InferTagFromName.</remarks>
        </member>
        <member name="P:ProtoBuf.ProtoContractAttribute.InferTagFromNameHasValue">
            <summary>
                Has a InferTagFromName value been explicitly set? if not, the default from the type-model is assumed.
            </summary>
        </member>
        <member name="P:ProtoBuf.ProtoContractAttribute.DataMemberOffset">
            <summary>
                Specifies an offset to apply to [DataMember(Order=...)] markers;
                this is useful when working with mex-generated classes that have
                a different origin (usually 1 vs 0) than the original data-contract.
                This value is added to the Order of each member.
            </summary>
        </member>
        <member name="P:ProtoBuf.ProtoContractAttribute.SkipConstructor">
            <summary>
                If true, the constructor for the type is bypassed during deserialization, meaning any field initializers
                or other initialization code is skipped.
            </summary>
        </member>
        <member name="P:ProtoBuf.ProtoContractAttribute.AsReferenceDefault">
            <summary>
                Should this type be treated as a reference by default? Please also see the implications of this,
                as recorded on ProtoMemberAttribute.AsReference
            </summary>
        </member>
        <member name="T:ProtoBuf.ProtoEnumAttribute">
            <summary>
                Used to define protocol-buffer specific behavior for
                enumerated values.
            </summary>
        </member>
        <member name="P:ProtoBuf.ProtoEnumAttribute.Value">
            <summary>
                Gets or sets the specific value to use for this enum during serialization.
            </summary>
        </member>
        <member name="P:ProtoBuf.ProtoEnumAttribute.Name">
            <summary>
                Gets or sets the defined name of the enum, as used in .proto
                (this name is not used during serialization).
            </summary>
        </member>
        <member name="M:ProtoBuf.ProtoEnumAttribute.HasValue">
            <summary>
                Indicates whether this instance has a customised value mapping
            </summary>
            <returns>true if a specific value is set</returns>
        </member>
        <member name="T:ProtoBuf.ProtoException">
            <summary>
                Indicates an error during serialization/deserialization of a proto stream.
            </summary>
        </member>
        <member name="M:ProtoBuf.ProtoException.#ctor">
            <summary>Creates a new ProtoException instance.</summary>
        </member>
        <member name="M:ProtoBuf.ProtoException.#ctor(System.String)">
            <summary>Creates a new ProtoException instance.</summary>
        </member>
        <member name="M:ProtoBuf.ProtoException.#ctor(System.String,System.Exception)">
            <summary>Creates a new ProtoException instance.</summary>
        </member>
        <member name="T:ProtoBuf.ProtoIgnoreAttribute">
            <summary>
                Indicates that a member should be excluded from serialization; this
                is only normally used when using implict fields.
            </summary>
        </member>
        <member name="T:ProtoBuf.ProtoPartialIgnoreAttribute">
            <summary>
                Indicates that a member should be excluded from serialization; this
                is only normally used when using implict fields. This allows
                ProtoIgnoreAttribute usage
                even for partial classes where the individual members are not
                under direct control.
            </summary>
        </member>
        <member name="M:ProtoBuf.ProtoPartialIgnoreAttribute.#ctor(System.String)">
            <summary>
                Creates a new ProtoPartialIgnoreAttribute instance.
            </summary>
            <param name="memberName">Specifies the member to be ignored.</param>
        </member>
        <member name="P:ProtoBuf.ProtoPartialIgnoreAttribute.MemberName">
            <summary>
                The name of the member to be ignored.
            </summary>
        </member>
        <member name="T:ProtoBuf.ProtoIncludeAttribute">
            <summary>
                Indicates the known-types to support for an individual
                message. This serializes each level in the hierarchy as
                a nested message to retain wire-compatibility with
                other protocol-buffer implementations.
            </summary>
        </member>
        <member name="M:ProtoBuf.ProtoIncludeAttribute.#ctor(System.Int32,System.Type)">
            <summary>
                Creates a new instance of the ProtoIncludeAttribute.
            </summary>
            <param name="tag">The unique index (within the type) that will identify this data.</param>
            <param name="knownType">The additional type to serialize/deserialize.</param>
        </member>
        <member name="M:ProtoBuf.ProtoIncludeAttribute.#ctor(System.Int32,System.String)">
            <summary>
                Creates a new instance of the ProtoIncludeAttribute.
            </summary>
            <param name="tag">The unique index (within the type) that will identify this data.</param>
            <param name="knownTypeName">The additional type to serialize/deserialize.</param>
        </member>
        <member name="P:ProtoBuf.ProtoIncludeAttribute.Tag">
            <summary>
                Gets the unique index (within the type) that will identify this data.
            </summary>
        </member>
        <member name="P:ProtoBuf.ProtoIncludeAttribute.KnownTypeName">
            <summary>
                Gets the additional type to serialize/deserialize.
            </summary>
        </member>
        <member name="P:ProtoBuf.ProtoIncludeAttribute.KnownType">
            <summary>
                Gets the additional type to serialize/deserialize.
            </summary>
        </member>
        <member name="P:ProtoBuf.ProtoIncludeAttribute.DataFormat">
            <summary>
                Specifies whether the inherited sype's sub-message should be
                written with a length-prefix (default), or with group markers.
            </summary>
        </member>
        <member name="T:ProtoBuf.ProtoMemberAttribute">
            <summary>
                Declares a member to be used in protocol-buffer serialization, using
                the given Tag. A DataFormat may be used to optimise the serialization
                format (for instance, using zigzag encoding for negative numbers, or
                fixed-length encoding for large values.
            </summary>
        </member>
        <member name="M:ProtoBuf.ProtoMemberAttribute.#ctor(System.Int32)">
            <summary>
                Creates a new ProtoMemberAttribute instance.
            </summary>
            <param name="tag">Specifies the unique tag used to identify this member within the type.</param>
        </member>
        <member name="P:ProtoBuf.ProtoMemberAttribute.Name">
            <summary>
                Gets or sets the original name defined in the .proto; not used
                during serialization.
            </summary>
        </member>
        <member name="P:ProtoBuf.ProtoMemberAttribute.DataFormat">
            <summary>
                Gets or sets the data-format to be used when encoding this value.
            </summary>
        </member>
        <member name="P:ProtoBuf.ProtoMemberAttribute.Tag">
            <summary>
                Gets the unique tag used to identify this member within the type.
            </summary>
        </member>
        <member name="P:ProtoBuf.ProtoMemberAttribute.IsRequired">
            <summary>
                Gets or sets a value indicating whether this member is mandatory.
            </summary>
        </member>
        <member name="P:ProtoBuf.ProtoMemberAttribute.IsPacked">
            <summary>
                Gets a value indicating whether this member is packed.
                This option only applies to list/array data of primitive types (int, double, etc).
            </summary>
        </member>
        <member name="P:ProtoBuf.ProtoMemberAttribute.OverwriteList">
            <summary>
                Indicates whether this field should *repace* existing values (the default is false, meaning *append*).
                This option only applies to list/array data.
            </summary>
        </member>
        <member name="P:ProtoBuf.ProtoMemberAttribute.AsReference">
            <summary>
                Enables full object-tracking/full-graph support.
            </summary>
        </member>
        <member name="P:ProtoBuf.ProtoMemberAttribute.DynamicType">
            <summary>
                Embeds the type information into the stream, allowing usage with types not known in advance.
            </summary>
        </member>
        <member name="P:ProtoBuf.ProtoMemberAttribute.Options">
            <summary>
                Gets or sets a value indicating whether this member is packed (lists/arrays).
            </summary>
        </member>
        <member name="M:ProtoBuf.ProtoMemberAttribute.CompareTo(System.Object)">
            <summary>
                Compare with another ProtoMemberAttribute for sorting purposes
            </summary>
        </member>
        <member name="M:ProtoBuf.ProtoMemberAttribute.CompareTo(ProtoBuf.ProtoMemberAttribute)">
            <summary>
                Compare with another ProtoMemberAttribute for sorting purposes
            </summary>
        </member>
        <member name="T:ProtoBuf.MemberSerializationOptions">
            <summary>
                Additional (optional) settings that control serialization of members
            </summary>
        </member>
        <member name="F:ProtoBuf.MemberSerializationOptions.None">
            <summary>
                Default; no additional options
            </summary>
        </member>
        <member name="F:ProtoBuf.MemberSerializationOptions.Packed">
            <summary>
                Indicates that repeated elements should use packed (length-prefixed) encoding
            </summary>
        </member>
        <member name="F:ProtoBuf.MemberSerializationOptions.Required">
            <summary>
                Indicates that the given item is required
            </summary>
        </member>
        <member name="F:ProtoBuf.MemberSerializationOptions.AsReference">
            <summary>
                Enables full object-tracking/full-graph support
            </summary>
        </member>
        <member name="F:ProtoBuf.MemberSerializationOptions.DynamicType">
            <summary>
                Embeds the type information into the stream, allowing usage with types not known in advance
            </summary>
        </member>
        <member name="F:ProtoBuf.MemberSerializationOptions.OverwriteList">
            <summary>
                Indicates whether this field should *repace* existing values (the default is false, meaning *append*).
                This option only applies to list/array data.
            </summary>
        </member>
        <member name="F:ProtoBuf.MemberSerializationOptions.AsReferenceHasValue">
            <summary>
                Determines whether the types AsReferenceDefault value is used, or whether this member's AsReference should be used
            </summary>
        </member>
        <member name="T:ProtoBuf.ProtoPartialMemberAttribute">
            <summary>
                Declares a member to be used in protocol-buffer serialization, using
                the given Tag and MemberName. This allows ProtoMemberAttribute usage
                even for partial classes where the individual members are not
                under direct control.
                A DataFormat may be used to optimise the serialization
                format (for instance, using zigzag encoding for negative numbers, or
                fixed-length encoding for large values.
            </summary>
        </member>
        <member name="M:ProtoBuf.ProtoPartialMemberAttribute.#ctor(System.Int32,System.String)">
            <summary>
                Creates a new ProtoMemberAttribute instance.
            </summary>
            <param name="tag">Specifies the unique tag used to identify this member within the type.</param>
            <param name="memberName">Specifies the member to be serialized.</param>
        </member>
        <member name="P:ProtoBuf.ProtoPartialMemberAttribute.MemberName">
            <summary>
                The name of the member to be serialized.
            </summary>
        </member>
        <member name="T:ProtoBuf.ProtoReader">
            <summary>
                A stateful reader, used to read a protobuf stream. Typical usage would be (sequentially) to call
                ReadFieldHeader and (after matching the field) an appropriate Read* method.
            </summary>
        </member>
        <member name="P:ProtoBuf.ProtoReader.FieldNumber">
            <summary>
                Gets the number of the field being processed.
            </summary>
        </member>
        <member name="P:ProtoBuf.ProtoReader.WireType">
            <summary>
                Indicates the underlying proto serialization format on the wire.
            </summary>
        </member>
        <member name="M:ProtoBuf.ProtoReader.#ctor(System.IO.Stream,ProtoBuf.Meta.TypeModel,ProtoBuf.SerializationContext)">
            <summary>
                Creates a new reader against a stream
            </summary>
            <param name="source">The source stream</param>
            <param name="model">
                The model to use for serialization; this can be null, but this will impair the ability to
                deserialize sub-objects
            </param>
            <param name="context">Additional context about this serialization operation</param>
        </member>
        <member name="P:ProtoBuf.ProtoReader.InternStrings">
            <summary>
                Gets / sets a flag indicating whether strings should be checked for repetition; if
                true, any repeated UTF-8 byte sequence will result in the same String instance, rather
                than a second instance of the same string. Enabled by default. Note that this uses
                a <i>custom</i> interner - the system-wide string interner is not used.
            </summary>
        </member>
        <member name="M:ProtoBuf.ProtoReader.#ctor(System.IO.Stream,ProtoBuf.Meta.TypeModel,ProtoBuf.SerializationContext,System.Int32)">
            <summary>
                Creates a new reader against a stream
            </summary>
            <param name="source">The source stream</param>
            <param name="model">
                The model to use for serialization; this can be null, but this will impair the ability to
                deserialize sub-objects
            </param>
            <param name="context">Additional context about this serialization operation</param>
            <param name="length">The number of bytes to read, or -1 to read until the end of the stream</param>
        </member>
        <member name="P:ProtoBuf.ProtoReader.Context">
            <summary>
                Addition information about this deserialization operation.
            </summary>
        </member>
        <member name="M:ProtoBuf.ProtoReader.Dispose">
            <summary>
                Releases resources used by the reader, but importantly <b>does not</b> Dispose the
                underlying stream; in many typical use-cases the stream is used for different
                processes, so it is assumed that the consumer will Dispose their stream separately.
            </summary>
        </member>
        <member name="M:ProtoBuf.ProtoReader.ReadUInt32">
            <summary>
                Reads an unsigned 32-bit integer from the stream; supported wire-types: Variant, Fixed32, Fixed64
            </summary>
        </member>
        <member name="P:ProtoBuf.ProtoReader.Position">
            <summary>
                Returns the position of the current reader (note that this is not necessarily the same as the position
                in the underlying stream, if multiple readers are used on the same stream)
            </summary>
        </member>
        <member name="M:ProtoBuf.ProtoReader.ReadInt16">
            <summary>
                Reads a signed 16-bit integer from the stream: Variant, Fixed32, Fixed64, SignedVariant
            </summary>
        </member>
        <member name="M:ProtoBuf.ProtoReader.ReadUInt16">
            <summary>
                Reads an unsigned 16-bit integer from the stream; supported wire-types: Variant, Fixed32, Fixed64
            </summary>
        </member>
        <member name="M:ProtoBuf.ProtoReader.ReadByte">
            <summary>
                Reads an unsigned 8-bit integer from the stream; supported wire-types: Variant, Fixed32, Fixed64
            </summary>
        </member>
        <member name="M:ProtoBuf.ProtoReader.ReadSByte">
            <summary>
                Reads a signed 8-bit integer from the stream; supported wire-types: Variant, Fixed32, Fixed64, SignedVariant
            </summary>
        </member>
        <member name="M:ProtoBuf.ProtoReader.ReadInt32">
            <summary>
                Reads a signed 32-bit integer from the stream; supported wire-types: Variant, Fixed32, Fixed64, SignedVariant
            </summary>
        </member>
        <member name="M:ProtoBuf.ProtoReader.ReadInt64">
            <summary>
                Reads a signed 64-bit integer from the stream; supported wire-types: Variant, Fixed32, Fixed64, SignedVariant
            </summary>
        </member>
        <member name="M:ProtoBuf.ProtoReader.ReadString">
            <summary>
                Reads a string from the stream (using UTF8); supported wire-types: String
            </summary>
        </member>
        <member name="M:ProtoBuf.ProtoReader.ThrowEnumException(System.Type,System.Int32)">
            <summary>
                Throws an exception indication that the given value cannot be mapped to an enum.
            </summary>
        </member>
        <member name="M:ProtoBuf.ProtoReader.ReadDouble">
            <summary>
                Reads a double-precision number from the stream; supported wire-types: Fixed32, Fixed64
            </summary>
        </member>
        <member name="M:ProtoBuf.ProtoReader.ReadObject(System.Object,System.Int32,ProtoBuf.ProtoReader)">
            <summary>
                Reads (merges) a sub-message from the stream, internally calling StartSubItem and EndSubItem, and (in between)
                parsing the message in accordance with the model associated with the reader
            </summary>
        </member>
        <member name="M:ProtoBuf.ProtoReader.EndSubItem(ProtoBuf.SubItemToken,ProtoBuf.ProtoReader)">
            <summary>
                Makes the end of consuming a nested message in the stream; the stream must be either at the correct EndGroup
                marker, or all fields of the sub-message must have been consumed (in either case, this means ReadFieldHeader
                should return zero)
            </summary>
        </member>
        <member name="M:ProtoBuf.ProtoReader.StartSubItem(ProtoBuf.ProtoReader)">
            <summary>
                Begins consuming a nested message in the stream; supported wire-types: StartGroup, String
            </summary>
            <remarks>The token returned must be help and used when callining EndSubItem</remarks>
        </member>
        <member name="M:ProtoBuf.ProtoReader.ReadFieldHeader">
            <summary>
                Reads a field header from the stream, setting the wire-type and retuning the field number. If no
                more fields are available, then 0 is returned. This methods respects sub-messages.
            </summary>
        </member>
        <member name="M:ProtoBuf.ProtoReader.TryReadFieldHeader(System.Int32)">
            <summary>
                Looks ahead to see whether the next field in the stream is what we expect
                (typically; what we've just finished reading - for example ot read successive list items)
            </summary>
        </member>
        <member name="P:ProtoBuf.ProtoReader.Model">
            <summary>
                Get the TypeModel associated with this reader
            </summary>
        </member>
        <member name="M:ProtoBuf.ProtoReader.Hint(ProtoBuf.WireType)">
            <summary>
                Compares the streams current wire-type to the hinted wire-type, updating the reader if necessary; for example,
                a Variant may be updated to SignedVariant. If the hinted wire-type is unrelated then no change is made.
            </summary>
        </member>
        <member name="M:ProtoBuf.ProtoReader.Assert(ProtoBuf.WireType)">
            <summary>
                Verifies that the stream's current wire-type is as expected, or a specialized sub-type (for example,
                SignedVariant) - in which case the current wire-type is updated. Otherwise an exception is thrown.
            </summary>
        </member>
        <member name="M:ProtoBuf.ProtoReader.SkipField">
            <summary>
                Discards the data for the current field.
            </summary>
        </member>
        <member name="M:ProtoBuf.ProtoReader.ReadUInt64">
            <summary>
                Reads an unsigned 64-bit integer from the stream; supported wire-types: Variant, Fixed32, Fixed64
            </summary>
        </member>
        <member name="M:ProtoBuf.ProtoReader.ReadSingle">
            <summary>
                Reads a single-precision number from the stream; supported wire-types: Fixed32, Fixed64
            </summary>
        </member>
        <member name="M:ProtoBuf.ProtoReader.ReadBoolean">
            <summary>
                Reads a boolean value from the stream; supported wire-types: Variant, Fixed32, Fixed64
            </summary>
            <returns></returns>
        </member>
        <member name="M:ProtoBuf.ProtoReader.AppendBytes(System.Byte[],ProtoBuf.ProtoReader)">
            <summary>
                Reads a byte-sequence from the stream, appending them to an existing byte-sequence (which can be null); supported
                wire-types: String
            </summary>
        </member>
        <member name="M:ProtoBuf.ProtoReader.ReadLengthPrefix(System.IO.Stream,System.Boolean,ProtoBuf.PrefixStyle,System.Int32@)">
            <summary>
                Reads the length-prefix of a message from a stream without buffering additional data, allowing a fixed-length
                reader to be created.
            </summary>
        </member>
        <member name="M:ProtoBuf.ProtoReader.DirectReadLittleEndianInt32(System.IO.Stream)">
            <summary>
                Reads a little-endian encoded integer. An exception is thrown if the data is not all available.
            </summary>
        </member>
        <member name="M:ProtoBuf.ProtoReader.DirectReadBigEndianInt32(System.IO.Stream)">
            <summary>
                Reads a big-endian encoded integer. An exception is thrown if the data is not all available.
            </summary>
        </member>
        <member name="M:ProtoBuf.ProtoReader.DirectReadVarintInt32(System.IO.Stream)">
            <summary>
                Reads a varint encoded integer. An exception is thrown if the data is not all available.
            </summary>
        </member>
        <member name="M:ProtoBuf.ProtoReader.DirectReadBytes(System.IO.Stream,System.Byte[],System.Int32,System.Int32)">
            <summary>
                Reads a string (of a given lenth, in bytes) directly from the source into a pre-existing buffer. An exception is
                thrown if the data is not all available.
            </summary>
        </member>
        <member name="M:ProtoBuf.ProtoReader.DirectReadBytes(System.IO.Stream,System.Int32)">
            <summary>
                Reads a given number of bytes directly from the source. An exception is thrown if the data is not all available.
            </summary>
        </member>
        <member name="M:ProtoBuf.ProtoReader.DirectReadString(System.IO.Stream,System.Int32)">
            <summary>
                Reads a string (of a given lenth, in bytes) directly from the source. An exception is thrown if the data is not all
                available.
            </summary>
        </member>
        <member name="M:ProtoBuf.ProtoReader.ReadLengthPrefix(System.IO.Stream,System.Boolean,ProtoBuf.PrefixStyle,System.Int32@,System.Int32@)">
            <summary>
                Reads the length-prefix of a message from a stream without buffering additional data, allowing a fixed-length
                reader to be created.
            </summary>
        </member>
        <member name="M:ProtoBuf.ProtoReader.TryReadUInt32Variant(System.IO.Stream,System.UInt32@)">
            <returns>The number of bytes consumed; 0 if no data available</returns>
        </member>
        <member name="M:ProtoBuf.ProtoReader.AppendExtensionData(ProtoBuf.IExtensible)">
            <summary>
                Copies the current field into the instance as extension data
            </summary>
        </member>
        <member name="M:ProtoBuf.ProtoReader.HasSubValue(ProtoBuf.WireType,ProtoBuf.ProtoReader)">
            <summary>
                Indicates whether the reader still has data remaining in the current sub-item,
                additionally setting the wire-type for the next field if there is more data.
                This is used when decoding packed data.
            </summary>
        </member>
        <member name="M:ProtoBuf.ProtoReader.NoteObject(System.Object,ProtoBuf.ProtoReader)">
            <summary>
                Utility method, not intended for public use; this helps maintain the root object is complex scenarios
            </summary>
        </member>
        <member name="M:ProtoBuf.ProtoReader.ReadType">
            <summary>
                Reads a Type from the stream, using the model's DynamicTypeFormatting if appropriate; supported wire-types: String
            </summary>
        </member>
        <member name="M:ProtoBuf.ProtoReader.Merge(ProtoBuf.ProtoReader,System.Object,System.Object)">
            <summary>
                Merge two objects using the details from the current reader; this is used to change the type
                of objects when an inheritance relationship is discovered later than usual during deserilazation.
            </summary>
        </member>
        <member name="T:ProtoBuf.ProtoWriter">
            <summary>
                Represents an output stream for writing protobuf data.
                Why is the API backwards (static methods with streamWriter arguments)?
                See: http://marcgravell.blogspot.com/2010/03/last-will-be-first-and-first-will-be.html
            </summary>
        </member>
        <member name="M:ProtoBuf.ProtoWriter.#ctor(System.IO.Stream,ProtoBuf.Meta.TypeModel,ProtoBuf.SerializationContext)">
            <summary>
                Creates a new streamWriter against a stream
            </summary>
            <param name="dest">The destination stream</param>
            <param name="model">
                The model to use for serialization; this can be null, but this will impair the ability to serialize
                sub-objects
            </param>
            <param name="context">Additional context about this serialization operation</param>
        </member>
        <member name="P:ProtoBuf.ProtoWriter.Context">
            <summary>
                Addition information about this serialization operation.
            </summary>
        </member>
        <member name="P:ProtoBuf.ProtoWriter.Model">
            <summary>
                Get the TypeModel associated with this streamWriter
            </summary>
        </member>
        <member name="M:ProtoBuf.ProtoWriter.WriteObject(System.Object,System.Int32,ProtoBuf.ProtoWriter)">
            <summary>
                Write an encapsulated sub-object, using the supplied unique key (reprasenting a type).
            </summary>
            <param name="value">The object to write.</param>
            <param name="key">The key that uniquely identifies the type within the model.</param>
            <param name="writer">The destination.</param>
        </member>
        <member name="M:ProtoBuf.ProtoWriter.WriteRecursionSafeObject(System.Object,System.Int32,ProtoBuf.ProtoWriter)">
            <summary>
                Write an encapsulated sub-object, using the supplied unique key (reprasenting a type) - but the
                caller is asserting that this relationship is non-recursive; no recursion check will be
                performed.
            </summary>
            <param name="value">The object to write.</param>
            <param name="key">The key that uniquely identifies the type within the model.</param>
            <param name="writer">The destination.</param>
        </member>
        <member name="M:ProtoBuf.ProtoWriter.WriteFieldHeader(System.Int32,ProtoBuf.WireType,ProtoBuf.ProtoWriter)">
            <summary>
                Writes a field-header, indicating the format of the next data we plan to write.
            </summary>
        </member>
        <member name="M:ProtoBuf.ProtoWriter.WriteBytes(System.Byte[],ProtoBuf.ProtoWriter)">
            <summary>
                Writes a byte-array to the stream; supported wire-types: String
            </summary>
        </member>
        <member name="M:ProtoBuf.ProtoWriter.WriteBytes(System.Byte[],System.Int32,System.Int32,ProtoBuf.ProtoWriter)">
            <summary>
                Writes a byte-array to the stream; supported wire-types: String
            </summary>
        </member>
        <member name="M:ProtoBuf.ProtoWriter.StartSubItem(System.Object,ProtoBuf.ProtoWriter)">
            <summary>
                Indicates the start of a nested record.
            </summary>
            <param name="instance">The instance to write.</param>
            <param name="writer">The destination.</param>
            <returns>A token representing the state of the stream; this token is given to EndSubItem.</returns>
        </member>
        <member name="M:ProtoBuf.ProtoWriter.EndSubItem(ProtoBuf.SubItemToken,ProtoBuf.ProtoWriter)">
            <summary>
                Indicates the end of a nested record.
            </summary>
            <param name="token">The token obtained from StartubItem.</param>
            <param name="writer">The destination.</param>
        </member>
        <member name="M:ProtoBuf.ProtoWriter.Close">
            <summary>
                Flushes data to the underlying stream, and releases any resources. The underlying stream is *not* disposed
                by this operation.
            </summary>
        </member>
        <member name="M:ProtoBuf.ProtoWriter.Flush(ProtoBuf.ProtoWriter)">
            <summary>
                Writes any buffered data (if possible) to the underlying stream.
            </summary>
            <param name="writer">The streamWriter to flush</param>
            <remarks>
                It is not always possible to fully flush, since some sequences
                may require values to be back-filled into the byte-stream.
            </remarks>
        </member>
        <member name="M:ProtoBuf.ProtoWriter.WriteUInt32Variant(System.UInt32,ProtoBuf.ProtoWriter)">
            <summary>
                Writes an unsigned 32-bit integer to the stream; supported wire-types: Variant, Fixed32, Fixed64
            </summary>
        </member>
        <member name="M:ProtoBuf.ProtoWriter.WriteString(System.String,ProtoBuf.ProtoWriter)">
            <summary>
                Writes a string to the stream; supported wire-types: String
            </summary>
        </member>
        <member name="M:ProtoBuf.ProtoWriter.WriteUInt64(System.UInt64,ProtoBuf.ProtoWriter)">
            <summary>
                Writes an unsigned 64-bit integer to the stream; supported wire-types: Variant, Fixed32, Fixed64
            </summary>
        </member>
        <member name="M:ProtoBuf.ProtoWriter.WriteInt64(System.Int64,ProtoBuf.ProtoWriter)">
            <summary>
                Writes a signed 64-bit integer to the stream; supported wire-types: Variant, Fixed32, Fixed64, SignedVariant
            </summary>
        </member>
        <member name="M:ProtoBuf.ProtoWriter.WriteUInt32(System.UInt32,ProtoBuf.ProtoWriter)">
            <summary>
                Writes an unsigned 16-bit integer to the stream; supported wire-types: Variant, Fixed32, Fixed64
            </summary>
        </member>
        <member name="M:ProtoBuf.ProtoWriter.WriteInt16(System.Int16,ProtoBuf.ProtoWriter)">
            <summary>
                Writes a signed 16-bit integer to the stream; supported wire-types: Variant, Fixed32, Fixed64, SignedVariant
            </summary>
        </member>
        <member name="M:ProtoBuf.ProtoWriter.WriteUInt16(System.UInt16,ProtoBuf.ProtoWriter)">
            <summary>
                Writes an unsigned 16-bit integer to the stream; supported wire-types: Variant, Fixed32, Fixed64
            </summary>
        </member>
        <member name="M:ProtoBuf.ProtoWriter.WriteByte(System.Byte,ProtoBuf.ProtoWriter)">
            <summary>
                Writes an unsigned 8-bit integer to the stream; supported wire-types: Variant, Fixed32, Fixed64
            </summary>
        </member>
        <member name="M:ProtoBuf.ProtoWriter.WriteSByte(System.SByte,ProtoBuf.ProtoWriter)">
            <summary>
                Writes a signed 8-bit integer to the stream; supported wire-types: Variant, Fixed32, Fixed64, SignedVariant
            </summary>
        </member>
        <member name="M:ProtoBuf.ProtoWriter.WriteInt32(System.Int32,ProtoBuf.ProtoWriter)">
            <summary>
                Writes a signed 32-bit integer to the stream; supported wire-types: Variant, Fixed32, Fixed64, SignedVariant
            </summary>
        </member>
        <member name="M:ProtoBuf.ProtoWriter.WriteDouble(System.Double,ProtoBuf.ProtoWriter)">
            <summary>
                Writes a double-precision number to the stream; supported wire-types: Fixed32, Fixed64
            </summary>
        </member>
        <member name="M:ProtoBuf.ProtoWriter.WriteSingle(System.Single,ProtoBuf.ProtoWriter)">
            <summary>
                Writes a single-precision number to the stream; supported wire-types: Fixed32, Fixed64
            </summary>
        </member>
        <member name="M:ProtoBuf.ProtoWriter.ThrowEnumException(ProtoBuf.ProtoWriter,System.Object)">
            <summary>
                Throws an exception indicating that the given enum cannot be mapped to a serialized value.
            </summary>
        </member>
        <member name="M:ProtoBuf.ProtoWriter.WriteBoolean(System.Boolean,ProtoBuf.ProtoWriter)">
            <summary>
                Writes a boolean to the stream; supported wire-types: Variant, Fixed32, Fixed64
            </summary>
        </member>
        <member name="M:ProtoBuf.ProtoWriter.AppendExtensionData(ProtoBuf.IExtensible,ProtoBuf.ProtoWriter)">
            <summary>
                Copies any extension data stored for the instance to the underlying stream
            </summary>
        </member>
        <member name="M:ProtoBuf.ProtoWriter.SetPackedField(System.Int32,ProtoBuf.ProtoWriter)">
            <summary>
                Used for packed encoding; indicates that the next field should be skipped rather than
                a field header written. Note that the field number must match, else an exception is thrown
                when the attempt is made to write the (incorrect) field. The wire-type is taken from the
                subsequent call to WriteFieldHeader. Only primitive types can be packed.
            </summary>
        </member>
        <member name="M:ProtoBuf.ProtoWriter.SetRootObject(System.Object)">
            <summary>
                Specifies a known root object to use during reference-tracked serialization
            </summary>
        </member>
        <member name="M:ProtoBuf.ProtoWriter.WriteType(System.Type,ProtoBuf.ProtoWriter)">
            <summary>
                Writes a Type to the stream, using the model's DynamicTypeFormatting if appropriate; supported wire-types: String
            </summary>
        </member>
        <member name="T:ProtoBuf.SerializationContext">
            <summary>
                Additional information about a serialization operation
            </summary>
        </member>
        <member name="P:ProtoBuf.SerializationContext.Context">
            <summary>
                Gets or sets a user-defined object containing additional information about this serialization/deserialization
                operation.
            </summary>
        </member>
        <member name="P:ProtoBuf.SerializationContext.Default">
            <summary>
                A default SerializationContext, with minimal information.
            </summary>
        </member>
        <member name="T:ProtoBuf.Serializer">
            <summary>
                Provides protocol-buffer serialization capability for concrete, attributed types. This
                is a *default* model, but custom serializer models are also supported.
            </summary>
            <remarks>
                Protocol-buffer serialization is a compact binary format, designed to take
                advantage of sparse data and knowledge of specific data types; it is also
                extensible, allowing a type to be deserialized / merged even if some data is
                not recognised.
            </remarks>
        </member>
        <member name="M:ProtoBuf.Serializer.GetProto``1">
            <summary>
                Suggest a .proto definition for the given type
            </summary>
            <typeparam name="T">The type to generate a .proto definition for</typeparam>
            <returns>The .proto definition as a string</returns>
        </member>
        <member name="M:ProtoBuf.Serializer.DeepClone``1(``0)">
            <summary>
                Create a deep clone of the supplied instance; any sub-items are also cloned.
            </summary>
        </member>
        <member name="M:ProtoBuf.Serializer.Merge``1(System.IO.Stream,``0)">
            <summary>
                Applies a protocol-buffer stream to an existing instance.
            </summary>
            <typeparam name="T">The type being merged.</typeparam>
            <param name="instance">The existing instance to be modified (can be null).</param>
            <param name="source">The binary stream to apply to the instance (cannot be null).</param>
            <returns>
                The updated instance; this may be different to the instance argument if
                either the original instance was null, or the stream defines a known sub-type of the
                original instance.
            </returns>
        </member>
        <member name="M:ProtoBuf.Serializer.Deserialize``1(System.IO.Stream)">
            <summary>
                Creates a new instance from a protocol-buffer stream
            </summary>
            <typeparam name="T">The type to be created.</typeparam>
            <param name="source">The binary stream to apply to the new instance (cannot be null).</param>
            <returns>A new, initialized instance.</returns>
        </member>
        <member name="M:ProtoBuf.Serializer.Serialize``1(System.IO.Stream,``0)">
            <summary>
                Writes a protocol-buffer representation of the given instance to the supplied stream.
            </summary>
            <param name="instance">The existing instance to be serialized (cannot be null).</param>
            <param name="destination">The destination stream to write to.</param>
        </member>
        <member name="M:ProtoBuf.Serializer.ChangeType``2(``0)">
            <summary>
                Serializes a given instance and deserializes it as a different type;
                this can be used to translate between wire-compatible objects (where
                two .NET types represent the same data), or to promote/demote a type
                through an inheritance hierarchy.
            </summary>
            <remarks>No assumption of compatibility is made between the types.</remarks>
            <typeparam name="TFrom">The type of the object being copied.</typeparam>
            <typeparam name="TTo">The type of the new object to be created.</typeparam>
            <param name="instance">The existing instance to use as a template.</param>
            <returns>A new instane of type TNewType, with the data from TOldType.</returns>
        </member>
        <member name="M:ProtoBuf.Serializer.PrepareSerializer``1">
            <summary>
                Precompiles the serializer for a given type.
            </summary>
        </member>
        <member name="M:ProtoBuf.Serializer.DeserializeItems``1(System.IO.Stream,ProtoBuf.PrefixStyle,System.Int32)">
            <summary>
                Reads a sequence of consecutive length-prefixed items from a stream, using
                either base-128 or fixed-length prefixes. Base-128 prefixes with a tag
                are directly comparable to serializing multiple items in succession
                (use the <see cref="F:ProtoBuf.Serializer.ListItemTag" /> tag to emulate the implicit behavior
                when serializing a list/array). When a tag is
                specified, any records with different tags are silently omitted. The
                tag is ignored. The tag is ignores for fixed-length prefixes.
            </summary>
            <typeparam name="T">The type of object to deserialize.</typeparam>
            <param name="source">The binary stream containing the serialized records.</param>
            <param name="style">The prefix style used in the data.</param>
            <param name="fieldNumber">
                The tag of records to return (if non-positive, then no tag is
                expected and all records are returned).
            </param>
            <returns>The sequence of deserialized objects.</returns>
        </member>
        <member name="M:ProtoBuf.Serializer.DeserializeWithLengthPrefix``1(System.IO.Stream,ProtoBuf.PrefixStyle)">
            <summary>
                Creates a new instance from a protocol-buffer stream that has a length-prefix
                on data (to assist with network IO).
            </summary>
            <typeparam name="T">The type to be created.</typeparam>
            <param name="source">The binary stream to apply to the new instance (cannot be null).</param>
            <param name="style">How to encode the length prefix.</param>
            <returns>A new, initialized instance.</returns>
        </member>
        <member name="M:ProtoBuf.Serializer.DeserializeWithLengthPrefix``1(System.IO.Stream,ProtoBuf.PrefixStyle,System.Int32)">
            <summary>
                Creates a new instance from a protocol-buffer stream that has a length-prefix
                on data (to assist with network IO).
            </summary>
            <typeparam name="T">The type to be created.</typeparam>
            <param name="source">The binary stream to apply to the new instance (cannot be null).</param>
            <param name="style">How to encode the length prefix.</param>
            <param name="fieldNumber">The expected tag of the item (only used with base-128 prefix style).</param>
            <returns>A new, initialized instance.</returns>
        </member>
        <member name="M:ProtoBuf.Serializer.MergeWithLengthPrefix``1(System.IO.Stream,``0,ProtoBuf.PrefixStyle)">
            <summary>
                Applies a protocol-buffer stream to an existing instance, using length-prefixed
                data - useful with network IO.
            </summary>
            <typeparam name="T">The type being merged.</typeparam>
            <param name="instance">The existing instance to be modified (can be null).</param>
            <param name="source">The binary stream to apply to the instance (cannot be null).</param>
            <param name="style">How to encode the length prefix.</param>
            <returns>
                The updated instance; this may be different to the instance argument if
                either the original instance was null, or the stream defines a known sub-type of the
                original instance.
            </returns>
        </member>
        <member name="M:ProtoBuf.Serializer.SerializeWithLengthPrefix``1(System.IO.Stream,``0,ProtoBuf.PrefixStyle)">
            <summary>
                Writes a protocol-buffer representation of the given instance to the supplied stream,
                with a length-prefix. This is useful for socket programming,
                as DeserializeWithLengthPrefix/MergeWithLengthPrefix can be used to read the single object back
                from an ongoing stream.
            </summary>
            <typeparam name="T">The type being serialized.</typeparam>
            <param name="instance">The existing instance to be serialized (cannot be null).</param>
            <param name="style">How to encode the length prefix.</param>
            <param name="destination">The destination stream to write to.</param>
        </member>
        <member name="M:ProtoBuf.Serializer.SerializeWithLengthPrefix``1(System.IO.Stream,``0,ProtoBuf.PrefixStyle,System.Int32)">
            <summary>
                Writes a protocol-buffer representation of the given instance to the supplied stream,
                with a length-prefix. This is useful for socket programming,
                as DeserializeWithLengthPrefix/MergeWithLengthPrefix can be used to read the single object back
                from an ongoing stream.
            </summary>
            <typeparam name="T">The type being serialized.</typeparam>
            <param name="instance">The existing instance to be serialized (cannot be null).</param>
            <param name="style">How to encode the length prefix.</param>
            <param name="destination">The destination stream to write to.</param>
            <param name="fieldNumber">The tag used as a prefix to each record (only used with base-128 style prefixes).</param>
        </member>
        <member name="M:ProtoBuf.Serializer.TryReadLengthPrefix(System.IO.Stream,ProtoBuf.PrefixStyle,System.Int32@)">
            <summary>Indicates the number of bytes expected for the next message.</summary>
            <param name="source">The stream containing the data to investigate for a length.</param>
            <param name="style">The algorithm used to encode the length.</param>
            <param name="length">The length of the message, if it could be identified.</param>
            <returns>True if a length could be obtained, false otherwise.</returns>
        </member>
        <member name="M:ProtoBuf.Serializer.TryReadLengthPrefix(System.Byte[],System.Int32,System.Int32,ProtoBuf.PrefixStyle,System.Int32@)">
            <summary>Indicates the number of bytes expected for the next message.</summary>
            <param name="buffer">The buffer containing the data to investigate for a length.</param>
            <param name="index">The offset of the first byte to read from the buffer.</param>
            <param name="count">The number of bytes to read from the buffer.</param>
            <param name="style">The algorithm used to encode the length.</param>
            <param name="length">The length of the message, if it could be identified.</param>
            <returns>True if a length could be obtained, false otherwise.</returns>
        </member>
        <member name="F:ProtoBuf.Serializer.ListItemTag">
            <summary>
                The field number that is used as a default when serializing/deserializing a list of objects.
                The data is treated as repeated message with field number 1.
            </summary>
        </member>
        <member name="T:ProtoBuf.Serializer.NonGeneric">
            <summary>
                Provides non-generic access to the default serializer.
            </summary>
        </member>
        <member name="M:ProtoBuf.Serializer.NonGeneric.DeepClone(System.Object)">
            <summary>
                Create a deep clone of the supplied instance; any sub-items are also cloned.
            </summary>
        </member>
        <member name="M:ProtoBuf.Serializer.NonGeneric.Serialize(System.IO.Stream,System.Object)">
            <summary>
                Writes a protocol-buffer representation of the given instance to the supplied stream.
            </summary>
            <param name="instance">The existing instance to be serialized (cannot be null).</param>
            <param name="dest">The destination stream to write to.</param>
        </member>
        <member name="M:ProtoBuf.Serializer.NonGeneric.Deserialize(System.Type,System.IO.Stream)">
            <summary>
                Creates a new instance from a protocol-buffer stream
            </summary>
            <param name="type">The type to be created.</param>
            <param name="source">The binary stream to apply to the new instance (cannot be null).</param>
            <returns>A new, initialized instance.</returns>
        </member>
        <member name="M:ProtoBuf.Serializer.NonGeneric.Merge(System.IO.Stream,System.Object)">
            <summary>Applies a protocol-buffer stream to an existing instance.</summary>
            <param name="instance">The existing instance to be modified (cannot be null).</param>
            <param name="source">The binary stream to apply to the instance (cannot be null).</param>
            <returns>The updated instance</returns>
        </member>
        <member name="M:ProtoBuf.Serializer.NonGeneric.SerializeWithLengthPrefix(System.IO.Stream,System.Object,ProtoBuf.PrefixStyle,System.Int32)">
            <summary>
                Writes a protocol-buffer representation of the given instance to the supplied stream,
                with a length-prefix. This is useful for socket programming,
                as DeserializeWithLengthPrefix/MergeWithLengthPrefix can be used to read the single object back
                from an ongoing stream.
            </summary>
            <param name="instance">The existing instance to be serialized (cannot be null).</param>
            <param name="style">How to encode the length prefix.</param>
            <param name="destination">The destination stream to write to.</param>
            <param name="fieldNumber">The tag used as a prefix to each record (only used with base-128 style prefixes).</param>
        </member>
        <member name="M:ProtoBuf.Serializer.NonGeneric.TryDeserializeWithLengthPrefix(System.IO.Stream,ProtoBuf.PrefixStyle,ProtoBuf.Serializer.TypeResolver,System.Object@)">
            <summary>
                Applies a protocol-buffer stream to an existing instance (or null), using length-prefixed
                data - useful with network IO.
            </summary>
            <param name="value">The existing instance to be modified (can be null).</param>
            <param name="source">The binary stream to apply to the instance (cannot be null).</param>
            <param name="style">How to encode the length prefix.</param>
            <param name="resolver">Used to resolve types on a per-field basis.</param>
            <returns>
                The updated instance; this may be different to the instance argument if
                either the original instance was null, or the stream defines a known sub-type of the
                original instance.
            </returns>
        </member>
        <member name="M:ProtoBuf.Serializer.NonGeneric.CanSerialize(System.Type)">
            <summary>
                Indicates whether the supplied type is explicitly modelled by the model
            </summary>
        </member>
        <member name="T:ProtoBuf.Serializer.GlobalOptions">
            <summary>
                Global switches that change the behavior of protobuf-net
            </summary>
        </member>
        <member name="P:ProtoBuf.Serializer.GlobalOptions.InferTagFromName">
            <summary>
                <see cref="P:ProtoBuf.Meta.RuntimeTypeModel.InferTagFromNameDefault" />
            </summary>
        </member>
        <member name="T:ProtoBuf.Serializer.TypeResolver">
            <summary>
                Maps a field-number to a type
            </summary>
        </member>
        <member name="M:ProtoBuf.Serializer.FlushPool">
            <summary>
                Releases any internal buffers that have been reserved for efficiency; this does not affect any serialization
                operations; simply: it can be used (optionally) to release the buffers for garbage collection (at the expense
                of having to re-allocate a new buffer for the next operation, rather than re-use prior buffers).
            </summary>
        </member>
        <member name="P:ProtoBuf.Serializers.IProtoSerializer.ExpectedType">
            <summary>
                The type that this serializer is intended to work for.
            </summary>
        </member>
        <member name="M:ProtoBuf.Serializers.IProtoSerializer.Write(System.Object,ProtoBuf.ProtoWriter)">
            <summary>
                Perform the steps necessary to serialize this data.
            </summary>
            <param name="value">The value to be serialized.</param>
            <param name="dest">The streamWriter entity that is accumulating the output data.</param>
        </member>
        <member name="M:ProtoBuf.Serializers.IProtoSerializer.Read(System.Object,ProtoBuf.ProtoReader)">
            <summary>
                Perform the steps necessary to deserialize this data.
            </summary>
            <param name="value">The current value, if appropriate.</param>
            <param name="source">The reader providing the input data.</param>
            <returns>The updated / replacement value.</returns>
        </member>
        <member name="P:ProtoBuf.Serializers.IProtoSerializer.RequiresOldValue">
            <summary>
                Indicates whether a Read operation <em>replaces</em> the existing value, or
                <em>extends</em> the value. If false, the "value" parameter to Read is
                discarded, and should be passed in as null.
            </summary>
        </member>
        <member name="P:ProtoBuf.Serializers.IProtoSerializer.ReturnsValue">
            <summary>
                Now all Read operations return a value (although most do); if false no
                value should be expected.
            </summary>
        </member>
        <member name="T:ProtoBuf.SubItemToken">
            <summary>
                Used to hold particulars relating to nested objects. This is opaque to the caller - simply
                give back the token you are given at the end of an object.
            </summary>
        </member>
        <member name="T:ProtoBuf.WireType">
            <summary>
                Indicates the encoding used to represent an individual value in a protobuf stream
            </summary>
        </member>
        <member name="F:ProtoBuf.WireType.None">
            <summary>
                Represents an error condition
            </summary>
        </member>
        <member name="F:ProtoBuf.WireType.Variant">
            <summary>
                Base-128 variant-length encoding
            </summary>
        </member>
        <member name="F:ProtoBuf.WireType.Fixed64">
            <summary>
                Fixed-length 8-byte encoding
            </summary>
        </member>
        <member name="F:ProtoBuf.WireType.String">
            <summary>
                Length-variant-prefixed encoding
            </summary>
        </member>
        <member name="F:ProtoBuf.WireType.StartGroup">
            <summary>
                Indicates the start of a group
            </summary>
        </member>
        <member name="F:ProtoBuf.WireType.EndGroup">
            <summary>
                Indicates the end of a group
            </summary>
        </member>
        <member name="F:ProtoBuf.WireType.Fixed32">
            <summary>
                Fixed-length 4-byte encoding
            </summary>
            10
        </member>
        <member name="F:ProtoBuf.WireType.SignedVariant">
            <summary>
                This is not a formal wire-type in the "protocol buffers" spec, but
                denotes a variant integer that should be interpreted using
                zig-zag semantics (so -ve numbers aren't a significant overhead)
            </summary>
        </member>
        <member name="T:ProtoBufRemote.LoopbackRpcChannel">
            <summary>
                A dummy RPC channel which just returns all sent messages to itself, useful for testing.
            </summary>
        </member>
        <member name="T:ProtoBufRemote.NetworkStreamRpcChannel">
            <summary>
                Trivial subclass of StreamRpcChannel, uses the NetworkStream as both the read stream and the write stream.
            </summary>
        </member>
        <member name="T:ProtoBufRemote.ParameterConverter">
            <summary>
                Helper functions for converting parameters to and from protobuf messages. Only public because Reflection Emit
                generated proxies are technically in a different assembly.
            </summary>
        </member>
        <member name="M:ProtoBufRemote.ParameterConverter.FromMessage(ProtoBufRemote.RpcMessage.Parameter,System.Type,System.Object@,System.String@)">
            <summary>
                Converts a parameter message into an object.
            </summary>
            <param name="message"></param>
            <param name="parameterType"></param>
            <param name="parameter"></param>
            <param name="errorMsg"></param>
            <returns></returns>
        </member>
        <member name="M:ProtoBufRemote.ParameterConverter.ToMessage(System.Object,ProtoBufRemote.RpcMessage.Parameter@,System.String@)">
            <summary>
                Converts an object to a parameter message.
            </summary>
            <param name="parameter"></param>
            <param name="message"></param>
            <param name="errorMsg"></param>
            <returns></returns>
        </member>
        <member name="T:ProtoBufRemote.ProxyBuilderHelpers">
            <summary>
                Helper functions for converting parameters to and from protobuf messages. Only public because Reflection Emit
                generated proxies are technically in a different assembly.
            </summary>
        </member>
        <member name="M:ProtoBufRemote.RpcChannel.Receive(ProtoBufRemote.RpcMessage)">
            <summary>
                Handles a message which has been received. Can be called by multiple threads concurrently, it is up to the
                RpcClient and RpcServer to ensure they are thread-safe.
            </summary>
            <returns></returns>
        </member>
        <member name="T:ProtoBufRemote.RpcMethodAttribute">
            <summary>
                Optional attribute for a method in a service class. This is used to mark the RPC methods if
                RpcServiceAttribute.IsAttributedMethodsOnly is true, or to override the method name.
            </summary>
        </member>
        <member name="P:ProtoBufRemote.RpcMethodAttribute.Name">
            <summary>
                Overrides the name of the RPC method used when making the actual RPC call. By default this is the name of
                the method itself.
            </summary>
        </member>
        <member name="T:ProtoBufRemote.RpcServer">
            <summary>
                Handles received calls from a channel by forwarding them to the registered services, and returning the result.
            </summary>
        </member>
        <member name="M:ProtoBufRemote.RpcServer.RegisterService``1(``0)">
            <summary>
                Registers a service implementation with the RpcServer, it will be used to process received calls.
            </summary>
            <typeparam name="TService">
                The type of the service can be specified explicitly, this allows the name of the service to be discovered
                even when the type does not have attributes.
            </typeparam>
            <param name="service"></param>
        </member>
        <member name="T:ProtoBufRemote.RpcServiceAttribute">
            <summary>
                Optional attribute which can be applied to an RPC service interface or class. Without this attribute the class
                name itself will be used as the service name and all public methods will be used as RPC methods.
            </summary>
        </member>
        <member name="P:ProtoBufRemote.RpcServiceAttribute.Name">
            <summary>
                Overrides the name of the service, by default it will be same name as the interface/class.
            </summary>
        </member>
        <member name="P:ProtoBufRemote.RpcServiceAttribute.IsAttributedMethodsOnly">
            <summary>
                Use only methods explicitly marked with an RpcMethodAttribute as RPC methods.
            </summary>
        </member>
        <member name="T:ProtoBufRemote.RpcServiceDescriptor">
            <summary>
                Builds a description of an interface or class used as a service, parsing the attributes.
            </summary>
        </member>
        <member name="M:ProtoBufRemote.RpcServiceDescriptor.#ctor(System.Type)">
            <summary>
                Builds a descriptor of the service based on the type, collects the methods and parses attributes.
            </summary>
            <param name="serviceType"></param>
        </member>
        <member name="P:ProtoBufRemote.RpcServiceDescriptor.Name">
            <summary>
                The name of the RPC service
            </summary>
        </member>
        <member name="P:ProtoBufRemote.RpcServiceDescriptor.Methods">
            <summary>
                The RPC methods implemented by the service.
            </summary>
        </member>
        <member name="T:ProtoBufRemote.StreamRpcChannel">
            <summary>
                An RpcChannel that communicates over a inputStream. Does not work with any inputStream, it must be a bidrectional
                channel
                like NetworkStream.
            </summary>
        </member>
        <member name="M:ProtoBufRemote.StreamRpcChannel.CloseAndJoin(System.Boolean)">
            <summary>
                Closes all the streams and requests that the channel shutdown, then joins the channel threads until they
                have terminated.
            </summary>
        </member>
    </members>
</doc>
